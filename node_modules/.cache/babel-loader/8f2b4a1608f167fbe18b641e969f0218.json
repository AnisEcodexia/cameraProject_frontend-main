{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\cameraProject_frontend-main-master\\\\cameraProject_frontend-main-master\\\\src\\\\components\\\\Charts\\\\LineChart.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, PointElement, LinearScale, LineElement, Title, Tooltip, Legend);\nconst options = {\n  indexAxis: 'y',\n  elements: {\n    line: {\n      borderWidth: 2\n    }\n  },\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'right'\n    },\n    title: {\n      display: true,\n      text: 'People frequencies over the weekdays'\n    }\n  }\n};\n\nconst LineChart = () => {\n  _s();\n\n  const [data, setData] = useState({\n    labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'allo'],\n    datasets: [{\n      label: 'Dataset 1',\n      data: [],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(25, 90, 13, 0.5)'\n    }, {\n      label: 'Dataset 2',\n      data: [],\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }]\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'http://dummy.restapiexample.com/api/v1/employees'; //const labelSet = []\n\n      const dataSet1 = [];\n      const dataSet2 = [];\n      await fetch(url).then(data => {\n        console.log(\"Api data\", data);\n        const res = data.json();\n        return res;\n      }).then(res => {\n        console.log(\"ressss\", res);\n\n        for (const val of res.data) {\n          dataSet1.push(val.employee_salary);\n          dataSet2.push(val.employee_age); // labelSet.push(val.name)\n        }\n\n        setData({\n          labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'allo'],\n          datasets: [{\n            label: 'Dataset ID',\n            data: dataSet1,\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(99, 132, 0.5)'\n          }, {\n            label: 'Dataset ID2',\n            data: dataSet2,\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 235, 0.5)'\n          }]\n        });\n        console.log(\"arrData\", dataSet1, dataSet2);\n      }).catch(e => {\n        console.log(\"error\", e);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      height: '50%'\n    },\n    children: [console.log(\"data\", data), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LineChart, \"bOG89cqdAuVVbe74LxM46E+NuUo=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","Legend","Line","register","options","indexAxis","elements","line","borderWidth","responsive","plugins","legend","position","title","display","text","LineChart","data","setData","labels","datasets","label","borderColor","backgroundColor","fetchData","url","dataSet1","dataSet2","fetch","then","console","log","res","json","val","push","employee_salary","employee_age","catch","e","width","height"],"sources":["C:/Users/user/Downloads/cameraProject_frontend-main-master/cameraProject_frontend-main-master/src/components/Charts/LineChart.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    LineElement,\n    PointElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\n\nimport { Line } from 'react-chartjs-2';\nChartJS.register(\n    CategoryScale,\n    PointElement,\n    LinearScale,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n  );\nconst options = {\n    indexAxis: 'y',\n    elements: {\n      line: {\n        borderWidth: 2,\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right',\n      },\n      title: {\n        display: true,\n        text: 'People frequencies over the weekdays',\n      },\n    },\n  };\n\nconst LineChart =() => {\n    const [data, setData] = useState({\n        labels:['Sunday','Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','allo'],\n        datasets: [\n          {\n            label: 'Dataset 1',\n            data:[],\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(25, 90, 13, 0.5)',\n          },\n          {\n            label: 'Dataset 2',\n            data:[],\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\n          },\n        ],\n      });\n    useEffect(()=> {\n       const fetchData= async()=> {\n           const url = 'http://dummy.restapiexample.com/api/v1/employees'\n           //const labelSet = []\n           const dataSet1 = [];\n           const dataSet2 = [];\n         await fetch(url).then((data)=> {\n             console.log(\"Api data\", data)\n             const res = data.json();\n             return res\n         }).then((res) => {\n             console.log(\"ressss\", res)\n            for (const val of res.data) {\n                dataSet1.push(val.employee_salary);\n                dataSet2.push(val.employee_age)\n                // labelSet.push(val.name)\n            }\n            setData({\n                labels:['Sunday','Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday','allo'],\n                datasets: [\n                  {\n                    label: 'Dataset ID',\n                    data:dataSet1,\n                    borderColor: 'rgb(255, 99, 132)',\n                    backgroundColor: 'rgba(99, 132, 0.5)',\n                  },\n                  {\n                    label: 'Dataset ID2',\n                    data:dataSet2,\n                    borderColor: 'rgb(53, 162, 235)',\n                    backgroundColor: 'rgba(53, 235, 0.5)',\n                  },\n                ],\n              })\n            console.log(\"arrData\", dataSet1, dataSet2)\n         }).catch(e => {\n                console.log(\"error\", e)\n            })\n        }\n        \n        fetchData();\n    },[])\n   \n    return(\n        <div style={{width:'80%', height:'50%'}}>\n            {\n                console.log(\"data\", data)\n            }\n            <Line data={data} options={options}/>\n         </div>)\n}\nexport default LineChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}