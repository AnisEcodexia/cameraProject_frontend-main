{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\cameraProject_frontend-main\\\\src\\\\components\\\\ImgDropAndCrop.js\";\nimport React, { useState, useEffect, useRef, Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport \"./custom-image-crop.css\";\nimport Form from \"react-bootstrap/Form\";\nimport { FormControl } from \"react-bootstrap\";\nimport MultiCrops from \"react-multi-crops\";\nimport { base64StringtoFile, downloadBase64File, extractImageFileExtensionFromBase64, image64toCanvasRef } from \"./ResuableUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageMaxSize = 1000000000; // bytes\n\nconst acceptedFileTypes = \"image/x-png, image/png, image/jpg, image/jpeg, image/gif\";\nconst acceptedFileTypesArray = acceptedFileTypes.split(\",\").map(item => {\n  return item.trim();\n});\n\nclass ImgDropAndCrop extends Component {\n  constructor(props) {\n    super(props);\n\n    this.verifyFile = files => {\n      if (files && files.length > 0) {\n        const currentFile = files[0];\n        const currentFileType = currentFile.type;\n        const currentFileSize = currentFile.size;\n\n        if (currentFileSize > imageMaxSize) {\n          alert(\"This file is not allowed. \" + currentFileSize + \" bytes is too large\");\n          return false;\n        }\n\n        if (!acceptedFileTypesArray.includes(currentFileType)) {\n          alert(\"This file is not allowed. Only images are allowed.\");\n          return false;\n        }\n\n        return true;\n      }\n    };\n\n    this.handleOnDrop = (files, rejectedFiles) => {\n      console.log(\"files\");\n\n      if (rejectedFiles && rejectedFiles.length > 0) {\n        this.verifyFile(rejectedFiles);\n      }\n\n      if (files && files.length > 0) {\n        const isVerified = this.verifyFile(files);\n\n        if (isVerified) {\n          // imageBase64Data\n          const currentFile = files[0];\n          const myFileItemReader = new FileReader();\n          myFileItemReader.addEventListener(\"load\", () => {\n            // console.log(myFileItemReader.result)\n            const myResult = myFileItemReader.result;\n            this.setState({\n              imgSrc: myResult,\n              imgSrcExt: extractImageFileExtensionFromBase64(myResult)\n            });\n          }, false);\n          myFileItemReader.readAsDataURL(currentFile);\n        }\n      }\n    };\n\n    this.handleImageLoaded = image => {\n      this.setState({\n        crop: {\n          width: image.width,\n          height: image.height\n        }\n      });\n      console.log(\"zebi\");\n    };\n\n    this.handleDragOver = image => {\n      image.preventDefault();\n    };\n\n    this.handleOnCropChange = crop => {\n      this.setState({\n        crop: crop\n      });\n    };\n\n    this.handleOnCropComplete = (crop, pixelCrop) => {\n      console.log(\"crop\", crop, \"px crop:\", pixelCrop);\n      this.setState({\n        showLabel: true\n      });\n      const canvasRef = this.imagePreviewCanvasRef.current;\n      const {\n        imgSrc\n      } = this.state;\n      image64toCanvasRef(canvasRef, imgSrc, crop);\n    };\n\n    this.changeCoordinate = (coordinate, index, coordinates) => {\n      coordinates.forEach(c => {\n        console.log(c);\n      });\n      this.setState({\n        showZone1: true\n      });\n      this.setState({\n        coordinates: coordinates\n      });\n    };\n\n    this.deleteCoordinate = (coordinate, index, coordinates) => {\n      this.setState({\n        coordinates: coordinates\n      });\n    };\n\n    this.handleDownloadClick = event => {\n      event.preventDefault();\n      this.setState({\n        label: document.getElementsByName(\"label\")[0].value\n      });\n      this.setState({\n        showZone: true\n      });\n      const {\n        imgSrc\n      } = this.state;\n\n      if (imgSrc) {\n        const canvasRef = this.imagePreviewCanvasRef.current;\n        const {\n          imgSrcExt\n        } = this.state;\n        const imageData64 = canvasRef.toDataURL(\"image/\" + imgSrcExt);\n        const myFilename = \"previewFile.\" + imgSrcExt; // file to be uploaded\n\n        const myNewCroppedFile = base64StringtoFile(imageData64, myFilename);\n        console.log(myNewCroppedFile); // download file\n\n        downloadBase64File(imageData64, myFilename);\n      }\n    };\n\n    this.handleClearToDefault = event => {\n      if (event) event.preventDefault();\n      const canvas = this.imagePreviewCanvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      this.setState({\n        imgSrc: null,\n        imgSrcExt: null,\n        crop: {\n          aspect: 1 / 1\n        }\n      });\n      this.fileInputRef.current.value = null;\n    };\n\n    this.handleFileSelect = event => {\n      const [file] = event.target.files;\n      this.setState({\n        imgSrc: URL.createObjectURL(file),\n        imgSrcExt: extractImageFileExtensionFromBase64(URL.createObjectURL(file))\n      });\n      const files = event.target.files;\n\n      if (files && files.length > 0) {\n        const isVerified = this.verifyFile(files);\n\n        if (isVerified) {\n          // imageBase64Data\n          const currentFile = files[0];\n          const myFileItemReader = new FileReader();\n          myFileItemReader.addEventListener(\"load\", () => {\n            // console.log(myFileItemReader.result)\n            this.setState({\n              imgSrc: URL.createObjectURL(file),\n              imgSrcExt: extractImageFileExtensionFromBase64(URL.createObjectURL(file))\n            });\n          }, false);\n          myFileItemReader.readAsDataURL(currentFile);\n        }\n      }\n    };\n\n    this.state = {};\n    this.imagePreviewCanvasRef = /*#__PURE__*/React.createRef();\n    this.fileInputRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      _width: window.innerWidth,\n      coordinates: [],\n      width: window.innerWidth - 20,\n      label: \"\",\n      error: \"\",\n      showZone1: false,\n      showZone: false,\n      showLabel: false,\n      imgSrc: null,\n      imgSrcExt: null,\n      crop: {\n        aspect: 2 / 3\n      }\n    };\n  }\n\n  componentDidMount(coordinates) {\n    window.onresize = () => {\n      const ratio = window.innerWidth / this.state._width.current;\n      console.log(ratio, this.state.coordinates[0]);\n      this.state_width.current = window.innerWidth;\n      this.setState({\n        width: window.innerWidth - 20\n      });\n      this.setState({\n        coordinates: coordinates.map(c => ({ ...c,\n          x: c.x * ratio,\n          y: c.y * ratio,\n          width: c.width * ratio\n        }))\n      });\n    };\n  }\n\n  render() {\n    const {\n      imgSrc\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Video Zoning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.fileInputRef,\n        type: \"file\",\n        accept: acceptedFileTypes,\n        multiple: false,\n        onChange: this.handleFileSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiCrops, {\n        src: imgSrc,\n        width: this.state.width,\n        coordinates: this.state.coordinates,\n        onChange: this.changeCoordinate,\n        onDelete: this.deleteCoordinate,\n        onLoad: e => console.log(e.currentTarget.height)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }, this), imgSrc !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n          height: \"360px\",\n          width: \"720px\",\n          src: imgSrc,\n          crop: this.state.crop,\n          onImageLoaded: this.handleImageLoaded,\n          onComplete: this.handleOnCropComplete,\n          onChange: this.handleOnCropChange,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgSrc,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Preview Canvas Crop \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.imagePreviewCanvasRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Dropzone, {\n        onDragOver: this.handleDragOver,\n        onDrop: this.handleOnDrop,\n        accept: acceptedFileTypes,\n        multiple: false,\n        maxSize: imageMaxSize,\n        children: dropzoneProps => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drop some files here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), this.state.showLabel === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          style: {\n            width: \"20%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            name: \"label\",\n            onChange: () => {\n              if (typeof document.getElementsByName(\"label\")[0] != \"undefined\" && document.getElementsByName(\"label\")[0].value >= 1) {\n                this.setState({\n                  label: this.value\n                });\n                this.setState({\n                  error: \"\"\n                });\n              } else {\n                this.setState({\n                  label: this.value\n                });\n              }\n\n              this.setState({\n                error: \"Please select a video file (.mp4 or .avi)\"\n              });\n            },\n            value: this.state.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleDownloadClick,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleClearToDefault,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), this.state.coordinates.forEach(c)( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          style: {\n            width: \"20%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"card-title\",\n              children: \"Zone \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              class: \"card-subtitle mb-2 text-muted\",\n              children: [\"Label = \", this.state.label]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"card-text\",\n              children: [\"x : \", c.x]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"card-text\",\n              children: [\"y : \", this.state.coordinates[0].y]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"card-text\",\n              children: [\"width : \", this.state.coordinates[0].width]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"card-text\",\n              children: [\"height : \", this.state.coordinates[0].height]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ImgDropAndCrop;","map":{"version":3,"names":["React","useState","useEffect","useRef","Component","Dropzone","ReactCrop","Form","FormControl","MultiCrops","base64StringtoFile","downloadBase64File","extractImageFileExtensionFromBase64","image64toCanvasRef","imageMaxSize","acceptedFileTypes","acceptedFileTypesArray","split","map","item","trim","ImgDropAndCrop","constructor","props","verifyFile","files","length","currentFile","currentFileType","type","currentFileSize","size","alert","includes","handleOnDrop","rejectedFiles","console","log","isVerified","myFileItemReader","FileReader","addEventListener","myResult","result","setState","imgSrc","imgSrcExt","readAsDataURL","handleImageLoaded","image","crop","width","height","handleDragOver","preventDefault","handleOnCropChange","handleOnCropComplete","pixelCrop","showLabel","canvasRef","imagePreviewCanvasRef","current","state","changeCoordinate","coordinate","index","coordinates","forEach","c","showZone1","deleteCoordinate","handleDownloadClick","event","label","document","getElementsByName","value","showZone","imageData64","toDataURL","myFilename","myNewCroppedFile","handleClearToDefault","canvas","ctx","getContext","clearRect","aspect","fileInputRef","handleFileSelect","file","target","URL","createObjectURL","createRef","_width","window","innerWidth","error","componentDidMount","onresize","ratio","state_width","x","y","render","e","currentTarget","dropzoneProps"],"sources":["C:/Users/user/Documents/cameraProject_frontend-main/src/components/ImgDropAndCrop.js"],"sourcesContent":["\nimport React, { useState, useEffect, useRef,Component } from \"react\";\n\nimport Dropzone from \"react-dropzone\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport \"./custom-image-crop.css\";\nimport Form from \"react-bootstrap/Form\";\nimport { FormControl } from \"react-bootstrap\";\nimport MultiCrops from \"react-multi-crops\";\n\nimport {\n  base64StringtoFile,\n  downloadBase64File,\n  extractImageFileExtensionFromBase64,\n  image64toCanvasRef,\n} from \"./ResuableUtils\";\n\n\nconst imageMaxSize = 1000000000; // bytes\nconst acceptedFileTypes =\n  \"image/x-png, image/png, image/jpg, image/jpeg, image/gif\";\nconst acceptedFileTypesArray = acceptedFileTypes.split(\",\").map((item) => {\n  return item.trim();\n});\nclass ImgDropAndCrop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.imagePreviewCanvasRef = React.createRef();\n    this.fileInputRef = React.createRef();\n    this.state = {\n      _width: window.innerWidth,\n      coordinates :[],\n      width:window.innerWidth - 20,\n      label: \"\",\n      error: \"\",\n      showZone1: false,\n      showZone: false,\n      showLabel: false,\n      imgSrc: null,\n      imgSrcExt: null,\n      crop: {\n        aspect: 2 / 3,\n      },\n    };\n  }\n\n  verifyFile = (files) => {\n    if (files && files.length > 0) {\n      const currentFile = files[0];\n      const currentFileType = currentFile.type;\n      const currentFileSize = currentFile.size;\n      if (currentFileSize > imageMaxSize) {\n        alert(\n          \"This file is not allowed. \" + currentFileSize + \" bytes is too large\"\n        );\n        return false;\n      }\n      if (!acceptedFileTypesArray.includes(currentFileType)) {\n        alert(\"This file is not allowed. Only images are allowed.\");\n        return false;\n      }\n      return true;\n    }\n  };\n  \n\n  handleOnDrop = (files, rejectedFiles) => {\n    console.log(\"files\");\n    if (rejectedFiles && rejectedFiles.length > 0) {\n      this.verifyFile(rejectedFiles);\n    }\n\n    if (files && files.length > 0) {\n      const isVerified = this.verifyFile(files);\n      if (isVerified) {\n        // imageBase64Data\n        const currentFile = files[0];\n        const myFileItemReader = new FileReader();\n        myFileItemReader.addEventListener(\n          \"load\",\n          () => {\n            // console.log(myFileItemReader.result)\n            const myResult = myFileItemReader.result;\n            this.setState({\n              imgSrc: myResult,\n              imgSrcExt: extractImageFileExtensionFromBase64(myResult),\n            });\n          },\n          false\n        );\n\n        myFileItemReader.readAsDataURL(currentFile);\n      }\n    }\n  };\n\n  handleImageLoaded = (image) => {\n    this.setState({ crop: { width: image.width, height: image.height } });\n    console.log(\"zebi\");\n  };\n\n  handleDragOver = (image) => {\n    image.preventDefault();\n  };\n  componentDidMount(coordinates) {\n    window.onresize = () => {\n      const ratio = window.innerWidth / this.state._width.current;\n      console.log(ratio, this.state.coordinates[0]);\n      this.state_width.current = window.innerWidth;\n      this.setState({width:window.innerWidth - 20});\n      this.setState(\n        {coordinates:\n        coordinates.map(c => ({\n          ...c,\n          x: c.x * ratio,\n          y: c.y * ratio,\n          width: c.width * ratio\n        }))\n        }\n      );\n    };\n  }\n  handleOnCropChange = (crop) => {\n    this.setState({ crop: crop });\n  };\n  handleOnCropComplete = (crop, pixelCrop) => {\n    console.log(\"crop\", crop, \"px crop:\", pixelCrop);\n    this.setState({ showLabel: true });\n    const canvasRef = this.imagePreviewCanvasRef.current;\n    const { imgSrc } = this.state;\n    image64toCanvasRef(canvasRef, imgSrc, crop);\n  };\n\n  changeCoordinate = (coordinate, index, coordinates) => {\n    coordinates.forEach(c => {console.log(c)})\n    \n    this.setState({ showZone1: true });\n    this.setState({coordinates: coordinates});\n  };\n  \n  deleteCoordinate = (coordinate, index, coordinates) => {\n    this.setState({coordinates: coordinates});\n  };\n  handleDownloadClick = (event) => {\n    event.preventDefault();\n    this.setState({ label: document.getElementsByName(\"label\")[0].value });\n    this.setState({ showZone: true });\n    const { imgSrc } = this.state;\n    if (imgSrc) {\n      const canvasRef = this.imagePreviewCanvasRef.current;\n\n      const { imgSrcExt } = this.state;\n      const imageData64 = canvasRef.toDataURL(\"image/\" + imgSrcExt);\n\n      const myFilename = \"previewFile.\" + imgSrcExt;\n\n      // file to be uploaded\n      const myNewCroppedFile = base64StringtoFile(imageData64, myFilename);\n      console.log(myNewCroppedFile);\n      // download file\n      downloadBase64File(imageData64, myFilename);\n    }\n  };\n\n  handleClearToDefault = (event) => {\n    if (event) event.preventDefault();\n    const canvas = this.imagePreviewCanvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    this.setState({\n      imgSrc: null,\n      imgSrcExt: null,\n      crop: {\n        aspect: 1 / 1,\n      },\n    });\n    this.fileInputRef.current.value = null;\n  };\n\n  handleFileSelect = (event) => {\n    const [file] = event.target.files;\n    this.setState({\n      imgSrc: URL.createObjectURL(file),\n      imgSrcExt: extractImageFileExtensionFromBase64(URL.createObjectURL(file)),\n    });\n\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      const isVerified = this.verifyFile(files);\n      if (isVerified) {\n        // imageBase64Data\n        const currentFile = files[0];\n        const myFileItemReader = new FileReader();\n        myFileItemReader.addEventListener(\n          \"load\",\n          () => {\n            // console.log(myFileItemReader.result)\n            this.setState({\n              imgSrc: URL.createObjectURL(file),\n              imgSrcExt: extractImageFileExtensionFromBase64(\n                URL.createObjectURL(file)\n              ),\n            });\n          },\n          false\n        );\n\n        myFileItemReader.readAsDataURL(currentFile);\n      }\n    }\n  };\n  render() {\n    const { imgSrc } = this.state;\n    return (\n      <div>\n        <h1>Video Zoning</h1>\n        <input\n          ref={this.fileInputRef}\n          type=\"file\"\n          accept={acceptedFileTypes}\n          multiple={false}\n          onChange={this.handleFileSelect}\n        />\n        <MultiCrops\n        src={imgSrc}\n        width={this.state.width}\n        coordinates={this.state.coordinates}\n        onChange={this.changeCoordinate}\n        onDelete={this.deleteCoordinate}\n        onLoad={e => console.log(e.currentTarget.height)}\n      />\n      <canvas />\n\n        {imgSrc !== null ? (\n          <div>\n            <ReactCrop\n              height=\"360px\"\n              width=\"720px\"\n              src={imgSrc}\n              crop={this.state.crop}\n              onImageLoaded={this.handleImageLoaded}\n              onComplete={this.handleOnCropComplete}\n              onChange={this.handleOnCropChange}\n            >\n              <img src={imgSrc} alt=\"\" />\n            </ReactCrop>\n\n            <br />\n            <p>Preview Canvas Crop </p>\n            <canvas ref={this.imagePreviewCanvasRef}></canvas>\n          </div>\n        ) : (\n          <Dropzone\n            onDragOver={this.handleDragOver}\n            onDrop={this.handleOnDrop}\n            accept={acceptedFileTypes}\n            multiple={false}\n            maxSize={imageMaxSize}\n          >\n            {(dropzoneProps) => {\n              return (\n                <div>\n                  <p>Drop some files here</p>\n                </div>\n              );\n            }}\n          </Dropzone>\n        )}\n        {this.state.showLabel === true && (\n          <div>\n            <div class=\"container\" style={{ width: \"20%\" }}>\n              <Form.Label>Label</Form.Label>\n              <FormControl\n                type=\"text\"\n                name=\"label\"\n                onChange={() => {\n                  if (\n                    typeof document.getElementsByName(\"label\")[0] !=\n                      \"undefined\" &&\n                    document.getElementsByName(\"label\")[0].value >= 1\n                  ) {\n                    this.setState({ label: this.value });\n                    this.setState({ error: \"\" });\n                  } else {\n                    this.setState({ label: this.value });\n                  }\n                  this.setState({\n                    error: \"Please select a video file (.mp4 or .avi)\",\n                  });\n                }}\n                value={this.state.label}\n              />\n              <br />\n              <button onClick={this.handleDownloadClick}>Save</button>\n              <button onClick={this.handleClearToDefault}>Clear</button>\n            </div>\n          </div>\n        )}\n        \n        {this.state.coordinates.forEach(c) (\n          <div>\n            <div class=\"container\" style={{ width: \"20%\" }}>\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">Zone </h5>\n                <h6 class=\"card-subtitle mb-2 text-muted\">Label = {this.state.label}</h6>\n                <p class=\"card-text\">\n                  x : {c.x}\n                </p>\n                <p class=\"card-text\">\n                  y : {this.state.coordinates[0].y}\n                </p>\n                <p class=\"card-text\">\n                  width : {this.state.coordinates[0].width}\n                </p>\n                <p class=\"card-text\">\n                  height : {this.state.coordinates[0].height}\n                </p>\n                \n                \n                \n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ImgDropAndCrop;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}