{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\cameraProject_frontend-main\\\\src\\\\components\\\\ReactCrop.tsx\";\nimport React, { PureComponent, createRef } from 'react';\nimport clsx from 'clsx';\nimport { defaultCrop, clamp, areCropsEqual, convertToPercentCrop, convertToPixelCrop, containCrop } from './utils';\nimport './ReactCrop.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DOC_MOVE_OPTS = {\n  capture: true,\n  passive: false\n};\n\nclass ReactCrop extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.document = document;\n    this.keysDown = new Set();\n    this.docMoveBound = false;\n    this.mouseDownOnCrop = false;\n    this.dragStarted = false;\n    this.evData = {\n      startClientX: 0,\n      startClientY: 0,\n      startCropX: 0,\n      startCropY: 0,\n      clientX: 0,\n      clientY: 0,\n      isResize: true\n    };\n    this.componentRef = /*#__PURE__*/createRef();\n    this.mediaRef = /*#__PURE__*/createRef();\n    this.resizeObserver = void 0;\n    this.initChangeCalled = false;\n    this.state = {\n      cropIsActive: false,\n      newCropIsBeingDrawn: false\n    };\n\n    this.onCropPointerDown = e => {\n      const {\n        crop,\n        disabled\n      } = this.props;\n      const box = this.getBox();\n\n      if (!crop) {\n        return;\n      }\n\n      const pixelCrop = convertToPixelCrop(crop, box.width, box.height);\n\n      if (disabled) {\n        return;\n      }\n\n      if (e.cancelable) e.preventDefault(); // Stop drag selection.\n      // Bind to doc to follow movements outside of element.\n\n      this.bindDocMove() // Focus for detecting keypress.\n      ;\n      this.componentRef.current.focus({\n        preventScroll: true\n      });\n      const ord = e.target.dataset.ord;\n      const isResize = Boolean(ord);\n      let startClientX = e.clientX;\n      let startClientY = e.clientY;\n      let startCropX = pixelCrop.x;\n      let startCropY = pixelCrop.y; // Set the starting coords to the opposite corner.\n\n      if (ord) {\n        if (ord === 'ne' || ord == 'e') {\n          startCropX = pixelCrop.x;\n          startCropY = pixelCrop.y + pixelCrop.height;\n        } else if (ord === 'se' || ord === 's') {\n          startCropX = pixelCrop.x;\n          startCropY = pixelCrop.y;\n        } else if (ord === 'sw' || ord == 'w') {\n          startCropX = pixelCrop.x + pixelCrop.width;\n          startCropY = pixelCrop.y;\n        } else if (ord === 'nw' || ord == 'n') {\n          startCropX = pixelCrop.x + pixelCrop.width;\n          startCropY = pixelCrop.y + pixelCrop.height;\n        }\n\n        startClientX = startCropX + box.x;\n        startClientY = startCropY + box.y;\n      }\n\n      this.evData = {\n        startClientX,\n        startClientY,\n        startCropX,\n        startCropY,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        isResize,\n        ord\n      };\n      this.mouseDownOnCrop = true;\n      this.setState({\n        cropIsActive: true\n      });\n    };\n\n    this.onComponentPointerDown = e => {\n      const {\n        crop,\n        disabled,\n        locked,\n        keepSelection,\n        onChange\n      } = this.props;\n      const box = this.getBox();\n\n      if (disabled || locked || keepSelection && crop) {\n        return;\n      }\n\n      if (e.cancelable) e.preventDefault(); // Stop drag selection.\n      // Bind to doc to follow movements outside of element.\n\n      this.bindDocMove() // Focus for detecting keypress.\n      ;\n      this.componentRef.current.focus({\n        preventScroll: true\n      });\n      const cropX = e.clientX - box.x;\n      const cropY = e.clientY - box.y;\n      const nextCrop = {\n        unit: 'px',\n        x: cropX,\n        y: cropY,\n        width: 0,\n        height: 0\n      };\n      this.evData = {\n        startClientX: e.clientX,\n        startClientY: e.clientY,\n        startCropX: cropX,\n        startCropY: cropY,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        isResize: true\n      };\n      this.mouseDownOnCrop = true;\n      onChange(convertToPixelCrop(nextCrop, box.width, box.height), convertToPercentCrop(nextCrop, box.width, box.height));\n      this.setState({\n        cropIsActive: true,\n        newCropIsBeingDrawn: true\n      });\n    };\n\n    this.onDocPointerMove = e => {\n      const {\n        crop,\n        disabled,\n        onChange,\n        onDragStart\n      } = this.props;\n      const box = this.getBox();\n\n      if (disabled || !crop || !this.mouseDownOnCrop) {\n        return;\n      } // Stop drag selection.\n\n\n      if (e.cancelable) e.preventDefault();\n\n      if (!this.dragStarted) {\n        this.dragStarted = true;\n\n        if (onDragStart) {\n          onDragStart(e);\n        }\n      } // Update pointer position.\n\n\n      const {\n        evData\n      } = this;\n      evData.clientX = e.clientX;\n      evData.clientY = e.clientY;\n      let nextCrop;\n\n      if (evData.isResize) {\n        nextCrop = this.resizeCrop();\n      } else {\n        nextCrop = this.dragCrop();\n      }\n\n      if (!areCropsEqual(crop, nextCrop)) {\n        onChange(convertToPixelCrop(nextCrop, box.width, box.height), convertToPercentCrop(nextCrop, box.width, box.height));\n      }\n    };\n\n    this.onComponentKeyDown = e => {\n      const {\n        crop,\n        disabled,\n        onChange,\n        onComplete\n      } = this.props;\n      const box = this.getBox();\n\n      if (disabled) {\n        return;\n      }\n\n      this.keysDown.add(e.key);\n      let nudged = false;\n\n      if (!crop) {\n        return;\n      }\n\n      const nextCrop = this.makePixelCrop();\n      const ctrlCmdPressed = navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey;\n      const nudgeStep = ctrlCmdPressed ? ReactCrop.nudgeStepLarge : e.shiftKey ? ReactCrop.nudgeStepMedium : ReactCrop.nudgeStep;\n\n      if (this.keysDown.has('ArrowLeft')) {\n        nextCrop.x -= nudgeStep;\n        nudged = true;\n      }\n\n      if (this.keysDown.has('ArrowRight')) {\n        nextCrop.x += nudgeStep;\n        nudged = true;\n      }\n\n      if (this.keysDown.has('ArrowUp')) {\n        nextCrop.y -= nudgeStep;\n        nudged = true;\n      }\n\n      if (this.keysDown.has('ArrowDown')) {\n        nextCrop.y += nudgeStep;\n        nudged = true;\n      }\n\n      if (nudged) {\n        if (e.cancelable) e.preventDefault(); // Stop drag selection.\n\n        nextCrop.x = clamp(nextCrop.x, 0, box.width - nextCrop.width);\n        nextCrop.y = clamp(nextCrop.y, 0, box.height - nextCrop.height);\n        const pixelCrop = convertToPixelCrop(nextCrop, box.width, box.height);\n        const percentCrop = convertToPercentCrop(nextCrop, box.width, box.height);\n        onChange(pixelCrop, percentCrop);\n\n        if (onComplete) {\n          onComplete(pixelCrop, percentCrop);\n        }\n      }\n    };\n\n    this.onHandlerKeyDown = (e, ord) => {\n      const {\n        aspect = 0,\n        crop,\n        disabled,\n        minWidth = 0,\n        minHeight = 0,\n        maxWidth,\n        maxHeight,\n        onChange,\n        onComplete\n      } = this.props;\n      const box = this.getBox();\n\n      if (disabled || !crop) {\n        return;\n      } // Keep the event from bubbling up to the container\n\n\n      if (e.key === 'ArrowUp' || e.key === 'ArrowDown' || e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n        e.stopPropagation();\n        e.preventDefault();\n      } else {\n        return;\n      }\n\n      const tmpCrop = convertToPixelCrop(crop, box.width, box.height);\n      const ctrlCmdPressed = navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey;\n      const offset = ctrlCmdPressed ? ReactCrop.nudgeStepLarge : e.shiftKey ? ReactCrop.nudgeStepMedium : ReactCrop.nudgeStep;\n\n      if (e.key === 'ArrowLeft') {\n        if (ord === 'nw') {\n          tmpCrop.x -= offset;\n          tmpCrop.y -= offset;\n          tmpCrop.width += offset;\n          tmpCrop.height += offset;\n        } else if (ord === 'w') {\n          tmpCrop.x -= offset;\n          tmpCrop.width += offset;\n        } else if (ord === 'sw') {\n          tmpCrop.x -= offset;\n          tmpCrop.width += offset;\n          tmpCrop.height += offset;\n        } else if (ord === 'ne') {\n          tmpCrop.y += offset;\n          tmpCrop.width -= offset;\n          tmpCrop.height -= offset;\n        } else if (ord === 'e') {\n          tmpCrop.width -= offset;\n        } else if (ord === 'se') {\n          tmpCrop.width -= offset;\n          tmpCrop.height -= offset;\n        }\n      } else if (e.key === 'ArrowRight') {\n        if (ord === 'nw') {\n          tmpCrop.x += offset;\n          tmpCrop.y += offset;\n          tmpCrop.width -= offset;\n          tmpCrop.height -= offset;\n        } else if (ord === 'w') {\n          // Niche: Will move right if minWidth hit.\n          tmpCrop.x += offset;\n          tmpCrop.width -= offset;\n        } else if (ord === 'sw') {\n          tmpCrop.x += offset;\n          tmpCrop.width -= offset;\n          tmpCrop.height -= offset;\n        } else if (ord === 'ne') {\n          tmpCrop.y -= offset;\n          tmpCrop.width += offset;\n          tmpCrop.height += offset;\n        } else if (ord === 'e') {\n          tmpCrop.width += offset;\n        } else if (ord === 'se') {\n          tmpCrop.width += offset;\n          tmpCrop.height += offset;\n        }\n      }\n\n      if (e.key === 'ArrowUp') {\n        if (ord === 'nw') {\n          tmpCrop.x -= offset;\n          tmpCrop.y -= offset;\n          tmpCrop.width += offset;\n          tmpCrop.height += offset;\n        } else if (ord === 'n') {\n          tmpCrop.y -= offset;\n          tmpCrop.height += offset;\n        } else if (ord === 'ne') {\n          tmpCrop.y -= offset;\n          tmpCrop.width += offset;\n          tmpCrop.height += offset;\n        } else if (ord === 'sw') {\n          tmpCrop.x += offset;\n          tmpCrop.width -= offset;\n          tmpCrop.height -= offset;\n        } else if (ord === 's') {\n          tmpCrop.height -= offset;\n        } else if (ord === 'se') {\n          tmpCrop.width -= offset;\n          tmpCrop.height -= offset;\n        }\n      } else if (e.key === 'ArrowDown') {\n        if (ord === 'nw') {\n          tmpCrop.x += offset;\n          tmpCrop.y += offset;\n          tmpCrop.width -= offset;\n          tmpCrop.height -= offset;\n        } else if (ord === 'n') {\n          // Niche: Will move down if minHeight hit.\n          tmpCrop.y += offset;\n          tmpCrop.height -= offset;\n        } else if (ord === 'ne') {\n          tmpCrop.y += offset;\n          tmpCrop.width -= offset;\n          tmpCrop.height -= offset;\n        } else if (ord === 'sw') {\n          tmpCrop.x -= offset;\n          tmpCrop.width += offset;\n          tmpCrop.height += offset;\n        } else if (ord === 's') {\n          tmpCrop.height += offset;\n        } else if (ord === 'se') {\n          tmpCrop.width += offset;\n          tmpCrop.height += offset;\n        }\n      }\n\n      const containedCrop = containCrop(tmpCrop, aspect, ord, box.width, box.height, minWidth, minHeight, maxWidth, maxHeight);\n\n      if (!areCropsEqual(crop, containedCrop)) {\n        const percentCrop = convertToPercentCrop(containedCrop, box.width, box.height);\n        onChange(containedCrop, percentCrop);\n\n        if (onComplete) {\n          onComplete(containedCrop, percentCrop);\n        }\n      }\n    };\n\n    this.onComponentKeyUp = e => {\n      this.keysDown.delete(e.key);\n    };\n\n    this.onDocPointerDone = e => {\n      const {\n        crop,\n        disabled,\n        onComplete,\n        onDragEnd\n      } = this.props;\n      const box = this.getBox();\n      this.unbindDocMove();\n\n      if (disabled || !crop) {\n        return;\n      }\n\n      if (this.mouseDownOnCrop) {\n        this.mouseDownOnCrop = false;\n        this.dragStarted = false;\n        onDragEnd && onDragEnd(e);\n        onComplete && onComplete(convertToPixelCrop(crop, box.width, box.height), convertToPercentCrop(crop, box.width, box.height));\n        this.setState({\n          cropIsActive: false,\n          newCropIsBeingDrawn: false\n        });\n      }\n    };\n  }\n\n  // We unfortunately get the bounding box every time as x+y changes\n  // due to scrolling.\n  getBox() {\n    const el = this.mediaRef.current;\n\n    if (!el) {\n      return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    const {\n      x,\n      y,\n      width,\n      height\n    } = el.getBoundingClientRect();\n    return {\n      x,\n      y,\n      width,\n      height\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      crop,\n      onComplete\n    } = this.props; // Useful for when programatically setting a new\n    // crop and wanting to show a preview.\n\n    if (onComplete && !prevProps.crop && crop) {\n      const {\n        width,\n        height\n      } = this.getBox();\n\n      if (width && height) {\n        onComplete(convertToPixelCrop(crop, width, height), convertToPercentCrop(crop, width, height));\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n  }\n\n  bindDocMove() {\n    if (this.docMoveBound) {\n      return;\n    }\n\n    this.document.addEventListener('pointermove', this.onDocPointerMove, DOC_MOVE_OPTS);\n    this.document.addEventListener('pointerup', this.onDocPointerDone, DOC_MOVE_OPTS);\n    this.document.addEventListener('pointercancel', this.onDocPointerDone, DOC_MOVE_OPTS);\n    this.docMoveBound = true;\n  }\n\n  unbindDocMove() {\n    if (!this.docMoveBound) {\n      return;\n    }\n\n    this.document.removeEventListener('pointermove', this.onDocPointerMove, DOC_MOVE_OPTS);\n    this.document.removeEventListener('pointerup', this.onDocPointerDone, DOC_MOVE_OPTS);\n    this.document.removeEventListener('pointercancel', this.onDocPointerDone, DOC_MOVE_OPTS);\n    this.docMoveBound = false;\n  }\n\n  getCropStyle() {\n    const {\n      crop\n    } = this.props;\n\n    if (!crop) {\n      return undefined;\n    }\n\n    return {\n      top: `${crop.y}${crop.unit}`,\n      left: `${crop.x}${crop.unit}`,\n      width: `${crop.width}${crop.unit}`,\n      height: `${crop.height}${crop.unit}`\n    };\n  }\n\n  dragCrop() {\n    const {\n      evData\n    } = this;\n    const box = this.getBox();\n    const nextCrop = this.makePixelCrop();\n    const xDiff = evData.clientX - evData.startClientX;\n    const yDiff = evData.clientY - evData.startClientY;\n    nextCrop.x = clamp(evData.startCropX + xDiff, 0, box.width - nextCrop.width);\n    nextCrop.y = clamp(evData.startCropY + yDiff, 0, box.height - nextCrop.height);\n    return nextCrop;\n  }\n\n  getPointRegion(box) {\n    const {\n      evData\n    } = this;\n    const relativeX = evData.clientX - box.x;\n    const relativeY = evData.clientY - box.y;\n    const topHalf = relativeY < evData.startCropY;\n    const leftHalf = relativeX < evData.startCropX;\n\n    if (leftHalf) {\n      return topHalf ? 'nw' : 'sw';\n    } else {\n      return topHalf ? 'ne' : 'se';\n    }\n  }\n\n  resizeCrop() {\n    const {\n      evData\n    } = this;\n    const box = this.getBox();\n    const {\n      aspect = 0,\n      minWidth = 0,\n      minHeight = 0,\n      maxWidth,\n      maxHeight\n    } = this.props;\n    const area = this.getPointRegion(box);\n    const nextCrop = this.makePixelCrop();\n    const resolvedOrd = evData.ord ? evData.ord : area;\n    const xDiff = evData.clientX - evData.startClientX;\n    const yDiff = evData.clientY - evData.startClientY;\n    const tmpCrop = {\n      unit: 'px',\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n\n    if (area === 'ne') {\n      tmpCrop.x = evData.startCropX;\n      tmpCrop.width = xDiff;\n\n      if (aspect) {\n        tmpCrop.height = tmpCrop.width / aspect;\n        tmpCrop.y = evData.startCropY - tmpCrop.height;\n      } else {\n        tmpCrop.height = Math.abs(yDiff);\n        tmpCrop.y = evData.startCropY - tmpCrop.height;\n      }\n    } else if (area === 'se') {\n      tmpCrop.x = evData.startCropX;\n      tmpCrop.y = evData.startCropY;\n      tmpCrop.width = xDiff;\n\n      if (aspect) {\n        tmpCrop.height = tmpCrop.width / aspect;\n      } else {\n        tmpCrop.height = yDiff;\n      }\n    } else if (area === 'sw') {\n      tmpCrop.x = evData.startCropX + xDiff;\n      tmpCrop.y = evData.startCropY;\n      tmpCrop.width = Math.abs(xDiff);\n\n      if (aspect) {\n        tmpCrop.height = tmpCrop.width / aspect;\n      } else {\n        tmpCrop.height = yDiff;\n      }\n    } else if (area === 'nw') {\n      tmpCrop.x = evData.startCropX + xDiff;\n      tmpCrop.width = Math.abs(xDiff);\n\n      if (aspect) {\n        tmpCrop.height = tmpCrop.width / aspect;\n        tmpCrop.y = evData.startCropY - tmpCrop.height;\n      } else {\n        tmpCrop.height = Math.abs(yDiff);\n        tmpCrop.y = evData.startCropY + yDiff;\n      }\n    }\n\n    const containedCrop = containCrop(tmpCrop, aspect, area, box.width, box.height, minWidth, minHeight, maxWidth, maxHeight); // Apply x/y/width/height changes depending on ordinate\n    // (fixed aspect always applies both).\n\n    if (aspect || ReactCrop.xyOrds.indexOf(resolvedOrd) > -1) {\n      nextCrop.x = containedCrop.x;\n      nextCrop.y = containedCrop.y;\n      nextCrop.width = containedCrop.width;\n      nextCrop.height = containedCrop.height;\n    } else if (ReactCrop.xOrds.indexOf(resolvedOrd) > -1) {\n      nextCrop.x = containedCrop.x;\n      nextCrop.width = containedCrop.width;\n    } else if (ReactCrop.yOrds.indexOf(resolvedOrd) > -1) {\n      nextCrop.y = containedCrop.y;\n      nextCrop.height = containedCrop.height;\n    }\n\n    return nextCrop;\n  }\n\n  createCropSelection() {\n    const {\n      ariaLabels = ReactCrop.defaultProps.ariaLabels,\n      disabled,\n      locked,\n      renderSelectionAddon,\n      ruleOfThirds,\n      crop\n    } = this.props;\n    const style = this.getCropStyle();\n\n    if (!crop) {\n      return undefined;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      className: \"ReactCrop__crop-selection\",\n      onPointerDown: this.onCropPointerDown,\n      \"aria-label\": ariaLabels.cropArea,\n      tabIndex: 0,\n      onKeyDown: this.onComponentKeyDown,\n      onKeyUp: this.onComponentKeyUp,\n      children: [!disabled && !locked && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ReactCrop__drag-elements\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__drag-bar ord-n\",\n          \"data-ord\": \"n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__drag-bar ord-e\",\n          \"data-ord\": \"e\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__drag-bar ord-s\",\n          \"data-ord\": \"s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__drag-bar ord-w\",\n          \"data-ord\": \"w\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__drag-handle ord-nw\",\n          \"data-ord\": \"nw\",\n          tabIndex: 0,\n          \"aria-label\": ariaLabels.nwDragHandle,\n          onKeyDown: e => this.onHandlerKeyDown(e, 'nw')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__drag-handle ord-n\",\n          \"data-ord\": \"n\",\n          tabIndex: 0,\n          \"aria-label\": ariaLabels.nDragHandle,\n          onKeyDown: e => this.onHandlerKeyDown(e, 'n')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__drag-handle ord-ne\",\n          \"data-ord\": \"ne\",\n          tabIndex: 0,\n          \"aria-label\": ariaLabels.neDragHandle,\n          onKeyDown: e => this.onHandlerKeyDown(e, 'ne')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__drag-handle ord-e\",\n          \"data-ord\": \"e\",\n          tabIndex: 0,\n          \"aria-label\": ariaLabels.eDragHandle,\n          onKeyDown: e => this.onHandlerKeyDown(e, 'e')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__drag-handle ord-se\",\n          \"data-ord\": \"se\",\n          tabIndex: 0,\n          \"aria-label\": ariaLabels.seDragHandle,\n          onKeyDown: e => this.onHandlerKeyDown(e, 'se')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__drag-handle ord-s\",\n          \"data-ord\": \"s\",\n          tabIndex: 0,\n          \"aria-label\": ariaLabels.sDragHandle,\n          onKeyDown: e => this.onHandlerKeyDown(e, 's')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__drag-handle ord-sw\",\n          \"data-ord\": \"sw\",\n          tabIndex: 0,\n          \"aria-label\": ariaLabels.swDragHandle,\n          onKeyDown: e => this.onHandlerKeyDown(e, 'sw')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__drag-handle ord-w\",\n          \"data-ord\": \"w\",\n          tabIndex: 0,\n          \"aria-label\": ariaLabels.wDragHandle,\n          onKeyDown: e => this.onHandlerKeyDown(e, 'w')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 11\n      }, this), renderSelectionAddon && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ReactCrop__selection-addon\",\n        onMouseDown: e => e.stopPropagation(),\n        children: renderSelectionAddon(this.state)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 11\n      }, this), ruleOfThirds && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__rule-of-thirds-hz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ReactCrop__rule-of-thirds-vt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 7\n    }, this);\n  }\n\n  makePixelCrop() {\n    const crop = { ...defaultCrop,\n      ...(this.props.crop || {})\n    };\n    const box = this.getBox();\n    return convertToPixelCrop(crop, box.width, box.height);\n  }\n\n  render() {\n    const {\n      aspect,\n      children,\n      circularCrop,\n      className,\n      crop,\n      disabled,\n      locked,\n      style,\n      ruleOfThirds\n    } = this.props;\n    const {\n      cropIsActive,\n      newCropIsBeingDrawn\n    } = this.state;\n    const cropSelection = crop ? this.createCropSelection() : null;\n    const componentClasses = clsx('ReactCrop', className, {\n      'ReactCrop--active': cropIsActive,\n      'ReactCrop--disabled': disabled,\n      'ReactCrop--locked': locked,\n      'ReactCrop--new-crop': newCropIsBeingDrawn,\n      'ReactCrop--fixed-aspect': crop && aspect,\n      'ReactCrop--circular-crop': crop && circularCrop,\n      'ReactCrop--rule-of-thirds': crop && ruleOfThirds,\n      'ReactCrop--invisible-crop': !this.dragStarted && crop && !crop.width && !crop.height\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.componentRef,\n      className: componentClasses,\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.mediaRef,\n        className: \"ReactCrop__child-wrapper\",\n        onPointerDown: this.onComponentPointerDown,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 9\n      }, this), cropSelection]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactCrop.xOrds = ['e', 'w'];\nReactCrop.yOrds = ['n', 's'];\nReactCrop.xyOrds = ['nw', 'ne', 'se', 'sw'];\nReactCrop.nudgeStep = 1;\nReactCrop.nudgeStepMedium = 10;\nReactCrop.nudgeStepLarge = 100;\nReactCrop.defaultProps = {\n  ariaLabels: {\n    cropArea: 'Use the arrow keys to move the crop selection area',\n    nwDragHandle: 'Use the arrow keys to move the north west drag handle to change the crop selection area',\n    nDragHandle: 'Use the up and down arrow keys to move the north drag handle to change the crop selection area',\n    neDragHandle: 'Use the arrow keys to move the north east drag handle to change the crop selection area',\n    eDragHandle: 'Use the up and down arrow keys to move the east drag handle to change the crop selection area',\n    seDragHandle: 'Use the arrow keys to move the south east drag handle to change the crop selection area',\n    sDragHandle: 'Use the up and down arrow keys to move the south drag handle to change the crop selection area',\n    swDragHandle: 'Use the arrow keys to move the south west drag handle to change the crop selection area',\n    wDragHandle: 'Use the up and down arrow keys to move the west drag handle to change the crop selection area'\n  }\n};\nexport { ReactCrop as default, ReactCrop as Component };","map":{"version":3,"names":["React","PureComponent","createRef","clsx","defaultCrop","clamp","areCropsEqual","convertToPercentCrop","convertToPixelCrop","containCrop","DOC_MOVE_OPTS","capture","passive","ReactCrop","document","keysDown","Set","docMoveBound","mouseDownOnCrop","dragStarted","evData","startClientX","startClientY","startCropX","startCropY","clientX","clientY","isResize","componentRef","mediaRef","resizeObserver","initChangeCalled","state","cropIsActive","newCropIsBeingDrawn","onCropPointerDown","e","crop","disabled","props","box","getBox","pixelCrop","width","height","cancelable","preventDefault","bindDocMove","current","focus","preventScroll","ord","target","dataset","Boolean","x","y","setState","onComponentPointerDown","locked","keepSelection","onChange","cropX","cropY","nextCrop","unit","onDocPointerMove","onDragStart","resizeCrop","dragCrop","onComponentKeyDown","onComplete","add","key","nudged","makePixelCrop","ctrlCmdPressed","navigator","platform","match","metaKey","ctrlKey","nudgeStep","nudgeStepLarge","shiftKey","nudgeStepMedium","has","percentCrop","onHandlerKeyDown","aspect","minWidth","minHeight","maxWidth","maxHeight","stopPropagation","tmpCrop","offset","containedCrop","onComponentKeyUp","delete","onDocPointerDone","onDragEnd","unbindDocMove","el","getBoundingClientRect","componentDidUpdate","prevProps","componentWillUnmount","disconnect","addEventListener","removeEventListener","getCropStyle","undefined","top","left","xDiff","yDiff","getPointRegion","relativeX","relativeY","topHalf","leftHalf","area","resolvedOrd","Math","abs","xyOrds","indexOf","xOrds","yOrds","createCropSelection","ariaLabels","defaultProps","renderSelectionAddon","ruleOfThirds","style","cropArea","nwDragHandle","nDragHandle","neDragHandle","eDragHandle","seDragHandle","sDragHandle","swDragHandle","wDragHandle","render","children","circularCrop","className","cropSelection","componentClasses","default","Component"],"sources":["C:/Users/user/Documents/cameraProject_frontend-main/src/components/ReactCrop.tsx"],"sourcesContent":["import React, { PureComponent, createRef } from 'react'\r\nimport clsx from 'clsx'\r\n\r\nimport { Ords, XYOrds, Crop, PixelCrop, PercentCrop } from './types'\r\nimport { defaultCrop, clamp, areCropsEqual, convertToPercentCrop, convertToPixelCrop, containCrop } from './utils'\r\n\r\nimport './ReactCrop.scss'\r\n\r\ninterface EVData {\r\n  startClientX: number\r\n  startClientY: number\r\n  startCropX: number\r\n  startCropY: number\r\n  clientX: number\r\n  clientY: number\r\n  isResize: boolean\r\n  ord?: Ords\r\n}\r\n\r\ninterface Rectangle {\r\n  x: number\r\n  y: number\r\n  width: number\r\n  height: number\r\n}\r\n\r\nconst DOC_MOVE_OPTS = { capture: true, passive: false }\r\n\r\nexport interface ReactCropProps {\r\n  /** An object of labels to override the built-in English ones */\r\n  ariaLabels?: {\r\n    cropArea: string\r\n    nwDragHandle: string\r\n    nDragHandle: string\r\n    neDragHandle: string\r\n    eDragHandle: string\r\n    seDragHandle: string\r\n    sDragHandle: string\r\n    swDragHandle: string\r\n    wDragHandle: string\r\n  }\r\n  /** The aspect ratio of the crop, e.g. `1` for a square or `16 / 9` for landscape. */\r\n  aspect?: number\r\n  /** Classes to pass to the `ReactCrop` element. */\r\n  className?: string\r\n  /** The elements that you want to perform a crop on. For example\r\n   * an image or video. */\r\n  children?: React.ReactNode\r\n  /** Show the crop area as a circle. If your aspect is not 1 (a square) then the circle will be warped into an oval shape. Defaults to false. */\r\n  circularCrop?: boolean\r\n  /** Since v10 all crop params are required except for aspect. Omit the entire crop object if you don't want a crop. See README on how to create an aspect crop with a % crop. */\r\n  crop?: Crop\r\n  /** If true then the user cannot resize or draw a new crop. A class of `ReactCrop--disabled` is also added to the container for user styling. */\r\n  disabled?: boolean\r\n  /** If true then the user cannot create or resize a crop, but can still drag the existing crop around. A class of `ReactCrop--locked` is also added to the container for user styling. */\r\n  locked?: boolean\r\n  /** If true is passed then selection can't be disabled if the user clicks outside the selection area. */\r\n  keepSelection?: boolean\r\n  /** A minimum crop width, in pixels. */\r\n  minWidth?: number\r\n  /** A minimum crop height, in pixels. */\r\n  minHeight?: number\r\n  /** A maximum crop width, in pixels. */\r\n  maxWidth?: number\r\n  /** A maximum crop height, in pixels. */\r\n  maxHeight?: number\r\n  /** A callback which happens for every change of the crop. You should set the crop to state and pass it back into the library via the `crop` prop. */\r\n  onChange: (crop: PixelCrop, percentageCrop: PercentCrop) => void\r\n  /** A callback which happens after a resize, drag, or nudge. Passes the current crop state object in pixels and percent. */\r\n  onComplete?: (crop: PixelCrop, percentageCrop: PercentCrop) => void\r\n  /** A callback which happens when a user starts dragging or resizing. It is convenient to manipulate elements outside this component. */\r\n  onDragStart?: (e: PointerEvent) => void\r\n  /** A callback which happens when a user releases the cursor or touch after dragging or resizing. */\r\n  onDragEnd?: (e: PointerEvent) => void\r\n  /** Render a custom element in crop selection. */\r\n  renderSelectionAddon?: (state: ReactCropState) => React.ReactNode\r\n  /** Show rule of thirds lines in the cropped area. Defaults to false. */\r\n  ruleOfThirds?: boolean\r\n  /** Inline styles object to be passed to the `ReactCrop` element. */\r\n  style?: React.CSSProperties\r\n}\r\n\r\nexport interface ReactCropState {\r\n  cropIsActive: boolean\r\n  newCropIsBeingDrawn: boolean\r\n}\r\n\r\nclass ReactCrop extends PureComponent<ReactCropProps, ReactCropState> {\r\n  static xOrds = ['e', 'w']\r\n  static yOrds = ['n', 's']\r\n  static xyOrds = ['nw', 'ne', 'se', 'sw']\r\n\r\n  static nudgeStep = 1\r\n  static nudgeStepMedium = 10\r\n  static nudgeStepLarge = 100\r\n\r\n  static defaultProps = {\r\n    ariaLabels: {\r\n      cropArea: 'Use the arrow keys to move the crop selection area',\r\n      nwDragHandle: 'Use the arrow keys to move the north west drag handle to change the crop selection area',\r\n      nDragHandle: 'Use the up and down arrow keys to move the north drag handle to change the crop selection area',\r\n      neDragHandle: 'Use the arrow keys to move the north east drag handle to change the crop selection area',\r\n      eDragHandle: 'Use the up and down arrow keys to move the east drag handle to change the crop selection area',\r\n      seDragHandle: 'Use the arrow keys to move the south east drag handle to change the crop selection area',\r\n      sDragHandle: 'Use the up and down arrow keys to move the south drag handle to change the crop selection area',\r\n      swDragHandle: 'Use the arrow keys to move the south west drag handle to change the crop selection area',\r\n      wDragHandle: 'Use the up and down arrow keys to move the west drag handle to change the crop selection area',\r\n    },\r\n  }\r\n\r\n  document = document\r\n  keysDown = new Set<string>()\r\n  docMoveBound = false\r\n  mouseDownOnCrop = false\r\n  dragStarted = false\r\n  evData: EVData = {\r\n    startClientX: 0,\r\n    startClientY: 0,\r\n    startCropX: 0,\r\n    startCropY: 0,\r\n    clientX: 0,\r\n    clientY: 0,\r\n    isResize: true,\r\n  }\r\n\r\n  componentRef = createRef<HTMLDivElement>()\r\n  mediaRef = createRef<HTMLDivElement>()\r\n  resizeObserver?: ResizeObserver\r\n  initChangeCalled = false\r\n\r\n  state: ReactCropState = {\r\n    cropIsActive: false,\r\n    newCropIsBeingDrawn: false,\r\n  }\r\n\r\n  // We unfortunately get the bounding box every time as x+y changes\r\n  // due to scrolling.\r\n  getBox(): Rectangle {\r\n    const el = this.mediaRef.current\r\n    if (!el) {\r\n      return { x: 0, y: 0, width: 0, height: 0 }\r\n    }\r\n    const { x, y, width, height } = el.getBoundingClientRect()\r\n    return { x, y, width, height }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: ReactCropProps) {\r\n    const { crop, onComplete } = this.props\r\n\r\n    // Useful for when programatically setting a new\r\n    // crop and wanting to show a preview.\r\n    if (onComplete && !prevProps.crop && crop) {\r\n      const { width, height } = this.getBox()\r\n      if (width && height) {\r\n        onComplete(convertToPixelCrop(crop, width, height), convertToPercentCrop(crop, width, height))\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.resizeObserver) {\r\n      this.resizeObserver.disconnect()\r\n    }\r\n  }\r\n\r\n  bindDocMove() {\r\n    if (this.docMoveBound) {\r\n      return\r\n    }\r\n\r\n    this.document.addEventListener('pointermove', this.onDocPointerMove, DOC_MOVE_OPTS)\r\n    this.document.addEventListener('pointerup', this.onDocPointerDone, DOC_MOVE_OPTS)\r\n    this.document.addEventListener('pointercancel', this.onDocPointerDone, DOC_MOVE_OPTS)\r\n\r\n    this.docMoveBound = true\r\n  }\r\n\r\n  unbindDocMove() {\r\n    if (!this.docMoveBound) {\r\n      return\r\n    }\r\n\r\n    this.document.removeEventListener('pointermove', this.onDocPointerMove, DOC_MOVE_OPTS)\r\n    this.document.removeEventListener('pointerup', this.onDocPointerDone, DOC_MOVE_OPTS)\r\n    this.document.removeEventListener('pointercancel', this.onDocPointerDone, DOC_MOVE_OPTS)\r\n\r\n    this.docMoveBound = false\r\n  }\r\n\r\n  onCropPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    const { crop, disabled } = this.props\r\n    const box = this.getBox()\r\n\r\n    if (!crop) {\r\n      return\r\n    }\r\n\r\n    const pixelCrop = convertToPixelCrop(crop, box.width, box.height)\r\n\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    if (e.cancelable) e.preventDefault() // Stop drag selection.\r\n\r\n    // Bind to doc to follow movements outside of element.\r\n    this.bindDocMove()\r\n\r\n    // Focus for detecting keypress.\r\n    ;(this.componentRef.current as HTMLDivElement).focus({ preventScroll: true })\r\n\r\n    const ord = (e.target as HTMLElement).dataset.ord as Ords\r\n    const isResize = Boolean(ord)\r\n    let startClientX = e.clientX\r\n    let startClientY = e.clientY\r\n    let startCropX = pixelCrop.x\r\n    let startCropY = pixelCrop.y\r\n\r\n    // Set the starting coords to the opposite corner.\r\n    if (ord) {\r\n      if (ord === 'ne' || ord == 'e') {\r\n        startCropX = pixelCrop.x\r\n        startCropY = pixelCrop.y + pixelCrop.height\r\n      } else if (ord === 'se' || ord === 's') {\r\n        startCropX = pixelCrop.x\r\n        startCropY = pixelCrop.y\r\n      } else if (ord === 'sw' || ord == 'w') {\r\n        startCropX = pixelCrop.x + pixelCrop.width\r\n        startCropY = pixelCrop.y\r\n      } else if (ord === 'nw' || ord == 'n') {\r\n        startCropX = pixelCrop.x + pixelCrop.width\r\n        startCropY = pixelCrop.y + pixelCrop.height\r\n      }\r\n\r\n      startClientX = startCropX + box.x\r\n      startClientY = startCropY + box.y\r\n    }\r\n\r\n    this.evData = {\r\n      startClientX,\r\n      startClientY,\r\n      startCropX,\r\n      startCropY,\r\n      clientX: e.clientX,\r\n      clientY: e.clientY,\r\n      isResize,\r\n      ord,\r\n    }\r\n\r\n    this.mouseDownOnCrop = true\r\n    this.setState({ cropIsActive: true })\r\n  }\r\n\r\n  onComponentPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\r\n    const { crop, disabled, locked, keepSelection, onChange } = this.props\r\n    const box = this.getBox()\r\n\r\n    if (disabled || locked || (keepSelection && crop)) {\r\n      return\r\n    }\r\n\r\n    if (e.cancelable) e.preventDefault() // Stop drag selection.\r\n\r\n    // Bind to doc to follow movements outside of element.\r\n    this.bindDocMove()\r\n\r\n    // Focus for detecting keypress.\r\n    ;(this.componentRef.current as HTMLDivElement).focus({ preventScroll: true })\r\n\r\n    const cropX = e.clientX - box.x\r\n    const cropY = e.clientY - box.y\r\n    const nextCrop: PixelCrop = {\r\n      unit: 'px',\r\n      x: cropX,\r\n      y: cropY,\r\n      width: 0,\r\n      height: 0,\r\n    }\r\n\r\n    this.evData = {\r\n      startClientX: e.clientX,\r\n      startClientY: e.clientY,\r\n      startCropX: cropX,\r\n      startCropY: cropY,\r\n      clientX: e.clientX,\r\n      clientY: e.clientY,\r\n      isResize: true,\r\n    }\r\n\r\n    this.mouseDownOnCrop = true\r\n\r\n    onChange(convertToPixelCrop(nextCrop, box.width, box.height), convertToPercentCrop(nextCrop, box.width, box.height))\r\n\r\n    this.setState({ cropIsActive: true, newCropIsBeingDrawn: true })\r\n  }\r\n\r\n  onDocPointerMove = (e: PointerEvent) => {\r\n    const { crop, disabled, onChange, onDragStart } = this.props\r\n    const box = this.getBox()\r\n\r\n    if (disabled || !crop || !this.mouseDownOnCrop) {\r\n      return\r\n    }\r\n\r\n    // Stop drag selection.\r\n    if (e.cancelable) e.preventDefault()\r\n\r\n    if (!this.dragStarted) {\r\n      this.dragStarted = true\r\n      if (onDragStart) {\r\n        onDragStart(e)\r\n      }\r\n    }\r\n\r\n    // Update pointer position.\r\n    const { evData } = this\r\n    evData.clientX = e.clientX\r\n    evData.clientY = e.clientY\r\n\r\n    let nextCrop\r\n\r\n    if (evData.isResize) {\r\n      nextCrop = this.resizeCrop()\r\n    } else {\r\n      nextCrop = this.dragCrop()\r\n    }\r\n\r\n    if (!areCropsEqual(crop, nextCrop)) {\r\n      onChange(\r\n        convertToPixelCrop(nextCrop, box.width, box.height),\r\n        convertToPercentCrop(nextCrop, box.width, box.height)\r\n      )\r\n    }\r\n  }\r\n\r\n  onComponentKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    const { crop, disabled, onChange, onComplete } = this.props\r\n    const box = this.getBox()\r\n\r\n    if (disabled) {\r\n      return\r\n    }\r\n\r\n    this.keysDown.add(e.key)\r\n    let nudged = false\r\n\r\n    if (!crop) {\r\n      return\r\n    }\r\n\r\n    const nextCrop = this.makePixelCrop()\r\n    const ctrlCmdPressed = navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey\r\n    const nudgeStep = ctrlCmdPressed\r\n      ? ReactCrop.nudgeStepLarge\r\n      : e.shiftKey\r\n      ? ReactCrop.nudgeStepMedium\r\n      : ReactCrop.nudgeStep\r\n\r\n    if (this.keysDown.has('ArrowLeft')) {\r\n      nextCrop.x -= nudgeStep\r\n      nudged = true\r\n    }\r\n\r\n    if (this.keysDown.has('ArrowRight')) {\r\n      nextCrop.x += nudgeStep\r\n      nudged = true\r\n    }\r\n\r\n    if (this.keysDown.has('ArrowUp')) {\r\n      nextCrop.y -= nudgeStep\r\n      nudged = true\r\n    }\r\n\r\n    if (this.keysDown.has('ArrowDown')) {\r\n      nextCrop.y += nudgeStep\r\n      nudged = true\r\n    }\r\n\r\n    if (nudged) {\r\n      if (e.cancelable) e.preventDefault() // Stop drag selection.\r\n\r\n      nextCrop.x = clamp(nextCrop.x, 0, box.width - nextCrop.width)\r\n      nextCrop.y = clamp(nextCrop.y, 0, box.height - nextCrop.height)\r\n\r\n      const pixelCrop = convertToPixelCrop(nextCrop, box.width, box.height)\r\n      const percentCrop = convertToPercentCrop(nextCrop, box.width, box.height)\r\n\r\n      onChange(pixelCrop, percentCrop)\r\n      if (onComplete) {\r\n        onComplete(pixelCrop, percentCrop)\r\n      }\r\n    }\r\n  }\r\n\r\n  onHandlerKeyDown = (\r\n    e: React.KeyboardEvent<HTMLDivElement>,\r\n    ord: 'nw' | 'n' | 'ne' | 'e' | 'se' | 's' | 'sw' | 'w'\r\n  ) => {\r\n    const {\r\n      aspect = 0,\r\n      crop,\r\n      disabled,\r\n      minWidth = 0,\r\n      minHeight = 0,\r\n      maxWidth,\r\n      maxHeight,\r\n      onChange,\r\n      onComplete,\r\n    } = this.props\r\n    const box = this.getBox()\r\n\r\n    if (disabled || !crop) {\r\n      return\r\n    }\r\n\r\n    // Keep the event from bubbling up to the container\r\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown' || e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n    } else {\r\n      return\r\n    }\r\n\r\n    const tmpCrop = convertToPixelCrop(crop, box.width, box.height)\r\n    const ctrlCmdPressed = navigator.platform.match('Mac') ? e.metaKey : e.ctrlKey\r\n    const offset = ctrlCmdPressed\r\n      ? ReactCrop.nudgeStepLarge\r\n      : e.shiftKey\r\n      ? ReactCrop.nudgeStepMedium\r\n      : ReactCrop.nudgeStep\r\n\r\n    if (e.key === 'ArrowLeft') {\r\n      if (ord === 'nw') {\r\n        tmpCrop.x -= offset\r\n        tmpCrop.y -= offset\r\n        tmpCrop.width += offset\r\n        tmpCrop.height += offset\r\n      } else if (ord === 'w') {\r\n        tmpCrop.x -= offset\r\n        tmpCrop.width += offset\r\n      } else if (ord === 'sw') {\r\n        tmpCrop.x -= offset\r\n        tmpCrop.width += offset\r\n        tmpCrop.height += offset\r\n      } else if (ord === 'ne') {\r\n        tmpCrop.y += offset\r\n        tmpCrop.width -= offset\r\n        tmpCrop.height -= offset\r\n      } else if (ord === 'e') {\r\n        tmpCrop.width -= offset\r\n      } else if (ord === 'se') {\r\n        tmpCrop.width -= offset\r\n        tmpCrop.height -= offset\r\n      }\r\n    } else if (e.key === 'ArrowRight') {\r\n      if (ord === 'nw') {\r\n        tmpCrop.x += offset\r\n        tmpCrop.y += offset\r\n        tmpCrop.width -= offset\r\n        tmpCrop.height -= offset\r\n      } else if (ord === 'w') {\r\n        // Niche: Will move right if minWidth hit.\r\n        tmpCrop.x += offset\r\n        tmpCrop.width -= offset\r\n      } else if (ord === 'sw') {\r\n        tmpCrop.x += offset\r\n        tmpCrop.width -= offset\r\n        tmpCrop.height -= offset\r\n      } else if (ord === 'ne') {\r\n        tmpCrop.y -= offset\r\n        tmpCrop.width += offset\r\n        tmpCrop.height += offset\r\n      } else if (ord === 'e') {\r\n        tmpCrop.width += offset\r\n      } else if (ord === 'se') {\r\n        tmpCrop.width += offset\r\n        tmpCrop.height += offset\r\n      }\r\n    }\r\n\r\n    if (e.key === 'ArrowUp') {\r\n      if (ord === 'nw') {\r\n        tmpCrop.x -= offset\r\n        tmpCrop.y -= offset\r\n        tmpCrop.width += offset\r\n        tmpCrop.height += offset\r\n      } else if (ord === 'n') {\r\n        tmpCrop.y -= offset\r\n        tmpCrop.height += offset\r\n      } else if (ord === 'ne') {\r\n        tmpCrop.y -= offset\r\n        tmpCrop.width += offset\r\n        tmpCrop.height += offset\r\n      } else if (ord === 'sw') {\r\n        tmpCrop.x += offset\r\n        tmpCrop.width -= offset\r\n        tmpCrop.height -= offset\r\n      } else if (ord === 's') {\r\n        tmpCrop.height -= offset\r\n      } else if (ord === 'se') {\r\n        tmpCrop.width -= offset\r\n        tmpCrop.height -= offset\r\n      }\r\n    } else if (e.key === 'ArrowDown') {\r\n      if (ord === 'nw') {\r\n        tmpCrop.x += offset\r\n        tmpCrop.y += offset\r\n        tmpCrop.width -= offset\r\n        tmpCrop.height -= offset\r\n      } else if (ord === 'n') {\r\n        // Niche: Will move down if minHeight hit.\r\n        tmpCrop.y += offset\r\n        tmpCrop.height -= offset\r\n      } else if (ord === 'ne') {\r\n        tmpCrop.y += offset\r\n        tmpCrop.width -= offset\r\n        tmpCrop.height -= offset\r\n      } else if (ord === 'sw') {\r\n        tmpCrop.x -= offset\r\n        tmpCrop.width += offset\r\n        tmpCrop.height += offset\r\n      } else if (ord === 's') {\r\n        tmpCrop.height += offset\r\n      } else if (ord === 'se') {\r\n        tmpCrop.width += offset\r\n        tmpCrop.height += offset\r\n      }\r\n    }\r\n\r\n    const containedCrop = containCrop(\r\n      tmpCrop,\r\n      aspect,\r\n      ord,\r\n      box.width,\r\n      box.height,\r\n      minWidth,\r\n      minHeight,\r\n      maxWidth,\r\n      maxHeight\r\n    )\r\n\r\n    if (!areCropsEqual(crop, containedCrop)) {\r\n      const percentCrop = convertToPercentCrop(containedCrop, box.width, box.height)\r\n      onChange(containedCrop, percentCrop)\r\n\r\n      if (onComplete) {\r\n        onComplete(containedCrop, percentCrop)\r\n      }\r\n    }\r\n  }\r\n\r\n  onComponentKeyUp = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    this.keysDown.delete(e.key)\r\n  }\r\n\r\n  onDocPointerDone = (e: PointerEvent) => {\r\n    const { crop, disabled, onComplete, onDragEnd } = this.props\r\n    const box = this.getBox()\r\n\r\n    this.unbindDocMove()\r\n\r\n    if (disabled || !crop) {\r\n      return\r\n    }\r\n\r\n    if (this.mouseDownOnCrop) {\r\n      this.mouseDownOnCrop = false\r\n      this.dragStarted = false\r\n\r\n      onDragEnd && onDragEnd(e)\r\n      onComplete &&\r\n        onComplete(convertToPixelCrop(crop, box.width, box.height), convertToPercentCrop(crop, box.width, box.height))\r\n\r\n      this.setState({ cropIsActive: false, newCropIsBeingDrawn: false })\r\n    }\r\n  }\r\n\r\n  getCropStyle() {\r\n    const { crop } = this.props\r\n\r\n    if (!crop) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      top: `${crop.y}${crop.unit}`,\r\n      left: `${crop.x}${crop.unit}`,\r\n      width: `${crop.width}${crop.unit}`,\r\n      height: `${crop.height}${crop.unit}`,\r\n    }\r\n  }\r\n\r\n  dragCrop() {\r\n    const { evData } = this\r\n    const box = this.getBox()\r\n    const nextCrop = this.makePixelCrop()\r\n    const xDiff = evData.clientX - evData.startClientX\r\n    const yDiff = evData.clientY - evData.startClientY\r\n\r\n    nextCrop.x = clamp(evData.startCropX + xDiff, 0, box.width - nextCrop.width)\r\n    nextCrop.y = clamp(evData.startCropY + yDiff, 0, box.height - nextCrop.height)\r\n\r\n    return nextCrop\r\n  }\r\n\r\n  getPointRegion(box: Rectangle): XYOrds {\r\n    const { evData } = this\r\n    const relativeX = evData.clientX - box.x\r\n    const relativeY = evData.clientY - box.y\r\n    const topHalf = relativeY < evData.startCropY\r\n    const leftHalf = relativeX < evData.startCropX\r\n\r\n    if (leftHalf) {\r\n      return topHalf ? 'nw' : 'sw'\r\n    } else {\r\n      return topHalf ? 'ne' : 'se'\r\n    }\r\n  }\r\n\r\n  resizeCrop() {\r\n    const { evData } = this\r\n    const box = this.getBox()\r\n    const { aspect = 0, minWidth = 0, minHeight = 0, maxWidth, maxHeight } = this.props\r\n    const area = this.getPointRegion(box)\r\n    const nextCrop = this.makePixelCrop()\r\n    const resolvedOrd: Ords = evData.ord ? evData.ord : area\r\n    const xDiff = evData.clientX - evData.startClientX\r\n    const yDiff = evData.clientY - evData.startClientY\r\n\r\n    const tmpCrop: PixelCrop = {\r\n      unit: 'px',\r\n      x: 0,\r\n      y: 0,\r\n      width: 0,\r\n      height: 0,\r\n    }\r\n\r\n    if (area === 'ne') {\r\n      tmpCrop.x = evData.startCropX\r\n      tmpCrop.width = xDiff\r\n\r\n      if (aspect) {\r\n        tmpCrop.height = tmpCrop.width / aspect\r\n        tmpCrop.y = evData.startCropY - tmpCrop.height\r\n      } else {\r\n        tmpCrop.height = Math.abs(yDiff)\r\n        tmpCrop.y = evData.startCropY - tmpCrop.height\r\n      }\r\n    } else if (area === 'se') {\r\n      tmpCrop.x = evData.startCropX\r\n      tmpCrop.y = evData.startCropY\r\n      tmpCrop.width = xDiff\r\n\r\n      if (aspect) {\r\n        tmpCrop.height = tmpCrop.width / aspect\r\n      } else {\r\n        tmpCrop.height = yDiff\r\n      }\r\n    } else if (area === 'sw') {\r\n      tmpCrop.x = evData.startCropX + xDiff\r\n      tmpCrop.y = evData.startCropY\r\n      tmpCrop.width = Math.abs(xDiff)\r\n\r\n      if (aspect) {\r\n        tmpCrop.height = tmpCrop.width / aspect\r\n      } else {\r\n        tmpCrop.height = yDiff\r\n      }\r\n    } else if (area === 'nw') {\r\n      tmpCrop.x = evData.startCropX + xDiff\r\n      tmpCrop.width = Math.abs(xDiff)\r\n\r\n      if (aspect) {\r\n        tmpCrop.height = tmpCrop.width / aspect\r\n        tmpCrop.y = evData.startCropY - tmpCrop.height\r\n      } else {\r\n        tmpCrop.height = Math.abs(yDiff)\r\n        tmpCrop.y = evData.startCropY + yDiff\r\n      }\r\n    }\r\n\r\n    const containedCrop = containCrop(\r\n      tmpCrop,\r\n      aspect,\r\n      area,\r\n      box.width,\r\n      box.height,\r\n      minWidth,\r\n      minHeight,\r\n      maxWidth,\r\n      maxHeight\r\n    )\r\n\r\n    // Apply x/y/width/height changes depending on ordinate\r\n    // (fixed aspect always applies both).\r\n    if (aspect || ReactCrop.xyOrds.indexOf(resolvedOrd) > -1) {\r\n      nextCrop.x = containedCrop.x\r\n      nextCrop.y = containedCrop.y\r\n      nextCrop.width = containedCrop.width\r\n      nextCrop.height = containedCrop.height\r\n    } else if (ReactCrop.xOrds.indexOf(resolvedOrd) > -1) {\r\n      nextCrop.x = containedCrop.x\r\n      nextCrop.width = containedCrop.width\r\n    } else if (ReactCrop.yOrds.indexOf(resolvedOrd) > -1) {\r\n      nextCrop.y = containedCrop.y\r\n      nextCrop.height = containedCrop.height\r\n    }\r\n\r\n    return nextCrop\r\n  }\r\n\r\n  createCropSelection() {\r\n    const {\r\n      ariaLabels = ReactCrop.defaultProps.ariaLabels,\r\n      disabled,\r\n      locked,\r\n      renderSelectionAddon,\r\n      ruleOfThirds,\r\n      crop,\r\n    } = this.props\r\n    const style = this.getCropStyle()\r\n\r\n    if (!crop) {\r\n      return undefined\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={style}\r\n        className=\"ReactCrop__crop-selection\"\r\n        onPointerDown={this.onCropPointerDown}\r\n        aria-label={ariaLabels.cropArea}\r\n        tabIndex={0}\r\n        onKeyDown={this.onComponentKeyDown}\r\n        onKeyUp={this.onComponentKeyUp}\r\n      >\r\n        {!disabled && !locked && (\r\n          <div className=\"ReactCrop__drag-elements\">\r\n            <div className=\"ReactCrop__drag-bar ord-n\" data-ord=\"n\" />\r\n            <div className=\"ReactCrop__drag-bar ord-e\" data-ord=\"e\" />\r\n            <div className=\"ReactCrop__drag-bar ord-s\" data-ord=\"s\" />\r\n            <div className=\"ReactCrop__drag-bar ord-w\" data-ord=\"w\" />\r\n\r\n            <div\r\n              className=\"ReactCrop__drag-handle ord-nw\"\r\n              data-ord=\"nw\"\r\n              tabIndex={0}\r\n              aria-label={ariaLabels.nwDragHandle}\r\n              onKeyDown={e => this.onHandlerKeyDown(e, 'nw')}\r\n            />\r\n            <div\r\n              className=\"ReactCrop__drag-handle ord-n\"\r\n              data-ord=\"n\"\r\n              tabIndex={0}\r\n              aria-label={ariaLabels.nDragHandle}\r\n              onKeyDown={e => this.onHandlerKeyDown(e, 'n')}\r\n            />\r\n            <div\r\n              className=\"ReactCrop__drag-handle ord-ne\"\r\n              data-ord=\"ne\"\r\n              tabIndex={0}\r\n              aria-label={ariaLabels.neDragHandle}\r\n              onKeyDown={e => this.onHandlerKeyDown(e, 'ne')}\r\n            />\r\n            <div\r\n              className=\"ReactCrop__drag-handle ord-e\"\r\n              data-ord=\"e\"\r\n              tabIndex={0}\r\n              aria-label={ariaLabels.eDragHandle}\r\n              onKeyDown={e => this.onHandlerKeyDown(e, 'e')}\r\n            />\r\n            <div\r\n              className=\"ReactCrop__drag-handle ord-se\"\r\n              data-ord=\"se\"\r\n              tabIndex={0}\r\n              aria-label={ariaLabels.seDragHandle}\r\n              onKeyDown={e => this.onHandlerKeyDown(e, 'se')}\r\n            />\r\n            <div\r\n              className=\"ReactCrop__drag-handle ord-s\"\r\n              data-ord=\"s\"\r\n              tabIndex={0}\r\n              aria-label={ariaLabels.sDragHandle}\r\n              onKeyDown={e => this.onHandlerKeyDown(e, 's')}\r\n            />\r\n            <div\r\n              className=\"ReactCrop__drag-handle ord-sw\"\r\n              data-ord=\"sw\"\r\n              tabIndex={0}\r\n              aria-label={ariaLabels.swDragHandle}\r\n              onKeyDown={e => this.onHandlerKeyDown(e, 'sw')}\r\n            />\r\n            <div\r\n              className=\"ReactCrop__drag-handle ord-w\"\r\n              data-ord=\"w\"\r\n              tabIndex={0}\r\n              aria-label={ariaLabels.wDragHandle}\r\n              onKeyDown={e => this.onHandlerKeyDown(e, 'w')}\r\n            />\r\n          </div>\r\n        )}\r\n        {renderSelectionAddon && (\r\n          <div className=\"ReactCrop__selection-addon\" onMouseDown={e => e.stopPropagation()}>\r\n            {renderSelectionAddon(this.state)}\r\n          </div>\r\n        )}\r\n        {ruleOfThirds && (\r\n          <>\r\n            <div className=\"ReactCrop__rule-of-thirds-hz\" />\r\n            <div className=\"ReactCrop__rule-of-thirds-vt\" />\r\n          </>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  makePixelCrop() {\r\n    const crop = { ...defaultCrop, ...(this.props.crop || {}) }\r\n    const box = this.getBox()\r\n    return convertToPixelCrop(crop, box.width, box.height)\r\n  }\r\n\r\n  render() {\r\n    const { aspect, children, circularCrop, className, crop, disabled, locked, style, ruleOfThirds } = this.props\r\n    const { cropIsActive, newCropIsBeingDrawn } = this.state\r\n    const cropSelection = crop ? this.createCropSelection() : null\r\n\r\n    const componentClasses = clsx('ReactCrop', className, {\r\n      'ReactCrop--active': cropIsActive,\r\n      'ReactCrop--disabled': disabled,\r\n      'ReactCrop--locked': locked,\r\n      'ReactCrop--new-crop': newCropIsBeingDrawn,\r\n      'ReactCrop--fixed-aspect': crop && aspect,\r\n      'ReactCrop--circular-crop': crop && circularCrop,\r\n      'ReactCrop--rule-of-thirds': crop && ruleOfThirds,\r\n      'ReactCrop--invisible-crop': !this.dragStarted && crop && !crop.width && !crop.height,\r\n    })\r\n\r\n    return (\r\n      <div ref={this.componentRef} className={componentClasses} style={style}>\r\n        <div ref={this.mediaRef} className=\"ReactCrop__child-wrapper\" onPointerDown={this.onComponentPointerDown}>\r\n          {children}\r\n        </div>\r\n        {cropSelection}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport { ReactCrop as default, ReactCrop as Component }"],"mappings":"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"},"metadata":{},"sourceType":"module"}