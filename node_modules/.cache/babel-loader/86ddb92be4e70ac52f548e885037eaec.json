{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\cameraProject_frontend-main\\\\src\\\\components\\\\UploadForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadForm = () => {\n  _s();\n\n  const [label, setLabel] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [floor, setFloor] = useState(\"\");\n  const [section, setSection] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [videoFilePath, setVideoFilePath] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n  const types = [\"video/avi\", \"video/mp4\", \"image/png\"];\n\n  const changeHandler = e => {\n    let selected = e.target.files[0];\n    console.log(selected);\n    setShowForm(!showForm);\n\n    if (selected && types.includes(selected.type)) {\n      setVideoFilePath(URL.createObjectURL(e.target.files[0]));\n      setFile(selected);\n      setError(\"\");\n    } else {\n      setFile(null);\n      setError(\"Please select a video file (.mp4 or .avi)\");\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file, file.name);\n    const requestOptions = {\n      method: \"POST\",\n      body: formData\n    };\n    fetch(\"http://127.0.0.1:8000/upload\", requestOptions).then(response => response.json()).then(function (response) {\n      console.log(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rowC\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          url: videoFilePath,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"label\",\n            onChange: () => {\n              if (typeof document.getElementsByName(\"label\")[0] != \"undefined\" && document.getElementsByName(\"label\")[0].value >= 1) {\n                setLabel(this.value);\n                setError(\"\");\n              } else {\n                setLabel(null);\n                setError(\"Please select a video file (.mp4 or .avi)\");\n              }\n            },\n            value: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            onChange: () => {\n              if (typeof document.getElementsByName(\"description\")[0] != \"undefined\" && document.getElementsByName(\"description\")[0].value >= 1) {\n                setDescription(this.value);\n                setError(\"\");\n              } else {\n                setDescription(null);\n                setError(\"Please select a video file (.mp4 or .avi)\");\n              }\n            },\n            value: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Floor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"floor\",\n            onChange: () => {\n              if (typeof document.getElementsByName(\"floor\")[0] != \"undefined\" && document.getElementsByName(\"floor\")[0].value >= 1) {\n                setFloor(this.value);\n                setError(\"\");\n              } else {\n                setFloor(null);\n                setError(\"Please select a video file (.mp4 or .avi)\");\n              }\n            },\n            value: floor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"section\",\n            onChange: () => {\n              if (typeof document.getElementsByName(\"section\")[0] != \"undefined\" && document.getElementsByName(\"section\")[0].value >= 1) {\n                setSection(this.value);\n                setError(\"\");\n              } else {\n                setSection(null);\n                setError(\"Please select a video file (.mp4 or .avi)\");\n              }\n            },\n            value: section\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \" Submit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadForm, \"ZUfWDQfHHXxRlDhRB+62BczbDfs=\");\n\n_c = UploadForm;\nexport default UploadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","ReactPlayer","UploadForm","label","setLabel","description","setDescription","floor","setFloor","section","setSection","file","setFile","error","setError","videoFilePath","setVideoFilePath","showForm","setShowForm","types","changeHandler","e","selected","target","files","console","log","includes","type","URL","createObjectURL","handleSubmit","preventDefault","formData","FormData","append","name","requestOptions","method","body","fetch","then","response","json","document","getElementsByName","value"],"sources":["C:/Users/user/Documents/cameraProject_frontend-main/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactPlayer from \"react-player\";\n\nconst UploadForm = () => {\n  const [label, setLabel] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [floor, setFloor] = useState(\"\");\n  const [section, setSection] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [videoFilePath, setVideoFilePath] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n  const types = [\"video/avi\", \"video/mp4\", \"image/png\"];\n\n  const changeHandler = (e) => {\n    let selected = e.target.files[0];\n    console.log(selected);\n    setShowForm(!showForm);\n    if (selected && types.includes(selected.type)) {\n      setVideoFilePath(URL.createObjectURL(e.target.files[0]));\n      setFile(selected);\n      setError(\"\");\n    } else {\n      setFile(null);\n      setError(\"Please select a video file (.mp4 or .avi)\");\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file, file.name);\n\n    const requestOptions = {\n      method: \"POST\",\n      body: formData,\n    };\n\n    fetch(\"http://127.0.0.1:8000/upload\", requestOptions)\n      .then((response) => response.json())\n      .then(function (response) {\n        console.log(response);\n      });\n  };\n\n  return (\n    <form>\n      <input type=\"file\" onChange={changeHandler} />\n      <div className=\"output\">\n        {error && <div className=\"error\">{error}</div>}\n        {file && <div>{file.name}</div>}\n      </div>\n\n      {showForm && (\n        <div className=\"rowC\">\n          <div>\n            <ReactPlayer url={videoFilePath} controls={true} />\n          </div>\n          <div>\n            <div>\n              <label>label</label>\n              <input\n                type=\"text\"\n                name=\"label\"\n                onChange={() => {\n                  if (\n                    typeof document.getElementsByName(\"label\")[0] !=\n                      \"undefined\" &&\n                    document.getElementsByName(\"label\")[0].value >= 1\n                  ) {\n                    setLabel(this.value);\n                    setError(\"\");\n                  } else {\n                    setLabel(null);\n                    setError(\"Please select a video file (.mp4 or .avi)\");\n                  }\n                }}\n                value={label}\n              />\n            </div>\n            <div>\n              <label>Description</label>\n              <input\n                type=\"text\"\n                name=\"description\"\n                onChange={() => {\n                    if (\n                      typeof document.getElementsByName(\"description\")[0] !=\n                        \"undefined\" &&\n                      document.getElementsByName(\"description\")[0].value >= 1\n                    ) {\n                      setDescription(this.value);\n                      setError(\"\");\n                    } else {\n                      setDescription(null);\n                      setError(\"Please select a video file (.mp4 or .avi)\");\n                    }\n                  }}\n                value={description}\n              />\n            </div>\n            <div>\n              <label>Floor</label>\n              <input\n                type=\"text\"\n                name=\"floor\"\n                onChange={() => {\n                    if (\n                      typeof document.getElementsByName(\"floor\")[0] !=\n                        \"undefined\" &&\n                      document.getElementsByName(\"floor\")[0].value >= 1\n                    ) {\n                      setFloor(this.value);\n                      setError(\"\");\n                    } else {\n                      setFloor(null);\n                      setError(\"Please select a video file (.mp4 or .avi)\");\n                    }}}\n                value={floor}\n              />\n            </div>\n            <div>\n              <label>Section</label>\n              <input\n                type=\"text\"\n                name=\"section\"\n                onChange={() => {\n                    if (\n                      typeof document.getElementsByName(\"section\")[0] !=\n                        \"undefined\" &&\n                      document.getElementsByName(\"section\")[0].value >= 1\n                    ) {\n                      setSection(this.value);\n                      setError(\"\");\n                    } else {\n                      setSection(null);\n                      setError(\"Please select a video file (.mp4 or .avi)\");\n                    }\n                }}\n                value={section}\n              />\n            </div>\n            <div>\n              <button onClick={handleSubmit}> Submit </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default UploadForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}