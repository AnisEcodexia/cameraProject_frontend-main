{"ast":null,"code":"/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, function () {\n  'use strict';\n\n  function fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  }\n\n  const requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        return callback();\n      };\n    }\n\n    return window.requestAnimationFrame;\n  }();\n\n  function throttled(fn, thisArg, updateFn) {\n    const updateArgs = updateFn || (args => Array.prototype.slice.call(args));\n\n    let ticking = false;\n    let args = [];\n    return function () {\n      for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n        rest[_key] = arguments[_key];\n      }\n\n      args = updateArgs(rest);\n\n      if (!ticking) {\n        ticking = true;\n        requestAnimFrame.call(window, () => {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function debounce(fn, delay) {\n    let timeout;\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      if (delay) {\n        clearTimeout(timeout);\n        timeout = setTimeout(fn, delay, args);\n      } else {\n        fn.apply(this, args);\n      }\n\n      return delay;\n    };\n  }\n\n  const _toLeftRightCenter = align => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n  const _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n  const _textX = (align, left, right, rtl) => {\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n  };\n\n  class Animator {\n    constructor() {\n      this._request = null;\n      this._charts = new Map();\n      this._running = false;\n      this._lastDate = undefined;\n    }\n\n    _notify(chart, anims, date, type) {\n      const callbacks = anims.listeners[type];\n      const numSteps = anims.duration;\n      callbacks.forEach(fn => fn({\n        chart,\n        initial: anims.initial,\n        numSteps,\n        currentStep: Math.min(date - anims.start, numSteps)\n      }));\n    }\n\n    _refresh() {\n      if (this._request) {\n        return;\n      }\n\n      this._running = true;\n      this._request = requestAnimFrame.call(window, () => {\n        this._update();\n\n        this._request = null;\n\n        if (this._running) {\n          this._refresh();\n        }\n      });\n    }\n\n    _update() {\n      let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      let remaining = 0;\n\n      this._charts.forEach((anims, chart) => {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        const items = anims.items;\n        let i = items.length - 1;\n        let draw = false;\n        let item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          this._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          this._notify(chart, anims, date, 'complete');\n\n          anims.initial = false;\n        }\n\n        remaining += items.length;\n      });\n\n      this._lastDate = date;\n\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n\n    _getAnims(chart) {\n      const charts = this._charts;\n      let anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n\n    listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n\n    add(chart, items) {\n      if (!items || !items.length) {\n        return;\n      }\n\n      this._getAnims(chart).items.push(...items);\n    }\n\n    has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n\n    start(chart) {\n      const anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n      this._refresh();\n    }\n\n    running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      const anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n\n    stop(chart) {\n      const anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n\n    remove(chart) {\n      return this._charts.delete(chart);\n    }\n\n  }\n\n  var animator = new Animator();\n  /*!\n   * @kurkle/color v0.1.9\n   * https://github.com/kurkle/color#readme\n   * (c) 2020 Jukka Kurkela\n   * Released under the MIT License\n   */\n\n  const map$1 = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15,\n    a: 10,\n    b: 11,\n    c: 12,\n    d: 13,\n    e: 14,\n    f: 15\n  };\n  const hex = '0123456789ABCDEF';\n\n  const h1 = b => hex[b & 0xF];\n\n  const h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\n\n  const eq = b => (b & 0xF0) >> 4 === (b & 0xF);\n\n  function isShort(v) {\n    return eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n  }\n\n  function hexParse(str) {\n    var len = str.length;\n    var ret;\n\n    if (str[0] === '#') {\n      if (len === 4 || len === 5) {\n        ret = {\n          r: 255 & map$1[str[1]] * 17,\n          g: 255 & map$1[str[2]] * 17,\n          b: 255 & map$1[str[3]] * 17,\n          a: len === 5 ? map$1[str[4]] * 17 : 255\n        };\n      } else if (len === 7 || len === 9) {\n        ret = {\n          r: map$1[str[1]] << 4 | map$1[str[2]],\n          g: map$1[str[3]] << 4 | map$1[str[4]],\n          b: map$1[str[5]] << 4 | map$1[str[6]],\n          a: len === 9 ? map$1[str[7]] << 4 | map$1[str[8]] : 255\n        };\n      }\n    }\n\n    return ret;\n  }\n\n  function hexString(v) {\n    var f = isShort(v) ? h1 : h2;\n    return v ? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '') : v;\n  }\n\n  function round(v) {\n    return v + 0.5 | 0;\n  }\n\n  const lim = (v, l, h) => Math.max(Math.min(v, h), l);\n\n  function p2b(v) {\n    return lim(round(v * 2.55), 0, 255);\n  }\n\n  function n2b(v) {\n    return lim(round(v * 255), 0, 255);\n  }\n\n  function b2n(v) {\n    return lim(round(v / 2.55) / 100, 0, 1);\n  }\n\n  function n2p(v) {\n    return lim(round(v * 100), 0, 100);\n  }\n\n  const RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n\n  function rgbParse(str) {\n    const m = RGB_RE.exec(str);\n    let a = 255;\n    let r, g, b;\n\n    if (!m) {\n      return;\n    }\n\n    if (m[7] !== r) {\n      const v = +m[7];\n      a = 255 & (m[8] ? p2b(v) : v * 255);\n    }\n\n    r = +m[1];\n    g = +m[3];\n    b = +m[5];\n    r = 255 & (m[2] ? p2b(r) : r);\n    g = 255 & (m[4] ? p2b(g) : g);\n    b = 255 & (m[6] ? p2b(b) : b);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  }\n\n  function rgbString(v) {\n    return v && (v.a < 255 ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})` : `rgb(${v.r}, ${v.g}, ${v.b})`);\n  }\n\n  const HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n\n  function hsl2rgbn(h, s, l) {\n    const a = s * Math.min(l, 1 - l);\n\n    const f = function (n) {\n      let k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;\n      return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    };\n\n    return [f(0), f(8), f(4)];\n  }\n\n  function hsv2rgbn(h, s, v) {\n    const f = function (n) {\n      let k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 60) % 6;\n      return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n    };\n\n    return [f(5), f(3), f(1)];\n  }\n\n  function hwb2rgbn(h, w, b) {\n    const rgb = hsl2rgbn(h, 1, 0.5);\n    let i;\n\n    if (w + b > 1) {\n      i = 1 / (w + b);\n      w *= i;\n      b *= i;\n    }\n\n    for (i = 0; i < 3; i++) {\n      rgb[i] *= 1 - w - b;\n      rgb[i] += w;\n    }\n\n    return rgb;\n  }\n\n  function rgb2hsl(v) {\n    const range = 255;\n    const r = v.r / range;\n    const g = v.g / range;\n    const b = v.b / range;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const l = (max + min) / 2;\n    let h, s, d;\n\n    if (max !== min) {\n      d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n      h = h * 60 + 0.5;\n    }\n\n    return [h | 0, s || 0, l];\n  }\n\n  function calln(f, a, b, c) {\n    return (Array.isArray(a) ? f(a[0], a[1], a[2]) : f(a, b, c)).map(n2b);\n  }\n\n  function hsl2rgb(h, s, l) {\n    return calln(hsl2rgbn, h, s, l);\n  }\n\n  function hwb2rgb(h, w, b) {\n    return calln(hwb2rgbn, h, w, b);\n  }\n\n  function hsv2rgb(h, s, v) {\n    return calln(hsv2rgbn, h, s, v);\n  }\n\n  function hue(h) {\n    return (h % 360 + 360) % 360;\n  }\n\n  function hueParse(str) {\n    const m = HUE_RE.exec(str);\n    let a = 255;\n    let v;\n\n    if (!m) {\n      return;\n    }\n\n    if (m[5] !== v) {\n      a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n    }\n\n    const h = hue(+m[2]);\n    const p1 = +m[3] / 100;\n    const p2 = +m[4] / 100;\n\n    if (m[1] === 'hwb') {\n      v = hwb2rgb(h, p1, p2);\n    } else if (m[1] === 'hsv') {\n      v = hsv2rgb(h, p1, p2);\n    } else {\n      v = hsl2rgb(h, p1, p2);\n    }\n\n    return {\n      r: v[0],\n      g: v[1],\n      b: v[2],\n      a: a\n    };\n  }\n\n  function rotate(v, deg) {\n    var h = rgb2hsl(v);\n    h[0] = hue(h[0] + deg);\n    h = hsl2rgb(h);\n    v.r = h[0];\n    v.g = h[1];\n    v.b = h[2];\n  }\n\n  function hslString(v) {\n    if (!v) {\n      return;\n    }\n\n    const a = rgb2hsl(v);\n    const h = a[0];\n    const s = n2p(a[1]);\n    const l = n2p(a[2]);\n    return v.a < 255 ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})` : `hsl(${h}, ${s}%, ${l}%)`;\n  }\n\n  const map$1$1 = {\n    x: 'dark',\n    Z: 'light',\n    Y: 're',\n    X: 'blu',\n    W: 'gr',\n    V: 'medium',\n    U: 'slate',\n    A: 'ee',\n    T: 'ol',\n    S: 'or',\n    B: 'ra',\n    C: 'lateg',\n    D: 'ights',\n    R: 'in',\n    Q: 'turquois',\n    E: 'hi',\n    P: 'ro',\n    O: 'al',\n    N: 'le',\n    M: 'de',\n    L: 'yello',\n    F: 'en',\n    K: 'ch',\n    G: 'arks',\n    H: 'ea',\n    I: 'ightg',\n    J: 'wh'\n  };\n  const names = {\n    OiceXe: 'f0f8ff',\n    antiquewEte: 'faebd7',\n    aqua: 'ffff',\n    aquamarRe: '7fffd4',\n    azuY: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '0',\n    blanKedOmond: 'ffebcd',\n    Xe: 'ff',\n    XeviTet: '8a2be2',\n    bPwn: 'a52a2a',\n    burlywood: 'deb887',\n    caMtXe: '5f9ea0',\n    KartYuse: '7fff00',\n    KocTate: 'd2691e',\n    cSO: 'ff7f50',\n    cSnflowerXe: '6495ed',\n    cSnsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: 'ffff',\n    xXe: '8b',\n    xcyan: '8b8b',\n    xgTMnPd: 'b8860b',\n    xWay: 'a9a9a9',\n    xgYF: '6400',\n    xgYy: 'a9a9a9',\n    xkhaki: 'bdb76b',\n    xmagFta: '8b008b',\n    xTivegYF: '556b2f',\n    xSange: 'ff8c00',\n    xScEd: '9932cc',\n    xYd: '8b0000',\n    xsOmon: 'e9967a',\n    xsHgYF: '8fbc8f',\n    xUXe: '483d8b',\n    xUWay: '2f4f4f',\n    xUgYy: '2f4f4f',\n    xQe: 'ced1',\n    xviTet: '9400d3',\n    dAppRk: 'ff1493',\n    dApskyXe: 'bfff',\n    dimWay: '696969',\n    dimgYy: '696969',\n    dodgerXe: '1e90ff',\n    fiYbrick: 'b22222',\n    flSOwEte: 'fffaf0',\n    foYstWAn: '228b22',\n    fuKsia: 'ff00ff',\n    gaRsbSo: 'dcdcdc',\n    ghostwEte: 'f8f8ff',\n    gTd: 'ffd700',\n    gTMnPd: 'daa520',\n    Way: '808080',\n    gYF: '8000',\n    gYFLw: 'adff2f',\n    gYy: '808080',\n    honeyMw: 'f0fff0',\n    hotpRk: 'ff69b4',\n    RdianYd: 'cd5c5c',\n    Rdigo: '4b0082',\n    ivSy: 'fffff0',\n    khaki: 'f0e68c',\n    lavFMr: 'e6e6fa',\n    lavFMrXsh: 'fff0f5',\n    lawngYF: '7cfc00',\n    NmoncEffon: 'fffacd',\n    ZXe: 'add8e6',\n    ZcSO: 'f08080',\n    Zcyan: 'e0ffff',\n    ZgTMnPdLw: 'fafad2',\n    ZWay: 'd3d3d3',\n    ZgYF: '90ee90',\n    ZgYy: 'd3d3d3',\n    ZpRk: 'ffb6c1',\n    ZsOmon: 'ffa07a',\n    ZsHgYF: '20b2aa',\n    ZskyXe: '87cefa',\n    ZUWay: '778899',\n    ZUgYy: '778899',\n    ZstAlXe: 'b0c4de',\n    ZLw: 'ffffe0',\n    lime: 'ff00',\n    limegYF: '32cd32',\n    lRF: 'faf0e6',\n    magFta: 'ff00ff',\n    maPon: '800000',\n    VaquamarRe: '66cdaa',\n    VXe: 'cd',\n    VScEd: 'ba55d3',\n    VpurpN: '9370db',\n    VsHgYF: '3cb371',\n    VUXe: '7b68ee',\n    VsprRggYF: 'fa9a',\n    VQe: '48d1cc',\n    VviTetYd: 'c71585',\n    midnightXe: '191970',\n    mRtcYam: 'f5fffa',\n    mistyPse: 'ffe4e1',\n    moccasR: 'ffe4b5',\n    navajowEte: 'ffdead',\n    navy: '80',\n    Tdlace: 'fdf5e6',\n    Tive: '808000',\n    TivedBb: '6b8e23',\n    Sange: 'ffa500',\n    SangeYd: 'ff4500',\n    ScEd: 'da70d6',\n    pOegTMnPd: 'eee8aa',\n    pOegYF: '98fb98',\n    pOeQe: 'afeeee',\n    pOeviTetYd: 'db7093',\n    papayawEp: 'ffefd5',\n    pHKpuff: 'ffdab9',\n    peru: 'cd853f',\n    pRk: 'ffc0cb',\n    plum: 'dda0dd',\n    powMrXe: 'b0e0e6',\n    purpN: '800080',\n    YbeccapurpN: '663399',\n    Yd: 'ff0000',\n    Psybrown: 'bc8f8f',\n    PyOXe: '4169e1',\n    saddNbPwn: '8b4513',\n    sOmon: 'fa8072',\n    sandybPwn: 'f4a460',\n    sHgYF: '2e8b57',\n    sHshell: 'fff5ee',\n    siFna: 'a0522d',\n    silver: 'c0c0c0',\n    skyXe: '87ceeb',\n    UXe: '6a5acd',\n    UWay: '708090',\n    UgYy: '708090',\n    snow: 'fffafa',\n    sprRggYF: 'ff7f',\n    stAlXe: '4682b4',\n    tan: 'd2b48c',\n    teO: '8080',\n    tEstN: 'd8bfd8',\n    tomato: 'ff6347',\n    Qe: '40e0d0',\n    viTet: 'ee82ee',\n    JHt: 'f5deb3',\n    wEte: 'ffffff',\n    wEtesmoke: 'f5f5f5',\n    Lw: 'ffff00',\n    LwgYF: '9acd32'\n  };\n\n  function unpack() {\n    const unpacked = {};\n    const keys = Object.keys(names);\n    const tkeys = Object.keys(map$1$1);\n    let i, j, k, ok, nk;\n\n    for (i = 0; i < keys.length; i++) {\n      ok = nk = keys[i];\n\n      for (j = 0; j < tkeys.length; j++) {\n        k = tkeys[j];\n        nk = nk.replace(k, map$1$1[k]);\n      }\n\n      k = parseInt(names[ok], 16);\n      unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n    }\n\n    return unpacked;\n  }\n\n  let names$1;\n\n  function nameParse(str) {\n    if (!names$1) {\n      names$1 = unpack();\n      names$1.transparent = [0, 0, 0, 0];\n    }\n\n    const a = names$1[str.toLowerCase()];\n    return a && {\n      r: a[0],\n      g: a[1],\n      b: a[2],\n      a: a.length === 4 ? a[3] : 255\n    };\n  }\n\n  function modHSL(v, i, ratio) {\n    if (v) {\n      let tmp = rgb2hsl(v);\n      tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n      tmp = hsl2rgb(tmp);\n      v.r = tmp[0];\n      v.g = tmp[1];\n      v.b = tmp[2];\n    }\n  }\n\n  function clone$1(v, proto) {\n    return v ? Object.assign(proto || {}, v) : v;\n  }\n\n  function fromObject(input) {\n    var v = {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 255\n    };\n\n    if (Array.isArray(input)) {\n      if (input.length >= 3) {\n        v = {\n          r: input[0],\n          g: input[1],\n          b: input[2],\n          a: 255\n        };\n\n        if (input.length > 3) {\n          v.a = n2b(input[3]);\n        }\n      }\n    } else {\n      v = clone$1(input, {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 1\n      });\n      v.a = n2b(v.a);\n    }\n\n    return v;\n  }\n\n  function functionParse(str) {\n    if (str.charAt(0) === 'r') {\n      return rgbParse(str);\n    }\n\n    return hueParse(str);\n  }\n\n  class Color {\n    constructor(input) {\n      if (input instanceof Color) {\n        return input;\n      }\n\n      const type = typeof input;\n      let v;\n\n      if (type === 'object') {\n        v = fromObject(input);\n      } else if (type === 'string') {\n        v = hexParse(input) || nameParse(input) || functionParse(input);\n      }\n\n      this._rgb = v;\n      this._valid = !!v;\n    }\n\n    get valid() {\n      return this._valid;\n    }\n\n    get rgb() {\n      var v = clone$1(this._rgb);\n\n      if (v) {\n        v.a = b2n(v.a);\n      }\n\n      return v;\n    }\n\n    set rgb(obj) {\n      this._rgb = fromObject(obj);\n    }\n\n    rgbString() {\n      return this._valid ? rgbString(this._rgb) : this._rgb;\n    }\n\n    hexString() {\n      return this._valid ? hexString(this._rgb) : this._rgb;\n    }\n\n    hslString() {\n      return this._valid ? hslString(this._rgb) : this._rgb;\n    }\n\n    mix(color, weight) {\n      const me = this;\n\n      if (color) {\n        const c1 = me.rgb;\n        const c2 = color.rgb;\n        let w2;\n        const p = weight === w2 ? 0.5 : weight;\n        const w = 2 * p - 1;\n        const a = c1.a - c2.a;\n        const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        w2 = 1 - w1;\n        c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n        c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n        c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n        c1.a = p * c1.a + (1 - p) * c2.a;\n        me.rgb = c1;\n      }\n\n      return me;\n    }\n\n    clone() {\n      return new Color(this.rgb);\n    }\n\n    alpha(a) {\n      this._rgb.a = n2b(a);\n      return this;\n    }\n\n    clearer(ratio) {\n      const rgb = this._rgb;\n      rgb.a *= 1 - ratio;\n      return this;\n    }\n\n    greyscale() {\n      const rgb = this._rgb;\n      const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n      rgb.r = rgb.g = rgb.b = val;\n      return this;\n    }\n\n    opaquer(ratio) {\n      const rgb = this._rgb;\n      rgb.a *= 1 + ratio;\n      return this;\n    }\n\n    negate() {\n      const v = this._rgb;\n      v.r = 255 - v.r;\n      v.g = 255 - v.g;\n      v.b = 255 - v.b;\n      return this;\n    }\n\n    lighten(ratio) {\n      modHSL(this._rgb, 2, ratio);\n      return this;\n    }\n\n    darken(ratio) {\n      modHSL(this._rgb, 2, -ratio);\n      return this;\n    }\n\n    saturate(ratio) {\n      modHSL(this._rgb, 1, ratio);\n      return this;\n    }\n\n    desaturate(ratio) {\n      modHSL(this._rgb, 1, -ratio);\n      return this;\n    }\n\n    rotate(deg) {\n      rotate(this._rgb, deg);\n      return this;\n    }\n\n  }\n\n  function index_esm(input) {\n    return new Color(input);\n  }\n\n  const isPatternOrGradient = value => value instanceof CanvasGradient || value instanceof CanvasPattern;\n\n  function color(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value);\n  }\n\n  function getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n  }\n\n  function noop() {}\n\n  const uid = function () {\n    let id = 0;\n    return function () {\n      return id++;\n    };\n  }();\n\n  function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  }\n\n  function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n      return true;\n    }\n\n    const type = Object.prototype.toString.call(value);\n\n    if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n      return true;\n    }\n\n    return false;\n  }\n\n  function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  }\n\n  const isNumberFinite = value => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n\n  function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n  }\n\n  function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  }\n\n  const toPercentage = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : value / dimension;\n\n  const toDimension = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n\n  function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  }\n\n  function each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n\n    if (isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  }\n\n  function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function clone(source) {\n    if (isArray(source)) {\n      return source.map(clone);\n    }\n\n    if (isObject(source)) {\n      const target = Object.create(null);\n      const keys = Object.keys(source);\n      const klen = keys.length;\n      let k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  }\n\n  function isValidKey(key) {\n    return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n  }\n\n  function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n      return;\n    }\n\n    const tval = target[key];\n    const sval = source[key];\n\n    if (isObject(tval) && isObject(sval)) {\n      merge(tval, sval, options);\n    } else {\n      target[key] = clone(sval);\n    }\n  }\n\n  function merge(target, source, options) {\n    const sources = isArray(source) ? source : [source];\n    const ilen = sources.length;\n\n    if (!isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    const merger = options.merger || _merger;\n\n    for (let i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!isObject(source)) {\n        continue;\n      }\n\n      const keys = Object.keys(source);\n\n      for (let k = 0, klen = keys.length; k < klen; ++k) {\n        merger(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  }\n\n  function mergeIf(target, source) {\n    return merge(target, source, {\n      merger: _mergerIf\n    });\n  }\n\n  function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n      return;\n    }\n\n    const tval = target[key];\n    const sval = source[key];\n\n    if (isObject(tval) && isObject(sval)) {\n      mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n      target[key] = clone(sval);\n    }\n  }\n\n  function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n      console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n  }\n\n  const emptyString = '';\n  const dot = '.';\n\n  function indexOfDotOrLength(key, start) {\n    const idx = key.indexOf(dot, start);\n    return idx === -1 ? key.length : idx;\n  }\n\n  function resolveObjectKey(obj, key) {\n    if (key === emptyString) {\n      return obj;\n    }\n\n    let pos = 0;\n    let idx = indexOfDotOrLength(key, pos);\n\n    while (obj && idx > pos) {\n      obj = obj[key.substr(pos, idx - pos)];\n      pos = idx + 1;\n      idx = indexOfDotOrLength(key, pos);\n    }\n\n    return obj;\n  }\n\n  function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  const defined = value => typeof value !== 'undefined';\n\n  const isFunction = value => typeof value === 'function';\n\n  const setsEqual = (a, b) => {\n    if (a.size !== b.size) {\n      return false;\n    }\n\n    for (const item of a) {\n      if (!b.has(item)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n  }\n\n  const overrides = Object.create(null);\n  const descriptors = Object.create(null);\n\n  function getScope$1(node, key) {\n    if (!key) {\n      return node;\n    }\n\n    const keys = key.split('.');\n\n    for (let i = 0, n = keys.length; i < n; ++i) {\n      const k = keys[i];\n      node = node[k] || (node[k] = Object.create(null));\n    }\n\n    return node;\n  }\n\n  function set(root, scope, values) {\n    if (typeof scope === 'string') {\n      return merge(getScope$1(root, scope), values);\n    }\n\n    return merge(getScope$1(root, ''), scope);\n  }\n\n  class Defaults {\n    constructor(_descriptors) {\n      this.animation = undefined;\n      this.backgroundColor = 'rgba(0,0,0,0.1)';\n      this.borderColor = 'rgba(0,0,0,0.1)';\n      this.color = '#666';\n      this.datasets = {};\n\n      this.devicePixelRatio = context => context.chart.platform.getDevicePixelRatio();\n\n      this.elements = {};\n      this.events = ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'];\n      this.font = {\n        family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n        size: 12,\n        style: 'normal',\n        lineHeight: 1.2,\n        weight: null\n      };\n      this.hover = {};\n\n      this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n\n      this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n\n      this.hoverColor = (ctx, options) => getHoverColor(options.color);\n\n      this.indexAxis = 'x';\n      this.interaction = {\n        mode: 'nearest',\n        intersect: true\n      };\n      this.maintainAspectRatio = true;\n      this.onHover = null;\n      this.onClick = null;\n      this.parsing = true;\n      this.plugins = {};\n      this.responsive = true;\n      this.scale = undefined;\n      this.scales = {};\n      this.showLine = true;\n      this.drawActiveElementsOnTop = true;\n      this.describe(_descriptors);\n    }\n\n    set(scope, values) {\n      return set(this, scope, values);\n    }\n\n    get(scope) {\n      return getScope$1(this, scope);\n    }\n\n    describe(scope, values) {\n      return set(descriptors, scope, values);\n    }\n\n    override(scope, values) {\n      return set(overrides, scope, values);\n    }\n\n    route(scope, name, targetScope, targetName) {\n      const scopeObject = getScope$1(this, scope);\n      const targetScopeObject = getScope$1(this, targetScope);\n      const privateName = '_' + name;\n      Object.defineProperties(scopeObject, {\n        [privateName]: {\n          value: scopeObject[name],\n          writable: true\n        },\n        [name]: {\n          enumerable: true,\n\n          get() {\n            const local = this[privateName];\n            const target = targetScopeObject[targetName];\n\n            if (isObject(local)) {\n              return Object.assign({}, target, local);\n            }\n\n            return valueOrDefault(local, target);\n          },\n\n          set(value) {\n            this[privateName] = value;\n          }\n\n        }\n      });\n    }\n\n  }\n\n  var defaults = new Defaults({\n    _scriptable: name => !name.startsWith('on'),\n    _indexable: name => name !== 'events',\n    hover: {\n      _fallback: 'interaction'\n    },\n    interaction: {\n      _scriptable: false,\n      _indexable: false\n    }\n  });\n  const PI = Math.PI;\n  const TAU = 2 * PI;\n  const PITAU = TAU + PI;\n  const INFINITY = Number.POSITIVE_INFINITY;\n  const RAD_PER_DEG = PI / 180;\n  const HALF_PI = PI / 2;\n  const QUARTER_PI = PI / 4;\n  const TWO_THIRDS_PI = PI * 2 / 3;\n  const log10 = Math.log10;\n  const sign = Math.sign;\n\n  function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n  }\n\n  function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n\n    for (i = 1; i < sqrt; i++) {\n      if (value % i === 0) {\n        result.push(i);\n        result.push(value / i);\n      }\n    }\n\n    if (sqrt === (sqrt | 0)) {\n      result.push(sqrt);\n    }\n\n    result.sort((a, b) => a - b).pop();\n    return result;\n  }\n\n  function isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  }\n\n  function almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n  }\n\n  function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n\n    for (i = 0, ilen = array.length; i < ilen; i++) {\n      value = array[i][property];\n\n      if (!isNaN(value)) {\n        target.min = Math.min(target.min, value);\n        target.max = Math.max(target.max, value);\n      }\n    }\n  }\n\n  function toRadians(degrees) {\n    return degrees * (PI / 180);\n  }\n\n  function toDegrees(radians) {\n    return radians * (180 / PI);\n  }\n\n  function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n      return;\n    }\n\n    let e = 1;\n    let p = 0;\n\n    while (Math.round(x * e) / e !== x) {\n      e *= 10;\n      p++;\n    }\n\n    return p;\n  }\n\n  function getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * PI) {\n      angle += TAU;\n    }\n\n    return {\n      angle,\n      distance: radialDistanceFromCenter\n    };\n  }\n\n  function distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  }\n\n  function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n  }\n\n  function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n  }\n\n  function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n\n    const s = _normalizeAngle(start);\n\n    const e = _normalizeAngle(end);\n\n    const angleToStart = _normalizeAngle(s - a);\n\n    const angleToEnd = _normalizeAngle(e - a);\n\n    const startToAngle = _normalizeAngle(a - s);\n\n    const endToAngle = _normalizeAngle(a - e);\n\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n  }\n\n  function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  }\n\n  function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n  }\n\n  function _isBetween(value, start, end) {\n    let epsilon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1e-6;\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n  }\n\n  function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n\n  function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  }\n\n  function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n\n    for (i = 0; i < ilen; i++) {\n      thing = arrayOfThings[i];\n\n      if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n        longest = _measureText(ctx, data, gc, longest, thing);\n      } else if (isArray(thing)) {\n        for (j = 0, jlen = thing.length; j < jlen; j++) {\n          nestedThing = thing[j];\n\n          if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n            longest = _measureText(ctx, data, gc, longest, nestedThing);\n          }\n        }\n      }\n    }\n\n    ctx.restore();\n    const gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  }\n\n  function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n  }\n\n  function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n  }\n\n  function drawPoint(ctx, options, x, y) {\n    let type, xOffset, yOffset, size, cornerRadius;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(rad);\n        ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n        ctx.restore();\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.beginPath();\n\n    switch (style) {\n      default:\n        ctx.arc(x, y, radius, 0, TAU);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        rad += TWO_THIRDS_PI;\n        ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        rad += TWO_THIRDS_PI;\n        ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        ctx.closePath();\n        break;\n\n      case 'rectRounded':\n        cornerRadius = radius * 0.516;\n        size = radius - cornerRadius;\n        xOffset = Math.cos(rad + QUARTER_PI) * size;\n        yOffset = Math.sin(rad + QUARTER_PI) * size;\n        ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n        ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n        ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n        ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        if (!rotation) {\n          size = Math.SQRT1_2 * radius;\n          ctx.rect(x - size, y - size, 2 * size, 2 * size);\n          break;\n        }\n\n        rad += QUARTER_PI;\n\n      case 'rectRot':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        ctx.closePath();\n        break;\n\n      case 'crossRot':\n        rad += QUARTER_PI;\n\n      case 'cross':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        break;\n\n      case 'star':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        rad += QUARTER_PI;\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        break;\n\n      case 'line':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        break;\n\n      case 'dash':\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n        break;\n    }\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n  }\n\n  function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  }\n\n  function unclipArea(ctx) {\n    ctx.restore();\n  }\n\n  function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n      return ctx.lineTo(target.x, target.y);\n    }\n\n    if (mode === 'middle') {\n      const midpoint = (previous.x + target.x) / 2.0;\n      ctx.lineTo(midpoint, previous.y);\n      ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n      ctx.lineTo(previous.x, target.y);\n    } else {\n      ctx.lineTo(target.x, previous.y);\n    }\n\n    ctx.lineTo(target.x, target.y);\n  }\n\n  function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n      return ctx.lineTo(target.x, target.y);\n    }\n\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n  }\n\n  function renderText(ctx, text, x, y, font) {\n    let opts = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    const lines = isArray(text) ? text : [text];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n\n    for (i = 0; i < lines.length; ++i) {\n      line = lines[i];\n\n      if (stroke) {\n        if (opts.strokeColor) {\n          ctx.strokeStyle = opts.strokeColor;\n        }\n\n        if (!isNullOrUndef(opts.strokeWidth)) {\n          ctx.lineWidth = opts.strokeWidth;\n        }\n\n        ctx.strokeText(line, x, y, opts.maxWidth);\n      }\n\n      ctx.fillText(line, x, y, opts.maxWidth);\n      decorateText(ctx, x, y, line, opts);\n      y += font.lineHeight;\n    }\n\n    ctx.restore();\n  }\n\n  function setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n      ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n\n    if (!isNullOrUndef(opts.rotation)) {\n      ctx.rotate(opts.rotation);\n    }\n\n    if (opts.color) {\n      ctx.fillStyle = opts.color;\n    }\n\n    if (opts.textAlign) {\n      ctx.textAlign = opts.textAlign;\n    }\n\n    if (opts.textBaseline) {\n      ctx.textBaseline = opts.textBaseline;\n    }\n  }\n\n  function decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n      const metrics = ctx.measureText(line);\n      const left = x - metrics.actualBoundingBoxLeft;\n      const right = x + metrics.actualBoundingBoxRight;\n      const top = y - metrics.actualBoundingBoxAscent;\n      const bottom = y + metrics.actualBoundingBoxDescent;\n      const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.beginPath();\n      ctx.lineWidth = opts.decorationWidth || 2;\n      ctx.moveTo(left, yDecoration);\n      ctx.lineTo(right, yDecoration);\n      ctx.stroke();\n    }\n  }\n\n  function addRoundedRectPath(ctx, rect) {\n    const {\n      x,\n      y,\n      w,\n      h,\n      radius\n    } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n  }\n\n  function _lookup(table, value, cmp) {\n    cmp = cmp || (index => table[index] < value);\n\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n\n    while (hi - lo > 1) {\n      mid = lo + hi >> 1;\n\n      if (cmp(mid)) {\n        lo = mid;\n      } else {\n        hi = mid;\n      }\n    }\n\n    return {\n      lo,\n      hi\n    };\n  }\n\n  const _lookupByKey = (table, key, value) => _lookup(table, value, index => table[index][key] < value);\n\n  const _rlookupByKey = (table, key, value) => _lookup(table, value, index => table[index][key] >= value);\n\n  function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n\n    while (start < end && values[start] < min) {\n      start++;\n    }\n\n    while (end > start && values[end - 1] > max) {\n      end--;\n    }\n\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n  }\n\n  const arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(key => {\n      const method = '_onData' + _capitalize(key);\n\n      const base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n\n        value() {\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          const res = base.apply(this, args);\n\n          array._chartjs.listeners.forEach(object => {\n            if (typeof object[method] === 'function') {\n              object[method](...args);\n            }\n          });\n\n          return res;\n        }\n\n      });\n    });\n  }\n\n  function unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(key => {\n      delete array[key];\n    });\n    delete array._chartjs;\n  }\n\n  function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      set.add(items[i]);\n    }\n\n    if (set.size === ilen) {\n      return items;\n    }\n\n    return Array.from(set);\n  }\n\n  function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n  }\n\n  function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n      parent = parent.host;\n    }\n\n    return parent;\n  }\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n\n  const getComputedStyle = element => window.getComputedStyle(element, null);\n\n  function getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n  }\n\n  const positions = ['top', 'right', 'bottom', 'left'];\n\n  function getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n\n    for (let i = 0; i < 4; i++) {\n      const pos = positions[i];\n      result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n  }\n\n  const useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\n\n  function getCanvasPosition(evt, canvas) {\n    const e = evt.native || evt;\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const {\n      offsetX,\n      offsetY\n    } = source;\n    let box = false;\n    let x, y;\n\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n      x = offsetX;\n      y = offsetY;\n    } else {\n      const rect = canvas.getBoundingClientRect();\n      x = source.clientX - rect.left;\n      y = source.clientY - rect.top;\n      box = true;\n    }\n\n    return {\n      x,\n      y,\n      box\n    };\n  }\n\n  function getRelativePosition$1(evt, chart) {\n    const {\n      canvas,\n      currentDevicePixelRatio\n    } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const {\n      x,\n      y,\n      box\n    } = getCanvasPosition(evt, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let {\n      width,\n      height\n    } = chart;\n\n    if (borderBox) {\n      width -= paddings.width + borders.width;\n      height -= paddings.height + borders.height;\n    }\n\n    return {\n      x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n      y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n  }\n\n  function getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n\n    if (width === undefined || height === undefined) {\n      const container = _getParentNode(canvas);\n\n      if (!container) {\n        width = canvas.clientWidth;\n        height = canvas.clientHeight;\n      } else {\n        const rect = container.getBoundingClientRect();\n        const containerStyle = getComputedStyle(container);\n        const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n        const containerPadding = getPositionedStyle(containerStyle, 'padding');\n        width = rect.width - containerPadding.width - containerBorder.width;\n        height = rect.height - containerPadding.height - containerBorder.height;\n        maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n        maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n      }\n    }\n\n    return {\n      width,\n      height,\n      maxWidth: maxWidth || INFINITY,\n      maxHeight: maxHeight || INFINITY\n    };\n  }\n\n  const round1 = v => Math.round(v * 10) / 10;\n\n  function getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let {\n      width,\n      height\n    } = containerSize;\n\n    if (style.boxSizing === 'content-box') {\n      const borders = getPositionedStyle(style, 'border', 'width');\n      const paddings = getPositionedStyle(style, 'padding');\n      width -= paddings.width + borders.width;\n      height -= paddings.height + borders.height;\n    }\n\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n\n    if (width && !height) {\n      height = round1(width / 2);\n    }\n\n    return {\n      width,\n      height\n    };\n  }\n\n  function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n      canvas.style.height = `${chart.height}px`;\n      canvas.style.width = `${chart.width}px`;\n    }\n\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n      chart.currentDevicePixelRatio = pixelRatio;\n      canvas.height = deviceHeight;\n      canvas.width = deviceWidth;\n      chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      return true;\n    }\n\n    return false;\n  }\n\n  const supportsEventListenerOptions = function () {\n    let passiveSupported = false;\n\n    try {\n      const options = {\n        get passive() {\n          passiveSupported = true;\n          return false;\n        }\n\n      };\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n\n    return passiveSupported;\n  }();\n\n  function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n  }\n\n  function getRelativePosition(e, chart) {\n    if ('native' in e) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return getRelativePosition$1(e, chart);\n  }\n\n  function evaluateAllVisibleItems(chart, handler) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    let index, data, element;\n\n    for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n      ({\n        index,\n        data\n      } = metasets[i]);\n\n      for (let j = 0, jlen = data.length; j < jlen; ++j) {\n        element = data[j];\n\n        if (!element.skip) {\n          handler(element, index, j);\n        }\n      }\n    }\n  }\n\n  function binarySearch(metaset, axis, value, intersect) {\n    const {\n      controller,\n      data,\n      _sorted\n    } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n      const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n      if (!intersect) {\n        return lookupMethod(data, axis, value);\n      } else if (controller._sharedOptions) {\n        const el = data[0];\n        const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n        if (range) {\n          const start = lookupMethod(data, axis, value - range);\n          const end = lookupMethod(data, axis, value + range);\n          return {\n            lo: start.lo,\n            hi: end.hi\n          };\n        }\n      }\n    }\n\n    return {\n      lo: 0,\n      hi: data.length - 1\n    };\n  }\n\n  function optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n\n    for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const {\n        index,\n        data\n      } = metasets[i];\n      const {\n        lo,\n        hi\n      } = binarySearch(metasets[i], axis, value, intersect);\n\n      for (let j = lo; j <= hi; ++j) {\n        const element = data[j];\n\n        if (!element.skip) {\n          handler(element, index, j);\n        }\n      }\n    }\n  }\n\n  function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function getIntersectItems(chart, position, axis, useFinalPosition) {\n    const items = [];\n\n    if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n      return items;\n    }\n\n    const evaluationFunc = function (element, datasetIndex, index) {\n      if (element.inRange(position.x, position.y, useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    };\n\n    optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n    return items;\n  }\n\n  function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n\n    function evaluationFunc(element, datasetIndex, index) {\n      const {\n        startAngle,\n        endAngle\n      } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n      const {\n        angle\n      } = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      });\n\n      if (_angleBetween(angle, startAngle, endAngle)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    }\n\n    optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n    return items;\n  }\n\n  function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n\n    function evaluationFunc(element, datasetIndex, index) {\n      const inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n      if (intersect && !inRange) {\n        return;\n      }\n\n      const center = element.getCenterPoint(useFinalPosition);\n\n      const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n\n      if (!pointInArea && !inRange) {\n        return;\n      }\n\n      const distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        items = [{\n          element,\n          datasetIndex,\n          index\n        }];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    }\n\n    optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n    return items;\n  }\n\n  function getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n    if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n      return [];\n    }\n\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n  }\n\n  function getAxisItems(chart, e, options, useFinalPosition) {\n    const position = getRelativePosition(e, chart);\n    const items = [];\n    const axis = options.axis;\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n      if (element[rangeMethod](position[axis], useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n\n      if (element.inRange(position.x, position.y, useFinalPosition)) {\n        intersectsItem = true;\n      }\n    });\n\n    if (options.intersect && !intersectsItem) {\n      return [];\n    }\n\n    return items;\n  }\n\n  var Interaction = {\n    modes: {\n      index(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'x';\n        const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n        const elements = [];\n\n        if (!items.length) {\n          return [];\n        }\n\n        chart.getSortedVisibleDatasetMetas().forEach(meta => {\n          const index = items[0].index;\n          const element = meta.data[index];\n\n          if (element && !element.skip) {\n            elements.push({\n              element,\n              datasetIndex: meta.index,\n              index\n            });\n          }\n        });\n        return elements;\n      },\n\n      dataset(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n        if (items.length > 0) {\n          const datasetIndex = items[0].datasetIndex;\n          const data = chart.getDatasetMeta(datasetIndex).data;\n          items = [];\n\n          for (let i = 0; i < data.length; ++i) {\n            items.push({\n              element: data[i],\n              datasetIndex,\n              index: i\n            });\n          }\n        }\n\n        return items;\n      },\n\n      point(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        return getIntersectItems(chart, position, axis, useFinalPosition);\n      },\n\n      nearest(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n      },\n\n      x(chart, e, options, useFinalPosition) {\n        return getAxisItems(chart, e, {\n          axis: 'x',\n          intersect: options.intersect\n        }, useFinalPosition);\n      },\n\n      y(chart, e, options, useFinalPosition) {\n        return getAxisItems(chart, e, {\n          axis: 'y',\n          intersect: options.intersect\n        }, useFinalPosition);\n      }\n\n    }\n  };\n  const LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n  const FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\n\n  function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n    }\n\n    return size * value;\n  }\n\n  const numberOrZero = v => +v || 0;\n\n  function _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? prop => valueOrDefault(value[prop], value[props[prop]]) : prop => value[prop] : () => value;\n\n    for (const prop of keys) {\n      ret[prop] = numberOrZero(read(prop));\n    }\n\n    return ret;\n  }\n\n  function toTRBL(value) {\n    return _readValueToProps(value, {\n      top: 'y',\n      right: 'x',\n      bottom: 'y',\n      left: 'x'\n    });\n  }\n\n  function toTRBLCorners(value) {\n    return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n  }\n\n  function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n  }\n\n  function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n\n    if (typeof size === 'string') {\n      size = parseInt(size, 10);\n    }\n\n    let style = valueOrDefault(options.style, fallback.style);\n\n    if (style && !('' + style).match(FONT_STYLE)) {\n      console.warn('Invalid font style specified: \"' + style + '\"');\n      style = '';\n    }\n\n    const font = {\n      family: valueOrDefault(options.family, fallback.family),\n      lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n      size,\n      style,\n      weight: valueOrDefault(options.weight, fallback.weight),\n      string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n  }\n\n  function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n        cacheable = false;\n      }\n\n      if (index !== undefined && isArray(value)) {\n        value = value[index % value.length];\n        cacheable = false;\n      }\n\n      if (value !== undefined) {\n        if (info && !cacheable) {\n          info.cacheable = false;\n        }\n\n        return value;\n      }\n    }\n  }\n\n  function _addGrace(minmax, grace, beginAtZero) {\n    const {\n      min,\n      max\n    } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n\n    const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n\n    return {\n      min: keepZero(min, -Math.abs(change)),\n      max: keepZero(max, change)\n    };\n  }\n\n  function createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n  }\n\n  const STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\n  function filterByPosition(array, position) {\n    return array.filter(v => v.pos === position);\n  }\n\n  function filterDynamicPositionByAxis(array, axis) {\n    return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n  }\n\n  function sortByWeight(array, reverse) {\n    return array.sort((a, b) => {\n      const v0 = reverse ? b : a;\n      const v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n  }\n\n  function wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n\n    for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n      box = boxes[i];\n      ({\n        position: pos,\n        options: {\n          stack,\n          stackWeight = 1\n        }\n      } = box);\n      layoutBoxes.push({\n        index: i,\n        box,\n        pos,\n        horizontal: box.isHorizontal(),\n        weight: box.weight,\n        stack: stack && pos + stack,\n        stackWeight\n      });\n    }\n\n    return layoutBoxes;\n  }\n\n  function buildStacks(layouts) {\n    const stacks = {};\n\n    for (const wrap of layouts) {\n      const {\n        stack,\n        pos,\n        stackWeight\n      } = wrap;\n\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n\n      const _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n\n    return stacks;\n  }\n\n  function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const {\n      vBoxMaxWidth,\n      hBoxMaxHeight\n    } = params;\n    let i, ilen, layout;\n\n    for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n      layout = layouts[i];\n      const {\n        fullSize\n      } = layout.box;\n      const stack = stacks[layout.stack];\n      const factor = stack && layout.stackWeight / stack.weight;\n\n      if (layout.horizontal) {\n        layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n        layout.height = hBoxMaxHeight;\n      } else {\n        layout.width = vBoxMaxWidth;\n        layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n      }\n    }\n\n    return stacks;\n  }\n\n  function buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n      fullSize,\n      leftAndTop: left.concat(top),\n      rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n      chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n      vertical: left.concat(right).concat(centerVertical),\n      horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n  }\n\n  function getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n  }\n\n  function updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n  }\n\n  function updateDims(chartArea, params, layout, stacks) {\n    const {\n      pos,\n      box\n    } = layout;\n    const maxPadding = chartArea.maxPadding;\n\n    if (!isObject(pos)) {\n      if (layout.size) {\n        chartArea[pos] -= layout.size;\n      }\n\n      const stack = stacks[layout.stack] || {\n        size: 0,\n        count: 1\n      };\n      stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n      layout.size = stack.size / stack.count;\n      chartArea[pos] += layout.size;\n    }\n\n    if (box.getPadding) {\n      updateMaxPadding(maxPadding, box.getPadding());\n    }\n\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n      same: widthChanged,\n      other: heightChanged\n    } : {\n      same: heightChanged,\n      other: widthChanged\n    };\n  }\n\n  function handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n\n    function updatePos(pos) {\n      const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n      chartArea[pos] += change;\n      return change;\n    }\n\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n  }\n\n  function getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n\n    function marginForPositions(positions) {\n      const margin = {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n      positions.forEach(pos => {\n        margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n      });\n      return margin;\n    }\n\n    return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n  }\n\n  function fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n\n    for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n      layout = boxes[i];\n      box = layout.box;\n      box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n      const {\n        same,\n        other\n      } = updateDims(chartArea, params, layout, stacks);\n      refit |= same && refitBoxes.length;\n      changed = changed || other;\n\n      if (!box.fullSize) {\n        refitBoxes.push(layout);\n      }\n    }\n\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n  }\n\n  function setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n  }\n\n  function placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let {\n      x,\n      y\n    } = chartArea;\n\n    for (const layout of boxes) {\n      const box = layout.box;\n      const stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      const weight = layout.stackWeight / stack.weight || 1;\n\n      if (layout.horizontal) {\n        const width = chartArea.w * weight;\n        const height = stack.size || box.height;\n\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        const height = chartArea.h * weight;\n        const width = stack.size || box.width;\n\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n        }\n\n        stack.start = x;\n        stack.placed += height;\n        x = box.right;\n      }\n    }\n\n    chartArea.x = x;\n    chartArea.y = y;\n  }\n\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n  var layouts = {\n    addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      }\n\n      item.fullSize = item.fullSize || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n\n      item._layers = item._layers || function () {\n        return [{\n          z: 0,\n\n          draw(chartArea) {\n            item.draw(chartArea);\n          }\n\n        }];\n      };\n\n      chart.boxes.push(item);\n    },\n\n    removeBox(chart, layoutItem) {\n      const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    configure(chart, item, options) {\n      item.fullSize = options.fullSize;\n      item.position = options.position;\n      item.weight = options.weight;\n    },\n\n    update(chart, width, height, minPadding) {\n      if (!chart) {\n        return;\n      }\n\n      const padding = toPadding(chart.options.layout.padding);\n      const availableWidth = Math.max(width - padding.width, 0);\n      const availableHeight = Math.max(height - padding.height, 0);\n      const boxes = buildLayoutBoxes(chart.boxes);\n      const verticalBoxes = boxes.vertical;\n      const horizontalBoxes = boxes.horizontal;\n      each(chart.boxes, box => {\n        if (typeof box.beforeLayout === 'function') {\n          box.beforeLayout();\n        }\n      });\n      const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n      const params = Object.freeze({\n        outerWidth: width,\n        outerHeight: height,\n        padding,\n        availableWidth,\n        availableHeight,\n        vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n        hBoxMaxHeight: availableHeight / 2\n      });\n      const maxPadding = Object.assign({}, padding);\n      updateMaxPadding(maxPadding, toPadding(minPadding));\n      const chartArea = Object.assign({\n        maxPadding,\n        w: availableWidth,\n        h: availableHeight,\n        x: padding.left,\n        y: padding.top\n      }, padding);\n      const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n      fitBoxes(boxes.fullSize, chartArea, params, stacks);\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n      if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n      }\n\n      handleMaxPadding(chartArea);\n      placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n      chartArea.x += chartArea.w;\n      chartArea.y += chartArea.h;\n      placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n      chart.chartArea = {\n        left: chartArea.left,\n        top: chartArea.top,\n        right: chartArea.left + chartArea.w,\n        bottom: chartArea.top + chartArea.h,\n        height: chartArea.h,\n        width: chartArea.w\n      };\n      each(boxes.chartArea, layout => {\n        const box = layout.box;\n        Object.assign(box, chart.chartArea);\n        box.update(chartArea.w, chartArea.h, {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0\n        });\n      });\n    }\n\n  };\n\n  function _createResolver(scopes) {\n    let prefixes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [''];\n    let rootScopes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : scopes;\n    let fallback = arguments.length > 3 ? arguments[3] : undefined;\n    let getTarget = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : () => scopes[0];\n\n    if (!defined(fallback)) {\n      fallback = _resolve('_fallback', scopes);\n    }\n\n    const cache = {\n      [Symbol.toStringTag]: 'Object',\n      _cacheable: true,\n      _scopes: scopes,\n      _rootScopes: rootScopes,\n      _fallback: fallback,\n      _getTarget: getTarget,\n      override: scope => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n      deleteProperty(target, prop) {\n        delete target[prop];\n        delete target._keys;\n        delete scopes[0][prop];\n        return true;\n      },\n\n      get(target, prop) {\n        return _cached(target, prop, () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n      },\n\n      getOwnPropertyDescriptor(target, prop) {\n        return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n      },\n\n      getPrototypeOf() {\n        return Reflect.getPrototypeOf(scopes[0]);\n      },\n\n      has(target, prop) {\n        return getKeysFromAllScopes(target).includes(prop);\n      },\n\n      ownKeys(target) {\n        return getKeysFromAllScopes(target);\n      },\n\n      set(target, prop, value) {\n        const storage = target._storage || (target._storage = getTarget());\n        target[prop] = storage[prop] = value;\n        delete target._keys;\n        return true;\n      }\n\n    });\n  }\n\n  function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n      _cacheable: false,\n      _proxy: proxy,\n      _context: context,\n      _subProxy: subProxy,\n      _stack: new Set(),\n      _descriptors: _descriptors(proxy, descriptorDefaults),\n      setContext: ctx => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n      override: scope => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n      deleteProperty(target, prop) {\n        delete target[prop];\n        delete proxy[prop];\n        return true;\n      },\n\n      get(target, prop, receiver) {\n        return _cached(target, prop, () => _resolveWithContext(target, prop, receiver));\n      },\n\n      getOwnPropertyDescriptor(target, prop) {\n        return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n          enumerable: true,\n          configurable: true\n        } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n      },\n\n      getPrototypeOf() {\n        return Reflect.getPrototypeOf(proxy);\n      },\n\n      has(target, prop) {\n        return Reflect.has(proxy, prop);\n      },\n\n      ownKeys() {\n        return Reflect.ownKeys(proxy);\n      },\n\n      set(target, prop, value) {\n        proxy[prop] = value;\n        delete target[prop];\n        return true;\n      }\n\n    });\n  }\n\n  function _descriptors(proxy) {\n    let defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      scriptable: true,\n      indexable: true\n    };\n    const {\n      _scriptable = defaults.scriptable,\n      _indexable = defaults.indexable,\n      _allKeys = defaults.allKeys\n    } = proxy;\n    return {\n      allKeys: _allKeys,\n      scriptable: _scriptable,\n      indexable: _indexable,\n      isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n      isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n    };\n  }\n\n  const readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\n\n  const needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\n  function _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n      return target[prop];\n    }\n\n    const value = resolve();\n    target[prop] = value;\n    return value;\n  }\n\n  function _resolveWithContext(target, prop, receiver) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _descriptors: descriptors\n    } = target;\n    let value = _proxy[prop];\n\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n      value = _resolveScriptable(prop, value, target, receiver);\n    }\n\n    if (isArray(value) && value.length) {\n      value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n\n    if (needsSubResolver(prop, value)) {\n      value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n\n    return value;\n  }\n\n  function _resolveScriptable(prop, value, target, receiver) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _stack\n    } = target;\n\n    if (_stack.has(prop)) {\n      throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n\n    _stack.add(prop);\n\n    value = value(_context, _subProxy || receiver);\n\n    _stack.delete(prop);\n\n    if (needsSubResolver(prop, value)) {\n      value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n\n    return value;\n  }\n\n  function _resolveArray(prop, value, target, isIndexable) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _descriptors: descriptors\n    } = target;\n\n    if (defined(_context.index) && isIndexable(prop)) {\n      value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n      const arr = value;\n\n      const scopes = _proxy._scopes.filter(s => s !== arr);\n\n      value = [];\n\n      for (const item of arr) {\n        const resolver = createSubResolver(scopes, _proxy, prop, item);\n        value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n      }\n    }\n\n    return value;\n  }\n\n  function resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n  }\n\n  const getScope = (key, parent) => key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\n  function addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes) {\n      const scope = getScope(key, parent);\n\n      if (scope) {\n        set.add(scope);\n        const fallback = resolveFallback(scope._fallback, key, value);\n\n        if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n          return fallback;\n        }\n      } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n        return null;\n      }\n    }\n\n    return false;\n  }\n\n  function createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [...parentScopes, ...rootScopes];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n\n    if (key === null) {\n      return false;\n    }\n\n    if (defined(fallback) && fallback !== prop) {\n      key = addScopesFromKey(set, allScopes, fallback, key, value);\n\n      if (key === null) {\n        return false;\n      }\n    }\n\n    return _createResolver(Array.from(set), [''], rootScopes, fallback, () => subGetTarget(resolver, prop, value));\n  }\n\n  function addScopesFromKey(set, allScopes, key, fallback, item) {\n    while (key) {\n      key = addScopes(set, allScopes, key, fallback, item);\n    }\n\n    return key;\n  }\n\n  function subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n\n    if (!(prop in parent)) {\n      parent[prop] = {};\n    }\n\n    const target = parent[prop];\n\n    if (isArray(target) && isObject(value)) {\n      return value;\n    }\n\n    return target;\n  }\n\n  function _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n\n    for (const prefix of prefixes) {\n      value = _resolve(readKey(prefix, prop), scopes);\n\n      if (defined(value)) {\n        return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n      }\n    }\n  }\n\n  function _resolve(key, scopes) {\n    for (const scope of scopes) {\n      if (!scope) {\n        continue;\n      }\n\n      const value = scope[key];\n\n      if (defined(value)) {\n        return value;\n      }\n    }\n  }\n\n  function getKeysFromAllScopes(target) {\n    let keys = target._keys;\n\n    if (!keys) {\n      keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n\n    return keys;\n  }\n\n  function resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n\n    for (const scope of scopes) {\n      for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n        set.add(key);\n      }\n    }\n\n    return Array.from(set);\n  }\n\n  const EPSILON = Number.EPSILON || 1e-14;\n\n  const getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\n\n  const getValueAxis = indexAxis => indexAxis === 'x' ? 'y' : 'x';\n\n  function splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01;\n    const fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  }\n\n  function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n\n    for (let i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n\n      if (!pointCurrent || !pointAfter) {\n        continue;\n      }\n\n      if (almostEquals(deltaK[i], 0, EPSILON)) {\n        mK[i] = mK[i + 1] = 0;\n        continue;\n      }\n\n      alphaK = mK[i] / deltaK[i];\n      betaK = mK[i + 1] / deltaK[i];\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      mK[i] = alphaK * tauK * deltaK[i];\n      mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n  }\n\n  function monotoneCompute(points, mK) {\n    let indexAxis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'x';\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n\n    for (let i = 0; i < pointsLen; ++i) {\n      pointBefore = pointCurrent;\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n\n      if (!pointCurrent) {\n        continue;\n      }\n\n      const iPixel = pointCurrent[indexAxis];\n      const vPixel = pointCurrent[valueAxis];\n\n      if (pointBefore) {\n        delta = (iPixel - pointBefore[indexAxis]) / 3;\n        pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n        pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n      }\n\n      if (pointAfter) {\n        delta = (pointAfter[indexAxis] - iPixel) / 3;\n        pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n        pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n      }\n    }\n  }\n\n  function splineCurveMonotone(points) {\n    let indexAxis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointBefore = pointCurrent;\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n\n      if (!pointCurrent) {\n        continue;\n      }\n\n      if (pointAfter) {\n        const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n        deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n      }\n\n      mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n  }\n\n  function capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n  }\n\n  function capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n\n    let inAreaNext = _isPointInArea(points[0], area);\n\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      inAreaPrev = inArea;\n      inArea = inAreaNext;\n      inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n\n      if (!inArea) {\n        continue;\n      }\n\n      point = points[i];\n\n      if (inAreaPrev) {\n        point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n        point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n      }\n\n      if (inAreaNext) {\n        point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n        point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n      }\n    }\n  }\n\n  function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n\n    if (options.spanGaps) {\n      points = points.filter(pt => !pt.skip);\n    }\n\n    if (options.cubicInterpolationMode === 'monotone') {\n      splineCurveMonotone(points, indexAxis);\n    } else {\n      let prev = loop ? points[points.length - 1] : points[0];\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        point = points[i];\n        controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n        point.cp1x = controlPoints.previous.x;\n        point.cp1y = controlPoints.previous.y;\n        point.cp2x = controlPoints.next.x;\n        point.cp2y = controlPoints.next.y;\n        prev = point;\n      }\n    }\n\n    if (options.capBezierPoints) {\n      capBezierPoints(points, area);\n    }\n  }\n\n  const atEdge = t => t === 0 || t === 1;\n\n  const elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\n\n  const elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n  const effects = {\n    linear: t => t,\n    easeInQuad: t => t * t,\n    easeOutQuad: t => -t * (t - 2),\n    easeInOutQuad: t => (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: t => t * t * t,\n    easeOutCubic: t => (t -= 1) * t * t + 1,\n    easeInOutCubic: t => (t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: t => t * t * t * t,\n    easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n    easeInOutQuart: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: t => t * t * t * t * t,\n    easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n    easeOutSine: t => Math.sin(t * HALF_PI),\n    easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: t => t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: t => t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: t => atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: t => t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: t => (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n    easeInOutElastic(t) {\n      const s = 0.1125;\n      const p = 0.45;\n      return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n\n    easeInBack(t) {\n      const s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n\n    easeOutBack(t) {\n      const s = 1.70158;\n      return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n\n    easeInOutBack(t) {\n      let s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n\n    easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n\n    easeOutBounce(t) {\n      const m = 7.5625;\n      const d = 2.75;\n\n      if (t < 1 / d) {\n        return m * t * t;\n      }\n\n      if (t < 2 / d) {\n        return m * (t -= 1.5 / d) * t + 0.75;\n      }\n\n      if (t < 2.5 / d) {\n        return m * (t -= 2.25 / d) * t + 0.9375;\n      }\n\n      return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n\n    easeInOutBounce: t => t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n  };\n\n  function _pointInLine(p1, p2, t, mode) {\n    return {\n      x: p1.x + t * (p2.x - p1.x),\n      y: p1.y + t * (p2.y - p1.y)\n    };\n  }\n\n  function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n      x: p1.x + t * (p2.x - p1.x),\n      y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n  }\n\n  function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n      x: p1.cp2x,\n      y: p1.cp2y\n    };\n    const cp2 = {\n      x: p2.cp1x,\n      y: p2.cp1y\n    };\n\n    const a = _pointInLine(p1, cp1, t);\n\n    const b = _pointInLine(cp1, cp2, t);\n\n    const c = _pointInLine(cp2, p2, t);\n\n    const d = _pointInLine(a, b, t);\n\n    const e = _pointInLine(b, c, t);\n\n    return _pointInLine(d, e, t);\n  }\n\n  const intlCache = new Map();\n\n  function getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n\n    if (!formatter) {\n      formatter = new Intl.NumberFormat(locale, options);\n      intlCache.set(cacheKey, formatter);\n    }\n\n    return formatter;\n  }\n\n  function formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n  }\n\n  const getRightToLeftAdapter = function (rectX, width) {\n    return {\n      x(x) {\n        return rectX + rectX + width - x;\n      },\n\n      setWidth(w) {\n        width = w;\n      },\n\n      textAlign(align) {\n        if (align === 'center') {\n          return align;\n        }\n\n        return align === 'right' ? 'left' : 'right';\n      },\n\n      xPlus(x, value) {\n        return x - value;\n      },\n\n      leftForLtr(x, itemWidth) {\n        return x - itemWidth;\n      }\n\n    };\n  };\n\n  const getLeftToRightAdapter = function () {\n    return {\n      x(x) {\n        return x;\n      },\n\n      setWidth(w) {},\n\n      textAlign(align) {\n        return align;\n      },\n\n      xPlus(x, value) {\n        return x + value;\n      },\n\n      leftForLtr(x, _itemWidth) {\n        return x;\n      }\n\n    };\n  };\n\n  function getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n  }\n\n  function overrideTextDirection(ctx, direction) {\n    let style, original;\n\n    if (direction === 'ltr' || direction === 'rtl') {\n      style = ctx.canvas.style;\n      original = [style.getPropertyValue('direction'), style.getPropertyPriority('direction')];\n      style.setProperty('direction', direction, 'important');\n      ctx.prevTextDirection = original;\n    }\n  }\n\n  function restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n      delete ctx.prevTextDirection;\n      ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n  }\n\n  function propertyFn(property) {\n    if (property === 'angle') {\n      return {\n        between: _angleBetween,\n        compare: _angleDiff,\n        normalize: _normalizeAngle\n      };\n    }\n\n    return {\n      between: _isBetween,\n      compare: (a, b) => a - b,\n      normalize: x => x\n    };\n  }\n\n  function normalizeSegment(_ref) {\n    let {\n      start,\n      end,\n      count,\n      loop,\n      style\n    } = _ref;\n    return {\n      start: start % count,\n      end: end % count,\n      loop: loop && (end - start + 1) % count === 0,\n      style\n    };\n  }\n\n  function getSegment(segment, points, bounds) {\n    const {\n      property,\n      start: startBound,\n      end: endBound\n    } = bounds;\n    const {\n      between,\n      normalize\n    } = propertyFn(property);\n    const count = points.length;\n    let {\n      start,\n      end,\n      loop\n    } = segment;\n    let i, ilen;\n\n    if (loop) {\n      start += count;\n      end += count;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n          break;\n        }\n\n        start--;\n        end--;\n      }\n\n      start %= count;\n      end %= count;\n    }\n\n    if (end < start) {\n      end += count;\n    }\n\n    return {\n      start,\n      end,\n      loop,\n      style: segment.style\n    };\n  }\n\n  function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n      return [segment];\n    }\n\n    const {\n      property,\n      start: startBound,\n      end: endBound\n    } = bounds;\n    const count = points.length;\n    const {\n      compare,\n      between,\n      normalize\n    } = propertyFn(property);\n    const {\n      start,\n      end,\n      loop,\n      style\n    } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n\n    const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n\n    const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n\n    const shouldStart = () => inside || startIsBefore();\n\n    const shouldStop = () => !inside || endIsBefore();\n\n    for (let i = start, prev = start; i <= end; ++i) {\n      point = points[i % count];\n\n      if (point.skip) {\n        continue;\n      }\n\n      value = normalize(point[property]);\n\n      if (value === prevValue) {\n        continue;\n      }\n\n      inside = between(value, startBound, endBound);\n\n      if (subStart === null && shouldStart()) {\n        subStart = compare(value, startBound) === 0 ? i : prev;\n      }\n\n      if (subStart !== null && shouldStop()) {\n        result.push(normalizeSegment({\n          start: subStart,\n          end: i,\n          loop,\n          count,\n          style\n        }));\n        subStart = null;\n      }\n\n      prev = i;\n      prevValue = value;\n    }\n\n    if (subStart !== null) {\n      result.push(normalizeSegment({\n        start: subStart,\n        end,\n        loop,\n        count,\n        style\n      }));\n    }\n\n    return result;\n  }\n\n  function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n\n    for (let i = 0; i < segments.length; i++) {\n      const sub = _boundSegment(segments[i], line.points, bounds);\n\n      if (sub.length) {\n        result.push(...sub);\n      }\n    }\n\n    return result;\n  }\n\n  function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n\n    if (loop && !spanGaps) {\n      while (start < count && !points[start].skip) {\n        start++;\n      }\n    }\n\n    while (start < count && points[start].skip) {\n      start++;\n    }\n\n    start %= count;\n\n    if (loop) {\n      end += start;\n    }\n\n    while (end > start && points[end % count].skip) {\n      end--;\n    }\n\n    end %= count;\n    return {\n      start,\n      end\n    };\n  }\n\n  function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n\n    for (end = start + 1; end <= max; ++end) {\n      const cur = points[end % count];\n\n      if (cur.skip || cur.stop) {\n        if (!prev.skip) {\n          loop = false;\n          result.push({\n            start: start % count,\n            end: (end - 1) % count,\n            loop\n          });\n          start = last = cur.stop ? end : null;\n        }\n      } else {\n        last = end;\n\n        if (prev.skip) {\n          start = end;\n        }\n      }\n\n      prev = cur;\n    }\n\n    if (last !== null) {\n      result.push({\n        start: start % count,\n        end: last % count,\n        loop\n      });\n    }\n\n    return result;\n  }\n\n  function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n\n    if (!count) {\n      return [];\n    }\n\n    const loop = !!line._loop;\n    const {\n      start,\n      end\n    } = findStartAndEnd(points, count, loop, spanGaps);\n\n    if (spanGaps === true) {\n      return splitByStyles(line, [{\n        start,\n        end,\n        loop\n      }], points, segmentOptions);\n    }\n\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n  }\n\n  function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n      return segments;\n    }\n\n    return doSplitByStyles(line, segments, points, segmentOptions);\n  }\n\n  function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n\n    const baseStyle = readStyle(line.options);\n    const {\n      _datasetIndex: datasetIndex,\n      options: {\n        spanGaps\n      }\n    } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n\n    function addStyle(s, e, l, st) {\n      const dir = spanGaps ? -1 : 1;\n\n      if (s === e) {\n        return;\n      }\n\n      s += count;\n\n      while (points[s % count].skip) {\n        s -= dir;\n      }\n\n      while (points[e % count].skip) {\n        e += dir;\n      }\n\n      if (s % count !== e % count) {\n        result.push({\n          start: s % count,\n          end: e % count,\n          loop: l,\n          style: st\n        });\n        prevStyle = st;\n        start = e % count;\n      }\n    }\n\n    for (const segment of segments) {\n      start = spanGaps ? start : segment.start;\n      let prev = points[start % count];\n      let style;\n\n      for (i = start + 1; i <= segment.end; i++) {\n        const pt = points[i % count];\n        style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n          type: 'segment',\n          p0: prev,\n          p1: pt,\n          p0DataIndex: (i - 1) % count,\n          p1DataIndex: i % count,\n          datasetIndex\n        })));\n\n        if (styleChanged(style, prevStyle)) {\n          addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n\n        prev = pt;\n        prevStyle = style;\n      }\n\n      if (start < i - 1) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n    }\n\n    return result;\n  }\n\n  function readStyle(options) {\n    return {\n      backgroundColor: options.backgroundColor,\n      borderCapStyle: options.borderCapStyle,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderJoinStyle: options.borderJoinStyle,\n      borderWidth: options.borderWidth,\n      borderColor: options.borderColor\n    };\n  }\n\n  function styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n  }\n\n  var helpers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    easingEffects: effects,\n    color: color,\n    getHoverColor: getHoverColor,\n    noop: noop,\n    uid: uid,\n    isNullOrUndef: isNullOrUndef,\n    isArray: isArray,\n    isObject: isObject,\n    isFinite: isNumberFinite,\n    finiteOrDefault: finiteOrDefault,\n    valueOrDefault: valueOrDefault,\n    toPercentage: toPercentage,\n    toDimension: toDimension,\n    callback: callback,\n    each: each,\n    _elementsEqual: _elementsEqual,\n    clone: clone,\n    _merger: _merger,\n    merge: merge,\n    mergeIf: mergeIf,\n    _mergerIf: _mergerIf,\n    _deprecated: _deprecated,\n    resolveObjectKey: resolveObjectKey,\n    _capitalize: _capitalize,\n    defined: defined,\n    isFunction: isFunction,\n    setsEqual: setsEqual,\n    _isClickEvent: _isClickEvent,\n    toFontString: toFontString,\n    _measureText: _measureText,\n    _longestText: _longestText,\n    _alignPixel: _alignPixel,\n    clearCanvas: clearCanvas,\n    drawPoint: drawPoint,\n    _isPointInArea: _isPointInArea,\n    clipArea: clipArea,\n    unclipArea: unclipArea,\n    _steppedLineTo: _steppedLineTo,\n    _bezierCurveTo: _bezierCurveTo,\n    renderText: renderText,\n    addRoundedRectPath: addRoundedRectPath,\n    _lookup: _lookup,\n    _lookupByKey: _lookupByKey,\n    _rlookupByKey: _rlookupByKey,\n    _filterBetween: _filterBetween,\n    listenArrayEvents: listenArrayEvents,\n    unlistenArrayEvents: unlistenArrayEvents,\n    _arrayUnique: _arrayUnique,\n    _createResolver: _createResolver,\n    _attachContext: _attachContext,\n    _descriptors: _descriptors,\n    splineCurve: splineCurve,\n    splineCurveMonotone: splineCurveMonotone,\n    _updateBezierControlPoints: _updateBezierControlPoints,\n    _isDomSupported: _isDomSupported,\n    _getParentNode: _getParentNode,\n    getStyle: getStyle,\n    getRelativePosition: getRelativePosition$1,\n    getMaximumSize: getMaximumSize,\n    retinaScale: retinaScale,\n    supportsEventListenerOptions: supportsEventListenerOptions,\n    readUsedSize: readUsedSize,\n    fontString: fontString,\n    requestAnimFrame: requestAnimFrame,\n    throttled: throttled,\n    debounce: debounce,\n    _toLeftRightCenter: _toLeftRightCenter,\n    _alignStartEnd: _alignStartEnd,\n    _textX: _textX,\n    _pointInLine: _pointInLine,\n    _steppedInterpolation: _steppedInterpolation,\n    _bezierInterpolation: _bezierInterpolation,\n    formatNumber: formatNumber,\n    toLineHeight: toLineHeight,\n    _readValueToProps: _readValueToProps,\n    toTRBL: toTRBL,\n    toTRBLCorners: toTRBLCorners,\n    toPadding: toPadding,\n    toFont: toFont,\n    resolve: resolve,\n    _addGrace: _addGrace,\n    createContext: createContext,\n    PI: PI,\n    TAU: TAU,\n    PITAU: PITAU,\n    INFINITY: INFINITY,\n    RAD_PER_DEG: RAD_PER_DEG,\n    HALF_PI: HALF_PI,\n    QUARTER_PI: QUARTER_PI,\n    TWO_THIRDS_PI: TWO_THIRDS_PI,\n    log10: log10,\n    sign: sign,\n    niceNum: niceNum,\n    _factorize: _factorize,\n    isNumber: isNumber,\n    almostEquals: almostEquals,\n    almostWhole: almostWhole,\n    _setMinAndMaxByKey: _setMinAndMaxByKey,\n    toRadians: toRadians,\n    toDegrees: toDegrees,\n    _decimalPlaces: _decimalPlaces,\n    getAngleFromPoint: getAngleFromPoint,\n    distanceBetweenPoints: distanceBetweenPoints,\n    _angleDiff: _angleDiff,\n    _normalizeAngle: _normalizeAngle,\n    _angleBetween: _angleBetween,\n    _limitValue: _limitValue,\n    _int16Range: _int16Range,\n    _isBetween: _isBetween,\n    getRtlAdapter: getRtlAdapter,\n    overrideTextDirection: overrideTextDirection,\n    restoreTextDirection: restoreTextDirection,\n    _boundSegment: _boundSegment,\n    _boundSegments: _boundSegments,\n    _computeSegments: _computeSegments\n  });\n\n  class BasePlatform {\n    acquireContext(canvas, aspectRatio) {}\n\n    releaseContext(context) {\n      return false;\n    }\n\n    addEventListener(chart, type, listener) {}\n\n    removeEventListener(chart, type, listener) {}\n\n    getDevicePixelRatio() {\n      return 1;\n    }\n\n    getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n\n    isAttached(canvas) {\n      return true;\n    }\n\n    updateConfig(config) {}\n\n  }\n\n  class BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n\n    updateConfig(config) {\n      config.options.animation = false;\n    }\n\n  }\n\n  const EXPANDO_KEY = '$chartjs';\n  const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n\n  const isNullOrEmpty = value => value === null || value === '';\n\n  function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n\n    if (isNullOrEmpty(renderWidth)) {\n      const displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (isNullOrEmpty(renderHeight)) {\n      if (canvas.style.height === '') {\n        canvas.height = canvas.width / (aspectRatio || 2);\n      } else {\n        const displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayHeight !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n\n  const eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const {\n      x,\n      y\n    } = getRelativePosition$1(event, chart);\n    return {\n      type,\n      chart,\n      native: event,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function nodeListContains(nodeList, canvas) {\n    for (const node of nodeList) {\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  }\n\n  function createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver(entries => {\n      let trigger = false;\n\n      for (const entry of entries) {\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n\n      if (trigger) {\n        listener();\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n\n  function createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver(entries => {\n      let trigger = false;\n\n      for (const entry of entries) {\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n\n      if (trigger) {\n        listener();\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n\n  const drpListeningCharts = new Map();\n  let oldDevicePixelRatio = 0;\n\n  function onWindowResize() {\n    const dpr = window.devicePixelRatio;\n\n    if (dpr === oldDevicePixelRatio) {\n      return;\n    }\n\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart) => {\n      if (chart.currentDevicePixelRatio !== dpr) {\n        resize();\n      }\n    });\n  }\n\n  function listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n      window.addEventListener('resize', onWindowResize);\n    }\n\n    drpListeningCharts.set(chart, resize);\n  }\n\n  function unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n\n    if (!drpListeningCharts.size) {\n      window.removeEventListener('resize', onWindowResize);\n    }\n  }\n\n  function createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n\n    const container = canvas && _getParentNode(canvas);\n\n    if (!container) {\n      return;\n    }\n\n    const resize = throttled((width, height) => {\n      const w = container.clientWidth;\n      listener(width, height);\n\n      if (w < container.clientWidth) {\n        listener();\n      }\n    }, window);\n    const observer = new ResizeObserver(entries => {\n      const entry = entries[0];\n      const width = entry.contentRect.width;\n      const height = entry.contentRect.height;\n\n      if (width === 0 && height === 0) {\n        return;\n      }\n\n      resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n  }\n\n  function releaseObserver(chart, type, observer) {\n    if (observer) {\n      observer.disconnect();\n    }\n\n    if (type === 'resize') {\n      unlistenDevicePixelRatioChanges(chart);\n    }\n  }\n\n  function createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled(event => {\n      if (chart.ctx !== null) {\n        listener(fromNativeEvent(event, chart));\n      }\n    }, chart, args => {\n      const event = args[0];\n      return [event, event.offsetX, event.offsetY];\n    });\n    addListener(canvas, type, proxy);\n    return proxy;\n  }\n\n  class DomPlatform extends BasePlatform {\n    acquireContext(canvas, aspectRatio) {\n      const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n\n    releaseContext(context) {\n      const canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      const initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(prop => {\n        const value = initial[prop];\n\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      const style = initial.style || {};\n      Object.keys(style).forEach(key => {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n\n    addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      const handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n\n    removeEventListener(chart, type) {\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      const handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      const handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n\n    getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n\n    getMaximumSize(canvas, width, height, aspectRatio) {\n      return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n\n    isAttached(canvas) {\n      const container = _getParentNode(canvas);\n\n      return !!(container && container.isConnected);\n    }\n\n  }\n\n  function _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return BasicPlatform;\n    }\n\n    return DomPlatform;\n  }\n\n  var platforms = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    _detectPlatform: _detectPlatform,\n    BasePlatform: BasePlatform,\n    BasicPlatform: BasicPlatform,\n    DomPlatform: DomPlatform\n  });\n  const transparent = 'transparent';\n  const interpolators = {\n    boolean(from, to, factor) {\n      return factor > 0.5 ? to : from;\n    },\n\n    color(from, to, factor) {\n      const c0 = color(from || transparent);\n      const c1 = c0.valid && color(to || transparent);\n      return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n\n    number(from, to, factor) {\n      return from + (to - from) * factor;\n    }\n\n  };\n\n  class Animation {\n    constructor(cfg, target, prop, to) {\n      const currentValue = target[prop];\n      to = resolve([cfg.to, to, currentValue, cfg.from]);\n      const from = resolve([cfg.from, currentValue, to]);\n      this._active = true;\n      this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n      this._easing = effects[cfg.easing] || effects.linear;\n      this._start = Math.floor(Date.now() + (cfg.delay || 0));\n      this._duration = this._total = Math.floor(cfg.duration);\n      this._loop = !!cfg.loop;\n      this._target = target;\n      this._prop = prop;\n      this._from = from;\n      this._to = to;\n      this._promises = undefined;\n    }\n\n    active() {\n      return this._active;\n    }\n\n    update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n\n        const currentValue = this._target[this._prop];\n        const elapsed = date - this._start;\n        const remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n\n    cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n\n        this._notify(false);\n      }\n    }\n\n    tick(date) {\n      const elapsed = date - this._start;\n      const duration = this._duration;\n      const prop = this._prop;\n      const from = this._from;\n      const loop = this._loop;\n      const to = this._to;\n      let factor;\n      this._active = from !== to && (loop || elapsed < duration);\n\n      if (!this._active) {\n        this._target[prop] = to;\n\n        this._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n\n    wait() {\n      const promises = this._promises || (this._promises = []);\n      return new Promise((res, rej) => {\n        promises.push({\n          res,\n          rej\n        });\n      });\n    }\n\n    _notify(resolved) {\n      const method = resolved ? 'res' : 'rej';\n      const promises = this._promises || [];\n\n      for (let i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n\n  }\n\n  const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\n  const colors = ['color', 'borderColor', 'backgroundColor'];\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined\n  });\n  const animationOptions = Object.keys(defaults.animation);\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n  });\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    }\n  });\n  defaults.describe('animations', {\n    _fallback: 'animation'\n  });\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0\n        }\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0\n        }\n      }\n    }\n  });\n\n  class Animations {\n    constructor(chart, config) {\n      this._chart = chart;\n      this._properties = new Map();\n      this.configure(config);\n    }\n\n    configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n\n      const animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(key => {\n        const cfg = config[key];\n\n        if (!isObject(cfg)) {\n          return;\n        }\n\n        const resolved = {};\n\n        for (const option of animationOptions) {\n          resolved[option] = cfg[option];\n        }\n\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n\n    _animateOptions(target, values) {\n      const newOptions = values.options;\n      const options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      const animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(() => {\n          target.options = newOptions;\n        }, () => {});\n      }\n\n      return animations;\n    }\n\n    _createAnimations(target, values) {\n      const animatedProps = this._properties;\n      const animations = [];\n      const running = target.$animations || (target.$animations = {});\n      const props = Object.keys(values);\n      const date = Date.now();\n      let i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        const prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push(...this._animateOptions(target, values));\n          continue;\n        }\n\n        const value = values[prop];\n        let animation = running[prop];\n        const cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n\n    update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      const animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n\n  }\n\n  function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n\n    for (let i = 0; i < keys.length; i++) {\n      const anim = animations[keys[i]];\n\n      if (anim && anim.active()) {\n        running.push(anim.wait());\n      }\n    }\n\n    return Promise.all(running);\n  }\n\n  function resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n      return;\n    }\n\n    let options = target.options;\n\n    if (!options) {\n      target.options = newOptions;\n      return;\n    }\n\n    if (options.$shared) {\n      target.options = options = Object.assign({}, options, {\n        $shared: false,\n        $animations: {}\n      });\n    }\n\n    return options;\n  }\n\n  function scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n      start: reverse ? max : min,\n      end: reverse ? min : max\n    };\n  }\n\n  function defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n      return false;\n    }\n\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n      top: y.end,\n      right: x.end,\n      bottom: y.start,\n      left: x.start\n    };\n  }\n\n  function toClip(value) {\n    let t, r, b, l;\n\n    if (isObject(value)) {\n      t = value.top;\n      r = value.right;\n      b = value.bottom;\n      l = value.left;\n    } else {\n      t = r = b = l = value;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      disabled: value === false\n    };\n  }\n\n  function getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      keys.push(metasets[i].index);\n    }\n\n    return keys;\n  }\n\n  function applyStack(stack, value, dsIndex) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n\n    if (value === null) {\n      return;\n    }\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      datasetIndex = +keys[i];\n\n      if (datasetIndex === dsIndex) {\n        if (options.all) {\n          continue;\n        }\n\n        break;\n      }\n\n      otherValue = stack.values[datasetIndex];\n\n      if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n        value += otherValue;\n      }\n    }\n\n    return value;\n  }\n\n  function convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      adata[i] = {\n        x: key,\n        y: data[key]\n      };\n    }\n\n    return adata;\n  }\n\n  function isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n  }\n\n  function getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n  }\n\n  function getUserBounds(scale) {\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = scale.getUserBounds();\n    return {\n      min: minDefined ? min : Number.NEGATIVE_INFINITY,\n      max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n  }\n\n  function getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n  }\n\n  function getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n      const value = stack[meta.index];\n\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n\n    return null;\n  }\n\n  function updateStacks(controller, parsed) {\n    const {\n      chart,\n      _cachedMeta: meta\n    } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const {\n      iScale,\n      vScale,\n      index: datasetIndex\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n\n    for (let i = 0; i < ilen; ++i) {\n      const item = parsed[i];\n      const {\n        [iAxis]: index,\n        [vAxis]: value\n      } = item;\n      const itemStacks = item._stacks || (item._stacks = {});\n      stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n      stack[datasetIndex] = value;\n      stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n      stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n  }\n\n  function getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n  }\n\n  function createDatasetContext(parent, index) {\n    return createContext(parent, {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    });\n  }\n\n  function createDataContext(parent, index, element) {\n    return createContext(parent, {\n      active: false,\n      dataIndex: index,\n      parsed: undefined,\n      raw: undefined,\n      element,\n      index,\n      mode: 'default',\n      type: 'data'\n    });\n  }\n\n  function clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n\n    if (!axis) {\n      return;\n    }\n\n    items = items || meta._parsed;\n\n    for (const parsed of items) {\n      const stacks = parsed._stacks;\n\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n\n      delete stacks[axis][datasetIndex];\n    }\n  }\n\n  const isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\n  const cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\n  const createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n\n  class DatasetController {\n    constructor(chart, datasetIndex) {\n      this.chart = chart;\n      this._ctx = chart.ctx;\n      this.index = datasetIndex;\n      this._cachedDataOpts = {};\n      this._cachedMeta = this.getMeta();\n      this._type = this._cachedMeta.type;\n      this.options = undefined;\n      this._parsing = false;\n      this._data = undefined;\n      this._objectData = undefined;\n      this._sharedOptions = undefined;\n      this._drawStart = undefined;\n      this._drawCount = undefined;\n      this.enableOptionSharing = false;\n      this.$context = undefined;\n      this._syncList = [];\n      this.initialize();\n    }\n\n    initialize() {\n      const meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n\n    updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n\n      this.index = datasetIndex;\n    }\n\n    linkScales() {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const dataset = this.getDataset();\n\n      const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n      const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      const indexAxis = meta.indexAxis;\n      const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n\n    getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n\n    getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n\n    getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n\n    _getOtherScale(scale) {\n      const meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n\n    reset() {\n      this._update('reset');\n    }\n\n    _destroy() {\n      const meta = this._cachedMeta;\n\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n\n    _dataCheck() {\n      const dataset = this.getDataset();\n      const data = dataset.data || (dataset.data = []);\n      const _data = this._data;\n\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          const meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n\n    addElements() {\n      const meta = this._cachedMeta;\n\n      this._dataCheck();\n\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n\n    buildOrUpdateElements(resetNewElements) {\n      const meta = this._cachedMeta;\n      const dataset = this.getDataset();\n      let stackChanged = false;\n\n      this._dataCheck();\n\n      const oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      this._resyncElements(resetNewElements);\n\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n\n    configure() {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetScopeKeys(this._type);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n\n    parse(start, count) {\n      const {\n        _cachedMeta: meta,\n        _data: data\n      } = this;\n      const {\n        iScale,\n        _stacked\n      } = meta;\n      const iAxis = iScale.axis;\n      let sorted = start === 0 && count === data.length ? true : meta._sorted;\n      let prev = start > 0 && meta._parsed[start - 1];\n      let i, cur, parsed;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n\n        const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n\n    parsePrimitiveData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const labels = iScale.getLabels();\n      const singleScale = iScale === vScale;\n      const parsed = new Array(count);\n      let i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        parsed[i] = {\n          [iAxis]: singleScale || iScale.parse(labels[index], index),\n          [vAxis]: vScale.parse(data[index], index)\n        };\n      }\n\n      return parsed;\n    }\n\n    parseArrayData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n\n    parseObjectData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n\n    getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n\n    getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n\n    applyStack(scale, parsed, mode) {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const value = parsed[scale.axis];\n      const stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return applyStack(stack, value, meta.index, {\n        mode\n      });\n    }\n\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      const parsedValue = parsed[scale.axis];\n      let value = parsedValue === null ? NaN : parsedValue;\n      const values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        value = applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n\n    getMinMax(scale, canStack) {\n      const meta = this._cachedMeta;\n      const _parsed = meta._parsed;\n      const sorted = meta._sorted && scale === meta.iScale;\n      const ilen = _parsed.length;\n\n      const otherScale = this._getOtherScale(scale);\n\n      const stack = createStack(canStack, meta, this.chart);\n      const range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      const {\n        min: otherMin,\n        max: otherMax\n      } = getUserBounds(otherScale);\n      let i, parsed;\n\n      function _skip() {\n        parsed = _parsed[i];\n        const otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n\n    getAllParsedValues(scale) {\n      const parsed = this._cachedMeta._parsed;\n      const values = [];\n      let i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n\n    getMaxOverflow() {\n      return false;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const vScale = meta.vScale;\n      const parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n\n    _update(mode) {\n      const meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n\n    update(mode) {}\n\n    draw() {\n      const ctx = this._ctx;\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const elements = meta.data || [];\n      const area = chart.chartArea;\n      const active = [];\n      const start = this._drawStart || 0;\n      const count = this._drawCount || elements.length - start;\n      const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      let i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        const element = elements[i];\n\n        if (element.hidden) {\n          continue;\n        }\n\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n\n    getStyle(index, active) {\n      const mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n\n    getContext(index, active, mode) {\n      const dataset = this.getDataset();\n      let context;\n\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        const element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n\n    resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n\n    resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n\n    _resolveElementOptions(elementType) {\n      let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      let index = arguments.length > 2 ? arguments[2] : undefined;\n      const active = mode === 'active';\n      const cache = this._cachedDataOpts;\n      const cacheKey = elementType + '-' + mode;\n      const cached = cache[cacheKey];\n      const sharing = this.enableOptionSharing && defined(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      const config = this.chart.config;\n      const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      const names = Object.keys(defaults.elements[elementType]);\n\n      const context = () => this.getContext(index, active);\n\n      const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n\n    _resolveAnimations(index, transition, active) {\n      const chart = this.chart;\n      const cache = this._cachedDataOpts;\n      const cacheKey = `animation-${transition}`;\n      const cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      let options;\n\n      if (chart.options.animation !== false) {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n\n      const animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n\n    getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n\n    includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n\n    updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n\n    updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n\n    _setStyle(element, index, mode, active) {\n      element.active = active;\n      const options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n\n    removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n\n    setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n\n    _removeDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n\n    _setDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n\n    _resyncElements(resetNewElements) {\n      const data = this._data;\n      const elements = this._cachedMeta.data;\n\n      for (const [method, arg1, arg2] of this._syncList) {\n        this[method](arg1, arg2);\n      }\n\n      this._syncList = [];\n      const numMeta = elements.length;\n      const numData = data.length;\n      const count = Math.min(numData, numMeta);\n\n      if (count) {\n        this.parse(0, count);\n      }\n\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n\n    _insertElements(start, count) {\n      let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      const meta = this._cachedMeta;\n      const data = meta.data;\n      const end = start + count;\n      let i;\n\n      const move = arr => {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n\n      this.parse(start, count);\n\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n\n    updateElements(element, start, count, mode) {}\n\n    _removeElements(start, count) {\n      const meta = this._cachedMeta;\n\n      if (this._parsing) {\n        const removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n\n    _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        const [method, arg1, arg2] = args;\n        this[method](arg1, arg2);\n      }\n\n      this.chart._dataChanges.push([this.index, ...args]);\n    }\n\n    _onDataPush() {\n      const count = arguments.length;\n\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n\n    _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n\n    _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n\n    _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n\n      const newCount = arguments.length - 2;\n\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n\n    _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n\n  }\n\n  DatasetController.defaults = {};\n  DatasetController.prototype.datasetElementType = null;\n  DatasetController.prototype.dataElementType = null;\n\n  class Element {\n    constructor() {\n      this.x = undefined;\n      this.y = undefined;\n      this.active = false;\n      this.options = undefined;\n      this.$animations = undefined;\n    }\n\n    tooltipPosition(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n\n    hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n\n    getProps(props, final) {\n      const anims = this.$animations;\n\n      if (!final || !anims) {\n        return this;\n      }\n\n      const ret = {};\n      props.forEach(prop => {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n      });\n      return ret;\n    }\n\n  }\n\n  Element.defaults = {};\n  Element.defaultRoutes = undefined;\n  const formatters = {\n    values(value) {\n      return isArray(value) ? value : '' + value;\n    },\n\n    numeric(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n\n      const locale = this.chart.options.locale;\n      let notation;\n      let delta = tickValue;\n\n      if (ticks.length > 1) {\n        const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n        if (maxTick < 1e-4 || maxTick > 1e+15) {\n          notation = 'scientific';\n        }\n\n        delta = calculateDelta(tickValue, ticks);\n      }\n\n      const logDelta = log10(Math.abs(delta));\n      const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n      const options = {\n        notation,\n        minimumFractionDigits: numDecimal,\n        maximumFractionDigits: numDecimal\n      };\n      Object.assign(options, this.options.ticks.format);\n      return formatNumber(tickValue, locale, options);\n    },\n\n    logarithmic(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n\n      const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n      if (remain === 1 || remain === 2 || remain === 5) {\n        return formatters.numeric.call(this, tickValue, index, ticks);\n      }\n\n      return '';\n    }\n\n  };\n\n  function calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n      delta = tickValue - Math.floor(tickValue);\n    }\n\n    return delta;\n  }\n\n  var Ticks = {\n    formatters\n  };\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n    bounds: 'ticks',\n    grace: 0,\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderWidth: 1\n    },\n    title: {\n      display: false,\n      text: '',\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2\n    }\n  });\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.grid', 'borderColor', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n  });\n  defaults.describe('scales', {\n    _fallback: 'scale'\n  });\n  defaults.describe('scale.ticks', {\n    _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: name => name !== 'backdropPadding'\n  });\n\n  function autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n\n    if (numMajorIndices > ticksLimit) {\n      skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n      return newTicks;\n    }\n\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n    if (numMajorIndices > 0) {\n      let i, ilen;\n      const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n      skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n      for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n        skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n      }\n\n      skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n      return newTicks;\n    }\n\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n  }\n\n  function determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n\n    const tickLength = scale._tickSize();\n\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n  }\n\n  function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n\n    if (!evenMajorSpacing) {\n      return Math.max(spacing, 1);\n    }\n\n    const factors = _factorize(evenMajorSpacing);\n\n    for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n      const factor = factors[i];\n\n      if (factor > spacing) {\n        return factor;\n      }\n    }\n\n    return Math.max(spacing, 1);\n  }\n\n  function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (ticks[i].major) {\n        result.push(i);\n      }\n    }\n\n    return result;\n  }\n\n  function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n\n    for (i = 0; i < ticks.length; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = majorIndices[count * spacing];\n      }\n    }\n  }\n\n  function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n\n    if (majorEnd) {\n      length = majorEnd - majorStart;\n      spacing = length / Math.floor(length / spacing);\n    }\n\n    next = start;\n\n    while (next < 0) {\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n\n    for (i = Math.max(start, 0); i < end; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = Math.round(start + count * spacing);\n      }\n    }\n  }\n\n  function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n\n    if (len < 2) {\n      return false;\n    }\n\n    for (diff = arr[0], i = 1; i < len; ++i) {\n      if (arr[i] - arr[i - 1] !== diff) {\n        return false;\n      }\n    }\n\n    return diff;\n  }\n\n  const reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\n  const offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n  function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n\n    for (; i < len; i += increment) {\n      result.push(arr[Math.floor(i)]);\n    }\n\n    return result;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n\n    if (offsetGridLines) {\n      if (length === 1) {\n        offset = Math.max(lineValue - start, end - lineValue);\n      } else if (index === 0) {\n        offset = (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n      }\n\n      lineValue += validIndex < index ? offset : -offset;\n\n      if (lineValue < start - epsilon || lineValue > end + epsilon) {\n        return;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function garbageCollect(caches, length) {\n    each(caches, cache => {\n      const gc = cache.gc;\n      const gcLen = gc.length / 2;\n      let i;\n\n      if (gcLen > length) {\n        for (i = 0; i < gcLen; ++i) {\n          delete cache.data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n    });\n  }\n\n  function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n  }\n\n  function getTitleHeight(options, fallback) {\n    if (!options.display) {\n      return 0;\n    }\n\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n  }\n\n  function createScaleContext(parent, scale) {\n    return createContext(parent, {\n      scale,\n      type: 'scale'\n    });\n  }\n\n  function createTickContext(parent, index, tick) {\n    return createContext(parent, {\n      tick,\n      index,\n      type: 'tick'\n    });\n  }\n\n  function titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n      ret = reverseAlign(ret);\n    }\n\n    return ret;\n  }\n\n  function titleArgs(scale, offset, position, align) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      chart\n    } = scale;\n    const {\n      chartArea,\n      scales\n    } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n\n    if (scale.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n\n      if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n      } else if (position === 'center') {\n        titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n      } else {\n        titleY = offsetFromEdge(scale, position, offset);\n      }\n\n      maxWidth = right - left;\n    } else {\n      if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n      } else if (position === 'center') {\n        titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n      } else {\n        titleX = offsetFromEdge(scale, position, offset);\n      }\n\n      titleY = _alignStartEnd(align, bottom, top);\n      rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  class Scale extends Element {\n    constructor(cfg) {\n      super();\n      this.id = cfg.id;\n      this.type = cfg.type;\n      this.options = undefined;\n      this.ctx = cfg.ctx;\n      this.chart = cfg.chart;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this._margins = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n      this.maxWidth = undefined;\n      this.maxHeight = undefined;\n      this.paddingTop = undefined;\n      this.paddingBottom = undefined;\n      this.paddingLeft = undefined;\n      this.paddingRight = undefined;\n      this.axis = undefined;\n      this.labelRotation = undefined;\n      this.min = undefined;\n      this.max = undefined;\n      this._range = undefined;\n      this.ticks = [];\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this._labelSizes = null;\n      this._length = 0;\n      this._maxLength = 0;\n      this._longestTextCache = {};\n      this._startPixel = undefined;\n      this._endPixel = undefined;\n      this._reversePixels = false;\n      this._userMax = undefined;\n      this._userMin = undefined;\n      this._suggestedMax = undefined;\n      this._suggestedMin = undefined;\n      this._ticksLength = 0;\n      this._borderValue = 0;\n      this._cache = {};\n      this._dataLimitsCached = false;\n      this.$context = undefined;\n    }\n\n    init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n\n    parse(raw, index) {\n      return raw;\n    }\n\n    getUserBounds() {\n      let {\n        _userMin,\n        _userMax,\n        _suggestedMin,\n        _suggestedMax\n      } = this;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n\n    getMinMax(canStack) {\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min,\n          max\n        };\n      }\n\n      const metas = this.getMatchingVisibleMetas();\n\n      for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n\n    getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n\n    getTicks() {\n      return this.ticks;\n    }\n\n    getLabels() {\n      const data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n\n    beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n\n    beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n\n    update(maxWidth, maxHeight, margins) {\n      const {\n        beginAtZero,\n        grace,\n        ticks: tickOpts\n      } = this.options;\n      const sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      const samplingEnabled = sampleSize < this.ticks.length;\n\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n      }\n\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n\n    configure() {\n      let reversePixels = this.options.reverse;\n      let startPixel, endPixel;\n\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n\n    afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n\n    beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n\n    setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n\n    afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n\n    _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n\n    beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n\n    determineDataLimits() {}\n\n    afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n\n    beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n\n    buildTicks() {\n      return [];\n    }\n\n    afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n\n    beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n\n    generateTickLabels(ticks) {\n      const tickOpts = this.options.ticks;\n      let i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n\n    afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n\n    beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n\n    calculateLabelRotation() {\n      const options = this.options;\n      const tickOpts = options.ticks;\n      const numTicks = this.ticks.length;\n      const minRotation = tickOpts.minRotation || 0;\n      const maxRotation = tickOpts.maxRotation;\n      let labelRotation = minRotation;\n      let tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n\n      const labelSizes = this._getLabelSizes();\n\n      const maxLabelWidth = labelSizes.widest.width;\n      const maxLabelHeight = labelSizes.highest.height;\n\n      const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      this.labelRotation = labelRotation;\n    }\n\n    afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n\n    beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n\n    fit() {\n      const minSize = {\n        width: 0,\n        height: 0\n      };\n      const {\n        chart,\n        options: {\n          ticks: tickOpts,\n          title: titleOpts,\n          grid: gridOpts\n        }\n      } = this;\n\n      const display = this._isVisible();\n\n      const isHorizontal = this.isHorizontal();\n\n      if (display) {\n        const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && this.ticks.length) {\n          const {\n            first,\n            last,\n            widest,\n            highest\n          } = this._getLabelSizes();\n\n          const tickPadding = tickOpts.padding * 2;\n          const angleRadians = toRadians(this.labelRotation);\n          const cos = Math.cos(angleRadians);\n          const sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      this._handleMargins();\n\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n\n    _calculatePadding(first, last, sin, cos) {\n      const {\n        ticks: {\n          align,\n          padding\n        },\n        position\n      } = this.options;\n      const isRotated = this.labelRotation !== 0;\n      const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n      if (this.isHorizontal()) {\n        const offsetLeft = this.getPixelForTick(0) - this.left;\n        const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        let paddingLeft = 0;\n        let paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        let paddingTop = last.height / 2;\n        let paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n\n    _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n\n    afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n\n    isHorizontal() {\n      const {\n        axis,\n        position\n      } = this.options;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n\n    isFullSize() {\n      return this.options.fullSize;\n    }\n\n    _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      let i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n\n      this.afterTickToLabelConversion();\n    }\n\n    _getLabelSizes() {\n      let labelSizes = this._labelSizes;\n\n      if (!labelSizes) {\n        const sampleSize = this.options.ticks.sampleSize;\n        let ticks = this.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n\n      return labelSizes;\n    }\n\n    _computeLabelSizes(ticks, length) {\n      const {\n        ctx,\n        _longestTextCache: caches\n      } = this;\n      const widths = [];\n      const heights = [];\n      let widestLabelSize = 0;\n      let highestLabelSize = 0;\n      let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      const widest = widths.indexOf(widestLabelSize);\n      const highest = heights.indexOf(highestLabelSize);\n\n      const valueAt = idx => ({\n        width: widths[idx] || 0,\n        height: heights[idx] || 0\n      });\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths,\n        heights\n      };\n    }\n\n    getLabelForValue(value) {\n      return value;\n    }\n\n    getPixelForValue(value, index) {\n      return NaN;\n    }\n\n    getValueForPixel(pixel) {}\n\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n\n    getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      const pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n\n    getDecimalForPixel(pixel) {\n      const decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n\n    getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n\n    getBaseValue() {\n      const {\n        min,\n        max\n      } = this;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n\n    getContext(index) {\n      const ticks = this.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        const tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n\n    _tickSize() {\n      const optionTicks = this.options.ticks;\n      const rot = toRadians(this.labelRotation);\n      const cos = Math.abs(Math.cos(rot));\n      const sin = Math.abs(Math.sin(rot));\n\n      const labelSizes = this._getLabelSizes();\n\n      const padding = optionTicks.autoSkipPadding || 0;\n      const w = labelSizes ? labelSizes.widest.width + padding : 0;\n      const h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n\n    _isVisible() {\n      const display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n\n    _computeGridLineItems(chartArea) {\n      const axis = this.axis;\n      const chart = this.chart;\n      const options = this.options;\n      const {\n        grid,\n        position\n      } = options;\n      const offset = grid.offset;\n      const isHorizontal = this.isHorizontal();\n      const ticks = this.ticks;\n      const ticksLength = ticks.length + (offset ? 1 : 0);\n      const tl = getTickMarkLength(grid);\n      const items = [];\n      const borderOpts = grid.setContext(this.getContext());\n      const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      const axisHalfWidth = axisWidth / 2;\n\n      const alignBorderValue = function (pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n\n      let borderValue, i, lineValue, alignedLineValue;\n      let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n      for (i = 0; i < ticksLength; i += step) {\n        const optsAtIndex = grid.setContext(this.getContext(i));\n        const lineWidth = optsAtIndex.lineWidth;\n        const lineColor = optsAtIndex.color;\n        const borderDash = grid.borderDash || [];\n        const borderDashOffset = optsAtIndex.borderDashOffset;\n        const tickWidth = optsAtIndex.tickWidth;\n        const tickColor = optsAtIndex.tickColor;\n        const tickBorderDash = optsAtIndex.tickBorderDash || [];\n        const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1,\n          ty1,\n          tx2,\n          ty2,\n          x1,\n          y1,\n          x2,\n          y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash,\n          borderDashOffset,\n          tickWidth,\n          tickColor,\n          tickBorderDash,\n          tickBorderDashOffset\n        });\n      }\n\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n\n    _computeLabelItems(chartArea) {\n      const axis = this.axis;\n      const options = this.options;\n      const {\n        position,\n        ticks: optionTicks\n      } = options;\n      const isHorizontal = this.isHorizontal();\n      const ticks = this.ticks;\n      const {\n        align,\n        crossAlign,\n        padding,\n        mirror\n      } = optionTicks;\n      const tl = getTickMarkLength(options.grid);\n      const tickAndPadding = tl + padding;\n      const hTickAndPadding = mirror ? -padding : tickAndPadding;\n      const rotation = -toRadians(this.labelRotation);\n      const items = [];\n      let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      let textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        const ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        const ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          x = this.chart.scales[positionAxisID].getPixelForValue(value);\n        }\n\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      const labelSizes = this._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        const optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        const halfCount = lineCount / 2;\n        const color = optsAtIndex.color;\n        const strokeColor = optsAtIndex.textStrokeColor;\n        const strokeWidth = optsAtIndex.textStrokeWidth;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        let backdrop;\n\n        if (optsAtIndex.showLabelBackdrop) {\n          const labelPadding = toPadding(optsAtIndex.backdropPadding);\n          const height = labelSizes.heights[i];\n          const width = labelSizes.widths[i];\n          let top = y + textOffset - labelPadding.top;\n          let left = x - labelPadding.left;\n\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n\n            case 'bottom':\n              top -= height;\n              break;\n          }\n\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n\n            case 'right':\n              left -= width;\n              break;\n          }\n\n          backdrop = {\n            left,\n            top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n\n        items.push({\n          rotation,\n          label,\n          font,\n          color,\n          strokeColor,\n          strokeWidth,\n          textOffset,\n          textAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop\n        });\n      }\n\n      return items;\n    }\n\n    _getXAxisLabelAlignment() {\n      const {\n        position,\n        ticks\n      } = this.options;\n      const rotation = -toRadians(this.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      let align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n\n      return align;\n    }\n\n    _getYAxisLabelAlignment(tl) {\n      const {\n        position,\n        ticks: {\n          crossAlign,\n          mirror,\n          padding\n        }\n      } = this.options;\n\n      const labelSizes = this._getLabelSizes();\n\n      const tickAndPadding = tl + padding;\n      const widest = labelSizes.widest.width;\n      let textAlign;\n      let x;\n\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign,\n        x\n      };\n    }\n\n    _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n\n      const chart = this.chart;\n      const position = this.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n\n    drawBackground() {\n      const {\n        ctx,\n        options: {\n          backgroundColor\n        },\n        left,\n        top,\n        width,\n        height\n      } = this;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n\n    getLineWidthForValue(value) {\n      const grid = this.options.grid;\n\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      const ticks = this.ticks;\n      const index = ticks.findIndex(t => t.value === value);\n\n      if (index >= 0) {\n        const opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n\n    drawGrid(chartArea) {\n      const grid = this.options.grid;\n      const ctx = this.ctx;\n\n      const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n      let i, ilen;\n\n      const drawLine = (p1, p2, style) => {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          const item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n\n    drawBorder() {\n      const {\n        chart,\n        ctx,\n        options: {\n          grid\n        }\n      } = this;\n      const borderOpts = grid.setContext(this.getContext());\n      const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n      if (!axisWidth) {\n        return;\n      }\n\n      const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      const borderValue = this._borderValue;\n      let x1, x2, y1, y2;\n\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    drawLabels(chartArea) {\n      const optionTicks = this.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      const ctx = this.ctx;\n\n      const area = this._computeLabelArea();\n\n      if (area) {\n        clipArea(ctx, area);\n      }\n\n      const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n      let i, ilen;\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        const tickFont = item.font;\n        const label = item.label;\n\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n\n        let y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n\n    drawTitle() {\n      const {\n        ctx,\n        options: {\n          position,\n          title,\n          reverse\n        }\n      } = this;\n\n      if (!title.display) {\n        return;\n      }\n\n      const font = toFont(title.font);\n      const padding = toPadding(title.padding);\n      const align = title.align;\n      let offset = font.lineHeight / 2;\n\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = titleArgs(this, offset, position, align);\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth,\n        rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n\n    draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n\n    _layers() {\n      const opts = this.options;\n      const tz = opts.ticks && opts.ticks.z || 0;\n      const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: chartArea => {\n            this.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: chartArea => {\n          this.drawBackground();\n          this.drawGrid(chartArea);\n          this.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: () => {\n          this.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: chartArea => {\n          this.drawLabels(chartArea);\n        }\n      }];\n    }\n\n    getMatchingVisibleMetas(type) {\n      const metas = this.chart.getSortedVisibleDatasetMetas();\n      const axisID = this.axis + 'AxisID';\n      const result = [];\n      let i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        const meta = metas[i];\n\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n\n    _resolveTickFontOptions(index) {\n      const opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n\n    _maxDigits() {\n      const fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n\n  }\n\n  class TypedRegistry {\n    constructor(type, scope, override) {\n      this.type = type;\n      this.scope = scope;\n      this.override = override;\n      this.items = Object.create(null);\n    }\n\n    isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n\n    register(item) {\n      const proto = Object.getPrototypeOf(item);\n      let parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n\n    get(id) {\n      return this.items[id];\n    }\n\n    unregister(item) {\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n\n  }\n\n  function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n    defaults.set(scope, itemDefaults);\n\n    if (item.defaultRoutes) {\n      routeDefaults(scope, item.defaultRoutes);\n    }\n\n    if (item.descriptors) {\n      defaults.describe(scope, item.descriptors);\n    }\n  }\n\n  function routeDefaults(scope, routes) {\n    Object.keys(routes).forEach(property => {\n      const propertyParts = property.split('.');\n      const sourceName = propertyParts.pop();\n      const sourceScope = [scope].concat(propertyParts).join('.');\n      const parts = routes[property].split('.');\n      const targetName = parts.pop();\n      const targetScope = parts.join('.');\n      defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n  }\n\n  function isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n  }\n\n  class Registry {\n    constructor() {\n      this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n      this.elements = new TypedRegistry(Element, 'elements');\n      this.plugins = new TypedRegistry(Object, 'plugins');\n      this.scales = new TypedRegistry(Scale, 'scales');\n      this._typedRegistries = [this.controllers, this.scales, this.elements];\n    }\n\n    add() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._each('register', args);\n    }\n\n    remove() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this._each('unregister', args);\n    }\n\n    addControllers() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this._each('register', args, this.controllers);\n    }\n\n    addElements() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      this._each('register', args, this.elements);\n    }\n\n    addPlugins() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      this._each('register', args, this.plugins);\n    }\n\n    addScales() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      this._each('register', args, this.scales);\n    }\n\n    getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n\n    getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n\n    getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n\n    getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n\n    removeControllers() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      this._each('unregister', args, this.controllers);\n    }\n\n    removeElements() {\n      for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n        args[_key11] = arguments[_key11];\n      }\n\n      this._each('unregister', args, this.elements);\n    }\n\n    removePlugins() {\n      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n        args[_key12] = arguments[_key12];\n      }\n\n      this._each('unregister', args, this.plugins);\n    }\n\n    removeScales() {\n      for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n        args[_key13] = arguments[_key13];\n      }\n\n      this._each('unregister', args, this.scales);\n    }\n\n    _each(method, args, typedRegistry) {\n      [...args].forEach(arg => {\n        const reg = typedRegistry || this._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n          this._exec(method, reg, arg);\n        } else {\n          each(arg, item => {\n            const itemReg = typedRegistry || this._getRegistryForType(item);\n\n            this._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n\n    _exec(method, registry, component) {\n      const camelMethod = _capitalize(method);\n\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n\n    _getRegistryForType(type) {\n      for (let i = 0; i < this._typedRegistries.length; i++) {\n        const reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n\n    _get(id, typedRegistry, type) {\n      const item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n\n  }\n\n  var registry = new Registry();\n\n  class PluginService {\n    constructor() {\n      this._init = [];\n    }\n\n    notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n\n        this._notify(this._init, chart, 'install');\n      }\n\n      const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n      const result = this._notify(descriptors, chart, hook, args);\n\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n\n        this._notify(this._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n\n    _notify(descriptors, chart, hook, args) {\n      args = args || {};\n\n      for (const descriptor of descriptors) {\n        const plugin = descriptor.plugin;\n        const method = plugin[hook];\n        const params = [chart, args, descriptor.options];\n\n        if (callback(method, params, plugin) === false && args.cancelable) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n\n    _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      const descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n\n    _createDescriptors(chart, all) {\n      const config = chart && chart.config;\n      const options = valueOrDefault(config.options && config.options.plugins, {});\n      const plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n\n    _notifyStateChanges(chart) {\n      const previousDescriptors = this._oldCache || [];\n      const descriptors = this._cache;\n\n      const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n\n  }\n\n  function allPlugins(config) {\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n\n    for (let i = 0; i < keys.length; i++) {\n      plugins.push(registry.getPlugin(keys[i]));\n    }\n\n    const local = config.plugins || [];\n\n    for (let i = 0; i < local.length; i++) {\n      const plugin = local[i];\n\n      if (plugins.indexOf(plugin) === -1) {\n        plugins.push(plugin);\n      }\n    }\n\n    return plugins;\n  }\n\n  function getOpts(options, all) {\n    if (!all && options === false) {\n      return null;\n    }\n\n    if (options === true) {\n      return {};\n    }\n\n    return options;\n  }\n\n  function createDescriptors(chart, plugins, options, all) {\n    const result = [];\n    const context = chart.getContext();\n\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n      const id = plugin.id;\n      const opts = getOpts(options[id], all);\n\n      if (opts === null) {\n        continue;\n      }\n\n      result.push({\n        plugin,\n        options: pluginOpts(chart.config, plugin, opts, context)\n      });\n    }\n\n    return result;\n  }\n\n  function pluginOpts(config, plugin, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    return config.createResolver(scopes, context, [''], {\n      scriptable: false,\n      indexable: false,\n      allKeys: true\n    });\n  }\n\n  function getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n  }\n\n  function getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n\n    if (id === '_index_') {\n      axis = indexAxis;\n    } else if (id === '_value_') {\n      axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n\n    return axis;\n  }\n\n  function getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n  }\n\n  function axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n      return 'x';\n    }\n\n    if (position === 'left' || position === 'right') {\n      return 'y';\n    }\n  }\n\n  function determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y') {\n      return id;\n    }\n\n    return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n  }\n\n  function mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n      scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const firstIDs = Object.create(null);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach(id => {\n      const scaleConf = configScales[id];\n\n      if (!isObject(scaleConf)) {\n        return console.error(`Invalid scale configuration for scale: ${id}`);\n      }\n\n      if (scaleConf._proxy) {\n        return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n      }\n\n      const axis = determineAxis(id, scaleConf);\n      const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n      const defaultScaleOptions = chartDefaults.scales || {};\n      firstIDs[axis] = firstIDs[axis] || id;\n      scales[id] = mergeIf(Object.create(null), [{\n        axis\n      }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n    });\n    config.data.datasets.forEach(dataset => {\n      const type = dataset.type || config.type;\n      const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n      const datasetDefaults = overrides[type] || {};\n      const defaultScaleOptions = datasetDefaults.scales || {};\n      Object.keys(defaultScaleOptions).forEach(defaultID => {\n        const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n        const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n        scales[id] = scales[id] || Object.create(null);\n        mergeIf(scales[id], [{\n          axis\n        }, configScales[id], defaultScaleOptions[defaultID]]);\n      });\n    });\n    Object.keys(scales).forEach(key => {\n      const scale = scales[key];\n      mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n    });\n    return scales;\n  }\n\n  function initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n  }\n\n  function initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n  }\n\n  function initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n  }\n\n  const keyCache = new Map();\n  const keysCached = new Set();\n\n  function cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n\n    if (!keys) {\n      keys = generate();\n      keyCache.set(cacheKey, keys);\n      keysCached.add(keys);\n    }\n\n    return keys;\n  }\n\n  const addIfFound = (set, obj, key) => {\n    const opts = resolveObjectKey(obj, key);\n\n    if (opts !== undefined) {\n      set.add(opts);\n    }\n  };\n\n  class Config {\n    constructor(config) {\n      this._config = initConfig(config);\n      this._scopeCache = new Map();\n      this._resolverCache = new Map();\n    }\n\n    get platform() {\n      return this._config.platform;\n    }\n\n    get type() {\n      return this._config.type;\n    }\n\n    set type(type) {\n      this._config.type = type;\n    }\n\n    get data() {\n      return this._config.data;\n    }\n\n    set data(data) {\n      this._config.data = initData(data);\n    }\n\n    get options() {\n      return this._config.options;\n    }\n\n    set options(options) {\n      this._config.options = options;\n    }\n\n    get plugins() {\n      return this._config.plugins;\n    }\n\n    update() {\n      const config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n\n    clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n\n    datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n    }\n\n    datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n    }\n\n    datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n    }\n\n    pluginScopeKeys(plugin) {\n      const id = plugin.id;\n      const type = this.type;\n      return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n    }\n\n    _cachedScopes(mainScope, resetCache) {\n      const _scopeCache = this._scopeCache;\n\n      let cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n\n    getOptionScopes(mainScope, keyLists, resetCache) {\n      const {\n        options,\n        type\n      } = this;\n\n      const cache = this._cachedScopes(mainScope, resetCache);\n\n      const cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      const scopes = new Set();\n      keyLists.forEach(keys => {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(key => addIfFound(scopes, mainScope, key));\n        }\n\n        keys.forEach(key => addIfFound(scopes, options, key));\n        keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n        keys.forEach(key => addIfFound(scopes, defaults, key));\n        keys.forEach(key => addIfFound(scopes, descriptors, key));\n      });\n      const array = Array.from(scopes);\n\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n\n    chartOptionScopes() {\n      const {\n        options,\n        type\n      } = this;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type\n      }, defaults, descriptors];\n    }\n\n    resolveNamedOptions(scopes, names, context) {\n      let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      const result = {\n        $shared: true\n      };\n      const {\n        resolver,\n        subPrefixes\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      let options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        const subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n\n      for (const prop of names) {\n        result[prop] = options[prop];\n      }\n\n      return result;\n    }\n\n    createResolver(scopes, context) {\n      let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      const {\n        resolver\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n\n  }\n\n  function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n\n    if (!cache) {\n      cache = new Map();\n      resolverCache.set(scopes, cache);\n    }\n\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n\n    if (!cached) {\n      const resolver = _createResolver(scopes, prefixes);\n\n      cached = {\n        resolver,\n        subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n      };\n      cache.set(cacheKey, cached);\n    }\n\n    return cached;\n  }\n\n  const hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\n  function needContext(proxy, names) {\n    const {\n      isScriptable,\n      isIndexable\n    } = _descriptors(proxy);\n\n    for (const prop of names) {\n      const scriptable = isScriptable(prop);\n      const indexable = isIndexable(prop);\n      const value = (indexable || scriptable) && proxy[prop];\n\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var version = \"3.7.1\";\n  const KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\n  function positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n  }\n\n  function compare2Level(l1, l2) {\n    return function (a, b) {\n      return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n  }\n\n  function onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [context], chart);\n  }\n\n  function onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [context], chart);\n  }\n\n  function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item && item.length) {\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      item = item.canvas;\n    }\n\n    return item;\n  }\n\n  const instances = {};\n\n  const getChart = key => {\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter(c => c.canvas === canvas).pop();\n  };\n\n  function moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n\n    for (const key of keys) {\n      const intKey = +key;\n\n      if (intKey >= start) {\n        const value = obj[key];\n        delete obj[key];\n\n        if (move > 0 || intKey > start) {\n          obj[intKey + move] = value;\n        }\n      }\n    }\n  }\n\n  function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n      return null;\n    }\n\n    if (isClick) {\n      return lastEvent;\n    }\n\n    return e;\n  }\n\n  class Chart {\n    constructor(item, userConfig) {\n      const config = this.config = new Config(userConfig);\n      const initialCanvas = getCanvas(item);\n      const existingChart = getChart(initialCanvas);\n\n      if (existingChart) {\n        throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n      }\n\n      const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n      this.platform.updateConfig(config);\n      const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n      const canvas = context && context.canvas;\n      const height = canvas && canvas.height;\n      const width = canvas && canvas.width;\n      this.id = uid();\n      this.ctx = context;\n      this.canvas = canvas;\n      this.width = width;\n      this.height = height;\n      this._options = options;\n      this._aspectRatio = this.aspectRatio;\n      this._layers = [];\n      this._metasets = [];\n      this._stacks = undefined;\n      this.boxes = [];\n      this.currentDevicePixelRatio = undefined;\n      this.chartArea = undefined;\n      this._active = [];\n      this._lastEvent = undefined;\n      this._listeners = {};\n      this._responsiveListeners = undefined;\n      this._sortedMetasets = [];\n      this.scales = {};\n      this._plugins = new PluginService();\n      this.$proxies = {};\n      this._hiddenIndices = {};\n      this.attached = false;\n      this._animationsDisabled = undefined;\n      this.$context = undefined;\n      this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n      this._dataChanges = [];\n      instances[this.id] = this;\n\n      if (!context || !canvas) {\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      animator.listen(this, 'complete', onAnimationsComplete);\n      animator.listen(this, 'progress', onAnimationProgress);\n\n      this._initialize();\n\n      if (this.attached) {\n        this.update();\n      }\n    }\n\n    get aspectRatio() {\n      const {\n        options: {\n          aspectRatio,\n          maintainAspectRatio\n        },\n        width,\n        height,\n        _aspectRatio\n      } = this;\n\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n\n    get data() {\n      return this.config.data;\n    }\n\n    set data(data) {\n      this.config.data = data;\n    }\n\n    get options() {\n      return this._options;\n    }\n\n    set options(options) {\n      this.config.options = options;\n    }\n\n    _initialize() {\n      this.notifyPlugins('beforeInit');\n\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n\n    clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n\n    stop() {\n      animator.stop(this);\n      return this;\n    }\n\n    resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width,\n          height\n        };\n      }\n    }\n\n    _resize(width, height) {\n      const options = this.options;\n      const canvas = this.canvas;\n      const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      const mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n\n    ensureScalesHaveIDs() {\n      const options = this.options;\n      const scalesOptions = options.scales || {};\n      each(scalesOptions, (axisOptions, axisID) => {\n        axisOptions.id = axisID;\n      });\n    }\n\n    buildOrUpdateScales() {\n      const options = this.options;\n      const scaleOpts = options.scales;\n      const scales = this.scales;\n      const updated = Object.keys(scales).reduce((obj, id) => {\n        obj[id] = false;\n        return obj;\n      }, {});\n      let items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(id => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      each(items, item => {\n        const scaleOptions = item.options;\n        const id = scaleOptions.id;\n        const axis = determineAxis(id, scaleOptions);\n        const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        let scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          const scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id,\n            type: scaleType,\n            ctx: this.ctx,\n            chart: this\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      each(updated, (hasUpdated, id) => {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, scale => {\n        layouts.configure(this, scale, scale.options);\n        layouts.addBox(this, scale);\n      });\n    }\n\n    _updateMetasets() {\n      const metasets = this._metasets;\n      const numData = this.data.datasets.length;\n      const numMeta = metasets.length;\n      metasets.sort((a, b) => a.index - b.index);\n\n      if (numMeta > numData) {\n        for (let i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n\n    _removeUnreferencedMetasets() {\n      const {\n        _metasets: metasets,\n        data: {\n          datasets\n        }\n      } = this;\n\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n\n      metasets.forEach((meta, index) => {\n        if (datasets.filter(x => x === meta._dataset).length === 0) {\n          this._destroyDatasetMeta(index);\n        }\n      });\n    }\n\n    buildOrUpdateControllers() {\n      const newControllers = [];\n      const datasets = this.data.datasets;\n      let i, ilen;\n\n      this._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        const dataset = datasets[i];\n        let meta = this.getDatasetMeta(i);\n        const type = dataset.type || this.config.type;\n\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n\n          meta = this.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          const ControllerClass = registry.getController(type);\n          const {\n            datasetElementType,\n            dataElementType\n          } = defaults.datasets[type];\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      this._updateMetasets();\n\n      return newControllers;\n    }\n\n    _resetElements() {\n      each(this.data.datasets, (dataset, datasetIndex) => {\n        this.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n\n    reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n\n    update(mode) {\n      const config = this.config;\n      config.update();\n      const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      const animsDisabled = this._animationsDisabled = !options.animation;\n\n      this._updateScales();\n\n      this._checkEventBindings();\n\n      this._updateHiddenIndices();\n\n      this._plugins.invalidate();\n\n      if (this.notifyPlugins('beforeUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      const newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      let minPadding = 0;\n\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        const {\n          controller\n        } = this.getDatasetMeta(i);\n        const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n      this._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        each(newControllers, controller => {\n          controller.reset();\n        });\n      }\n\n      this._updateDatasets(mode);\n\n      this.notifyPlugins('afterUpdate', {\n        mode\n      });\n\n      this._layers.sort(compare2Level('z', '_idx'));\n\n      const {\n        _active,\n        _lastEvent\n      } = this;\n\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n\n      this.render();\n    }\n\n    _updateScales() {\n      each(this.scales, scale => {\n        layouts.removeBox(this, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n\n    _checkEventBindings() {\n      const options = this.options;\n      const existingEvents = new Set(Object.keys(this._listeners));\n      const newEvents = new Set(options.events);\n\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n\n    _updateHiddenIndices() {\n      const {\n        _hiddenIndices\n      } = this;\n      const changes = this._getUniformDataChanges() || [];\n\n      for (const {\n        method,\n        start,\n        count\n      } of changes) {\n        const move = method === '_removeElements' ? -count : count;\n        moveNumericKeys(_hiddenIndices, start, move);\n      }\n    }\n\n    _getUniformDataChanges() {\n      const _dataChanges = this._dataChanges;\n\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n\n      this._dataChanges = [];\n      const datasetCount = this.data.datasets.length;\n\n      const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n\n      const changeSet = makeSet(0);\n\n      for (let i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n\n      return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n        method: a[1],\n        start: +a[2],\n        count: +a[3]\n      }));\n    }\n\n    _updateLayout(minPadding) {\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height, minPadding);\n      const area = this.chartArea;\n      const noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, box => {\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        this._layers.push(...box._layers());\n      }, this);\n\n      this._layers.forEach((item, index) => {\n        item._idx = index;\n      });\n\n      this.notifyPlugins('afterLayout');\n    }\n\n    _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._updateDataset(i, isFunction(mode) ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode\n      });\n    }\n\n    _updateDataset(index, mode) {\n      const meta = this.getDatasetMeta(index);\n      const args = {\n        meta,\n        index,\n        mode,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n\n    render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n\n    draw() {\n      let i;\n\n      if (this._resizeBeforeDraw) {\n        const {\n          width,\n          height\n        } = this._resizeBeforeDraw;\n\n        this._resize(width, height);\n\n        this._resizeBeforeDraw = null;\n      }\n\n      this.clear();\n\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      const layers = this._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this.notifyPlugins('afterDraw');\n    }\n\n    _getSortedDatasetMetas(filterVisible) {\n      const metasets = this._sortedMetasets;\n      const result = [];\n      let i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        const meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n\n    getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n\n    _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      const metasets = this.getSortedVisibleDatasetMetas();\n\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n\n    _drawDataset(meta) {\n      const ctx = this.ctx;\n      const clip = meta._clip;\n      const useClip = !clip.disabled;\n      const area = this.chartArea;\n      const args = {\n        meta,\n        index: meta.index,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n\n      meta.controller.draw();\n\n      if (useClip) {\n        unclipArea(ctx);\n      }\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      const method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n\n    getDatasetMeta(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n      const metasets = this._metasets;\n      let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n\n      return meta;\n    }\n\n    getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n\n    getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n\n    isDatasetVisible(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      const meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n\n    setDatasetVisibility(datasetIndex, visible) {\n      const meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n\n    toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n\n    getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n\n    _updateVisibility(datasetIndex, dataIndex, visible) {\n      const mode = visible ? 'show' : 'hide';\n      const meta = this.getDatasetMeta(datasetIndex);\n\n      const anims = meta.controller._resolveAnimations(undefined, mode);\n\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible\n        });\n        this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n      }\n    }\n\n    hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n\n    show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n\n    _destroyDatasetMeta(datasetIndex) {\n      const meta = this._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n\n      delete this._metasets[datasetIndex];\n    }\n\n    _stop() {\n      let i, ilen;\n      this.stop();\n      animator.remove(this);\n\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n\n    destroy() {\n      this.notifyPlugins('beforeDestroy');\n      const {\n        canvas,\n        ctx\n      } = this;\n\n      this._stop();\n\n      this.config.clearCache();\n\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n\n    toBase64Image() {\n      return this.canvas.toDataURL(...arguments);\n    }\n\n    bindEvents() {\n      this.bindUserEvents();\n\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n\n    bindUserEvents() {\n      const listeners = this._listeners;\n      const platform = this.platform;\n\n      const _add = (type, listener) => {\n        platform.addEventListener(this, type, listener);\n        listeners[type] = listener;\n      };\n\n      const listener = (e, x, y) => {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        this._eventHandler(e);\n      };\n\n      each(this.options.events, type => _add(type, listener));\n    }\n\n    bindResponsiveEvents() {\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n\n      const listeners = this._responsiveListeners;\n      const platform = this.platform;\n\n      const _add = (type, listener) => {\n        platform.addEventListener(this, type, listener);\n        listeners[type] = listener;\n      };\n\n      const _remove = (type, listener) => {\n        if (listeners[type]) {\n          platform.removeEventListener(this, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      const listener = (width, height) => {\n        if (this.canvas) {\n          this.resize(width, height);\n        }\n      };\n\n      let detached;\n\n      const attached = () => {\n        _remove('attach', attached);\n\n        this.attached = true;\n        this.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = () => {\n        this.attached = false;\n\n        _remove('resize', listener);\n\n        this._stop();\n\n        this._resize(0, 0);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n\n    unbindEvents() {\n      each(this._listeners, (listener, type) => {\n        this.platform.removeEventListener(this, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, (listener, type) => {\n        this.platform.removeEventListener(this, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n\n    updateHoverStyle(items, mode, enabled) {\n      const prefix = enabled ? 'set' : 'remove';\n      let meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n\n    getActiveElements() {\n      return this._active || [];\n    }\n\n    setActiveElements(activeElements) {\n      const lastActive = this._active || [];\n      const active = activeElements.map(_ref2 => {\n        let {\n          datasetIndex,\n          index\n        } = _ref2;\n        const meta = this.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(active, lastActive);\n\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n\n    notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n\n    _updateHoverStyles(active, lastActive, replay) {\n      const hoverOptions = this.options.hover;\n\n      const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n      const deactivated = diff(lastActive, active);\n      const activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n\n    _eventHandler(e, replay) {\n      const args = {\n        event: e,\n        replay,\n        cancelable: true,\n        inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n      };\n\n      const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      const changed = this._handleEvent(e, replay, args.inChartArea);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        this.render();\n      }\n\n      return this;\n    }\n\n    _handleEvent(e, replay, inChartArea) {\n      const {\n        _active: lastActive = [],\n        options\n      } = this;\n      const useFinalPosition = replay;\n\n      const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n      const isClick = _isClickEvent(e);\n\n      const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n\n      const changed = !_elementsEqual(active, lastActive);\n\n      if (changed || replay) {\n        this._active = active;\n\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n\n    _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      const hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n\n  }\n\n  const invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\n  const enumerable = true;\n  Object.defineProperties(Chart, {\n    defaults: {\n      enumerable,\n      value: defaults\n    },\n    instances: {\n      enumerable,\n      value: instances\n    },\n    overrides: {\n      enumerable,\n      value: overrides\n    },\n    registry: {\n      enumerable,\n      value: registry\n    },\n    version: {\n      enumerable,\n      value: version\n    },\n    getChart: {\n      enumerable,\n      value: getChart\n    },\n    register: {\n      enumerable,\n      value: function () {\n        registry.add(...arguments);\n        invalidatePlugins();\n      }\n    },\n    unregister: {\n      enumerable,\n      value: function () {\n        registry.remove(...arguments);\n        invalidatePlugins();\n      }\n    }\n  });\n\n  function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n  }\n\n  class DateAdapter {\n    constructor(options) {\n      this.options = options || {};\n    }\n\n    formats() {\n      return abstract();\n    }\n\n    parse(value, format) {\n      return abstract();\n    }\n\n    format(timestamp, format) {\n      return abstract();\n    }\n\n    add(timestamp, amount, unit) {\n      return abstract();\n    }\n\n    diff(a, b, unit) {\n      return abstract();\n    }\n\n    startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n\n    endOf(timestamp, unit) {\n      return abstract();\n    }\n\n  }\n\n  DateAdapter.override = function (members) {\n    Object.assign(DateAdapter.prototype, members);\n  };\n\n  var _adapters = {\n    _date: DateAdapter\n  };\n\n  function getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n      const visibleMetas = scale.getMatchingVisibleMetas(type);\n      let values = [];\n\n      for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n        values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n      }\n\n      scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n    }\n\n    return scale._cache.$bar;\n  }\n\n  function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n\n    const updateMinAndPrev = () => {\n      if (curr === 32767 || curr === -32768) {\n        return;\n      }\n\n      if (defined(prev)) {\n        min = Math.min(min, Math.abs(curr - prev) || min);\n      }\n\n      prev = curr;\n    };\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      curr = scale.getPixelForValue(values[i]);\n      updateMinAndPrev();\n    }\n\n    prev = undefined;\n\n    for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      updateMinAndPrev();\n    }\n\n    return min;\n  }\n\n  function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n\n    if (isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      size = thickness * stackCount;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / stackCount,\n      ratio,\n      start: ruler.pixels[index] - size / 2\n    };\n  }\n\n  function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n\n    if (prev === null) {\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      next = curr + curr - prev;\n    }\n\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / stackCount,\n      ratio: options.barPercentage,\n      start\n    };\n  }\n\n  function parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n\n    if (Math.abs(min) > Math.abs(max)) {\n      barStart = max;\n      barEnd = min;\n    }\n\n    item[vScale.axis] = barEnd;\n    item._custom = {\n      barStart,\n      barEnd,\n      start: startValue,\n      end: endValue,\n      min,\n      max\n    };\n  }\n\n  function parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n      parseFloatBar(entry, item, vScale, i);\n    } else {\n      item[vScale.axis] = vScale.parse(entry, i);\n    }\n\n    return item;\n  }\n\n  function parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      entry = data[i];\n      item = {};\n      item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n      parsed.push(parseValue(entry, item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  function isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n  }\n\n  function barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n      return sign(size);\n    }\n\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n  }\n\n  function borderProps(properties) {\n    let reverse, start, end, top, bottom;\n\n    if (properties.horizontal) {\n      reverse = properties.base > properties.x;\n      start = 'left';\n      end = 'right';\n    } else {\n      reverse = properties.base < properties.y;\n      start = 'bottom';\n      end = 'top';\n    }\n\n    if (reverse) {\n      top = 'end';\n      bottom = 'start';\n    } else {\n      top = 'start';\n      bottom = 'end';\n    }\n\n    return {\n      start,\n      end,\n      reverse,\n      top,\n      bottom\n    };\n  }\n\n  function setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n\n    if (!edge) {\n      properties.borderSkipped = res;\n      return;\n    }\n\n    const {\n      start,\n      end,\n      reverse,\n      top,\n      bottom\n    } = borderProps(properties);\n\n    if (edge === 'middle' && stack) {\n      properties.enableBorderRadius = true;\n\n      if ((stack._top || 0) === index) {\n        edge = top;\n      } else if ((stack._bottom || 0) === index) {\n        edge = bottom;\n      } else {\n        res[parseEdge(bottom, start, end, reverse)] = true;\n        edge = top;\n      }\n    }\n\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n  }\n\n  function parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n      edge = swap(edge, a, b);\n      edge = startEnd(edge, b, a);\n    } else {\n      edge = startEnd(edge, a, b);\n    }\n\n    return edge;\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n  }\n\n  function setInflateAmount(properties, _ref3, ratio) {\n    let {\n      inflateAmount\n    } = _ref3;\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n  }\n\n  class BarController extends DatasetController {\n    parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n\n    parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n\n    parseObjectData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const parsed = [];\n      let i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      super.updateRangeFromParsed(range, scale, parsed, stack);\n      const custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n\n    getMaxOverflow() {\n      return 0;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const parsed = this.getParsed(index);\n      const custom = parsed._custom;\n      const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value\n      };\n    }\n\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n      const meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n\n    update(mode) {\n      const meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n\n    updateElements(bars, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        index,\n        _cachedMeta: {\n          vScale\n        }\n      } = this;\n      const base = vScale.getBasePixel();\n      const horizontal = vScale.isHorizontal();\n\n      const ruler = this._getRuler();\n\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n      for (let i = start; i < start + count; i++) {\n        const parsed = this.getParsed(i);\n        const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n\n        const ipixels = this._calculateBarIndexPixels(i, ruler);\n\n        const stack = (parsed._stacks || {})[vScale.axis];\n        const properties = {\n          horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n\n        const options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n\n    _getStacks(last, dataIndex) {\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const metasets = iScale.getMatchingVisibleMetas(this._type);\n      const stacked = iScale.options.stacked;\n      const ilen = metasets.length;\n      const stacks = [];\n      let i, item;\n\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n\n        if (!item.controller.options.grouped) {\n          continue;\n        }\n\n        if (typeof dataIndex !== 'undefined') {\n          const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n\n        if (item.index === last) {\n          break;\n        }\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n\n    _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n\n    _getStackIndex(datasetIndex, name, dataIndex) {\n      const stacks = this._getStacks(datasetIndex, dataIndex);\n\n      const index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n\n    _getRuler() {\n      const opts = this.options;\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const pixels = [];\n      let i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n\n      const barThickness = opts.barThickness;\n      const min = barThickness || computeMinSampleSize(meta);\n      return {\n        min,\n        pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n\n    _calculateBarValuePixels(index) {\n      const {\n        _cachedMeta: {\n          vScale,\n          _stacked\n        },\n        options: {\n          base: baseValue,\n          minBarLength\n        }\n      } = this;\n      const actualBase = baseValue || 0;\n      const parsed = this.getParsed(index);\n      const custom = parsed._custom;\n      const floating = isFloatBar(custom);\n      let value = parsed[vScale.axis];\n      let start = 0;\n      let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      let head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      let base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n\n        head = base + size;\n      }\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n\n      return {\n        size,\n        base,\n        head,\n        center: head + size / 2\n      };\n    }\n\n    _calculateBarIndexPixels(index, ruler) {\n      const scale = ruler.scale;\n      const options = this.options;\n      const skipNull = options.skipNull;\n      const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      let center, size;\n\n      if (ruler.grouped) {\n        const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center,\n        size\n      };\n    }\n\n    draw() {\n      const meta = this._cachedMeta;\n      const vScale = meta.vScale;\n      const rects = meta.data;\n      const ilen = rects.length;\n      let i = 0;\n\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n\n  }\n\n  BarController.id = 'bar';\n  BarController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n  BarController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true\n      }\n    }\n  };\n\n  class BubbleController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n    }\n\n    parsePrimitiveData(meta, data, start, count) {\n      const parsed = super.parsePrimitiveData(meta, data, start, count);\n\n      for (let i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n\n      return parsed;\n    }\n\n    parseArrayData(meta, data, start, count) {\n      const parsed = super.parseArrayData(meta, data, start, count);\n\n      for (let i = 0; i < parsed.length; i++) {\n        const item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n\n    parseObjectData(meta, data, start, count) {\n      const parsed = super.parseObjectData(meta, data, start, count);\n\n      for (let i = 0; i < parsed.length; i++) {\n        const item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n\n    getMaxOverflow() {\n      const data = this._cachedMeta.data;\n      let max = 0;\n\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = this.getParsed(index);\n      const x = xScale.getLabelForValue(parsed.x);\n      const y = yScale.getLabelForValue(parsed.y);\n      const r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n\n    update(mode) {\n      const points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale\n      } = this._cachedMeta;\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const parsed = !reset && this.getParsed(i);\n        const properties = {};\n        const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n        if (includeOptions) {\n          properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        this.updateElement(point, i, properties, mode);\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n\n    resolveDataElementOptions(index, mode) {\n      const parsed = this.getParsed(index);\n      let values = super.resolveDataElementOptions(index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      const radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n\n  }\n\n  BubbleController.id = 'bubble';\n  BubbleController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n  BubbleController.overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          }\n\n        }\n      }\n    }\n  };\n\n  function getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (circumference < TAU) {\n      const startAngle = rotation;\n      const endAngle = startAngle + circumference;\n      const startX = Math.cos(startAngle);\n      const startY = Math.sin(startAngle);\n      const endX = Math.cos(endAngle);\n      const endY = Math.sin(endAngle);\n\n      const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n      const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n      const maxX = calcMax(0, startX, endX);\n      const maxY = calcMax(HALF_PI, startY, endY);\n      const minX = calcMin(PI, startX, endX);\n      const minY = calcMin(PI + HALF_PI, startY, endY);\n      ratioX = (maxX - minX) / 2;\n      ratioY = (maxY - minY) / 2;\n      offsetX = -(maxX + minX) / 2;\n      offsetY = -(maxY + minY) / 2;\n    }\n\n    return {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    };\n  }\n\n  class DoughnutController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.enableOptionSharing = true;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.offsetX = undefined;\n      this.offsetY = undefined;\n    }\n\n    linkScales() {}\n\n    parse(start, count) {\n      const data = this.getDataset().data;\n      const meta = this._cachedMeta;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        let getter = i => +data[i];\n\n        if (isObject(data[start])) {\n          const {\n            key = 'value'\n          } = this._parsing;\n\n          getter = i => +resolveObjectKey(data[i], key);\n        }\n\n        let i, ilen;\n\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n\n    _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n\n    _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n\n    _getRotationExtents() {\n      let min = TAU;\n      let max = -TAU;\n\n      for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          const controller = this.chart.getDatasetMeta(i).controller;\n\n          const rotation = controller._getRotation();\n\n          const circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n\n    update(mode) {\n      const chart = this.chart;\n      const {\n        chartArea\n      } = chart;\n      const meta = this._cachedMeta;\n      const arcs = meta.data;\n      const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n      const chartWeight = this._getRingWeight(this.index);\n\n      const {\n        circumference,\n        rotation\n      } = this._getRotationExtents();\n\n      const {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n      } = getRatioAndOffset(rotation, circumference, cutout);\n      const maxWidth = (chartArea.width - spacing) / ratioX;\n      const maxHeight = (chartArea.height - spacing) / ratioY;\n      const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      const outerRadius = toDimension(this.options.radius, maxRadius);\n      const innerRadius = Math.max(outerRadius * cutout, 0);\n\n      const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n\n    _circumference(i, reset) {\n      const opts = this.options;\n      const meta = this._cachedMeta;\n\n      const circumference = this._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n\n    updateElements(arcs, start, count, mode) {\n      const reset = mode === 'reset';\n      const chart = this.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const centerX = (chartArea.left + chartArea.right) / 2;\n      const centerY = (chartArea.top + chartArea.bottom) / 2;\n      const animateScale = reset && animationOpts.animateScale;\n      const innerRadius = animateScale ? 0 : this.innerRadius;\n      const outerRadius = animateScale ? 0 : this.outerRadius;\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n\n      let startAngle = this._getRotation();\n\n      let i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        const circumference = this._circumference(i, reset);\n\n        const arc = arcs[i];\n        const properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle,\n          endAngle: startAngle + circumference,\n          circumference,\n          outerRadius,\n          innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n\n    calculateTotal() {\n      const meta = this._cachedMeta;\n      const metaData = meta.data;\n      let total = 0;\n      let i;\n\n      for (i = 0; i < metaData.length; i++) {\n        const value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n\n    calculateCircumference(value) {\n      const total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const chart = this.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n\n    getMaxBorderWidth(arcs) {\n      let max = 0;\n      const chart = this.chart;\n      let i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n\n    getMaxOffset(arcs) {\n      let max = 0;\n\n      for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n        const options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n\n    _getRingWeightOffset(datasetIndex) {\n      let ringWeightOffset = 0;\n\n      for (let i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n\n    _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n\n    _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n\n  }\n\n  DoughnutController.id = 'doughnut';\n  DoughnutController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      }\n    },\n    cutout: '50%',\n    rotation: 0,\n    circumference: 360,\n    radius: '100%',\n    spacing: 0,\n    indexAxis: 'r'\n  };\n  DoughnutController.descriptors = {\n    _scriptable: name => name !== 'spacing',\n    _indexable: name => name !== 'spacing'\n  };\n  DoughnutController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n\n            return [];\n          }\n\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n\n          label(tooltipItem) {\n            let dataLabel = tooltipItem.label;\n            const value = ': ' + tooltipItem.formattedValue;\n\n            if (isArray(dataLabel)) {\n              dataLabel = dataLabel.slice();\n              dataLabel[0] += value;\n            } else {\n              dataLabel += value;\n            }\n\n            return dataLabel;\n          }\n\n        }\n      }\n    }\n  };\n\n  class LineController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n    }\n\n    update(mode) {\n      const meta = this._cachedMeta;\n      const {\n        dataset: line,\n        data: points = [],\n        _dataset\n      } = meta;\n      const animationsDisabled = this.chart._animationsDisabled;\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale,\n        _stacked,\n        _dataset\n      } = this._cachedMeta;\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const {\n        spanGaps,\n        segment\n      } = this.options;\n      const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      let prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (let i = start; i < start + count; ++i) {\n        const point = points[i];\n        const parsed = this.getParsed(i);\n        const properties = directUpdate ? point : {};\n        const nullData = isNullOrUndef(parsed[vAxis]);\n        const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n\n    getMaxOverflow() {\n      const meta = this._cachedMeta;\n      const dataset = meta.dataset;\n      const border = dataset.options && dataset.options.borderWidth || 0;\n      const data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n\n    draw() {\n      const meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      super.draw();\n    }\n\n  }\n\n  LineController.id = 'line';\n  LineController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    showLine: true,\n    spanGaps: false\n  };\n  LineController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category'\n      },\n      _value_: {\n        type: 'linear'\n      }\n    }\n  };\n\n  function getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n\n    if (meta._sorted) {\n      const {\n        iScale,\n        _parsed\n      } = meta;\n      const axis = iScale.axis;\n      const {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = iScale.getUserBounds();\n\n      if (minDefined) {\n        start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n      }\n\n      if (maxDefined) {\n        count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n      } else {\n        count = pointCount - start;\n      }\n    }\n\n    return {\n      start,\n      count\n    };\n  }\n\n  function scaleRangesChanged(meta) {\n    const {\n      xScale,\n      yScale,\n      _scaleRanges\n    } = meta;\n    const newRanges = {\n      xmin: xScale.min,\n      xmax: xScale.max,\n      ymin: yScale.min,\n      ymax: yScale.max\n    };\n\n    if (!_scaleRanges) {\n      meta._scaleRanges = newRanges;\n      return true;\n    }\n\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n  }\n\n  class PolarAreaController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n    }\n\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const chart = this.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n\n    update(mode) {\n      const arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n\n    _updateRadius() {\n      const chart = this.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      const outerRadius = Math.max(minSize / 2, 0);\n      const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n\n    updateElements(arcs, start, count, mode) {\n      const reset = mode === 'reset';\n      const chart = this.chart;\n      const dataset = this.getDataset();\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const scale = this._cachedMeta.rScale;\n      const centerX = scale.xCenter;\n      const centerY = scale.yCenter;\n      const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      let angle = datasetStartAngle;\n      let i;\n      const defaultAngle = 360 / this.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        const arc = arcs[i];\n        let startAngle = angle;\n\n        let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n        let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        const properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius,\n          startAngle,\n          endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n\n    countVisibleElements() {\n      const dataset = this.getDataset();\n      const meta = this._cachedMeta;\n      let count = 0;\n      meta.data.forEach((element, index) => {\n        if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n\n    _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n\n  }\n\n  PolarAreaController.id = 'polarArea';\n  PolarAreaController.defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      }\n    },\n    indexAxis: 'r',\n    startAngle: 0\n  };\n  PolarAreaController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n\n            return [];\n          }\n\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n\n          label(context) {\n            return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n          }\n\n        }\n      }\n    },\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  class PieController extends DoughnutController {}\n\n  PieController.id = 'pie';\n  PieController.defaults = {\n    cutout: 0,\n    rotation: 0,\n    circumference: 360,\n    radius: '100%'\n  };\n\n  class RadarController extends DatasetController {\n    getLabelAndValue(index) {\n      const vScale = this._cachedMeta.vScale;\n      const parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n\n    update(mode) {\n      const meta = this._cachedMeta;\n      const line = meta.dataset;\n      const points = meta.data || [];\n      const labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        const options = this.resolveDatasetElementOptions(mode);\n\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        const properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n\n      this.updateElements(points, 0, points.length, mode);\n    }\n\n    updateElements(points, start, count, mode) {\n      const dataset = this.getDataset();\n      const scale = this._cachedMeta.rScale;\n      const reset = mode === 'reset';\n\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        const x = reset ? scale.xCenter : pointPosition.x;\n        const y = reset ? scale.yCenter : pointPosition.y;\n        const properties = {\n          x,\n          y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n\n  }\n\n  RadarController.id = 'radar';\n  RadarController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    }\n  };\n  RadarController.overrides = {\n    aspectRatio: 1,\n    scales: {\n      r: {\n        type: 'radialLinear'\n      }\n    }\n  };\n\n  class ScatterController extends LineController {}\n\n  ScatterController.id = 'scatter';\n  ScatterController.defaults = {\n    showLine: false,\n    fill: false\n  };\n  ScatterController.overrides = {\n    interaction: {\n      mode: 'point'\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n\n          label(item) {\n            return '(' + item.label + ', ' + item.formattedValue + ')';\n          }\n\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n  var controllers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BarController: BarController,\n    BubbleController: BubbleController,\n    DoughnutController: DoughnutController,\n    LineController: LineController,\n    PolarAreaController: PolarAreaController,\n    PieController: PieController,\n    RadarController: RadarController,\n    ScatterController: ScatterController\n  });\n\n  function clipArc(ctx, element, endAngle) {\n    const {\n      startAngle,\n      pixelMargin,\n      x,\n      y,\n      outerRadius,\n      innerRadius\n    } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n    if (innerRadius > pixelMargin) {\n      angleMargin = pixelMargin / innerRadius;\n      ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n      ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  function toRadiusCorners(value) {\n    return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n  }\n\n  function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n    const computeOuterLimit = val => {\n      const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n      return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n\n    return {\n      outerStart: computeOuterLimit(o.outerStart),\n      outerEnd: computeOuterLimit(o.outerEnd),\n      innerStart: _limitValue(o.innerStart, 0, innerLimit),\n      innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n  }\n\n  function rThetaToXY(r, theta, x, y) {\n    return {\n      x: x + r * Math.cos(theta),\n      y: y + r * Math.sin(theta)\n    };\n  }\n\n  function pathArc(ctx, element, offset, spacing, end) {\n    const {\n      x,\n      y,\n      startAngle: start,\n      pixelMargin,\n      innerRadius: innerR\n    } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n\n    if (spacing) {\n      const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n      const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n      const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n      const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n      spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const {\n      outerStart,\n      outerEnd,\n      innerStart,\n      innerEnd\n    } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n\n    ctx.closePath();\n  }\n\n  function drawArc(ctx, element, offset, spacing) {\n    const {\n      fullCircles,\n      startAngle,\n      circumference\n    } = element;\n    let endAngle = element.endAngle;\n\n    if (fullCircles) {\n      pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n      for (let i = 0; i < fullCircles; ++i) {\n        ctx.fill();\n      }\n\n      if (!isNaN(circumference)) {\n        endAngle = startAngle + circumference % TAU;\n\n        if (circumference % TAU === 0) {\n          endAngle += TAU;\n        }\n      }\n    }\n\n    pathArc(ctx, element, offset, spacing, endAngle);\n    ctx.fill();\n    return endAngle;\n  }\n\n  function drawFullCircleBorders(ctx, element, inner) {\n    const {\n      x,\n      y,\n      startAngle,\n      pixelMargin,\n      fullCircles\n    } = element;\n    const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n    const innerRadius = element.innerRadius + pixelMargin;\n    let i;\n\n    if (inner) {\n      clipArc(ctx, element, startAngle + TAU);\n    }\n\n    ctx.beginPath();\n    ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n  }\n\n  function drawBorder(ctx, element, offset, spacing, endAngle) {\n    const {\n      options\n    } = element;\n    const {\n      borderWidth,\n      borderJoinStyle\n    } = options;\n    const inner = options.borderAlign === 'inner';\n\n    if (!borderWidth) {\n      return;\n    }\n\n    if (inner) {\n      ctx.lineWidth = borderWidth * 2;\n      ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n      ctx.lineWidth = borderWidth;\n      ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n\n    if (element.fullCircles) {\n      drawFullCircleBorders(ctx, element, inner);\n    }\n\n    if (inner) {\n      clipArc(ctx, element, endAngle);\n    }\n\n    pathArc(ctx, element, offset, spacing, endAngle);\n    ctx.stroke();\n  }\n\n  class ArcElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.circumference = undefined;\n      this.startAngle = undefined;\n      this.endAngle = undefined;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.pixelMargin = 0;\n      this.fullCircles = 0;\n\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n\n    inRange(chartX, chartY, useFinalPosition) {\n      const point = this.getProps(['x', 'y'], useFinalPosition);\n      const {\n        angle,\n        distance\n      } = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      });\n      const {\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius,\n        circumference\n      } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const rAdjust = this.options.spacing / 2;\n\n      const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n      const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n      const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n      return betweenAngles && withinRadius;\n    }\n\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius\n      } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const {\n        offset,\n        spacing\n      } = this.options;\n      const halfAngle = (startAngle + endAngle) / 2;\n      const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n\n    tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n\n    draw(ctx) {\n      const {\n        options,\n        circumference\n      } = this;\n      const offset = (options.offset || 0) / 2;\n      const spacing = (options.spacing || 0) / 2;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n      let radiusOffset = 0;\n\n      if (offset) {\n        radiusOffset = offset / 2;\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n      ctx.restore();\n    }\n\n  }\n\n  ArcElement.id = 'arc';\n  ArcElement.defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined\n  };\n  ArcElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  function setStyle(ctx, options) {\n    let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n  }\n\n  function lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n  }\n\n  function getLineMethod(options) {\n    if (options.stepped) {\n      return _steppedLineTo;\n    }\n\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierCurveTo;\n    }\n\n    return lineTo;\n  }\n\n  function pathVars(points, segment) {\n    let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const count = points.length;\n    const {\n      start: paramsStart = 0,\n      end: paramsEnd = count - 1\n    } = params;\n    const {\n      start: segmentStart,\n      end: segmentEnd\n    } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n      count,\n      start,\n      loop: segment.loop,\n      ilen: end < start && !outside ? count + end - start : end - start\n    };\n  }\n\n  function pathSegment(ctx, line, segment, params) {\n    const {\n      points,\n      options\n    } = line;\n    const {\n      count,\n      start,\n      loop,\n      ilen\n    } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let {\n      move = true,\n      reverse\n    } = params || {};\n    let i, point, prev;\n\n    for (i = 0; i <= ilen; ++i) {\n      point = points[(start + (reverse ? ilen - i : i)) % count];\n\n      if (point.skip) {\n        continue;\n      } else if (move) {\n        ctx.moveTo(point.x, point.y);\n        move = false;\n      } else {\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n      }\n\n      prev = point;\n    }\n\n    if (loop) {\n      point = points[(start + (reverse ? ilen : 0)) % count];\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    return !!loop;\n  }\n\n  function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const {\n      count,\n      start,\n      ilen\n    } = pathVars(points, segment, params);\n    const {\n      move = true,\n      reverse\n    } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n\n    const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n    const drawX = () => {\n      if (minY !== maxY) {\n        ctx.lineTo(avgX, maxY);\n        ctx.lineTo(avgX, minY);\n        ctx.lineTo(avgX, lastY);\n      }\n    };\n\n    if (move) {\n      point = points[pointIndex(0)];\n      ctx.moveTo(point.x, point.y);\n    }\n\n    for (i = 0; i <= ilen; ++i) {\n      point = points[pointIndex(i)];\n\n      if (point.skip) {\n        continue;\n      }\n\n      const x = point.x;\n      const y = point.y;\n      const truncX = x | 0;\n\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n        } else if (y > maxY) {\n          maxY = y;\n        }\n\n        avgX = (countX * avgX + x) / ++countX;\n      } else {\n        drawX();\n        ctx.lineTo(x, y);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n      }\n\n      lastY = y;\n    }\n\n    drawX();\n  }\n\n  function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n  }\n\n  function _getInterpolationMethod(options) {\n    if (options.stepped) {\n      return _steppedInterpolation;\n    }\n\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierInterpolation;\n    }\n\n    return _pointInLine;\n  }\n\n  function strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n\n    if (!path) {\n      path = line._path = new Path2D();\n\n      if (line.path(path, start, count)) {\n        path.closePath();\n      }\n    }\n\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n  }\n\n  function strokePathDirect(ctx, line, start, count) {\n    const {\n      segments,\n      options\n    } = line;\n\n    const segmentMethod = _getSegmentMethod(line);\n\n    for (const segment of segments) {\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  }\n\n  const usePath2D = typeof Path2D === 'function';\n\n  function draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n      strokePathWithCache(ctx, line, start, count);\n    } else {\n      strokePathDirect(ctx, line, start, count);\n    }\n  }\n\n  class LineElement extends Element {\n    constructor(cfg) {\n      super();\n      this.animated = true;\n      this.options = undefined;\n      this._chart = undefined;\n      this._loop = undefined;\n      this._fullLoop = undefined;\n      this._path = undefined;\n      this._points = undefined;\n      this._segments = undefined;\n      this._decimated = false;\n      this._pointsUpdated = false;\n      this._datasetIndex = undefined;\n\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n\n    updateControlPoints(chartArea, indexAxis) {\n      const options = this.options;\n\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        const loop = options.spanGaps ? this._loop : this._fullLoop;\n\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n        this._pointsUpdated = true;\n      }\n    }\n\n    set points(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n\n    get points() {\n      return this._points;\n    }\n\n    get segments() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n\n    first() {\n      const segments = this.segments;\n      const points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n\n    last() {\n      const segments = this.segments;\n      const points = this.points;\n      const count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n\n    interpolate(point, property) {\n      const options = this.options;\n      const value = point[property];\n      const points = this.points;\n\n      const segments = _boundSegments(this, {\n        property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      const result = [];\n\n      const _interpolate = _getInterpolationMethod(options);\n\n      let i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        const {\n          start,\n          end\n        } = segments[i];\n        const p1 = points[start];\n        const p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n\n    pathSegment(ctx, segment, params) {\n      const segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n\n    path(ctx, start, count) {\n      const segments = this.segments;\n\n      const segmentMethod = _getSegmentMethod(this);\n\n      let loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n\n      for (const segment of segments) {\n        loop &= segmentMethod(ctx, this, segment, {\n          start,\n          end: start + count - 1\n        });\n      }\n\n      return !!loop;\n    }\n\n    draw(ctx, chartArea, start, count) {\n      const options = this.options || {};\n      const points = this.points || [];\n\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        draw(ctx, this, start, count);\n        ctx.restore();\n      }\n\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n\n  }\n\n  LineElement.id = 'line';\n  LineElement.defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0\n  };\n  LineElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  LineElement.descriptors = {\n    _scriptable: true,\n    _indexable: name => name !== 'borderDash' && name !== 'fill'\n  };\n\n  function inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const {\n      [axis]: value\n    } = el.getProps([axis], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n  }\n\n  class PointElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.parsed = undefined;\n      this.skip = undefined;\n      this.stop = undefined;\n\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n\n    inRange(mouseX, mouseY, useFinalPosition) {\n      const options = this.options;\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n\n    inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n\n    inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n\n    size(options) {\n      options = options || this.options || {};\n      let radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      const borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n\n    draw(ctx, area) {\n      const options = this.options;\n\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n\n    getRange() {\n      const options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n\n  }\n\n  PointElement.id = 'point';\n  PointElement.defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n  PointElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  function getBarBounds(bar, useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      width,\n      height\n    } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n    let left, right, top, bottom, half;\n\n    if (bar.horizontal) {\n      half = height / 2;\n      left = Math.min(x, base);\n      right = Math.max(x, base);\n      top = y - half;\n      bottom = y + half;\n    } else {\n      half = width / 2;\n      left = x - half;\n      right = x + half;\n      top = Math.min(y, base);\n      bottom = Math.max(y, base);\n    }\n\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  function skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n  }\n\n  function parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n      t: skipOrLimit(skip.top, o.top, 0, maxH),\n      r: skipOrLimit(skip.right, o.right, 0, maxW),\n      b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n      l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n  }\n\n  function parseBorderRadius(bar, maxW, maxH) {\n    const {\n      enableBorderRadius\n    } = bar.getProps(['enableBorderRadius']);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n      topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n      topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n      bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n      bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n  }\n\n  function boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height,\n        radius\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b,\n        radius: {\n          topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n          topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n          bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n          bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n        }\n      }\n    };\n  }\n\n  function inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n  }\n\n  function hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n  }\n\n  function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n  }\n\n  function inflateRect(rect, amount) {\n    let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n      x: rect.x + x,\n      y: rect.y + y,\n      w: rect.w + w,\n      h: rect.h + h,\n      radius: rect.radius\n    };\n  }\n\n  class BarElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.horizontal = undefined;\n      this.base = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this.inflateAmount = undefined;\n\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n\n    draw(ctx) {\n      const {\n        inflateAmount,\n        options: {\n          borderColor,\n          backgroundColor\n        }\n      } = this;\n      const {\n        inner,\n        outer\n      } = boundingRects(this);\n      const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n\n    inRange(mouseX, mouseY, useFinalPosition) {\n      return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n\n    inXRange(mouseX, useFinalPosition) {\n      return inRange(this, mouseX, null, useFinalPosition);\n    }\n\n    inYRange(mouseY, useFinalPosition) {\n      return inRange(this, null, mouseY, useFinalPosition);\n    }\n\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        base,\n        horizontal\n      } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n\n    getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n\n  }\n\n  BarElement.id = 'bar';\n  BarElement.defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n  BarElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  var elements = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ArcElement: ArcElement,\n    LineElement: LineElement,\n    PointElement: PointElement,\n    BarElement: BarElement\n  });\n\n  function lttbDecimation(data, start, count, availableWidth, options) {\n    const samples = options.samples || availableWidth;\n\n    if (samples >= count) {\n      return data.slice(start, start + count);\n    }\n\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n\n    for (i = 0; i < samples - 2; i++) {\n      let avgX = 0;\n      let avgY = 0;\n      let j;\n      const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n      const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n      const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n      for (j = avgRangeStart; j < avgRangeEnd; j++) {\n        avgX += data[j].x;\n        avgY += data[j].y;\n      }\n\n      avgX /= avgRangeLength;\n      avgY /= avgRangeLength;\n      const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n      const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n      const {\n        x: pointAx,\n        y: pointAy\n      } = data[a];\n      maxArea = area = -1;\n\n      for (j = rangeOffs; j < rangeTo; j++) {\n        area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n        if (area > maxArea) {\n          maxArea = area;\n          maxAreaPoint = data[j];\n          nextA = j;\n        }\n      }\n\n      decimated[sampledIndex++] = maxAreaPoint;\n      a = nextA;\n    }\n\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n  }\n\n  function minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n\n    for (i = start; i < start + count; ++i) {\n      point = data[i];\n      x = (point.x - xMin) / dx * availableWidth;\n      y = point.y;\n      const truncX = x | 0;\n\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n          minIndex = i;\n        } else if (y > maxY) {\n          maxY = y;\n          maxIndex = i;\n        }\n\n        avgX = (countX * avgX + point.x) / ++countX;\n      } else {\n        const lastIndex = i - 1;\n\n        if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n          const intermediateIndex1 = Math.min(minIndex, maxIndex);\n          const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n          if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n            decimated.push({ ...data[intermediateIndex1],\n              x: avgX\n            });\n          }\n\n          if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n            decimated.push({ ...data[intermediateIndex2],\n              x: avgX\n            });\n          }\n        }\n\n        if (i > 0 && lastIndex !== startIndex) {\n          decimated.push(data[lastIndex]);\n        }\n\n        decimated.push(point);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n        minIndex = maxIndex = startIndex = i;\n      }\n    }\n\n    return decimated;\n  }\n\n  function cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n      const data = dataset._data;\n      delete dataset._decimated;\n      delete dataset._data;\n      Object.defineProperty(dataset, 'data', {\n        value: data\n      });\n    }\n  }\n\n  function cleanDecimatedData(chart) {\n    chart.data.datasets.forEach(dataset => {\n      cleanDecimatedDataset(dataset);\n    });\n  }\n\n  function getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const {\n      iScale\n    } = meta;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n\n    return {\n      start,\n      count\n    };\n  }\n\n  var plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n      algorithm: 'min-max',\n      enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options) => {\n      if (!options.enabled) {\n        cleanDecimatedData(chart);\n        return;\n      }\n\n      const availableWidth = chart.width;\n      chart.data.datasets.forEach((dataset, datasetIndex) => {\n        const {\n          _data,\n          indexAxis\n        } = dataset;\n        const meta = chart.getDatasetMeta(datasetIndex);\n        const data = _data || dataset.data;\n\n        if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n          return;\n        }\n\n        if (meta.type !== 'line') {\n          return;\n        }\n\n        const xAxis = chart.scales[meta.xAxisID];\n\n        if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n          return;\n        }\n\n        if (chart.options.parsing) {\n          return;\n        }\n\n        let {\n          start,\n          count\n        } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n        const threshold = options.threshold || 4 * availableWidth;\n\n        if (count <= threshold) {\n          cleanDecimatedDataset(dataset);\n          return;\n        }\n\n        if (isNullOrUndef(_data)) {\n          dataset._data = data;\n          delete dataset.data;\n          Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n              return this._decimated;\n            },\n            set: function (d) {\n              this._data = d;\n            }\n          });\n        }\n\n        let decimated;\n\n        switch (options.algorithm) {\n          case 'lttb':\n            decimated = lttbDecimation(data, start, count, availableWidth, options);\n            break;\n\n          case 'min-max':\n            decimated = minMaxDecimation(data, start, count, availableWidth);\n            break;\n\n          default:\n            throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n        }\n\n        dataset._decimated = decimated;\n      });\n    },\n\n    destroy(chart) {\n      cleanDecimatedData(chart);\n    }\n\n  };\n\n  function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n  }\n\n  function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n    if (fill === undefined) {\n      fill = !!options.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    return fill;\n  }\n\n  function decodeFill(line, index, count) {\n    const fill = parseFillOption(line);\n\n    if (isObject(fill)) {\n      return isNaN(fill.value) ? false : fill;\n    }\n\n    let target = parseFloat(fill);\n\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n  }\n\n  function computeLinearBoundary(source) {\n    const {\n      scale = {},\n      fill\n    } = source;\n    let target = null;\n    let horizontal;\n\n    if (fill === 'start') {\n      target = scale.bottom;\n    } else if (fill === 'end') {\n      target = scale.top;\n    } else if (isObject(fill)) {\n      target = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (isNumberFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n\n    return null;\n  }\n\n  class simpleArc {\n    constructor(opts) {\n      this.x = opts.x;\n      this.y = opts.y;\n      this.radius = opts.radius;\n    }\n\n    pathSegment(ctx, bounds, opts) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n\n    interpolate(point) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      const angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle\n      };\n    }\n\n  }\n\n  function computeCircularBoundary(source) {\n    const {\n      scale,\n      fill\n    } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const target = [];\n    const start = options.reverse ? scale.max : scale.min;\n    const end = options.reverse ? scale.min : scale.max;\n    let i, center, value;\n\n    if (fill === 'start') {\n      value = start;\n    } else if (fill === 'end') {\n      value = end;\n    } else if (isObject(fill)) {\n      value = fill.value;\n    } else {\n      value = scale.getBaseValue();\n    }\n\n    if (options.grid.circular) {\n      center = scale.getPointPositionForValue(0, start);\n      return new simpleArc({\n        x: center.x,\n        y: center.y,\n        radius: scale.getDistanceFromCenterForValue(value)\n      });\n    }\n\n    for (i = 0; i < length; ++i) {\n      target.push(scale.getPointPositionForValue(i, value));\n    }\n\n    return target;\n  }\n\n  function computeBoundary(source) {\n    const scale = source.scale || {};\n\n    if (scale.getPointPositionForValue) {\n      return computeCircularBoundary(source);\n    }\n\n    return computeLinearBoundary(source);\n  }\n\n  function findSegmentEnd(start, end, points) {\n    for (; end > start; end--) {\n      const point = points[end];\n\n      if (!isNaN(point.x) && !isNaN(point.y)) {\n        break;\n      }\n    }\n\n    return end;\n  }\n\n  function pointsFromSegments(boundary, line) {\n    const {\n      x = null,\n      y = null\n    } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(_ref4 => {\n      let {\n        start,\n        end\n      } = _ref4;\n      end = findSegmentEnd(start, end, linePoints);\n      const first = linePoints[start];\n      const last = linePoints[end];\n\n      if (y !== null) {\n        points.push({\n          x: first.x,\n          y\n        });\n        points.push({\n          x: last.x,\n          y\n        });\n      } else if (x !== null) {\n        points.push({\n          x,\n          y: first.y\n        });\n        points.push({\n          x,\n          y: last.y\n        });\n      }\n    });\n    return points;\n  }\n\n  function buildStackLine(source) {\n    const {\n      scale,\n      index,\n      line\n    } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(createBoundaryLine({\n      x: null,\n      y: scale.bottom\n    }, line));\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n\n      for (let j = segment.start; j <= segment.end; j++) {\n        addPointsBelow(points, sourcePoints[j], linesBelow);\n      }\n    }\n\n    return new LineElement({\n      points,\n      options: {}\n    });\n  }\n\n  function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n\n    for (let i = 0; i < metas.length; i++) {\n      const meta = metas[i];\n\n      if (meta.index === index) {\n        break;\n      }\n\n      if (!meta.hidden) {\n        below.unshift(meta.dataset);\n      }\n    }\n\n    return below;\n  }\n\n  function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n\n    for (let j = 0; j < linesBelow.length; j++) {\n      const line = linesBelow[j];\n      const {\n        first,\n        last,\n        point\n      } = findPoint(line, sourcePoint, 'x');\n\n      if (!point || first && last) {\n        continue;\n      }\n\n      if (first) {\n        postponed.unshift(point);\n      } else {\n        points.push(point);\n\n        if (!last) {\n          break;\n        }\n      }\n    }\n\n    points.push(...postponed);\n  }\n\n  function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n\n    if (!point) {\n      return {};\n    }\n\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      const firstValue = linePoints[segment.start][property];\n      const lastValue = linePoints[segment.end][property];\n\n      if (_isBetween(pointValue, firstValue, lastValue)) {\n        first = pointValue === firstValue;\n        last = pointValue === lastValue;\n        break;\n      }\n    }\n\n    return {\n      first,\n      last,\n      point\n    };\n  }\n\n  function getTarget(source) {\n    const {\n      chart,\n      fill,\n      line\n    } = source;\n\n    if (isNumberFinite(fill)) {\n      return getLineByIndex(chart, fill);\n    }\n\n    if (fill === 'stack') {\n      return buildStackLine(source);\n    }\n\n    if (fill === 'shape') {\n      return true;\n    }\n\n    const boundary = computeBoundary(source);\n\n    if (boundary instanceof simpleArc) {\n      return boundary;\n    }\n\n    return createBoundaryLine(boundary, line);\n  }\n\n  function createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n\n    if (isArray(boundary)) {\n      _loop = true;\n      points = boundary;\n    } else {\n      points = pointsFromSegments(boundary, line);\n    }\n\n    return points.length ? new LineElement({\n      points,\n      options: {\n        tension: 0\n      },\n      _loop,\n      _fullLoop: _loop\n    }) : null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [index];\n    let target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isNumberFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function _clip(ctx, target, clipY) {\n    const {\n      segments,\n      points\n    } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n\n    for (const segment of segments) {\n      const {\n        start,\n        end\n      } = segment;\n      const firstPoint = points[start];\n      const lastPoint = points[findSegmentEnd(start, end, points)];\n\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  function getBounds(property, first, last, loop) {\n    if (loop) {\n      return;\n    }\n\n    let start = first[property];\n    let end = last[property];\n\n    if (property === 'angle') {\n      start = _normalizeAngle(start);\n      end = _normalizeAngle(end);\n    }\n\n    return {\n      property,\n      start,\n      end\n    };\n  }\n\n  function _getEdge(a, b, prop, fn) {\n    if (a && b) {\n      return fn(a[prop], b[prop]);\n    }\n\n    return a ? a[prop] : b ? b[prop] : 0;\n  }\n\n  function _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n\n    for (const segment of segments) {\n      let {\n        start,\n        end\n      } = segment;\n      end = findSegmentEnd(start, end, points);\n      const bounds = getBounds(property, points[start], points[end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n\n      const targetSegments = _boundSegments(target, bounds);\n\n      for (const tgt of targetSegments) {\n        const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n        const fillSources = _boundSegment(segment, points, subBounds);\n\n        for (const fillSource of fillSources) {\n          parts.push({\n            source: fillSource,\n            target: tgt,\n            start: {\n              [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n            },\n            end: {\n              [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n            }\n          });\n        }\n      }\n    }\n\n    return parts;\n  }\n\n  function clipBounds(ctx, scale, bounds) {\n    const {\n      top,\n      bottom\n    } = scale.chart.chartArea;\n    const {\n      property,\n      start,\n      end\n    } = bounds || {};\n\n    if (property === 'x') {\n      ctx.beginPath();\n      ctx.rect(start, top, end - start, bottom - top);\n      ctx.clip();\n    }\n  }\n\n  function interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n\n    if (interpolatedPoint) {\n      ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n  }\n\n  function _fill(ctx, cfg) {\n    const {\n      line,\n      target,\n      property,\n      color,\n      scale\n    } = cfg;\n\n    const segments = _segments(line, target, property);\n\n    for (const {\n      source: src,\n      target: tgt,\n      start,\n      end\n    } of segments) {\n      const {\n        style: {\n          backgroundColor = color\n        } = {}\n      } = src;\n      const notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n      ctx.beginPath();\n      const lineLoop = !!line.pathSegment(ctx, src);\n      let loop;\n\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n\n        const targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  }\n\n  function doFill(ctx, cfg) {\n    const {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale\n    } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n\n    if (property === 'x' && below !== above) {\n      _clip(ctx, target, area.top);\n\n      _fill(ctx, {\n        line,\n        target,\n        color: above,\n        scale,\n        property\n      });\n\n      ctx.restore();\n      ctx.save();\n\n      _clip(ctx, target, area.bottom);\n    }\n\n    _fill(ctx, {\n      line,\n      target,\n      color: below,\n      scale,\n      property\n    });\n\n    ctx.restore();\n  }\n\n  function drawfill(ctx, source, area) {\n    const target = getTarget(source);\n    const {\n      line,\n      scale,\n      axis\n    } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {\n      above = color,\n      below = color\n    } = fillOption || {};\n\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {\n        line,\n        target,\n        above,\n        below,\n        area,\n        scale,\n        axis\n      });\n      unclipArea(ctx);\n    }\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n\n    afterDatasetsUpdate(chart, _args, options) {\n      const count = (chart.data.datasets || []).length;\n      const sources = [];\n      let meta, i, line, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        line = meta.dataset;\n        source = null;\n\n        if (line && line.options && line instanceof LineElement) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            index: i,\n            fill: decodeFill(line, i, count),\n            chart,\n            axis: meta.controller.options.indexAxis,\n            scale: meta.vScale,\n            line\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source || source.fill === false) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, options.propagate);\n      }\n    },\n\n    beforeDraw(chart, _args, options) {\n      const draw = options.drawTime === 'beforeDraw';\n      const metasets = chart.getSortedVisibleDatasetMetas();\n      const area = chart.chartArea;\n\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n\n        if (!source) {\n          continue;\n        }\n\n        source.line.updateControlPoints(area, source.axis);\n\n        if (draw) {\n          drawfill(chart.ctx, source, area);\n        }\n      }\n    },\n\n    beforeDatasetsDraw(chart, _args, options) {\n      if (options.drawTime !== 'beforeDatasetsDraw') {\n        return;\n      }\n\n      const metasets = chart.getSortedVisibleDatasetMetas();\n\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n\n        if (source) {\n          drawfill(chart.ctx, source, chart.chartArea);\n        }\n      }\n    },\n\n    beforeDatasetDraw(chart, args, options) {\n      const source = args.meta.$filler;\n\n      if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n        return;\n      }\n\n      drawfill(chart.ctx, source, chart.chartArea);\n    },\n\n    defaults: {\n      propagate: true,\n      drawTime: 'beforeDatasetDraw'\n    }\n  };\n\n  const getBoxSize = (labelOpts, fontSize) => {\n    let {\n      boxHeight = fontSize,\n      boxWidth = fontSize\n    } = labelOpts;\n\n    if (labelOpts.usePointStyle) {\n      boxHeight = Math.min(boxHeight, fontSize);\n      boxWidth = Math.min(boxWidth, fontSize);\n    }\n\n    return {\n      boxWidth,\n      boxHeight,\n      itemHeight: Math.max(fontSize, boxHeight)\n    };\n  };\n\n  const itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\n  class Legend extends Element {\n    constructor(config) {\n      super();\n      this._added = false;\n      this.legendHitBoxes = [];\n      this._hoveredItem = null;\n      this.doughnutMode = false;\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this.legendItems = undefined;\n      this.columnSizes = undefined;\n      this.lineWidths = undefined;\n      this.maxHeight = undefined;\n      this.maxWidth = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this._margins = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n\n    update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n\n    setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n\n    buildLabels() {\n      const labelOpts = this.options.labels || {};\n      let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n      }\n\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n\n      this.legendItems = legendItems;\n    }\n\n    fit() {\n      const {\n        options,\n        ctx\n      } = this;\n\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n\n      const labelOpts = options.labels;\n      const labelFont = toFont(labelOpts.font);\n      const fontSize = labelFont.size;\n\n      const titleHeight = this._computeTitleHeight();\n\n      const {\n        boxWidth,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n      let width, height;\n      ctx.font = labelFont.string;\n\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n\n    _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      const {\n        ctx,\n        maxWidth,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = this;\n      const hitboxes = this.legendHitBoxes = [];\n      const lineWidths = this.lineWidths = [0];\n      const lineHeight = itemHeight + padding;\n      let totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      let row = -1;\n      let top = -lineHeight;\n      this.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top,\n          row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n\n    _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      const {\n        ctx,\n        maxHeight,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = this;\n      const hitboxes = this.legendHitBoxes = [];\n      const columnSizes = this.columnSizes = [];\n      const heightLimit = maxHeight - titleHeight;\n      let totalWidth = padding;\n      let currentColWidth = 0;\n      let currentColHeight = 0;\n      let left = 0;\n      let col = 0;\n      this.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        hitboxes[i] = {\n          left,\n          top: currentColHeight,\n          col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n\n    adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n\n      const titleHeight = this._computeTitleHeight();\n\n      const {\n        legendHitBoxes: hitboxes,\n        options: {\n          align,\n          labels: {\n            padding\n          },\n          rtl\n        }\n      } = this;\n      const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n      if (this.isHorizontal()) {\n        let row = 0;\n\n        let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n        for (const hitbox of hitboxes) {\n          if (row !== hitbox.row) {\n            row = hitbox.row;\n            left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n          }\n\n          hitbox.top += this.top + titleHeight + padding;\n          hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n          left += hitbox.width + padding;\n        }\n      } else {\n        let col = 0;\n\n        let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n        for (const hitbox of hitboxes) {\n          if (hitbox.col !== col) {\n            col = hitbox.col;\n            top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n          }\n\n          hitbox.top = top;\n          hitbox.left += this.left + padding;\n          hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n          top += hitbox.height + padding;\n        }\n      }\n    }\n\n    isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n\n    draw() {\n      if (this.options.display) {\n        const ctx = this.ctx;\n        clipArea(ctx, this);\n\n        this._draw();\n\n        unclipArea(ctx);\n      }\n    }\n\n    _draw() {\n      const {\n        options: opts,\n        columnSizes,\n        lineWidths,\n        ctx\n      } = this;\n      const {\n        align,\n        labels: labelOpts\n      } = opts;\n      const defaultColor = defaults.color;\n      const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      const labelFont = toFont(labelOpts.font);\n      const {\n        color: fontColor,\n        padding\n      } = labelOpts;\n      const fontSize = labelFont.size;\n      const halfFontSize = fontSize / 2;\n      let cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      const {\n        boxWidth,\n        boxHeight,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n\n      const drawLegendBox = function (x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          const drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          const centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          const borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(v => v !== 0)) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      const fillText = function (x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n\n      const isHorizontal = this.isHorizontal();\n\n      const titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      overrideTextDirection(this.ctx, opts.textDirection);\n      const lineHeight = itemHeight + padding;\n      this.legendItems.forEach((legendItem, i) => {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        const textWidth = ctx.measureText(legendItem.text).width;\n        const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        const width = boxWidth + halfFontSize + textWidth;\n        let x = cursor.x;\n        let y = cursor.y;\n        rtlHelper.setWidth(this.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > this.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > this.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n        }\n\n        const realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n\n    drawTitle() {\n      const opts = this.options;\n      const titleOpts = opts.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      const ctx = this.ctx;\n      const position = titleOpts.position;\n      const halfFontSize = titleFont.size / 2;\n      const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      let y;\n      let left = this.left;\n      let maxWidth = this.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max(...this.lineWidths);\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n\n      const x = _alignStartEnd(position, left, left + maxWidth);\n\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n\n    _computeTitleHeight() {\n      const titleOpts = this.options.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n\n    _getLegendItemAt(x, y) {\n      let i, hitBox, lh;\n\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n\n    handleEvent(e) {\n      const opts = this.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove') {\n        const previous = this._hoveredItem;\n        const sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n\n        this._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n\n  }\n\n  function isListened(type, opts) {\n    if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n      return true;\n    }\n\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n    _element: Legend,\n\n    start(chart, _args, options) {\n      const legend = chart.legend = new Legend({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, legend, options);\n      layouts.addBox(chart, legend);\n    },\n\n    stop(chart) {\n      layouts.removeBox(chart, chart.legend);\n      delete chart.legend;\n    },\n\n    beforeUpdate(chart, _args, options) {\n      const legend = chart.legend;\n      layouts.configure(chart, legend, options);\n      legend.options = options;\n    },\n\n    afterUpdate(chart) {\n      const legend = chart.legend;\n      legend.buildLabels();\n      legend.adjustHitBoxes();\n    },\n\n    afterEvent(chart, args) {\n      if (!args.replay) {\n        chart.legend.handleEvent(args.event);\n      }\n    },\n\n    defaults: {\n      display: true,\n      position: 'top',\n      align: 'center',\n      fullSize: true,\n      reverse: false,\n      weight: 1000,\n\n      onClick(e, legendItem, legend) {\n        const index = legendItem.datasetIndex;\n        const ci = legend.chart;\n\n        if (ci.isDatasetVisible(index)) {\n          ci.hide(index);\n          legendItem.hidden = true;\n        } else {\n          ci.show(index);\n          legendItem.hidden = false;\n        }\n      },\n\n      onHover: null,\n      onLeave: null,\n      labels: {\n        color: ctx => ctx.chart.options.color,\n        boxWidth: 40,\n        padding: 10,\n\n        generateLabels(chart) {\n          const datasets = chart.data.datasets;\n          const {\n            labels: {\n              usePointStyle,\n              pointStyle,\n              textAlign,\n              color\n            }\n          } = chart.legend.options;\n          return chart._getSortedDatasetMetas().map(meta => {\n            const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n            const borderWidth = toPadding(style.borderWidth);\n            return {\n              text: datasets[meta.index].label,\n              fillStyle: style.backgroundColor,\n              fontColor: color,\n              hidden: !meta.visible,\n              lineCap: style.borderCapStyle,\n              lineDash: style.borderDash,\n              lineDashOffset: style.borderDashOffset,\n              lineJoin: style.borderJoinStyle,\n              lineWidth: (borderWidth.width + borderWidth.height) / 4,\n              strokeStyle: style.borderColor,\n              pointStyle: pointStyle || style.pointStyle,\n              rotation: style.rotation,\n              textAlign: textAlign || style.textAlign,\n              borderRadius: 0,\n              datasetIndex: meta.index\n            };\n          }, this);\n        }\n\n      },\n      title: {\n        color: ctx => ctx.chart.options.color,\n        display: false,\n        position: 'center',\n        text: ''\n      }\n    },\n    descriptors: {\n      _scriptable: name => !name.startsWith('on'),\n      labels: {\n        _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n      }\n    }\n  };\n\n  class Title extends Element {\n    constructor(config) {\n      super();\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this._padding = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n\n    update(maxWidth, maxHeight) {\n      const opts = this.options;\n      this.left = 0;\n      this.top = 0;\n\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      const lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n\n      const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n\n    isHorizontal() {\n      const pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n\n    _drawArgs(offset) {\n      const {\n        top,\n        left,\n        bottom,\n        right,\n        options\n      } = this;\n      const align = options.align;\n      let rotation = 0;\n      let maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      };\n    }\n\n    draw() {\n      const ctx = this.ctx;\n      const opts = this.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      const fontOpts = toFont(opts.font);\n      const lineHeight = fontOpts.lineHeight;\n      const offset = lineHeight / 2 + this._padding.top;\n\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = this._drawArgs(offset);\n\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth,\n        rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n\n  }\n\n  function createTitle(chart, titleOpts) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n    _element: Title,\n\n    start(chart, _args, options) {\n      createTitle(chart, options);\n    },\n\n    stop(chart) {\n      const titleBlock = chart.titleBlock;\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    },\n\n    beforeUpdate(chart, _args, options) {\n      const title = chart.titleBlock;\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'bold'\n      },\n      fullSize: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const map = new WeakMap();\n  var plugin_subtitle = {\n    id: 'subtitle',\n\n    start(chart, _args, options) {\n      const title = new Title({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, title, options);\n      layouts.addBox(chart, title);\n      map.set(chart, title);\n    },\n\n    stop(chart) {\n      layouts.removeBox(chart, map.get(chart));\n      map.delete(chart);\n    },\n\n    beforeUpdate(chart, _args, options) {\n      const title = map.get(chart);\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'normal'\n      },\n      fullSize: true,\n      padding: 0,\n      position: 'top',\n      text: '',\n      weight: 1500\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const positioners = {\n    average(items) {\n      if (!items.length) {\n        return false;\n      }\n\n      let i, len;\n      let x = 0;\n      let y = 0;\n      let count = 0;\n\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n\n        if (el && el.hasValue()) {\n          const pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    nearest(items, eventPosition) {\n      if (!items.length) {\n        return false;\n      }\n\n      let x = eventPosition.x;\n      let y = eventPosition.y;\n      let minDistance = Number.POSITIVE_INFINITY;\n      let i, len, nearestElement;\n\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n\n        if (el && el.hasValue()) {\n          const center = el.getCenterPoint();\n          const d = distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        const tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x,\n        y\n      };\n    }\n\n  };\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (isArray(toPush)) {\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n\n  function createTooltipItem(chart, item) {\n    const {\n      element,\n      datasetIndex,\n      index\n    } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const {\n      label,\n      value\n    } = controller.getLabelAndValue(index);\n    return {\n      chart,\n      label,\n      parsed: controller.getParsed(index),\n      raw: chart.data.datasets[datasetIndex].data[index],\n      formattedValue: value,\n      dataset: controller.getDataset(),\n      dataIndex: index,\n      datasetIndex,\n      element\n    };\n  }\n\n  function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const {\n      body,\n      footer,\n      title\n    } = tooltip;\n    const {\n      boxWidth,\n      boxHeight\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n    if (titleLineCount) {\n      height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n\n    if (combinedBodyLength) {\n      const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n      height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n\n    if (footerLineCount) {\n      height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n\n    let widthPadding = 0;\n\n    const maxLineWidth = function (line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, bodyItem => {\n      each(bodyItem.before, maxLineWidth);\n      each(bodyItem.lines, maxLineWidth);\n      each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n      width,\n      height\n    };\n  }\n\n  function determineYAlign(chart, size) {\n    const {\n      y,\n      height\n    } = size;\n\n    if (y < height / 2) {\n      return 'top';\n    } else if (y > chart.height - height / 2) {\n      return 'bottom';\n    }\n\n    return 'center';\n  }\n\n  function doesNotFitWithAlign(xAlign, chart, options, size) {\n    const {\n      x,\n      width\n    } = size;\n    const caret = options.caretSize + options.caretPadding;\n\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n      return true;\n    }\n\n    if (xAlign === 'right' && x - width - caret < 0) {\n      return true;\n    }\n  }\n\n  function determineXAlign(chart, options, size, yAlign) {\n    const {\n      x,\n      width\n    } = size;\n    const {\n      width: chartWidth,\n      chartArea: {\n        left,\n        right\n      }\n    } = chart;\n    let xAlign = 'center';\n\n    if (yAlign === 'center') {\n      xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n      xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n      xAlign = 'right';\n    }\n\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n      xAlign = 'center';\n    }\n\n    return xAlign;\n  }\n\n  function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n      xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n      yAlign\n    };\n  }\n\n  function alignX(size, xAlign) {\n    let {\n      x,\n      width\n    } = size;\n\n    if (xAlign === 'right') {\n      x -= width;\n    } else if (xAlign === 'center') {\n      x -= width / 2;\n    }\n\n    return x;\n  }\n\n  function alignY(size, yAlign, paddingAndSize) {\n    let {\n      y,\n      height\n    } = size;\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= height + paddingAndSize;\n    } else {\n      y -= height / 2;\n    }\n\n    return y;\n  }\n\n  function getBackgroundPoint(options, size, alignment, chart) {\n    const {\n      caretSize,\n      caretPadding,\n      cornerRadius\n    } = options;\n    const {\n      xAlign,\n      yAlign\n    } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n      x += Math.max(topRight, bottomRight) + caretSize;\n    }\n\n    return {\n      x: _limitValue(x, 0, chart.width - size.width),\n      y: _limitValue(y, 0, chart.height - size.height)\n    };\n  }\n\n  function getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n  }\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  function createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n      tooltip,\n      tooltipItems,\n      type: 'tooltip'\n    });\n  }\n\n  function overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n  }\n\n  class Tooltip extends Element {\n    constructor(config) {\n      super();\n      this.opacity = 0;\n      this._active = [];\n      this._eventPosition = undefined;\n      this._size = undefined;\n      this._cachedAnimations = undefined;\n      this._tooltipItems = [];\n      this.$animations = undefined;\n      this.$context = undefined;\n      this.chart = config.chart || config._chart;\n      this._chart = this.chart;\n      this.options = config.options;\n      this.dataPoints = undefined;\n      this.title = undefined;\n      this.beforeBody = undefined;\n      this.body = undefined;\n      this.afterBody = undefined;\n      this.footer = undefined;\n      this.xAlign = undefined;\n      this.yAlign = undefined;\n      this.x = undefined;\n      this.y = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this.caretX = undefined;\n      this.caretY = undefined;\n      this.labelColors = undefined;\n      this.labelPointStyles = undefined;\n      this.labelTextColors = undefined;\n    }\n\n    initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n\n    _resolveAnimations() {\n      const cached = this._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      const chart = this.chart;\n      const options = this.options.setContext(this.getContext());\n      const opts = options.enabled && chart.options.animation && options.animations;\n      const animations = new Animations(this.chart, opts);\n\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n\n    getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n\n    getTitle(context, options) {\n      const {\n        callbacks\n      } = options;\n      const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      const title = callbacks.title.apply(this, [context]);\n      const afterTitle = callbacks.afterTitle.apply(this, [context]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n\n    getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n\n    getBody(tooltipItems, options) {\n      const {\n        callbacks\n      } = options;\n      const bodyItems = [];\n      each(tooltipItems, context => {\n        const bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        const scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n\n    getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n\n    getFooter(tooltipItems, options) {\n      const {\n        callbacks\n      } = options;\n      const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      const footer = callbacks.footer.apply(this, [tooltipItems]);\n      const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n\n    _createItems(options) {\n      const active = this._active;\n      const data = this.chart.data;\n      const labelColors = [];\n      const labelPointStyles = [];\n      const labelTextColors = [];\n      let tooltipItems = [];\n      let i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n      }\n\n      each(tooltipItems, context => {\n        const scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(this, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n        labelTextColors.push(scoped.labelTextColor.call(this, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n\n    update(changed, replay) {\n      const options = this.options.setContext(this.getContext());\n      const active = this._active;\n      let properties;\n      let tooltipItems = [];\n\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        const position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        const size = this._size = getTooltipSize(this, options);\n        const positionAndSize = Object.assign({}, position, size);\n        const alignment = determineAlignment(this.chart, options, positionAndSize);\n        const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay\n        });\n      }\n    }\n\n    drawCaret(tooltipPoint, ctx, size, options) {\n      const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n\n    getCaretPosition(tooltipPoint, size, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        caretSize,\n        cornerRadius\n      } = options;\n      const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n      } = toTRBLCorners(cornerRadius);\n      const {\n        x: ptX,\n        y: ptY\n      } = tooltipPoint;\n      const {\n        width,\n        height\n      } = size;\n      let x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1,\n        x2,\n        x3,\n        y1,\n        y2,\n        y3\n      };\n    }\n\n    drawTitle(pt, ctx, options) {\n      const title = this.title;\n      const length = title.length;\n      let titleFont, titleSpacing, i;\n\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n\n    _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      const labelColors = this.labelColors[i];\n      const labelPointStyle = this.labelPointStyles[i];\n      const {\n        boxHeight,\n        boxWidth,\n        boxPadding\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      const colorX = getAlignedX(this, 'left', options);\n      const rtlColorX = rtlHelper.x(colorX);\n      const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      const colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        const drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        const centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n\n    drawBody(pt, ctx, options) {\n      const {\n        body\n      } = this;\n      const {\n        bodySpacing,\n        bodyAlign,\n        displayColors,\n        boxHeight,\n        boxWidth,\n        boxPadding\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      let bodyLineHeight = bodyFont.lineHeight;\n      let xLinePadding = 0;\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      const fillLineOfText = function (line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      let bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        each(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n\n    drawFooter(pt, ctx, options) {\n      const footer = this.footer;\n      const length = footer.length;\n      let footerFont, i;\n\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n\n    drawBackground(pt, ctx, tooltipSize, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        x,\n        y\n      } = pt;\n      const {\n        width,\n        height\n      } = tooltipSize;\n      const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n      } = toTRBLCorners(options.cornerRadius);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n\n    _updateAnimationTarget(options) {\n      const chart = this.chart;\n      const anims = this.$animations;\n      const animX = anims && anims.x;\n      const animY = anims && anims.y;\n\n      if (animX || animY) {\n        const position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        const size = this._size = getTooltipSize(this, options);\n        const positionAndSize = Object.assign({}, position, this._size);\n        const alignment = determineAlignment(chart, options, positionAndSize);\n        const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n\n    draw(ctx) {\n      const options = this.options.setContext(this.getContext());\n      let opacity = this.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      this._updateAnimationTarget(options);\n\n      const tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      const pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      const padding = toPadding(options.padding);\n      const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n\n    getActiveElements() {\n      return this._active || [];\n    }\n\n    setActiveElements(activeElements, eventPosition) {\n      const lastActive = this._active;\n      const active = activeElements.map(_ref5 => {\n        let {\n          datasetIndex,\n          index\n        } = _ref5;\n        const meta = this.chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(lastActive, active);\n\n      const positionChanged = this._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n\n    handleEvent(e, replay) {\n      let inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n\n      this._ignoreReplayEvents = false;\n      const options = this.options;\n      const lastActive = this._active || [];\n\n      const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n      const positionChanged = this._positionChanged(active, e);\n\n      const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n      if (changed) {\n        this._active = active;\n\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n\n    _getActiveElements(e, lastActive, replay, inChartArea) {\n      const options = this.options;\n\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n\n      return active;\n    }\n\n    _positionChanged(active, e) {\n      const {\n        caretX,\n        caretY,\n        options\n      } = this;\n      const position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n\n  }\n\n  Tooltip.positioners = positioners;\n  var plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n\n    afterInit(chart, _args, options) {\n      if (options) {\n        chart.tooltip = new Tooltip({\n          chart,\n          options\n        });\n      }\n    },\n\n    beforeUpdate(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n\n    reset(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n\n    afterDraw(chart) {\n      const tooltip = chart.tooltip;\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n\n      if (tooltip) {\n        tooltip.draw(chart.ctx);\n      }\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    },\n\n    afterEvent(chart, args) {\n      if (chart.tooltip) {\n        const useFinalPosition = args.replay;\n\n        if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n          args.changed = true;\n        }\n      }\n    },\n\n    defaults: {\n      enabled: true,\n      external: null,\n      position: 'average',\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleColor: '#fff',\n      titleFont: {\n        weight: 'bold'\n      },\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleAlign: 'left',\n      bodyColor: '#fff',\n      bodySpacing: 2,\n      bodyFont: {},\n      bodyAlign: 'left',\n      footerColor: '#fff',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFont: {\n        weight: 'bold'\n      },\n      footerAlign: 'left',\n      padding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      boxHeight: (ctx, opts) => opts.bodyFont.size,\n      boxWidth: (ctx, opts) => opts.bodyFont.size,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      boxPadding: 0,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      animation: {\n        duration: 400,\n        easing: 'easeOutQuart'\n      },\n      animations: {\n        numbers: {\n          type: 'number',\n          properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n        },\n        opacity: {\n          easing: 'linear',\n          duration: 200\n        }\n      },\n      callbacks: {\n        beforeTitle: noop,\n\n        title(tooltipItems) {\n          if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n\n            if (this && this.options && this.options.mode === 'dataset') {\n              return item.dataset.label || '';\n            } else if (item.label) {\n              return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n              return labels[item.dataIndex];\n            }\n          }\n\n          return '';\n        },\n\n        afterTitle: noop,\n        beforeBody: noop,\n        beforeLabel: noop,\n\n        label(tooltipItem) {\n          if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n          }\n\n          let label = tooltipItem.dataset.label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          const value = tooltipItem.formattedValue;\n\n          if (!isNullOrUndef(value)) {\n            label += value;\n          }\n\n          return label;\n        },\n\n        labelColor(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n          };\n        },\n\n        labelTextColor() {\n          return this.options.bodyColor;\n        },\n\n        labelPointStyle(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n          };\n        },\n\n        afterLabel: noop,\n        afterBody: noop,\n        beforeFooter: noop,\n        footer: noop,\n        afterFooter: noop\n      }\n    },\n    defaultRoutes: {\n      bodyFont: 'font',\n      footerFont: 'font',\n      titleFont: 'font'\n    },\n    descriptors: {\n      _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n      _indexable: false,\n      callbacks: {\n        _scriptable: false,\n        _indexable: false\n      },\n      animation: {\n        _fallback: false\n      },\n      animations: {\n        _fallback: 'animation'\n      }\n    },\n    additionalOptionScopes: ['interaction']\n  };\n  var plugins = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Decimation: plugin_decimation,\n    Filler: plugin_filler,\n    Legend: plugin_legend,\n    SubTitle: plugin_subtitle,\n    Title: plugin_title,\n    Tooltip: plugin_tooltip\n  });\n\n  const addIfString = (labels, raw, index, addedLabels) => {\n    if (typeof raw === 'string') {\n      index = labels.push(raw) - 1;\n      addedLabels.unshift({\n        index,\n        label: raw\n      });\n    } else if (isNaN(raw)) {\n      index = null;\n    }\n\n    return index;\n  };\n\n  function findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n\n    if (first === -1) {\n      return addIfString(labels, raw, index, addedLabels);\n    }\n\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n  }\n\n  const validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\n  class CategoryScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this._startValue = undefined;\n      this._valueRange = 0;\n      this._addedLabels = [];\n    }\n\n    init(scaleOptions) {\n      const added = this._addedLabels;\n\n      if (added.length) {\n        const labels = this.getLabels();\n\n        for (const {\n          index,\n          label\n        } of added) {\n          if (labels[index] === label) {\n            labels.splice(index, 1);\n          }\n        }\n\n        this._addedLabels = [];\n      }\n\n      super.init(scaleOptions);\n    }\n\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      const labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n\n    determineDataLimits() {\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let {\n        min,\n        max\n      } = this.getMinMax(true);\n\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n\n    buildTicks() {\n      const min = this.min;\n      const max = this.max;\n      const offset = this.options.offset;\n      const ticks = [];\n      let labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n\n      for (let value = min; value <= max; value++) {\n        ticks.push({\n          value\n        });\n      }\n\n      return ticks;\n    }\n\n    getLabelForValue(value) {\n      const labels = this.getLabels();\n\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n\n      return value;\n    }\n\n    configure() {\n      super.configure();\n\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n\n    getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n\n    getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n\n    getBasePixel() {\n      return this.bottom;\n    }\n\n  }\n\n  CategoryScale.id = 'category';\n  CategoryScale.defaults = {\n    ticks: {\n      callback: CategoryScale.prototype.getLabelForValue\n    }\n  };\n\n  function generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const {\n      bounds,\n      step,\n      min,\n      max,\n      precision,\n      count,\n      maxTicks,\n      maxDigits,\n      includeBounds\n    } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const {\n      min: rmin,\n      max: rmax\n    } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n      return [{\n        value: rmin\n      }, {\n        value: rmax\n      }];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxSpaces) {\n      spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n\n    if (!isNullOrUndef(precision)) {\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    if (bounds === 'ticks') {\n      niceMin = Math.floor(rmin / spacing) * spacing;\n      niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n      niceMin = rmin;\n      niceMax = rmax;\n    }\n\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n      numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n      spacing = (max - min) / numSpaces;\n      niceMin = min;\n      niceMax = max;\n    } else if (countDefined) {\n      niceMin = minDefined ? min : niceMin;\n      niceMax = maxDefined ? max : niceMax;\n      numSpaces = count - 1;\n      spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n      numSpaces = (niceMax - niceMin) / spacing;\n\n      if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n        numSpaces = Math.round(numSpaces);\n      } else {\n        numSpaces = Math.ceil(numSpaces);\n      }\n    }\n\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n\n    if (minDefined) {\n      if (includeBounds && niceMin !== min) {\n        ticks.push({\n          value: min\n        });\n\n        if (niceMin < min) {\n          j++;\n        }\n\n        if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n          j++;\n        }\n      } else if (niceMin < min) {\n        j++;\n      }\n    }\n\n    for (; j < numSpaces; ++j) {\n      ticks.push({\n        value: Math.round((niceMin + j * spacing) * factor) / factor\n      });\n    }\n\n    if (maxDefined && includeBounds && niceMax !== max) {\n      if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n        ticks[ticks.length - 1].value = max;\n      } else {\n        ticks.push({\n          value: max\n        });\n      }\n    } else if (!maxDefined || niceMax === max) {\n      ticks.push({\n        value: niceMax\n      });\n    }\n\n    return ticks;\n  }\n\n  function relativeLabelSize(value, minSpacing, _ref6) {\n    let {\n      horizontal,\n      minRotation\n    } = _ref6;\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n  }\n\n  class LinearScaleBase extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._endValue = undefined;\n      this._valueRange = 0;\n    }\n\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n\n    handleTickRangeOptions() {\n      const {\n        beginAtZero\n      } = this.options;\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let {\n        min,\n        max\n      } = this;\n\n      const setMin = v => min = minDefined ? min : v;\n\n      const setMax = v => max = maxDefined ? max : v;\n\n      if (beginAtZero) {\n        const minSign = sign(min);\n        const maxSign = sign(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        let offset = 1;\n\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n\n        setMax(max + offset);\n\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n\n    getTickLimit() {\n      const tickOpts = this.options.ticks;\n      let {\n        maxTicksLimit,\n        stepSize\n      } = tickOpts;\n      let maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n        if (maxTicks > 1000) {\n          console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n\n    computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n\n    buildTicks() {\n      const opts = this.options;\n      const tickOpts = opts.ticks;\n      let maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      const numericGeneratorOptions = {\n        maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      const dataRange = this._range || this;\n      const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n\n    configure() {\n      const ticks = this.ticks;\n      let start = this.min;\n      let end = this.max;\n      super.configure();\n\n      if (this.options.offset && ticks.length) {\n        const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n\n    getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n\n  }\n\n  class LinearScale extends LinearScaleBase {\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(true);\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n\n    computeTickLimit() {\n      const horizontal = this.isHorizontal();\n      const length = horizontal ? this.width : this.height;\n      const minRotation = toRadians(this.options.ticks.minRotation);\n      const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n      const tickFont = this._resolveTickFontOptions(0);\n\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n\n    getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n\n    getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n\n  }\n\n  LinearScale.id = 'linear';\n  LinearScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n  function isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n    return remain === 1;\n  }\n\n  function generateTicks(generationOptions, dataRange) {\n    const endExp = Math.floor(log10(dataRange.max));\n    const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    const ticks = [];\n    let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n    let exp = Math.floor(log10(tickVal));\n    let significand = Math.floor(tickVal / Math.pow(10, exp));\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push({\n        value: tickVal,\n        major: isMajor(tickVal)\n      });\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n    ticks.push({\n      value: lastTick,\n      major: isMajor(tickVal)\n    });\n    return ticks;\n  }\n\n  class LogarithmicScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._valueRange = 0;\n    }\n\n    parse(raw, index) {\n      const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(true);\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n\n      this.handleTickRangeOptions();\n    }\n\n    handleTickRangeOptions() {\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let min = this.min;\n      let max = this.max;\n\n      const setMin = v => min = minDefined ? min : v;\n\n      const setMax = v => max = maxDefined ? max : v;\n\n      const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n\n    buildTicks() {\n      const opts = this.options;\n      const generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      const ticks = generateTicks(generationOptions, this);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n\n    getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n\n    configure() {\n      const start = this.min;\n      super.configure();\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n\n    getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n\n    getValueForPixel(pixel) {\n      const decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n\n  }\n\n  LogarithmicScale.id = 'logarithmic';\n  LogarithmicScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n  function getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      const padding = toPadding(tickOpts.backdropPadding);\n      return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [label];\n    return {\n      w: _longestText(ctx, font.string, label),\n      h: label.length * font.lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n\n  function fitWithPointLabels(scale) {\n    const orig = {\n      l: scale.left + scale._padding.left,\n      r: scale.right - scale._padding.right,\n      t: scale.top + scale._padding.top,\n      b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n    for (let i = 0; i < valueCount; i++) {\n      const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n      padding[i] = opts.padding;\n      const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n      const plFont = toFont(opts.font);\n      const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n      labelSizes[i] = textSize;\n\n      const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n      const angle = Math.round(toDegrees(angleRadians));\n      const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n      updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n  }\n\n  function updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n\n    if (hLimits.start < orig.l) {\n      x = (orig.l - hLimits.start) / sin;\n      limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n      x = (hLimits.end - orig.r) / sin;\n      limits.r = Math.max(limits.r, orig.r + x);\n    }\n\n    if (vLimits.start < orig.t) {\n      y = (orig.t - vLimits.start) / cos;\n      limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n      y = (vLimits.end - orig.b) / cos;\n      limits.b = Math.max(limits.b, orig.b + y);\n    }\n  }\n\n  function buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n    for (let i = 0; i < valueCount; i++) {\n      const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n      const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n      const size = labelSizes[i];\n      const y = yForAngle(pointLabelPosition.y, size.h, angle);\n      const textAlign = getTextAlignForAngle(angle);\n      const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n      items.push({\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n      });\n    }\n\n    return items;\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n      x -= w;\n    } else if (align === 'center') {\n      x -= w / 2;\n    }\n\n    return x;\n  }\n\n  function yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n      y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n      y -= h;\n    }\n\n    return y;\n  }\n\n  function drawPointLabels(scale, labelCount) {\n    const {\n      ctx,\n      options: {\n        pointLabels\n      }\n    } = scale;\n\n    for (let i = labelCount - 1; i >= 0; i--) {\n      const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n      const plFont = toFont(optsAtIndex.font);\n      const {\n        x,\n        y,\n        textAlign,\n        left,\n        top,\n        right,\n        bottom\n      } = scale._pointLabelItems[i];\n      const {\n        backdropColor\n      } = optsAtIndex;\n\n      if (!isNullOrUndef(backdropColor)) {\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n      }\n\n      renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      });\n    }\n  }\n\n  function pathRadiusLine(scale, radius, circular, labelCount) {\n    const {\n      ctx\n    } = scale;\n\n    if (circular) {\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n      let pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (let i = 1; i < labelCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const {\n      color,\n      lineWidth\n    } = gridLineOpts;\n\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(gridLineOpts.borderDash);\n    ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n      label,\n      index,\n      type: 'pointLabel'\n    });\n  }\n\n  class RadialLinearScale extends LinearScaleBase {\n    constructor(cfg) {\n      super(cfg);\n      this.xCenter = undefined;\n      this.yCenter = undefined;\n      this.drawingArea = undefined;\n      this._pointLabels = [];\n      this._pointLabelItems = [];\n    }\n\n    setDimensions() {\n      const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      const w = this.width = this.maxWidth - padding.width;\n      const h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(false);\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n\n    computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n\n    generateTickLabels(ticks) {\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      }).filter((v, i) => this.chart.getDataVisibility(i));\n    }\n\n    fit() {\n      const opts = this.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n\n    getIndexAngle(index) {\n      const angleMultiplier = TAU / (this._pointLabels.length || 1);\n      const startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n\n    getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n\n      const scalingFactor = this.drawingArea / (this.max - this.min);\n\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n\n      return (value - this.min) * scalingFactor;\n    }\n\n    getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n\n      const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n\n    getPointLabelContext(index) {\n      const pointLabels = this._pointLabels || [];\n\n      if (index >= 0 && index < pointLabels.length) {\n        const pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n\n    getPointPosition(index, distanceFromCenter) {\n      let additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle\n      };\n    }\n\n    getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n\n    getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n\n    getPointLabelPosition(index) {\n      const {\n        left,\n        top,\n        right,\n        bottom\n      } = this._pointLabelItems[index];\n      return {\n        left,\n        top,\n        right,\n        bottom\n      };\n    }\n\n    drawBackground() {\n      const {\n        backgroundColor,\n        grid: {\n          circular\n        }\n      } = this.options;\n\n      if (backgroundColor) {\n        const ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n\n    drawGrid() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      const {\n        angleLines,\n        grid\n      } = opts;\n      const labelCount = this._pointLabels.length;\n      let i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n\n      if (grid.display) {\n        this.ticks.forEach((tick, index) => {\n          if (index !== 0) {\n            offset = this.getDistanceFromCenterForValue(tick.value);\n            const optsAtIndex = grid.setContext(this.getContext(index - 1));\n            drawRadiusLine(this, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = labelCount - 1; i >= 0; i--) {\n          const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          const {\n            color,\n            lineWidth\n          } = optsAtIndex;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n\n    drawBorder() {}\n\n    drawLabels() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      const tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      const startAngle = this.getIndexAngle(0);\n      let offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach((tick, index) => {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n\n        const optsAtIndex = tickOpts.setContext(this.getContext(index));\n        const tickFont = toFont(optsAtIndex.font);\n        offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          const padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n\n    drawTitle() {}\n\n  }\n\n  RadialLinearScale.id = 'radialLinear';\n  RadialLinearScale.defaults = {\n    display: true,\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    grid: {\n      circular: false\n    },\n    startAngle: 0,\n    ticks: {\n      showLabelBackdrop: true,\n      callback: Ticks.formatters.numeric\n    },\n    pointLabels: {\n      backdropColor: undefined,\n      backdropPadding: 2,\n      display: true,\n      font: {\n        size: 10\n      },\n\n      callback(label) {\n        return label;\n      },\n\n      padding: 5,\n      centerPointLabels: false\n    }\n  };\n  RadialLinearScale.defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n  RadialLinearScale.descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n  const INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: 1000\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: 60\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: 60\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: 24\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: 30\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: 4\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: 12\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: 4\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  const UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n      return null;\n    }\n\n    const adapter = scale._adapter;\n    const {\n      parser,\n      round,\n      isoWeekday\n    } = scale._parseOpts;\n    let value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    }\n\n    if (!isNumberFinite(value)) {\n      value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n\n    if (value === null) {\n      return null;\n    }\n\n    if (round) {\n      value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n\n    return +value;\n  }\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n\n    for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      const interval = INTERVALS[UNITS[i]];\n      const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n\n  function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n      const unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n\n  function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n      ticks[time] = true;\n    } else if (timestamps.length) {\n      const {\n        lo,\n        hi\n      } = _lookup(timestamps, time);\n\n      const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n      ticks[timestamp] = true;\n    }\n  }\n\n  function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n\n    for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n      index = map[major];\n\n      if (index >= 0) {\n        ticks[index].major = true;\n      }\n    }\n\n    return ticks;\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n    const map = {};\n    const ilen = values.length;\n    let i, value;\n\n    for (i = 0; i < ilen; ++i) {\n      value = values[i];\n      map[value] = i;\n      ticks.push({\n        value,\n        major: false\n      });\n    }\n\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n  }\n\n  class TimeScale extends Scale {\n    constructor(props) {\n      super(props);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n      this._unit = 'day';\n      this._majorUnit = undefined;\n      this._offsets = {};\n      this._normalized = false;\n      this._parseOpts = undefined;\n    }\n\n    init(scaleOpts, opts) {\n      const time = scaleOpts.time || (scaleOpts.time = {});\n      const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      super.init(scaleOpts);\n      this._normalized = opts.normalized;\n    }\n\n    parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return parse(this, raw);\n    }\n\n    beforeLayout() {\n      super.beforeLayout();\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n\n    determineDataLimits() {\n      const options = this.options;\n      const adapter = this._adapter;\n      const unit = options.time.unit || 'day';\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n\n    _getLabelBounds() {\n      const arr = this.getLabelTimestamps();\n      let min = Number.POSITIVE_INFINITY;\n      let max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min,\n        max\n      };\n    }\n\n    buildTicks() {\n      const options = this.options;\n      const timeOpts = options.time;\n      const tickOpts = options.ticks;\n      const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n\n      const min = this.min;\n      const max = this.max;\n\n      const ticks = _filterBetween(timestamps, min, max);\n\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n\n    initOffsets(timestamps) {\n      let start = 0;\n      let end = 0;\n      let first, last;\n\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      const limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start,\n        end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n\n    _generate() {\n      const adapter = this._adapter;\n      const min = this.min;\n      const max = this.max;\n      const options = this.options;\n      const timeOpts = options.time;\n      const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      const hasWeekday = isNumber(weekday) || weekday === true;\n      const ticks = {};\n      let first = min;\n      let time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n    }\n\n    getLabelForValue(value) {\n      const adapter = this._adapter;\n      const timeOpts = this.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n\n    _tickFormatFunction(time, index, ticks, format) {\n      const options = this.options;\n      const formats = options.time.displayFormats;\n      const unit = this._unit;\n      const majorUnit = this._majorUnit;\n      const minorFormat = unit && formats[unit];\n      const majorFormat = majorUnit && formats[majorUnit];\n      const tick = ticks[index];\n      const major = majorUnit && majorFormat && tick && tick.major;\n\n      const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n      const formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n\n    generateTickLabels(ticks) {\n      let i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n\n    getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n\n    getPixelForValue(value) {\n      const offsets = this._offsets;\n      const pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n\n    getValueForPixel(pixel) {\n      const offsets = this._offsets;\n      const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n\n    _getLabelSize(label) {\n      const ticksOpts = this.options.ticks;\n      const tickLabelWidth = this.ctx.measureText(label).width;\n      const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      const cosRotation = Math.cos(angle);\n      const sinRotation = Math.sin(angle);\n\n      const tickFontSize = this._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n\n    _getLabelCapacity(exampleTime) {\n      const timeOpts = this.options.time;\n      const displayFormats = timeOpts.displayFormats;\n      const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n      const size = this._getLabelSize(exampleLabel);\n\n      const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n\n    getDataTimestamps() {\n      let timestamps = this._cache.data || [];\n      let i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      const metas = this.getMatchingVisibleMetas();\n\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n\n      return this._cache.data = this.normalize(timestamps);\n    }\n\n    getLabelTimestamps() {\n      const timestamps = this._cache.labels || [];\n      let i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      const labels = this.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(parse(this, labels[i]));\n      }\n\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n\n    normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n\n  }\n\n  TimeScale.id = 'time';\n  TimeScale.defaults = {\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      unit: false,\n      round: false,\n      isoWeekday: false,\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  function interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n\n    if (reverse) {\n      if (val >= table[lo].pos && val <= table[hi].pos) {\n        ({\n          lo,\n          hi\n        } = _lookupByKey(table, 'pos', val));\n      }\n\n      ({\n        pos: prevSource,\n        time: prevTarget\n      } = table[lo]);\n      ({\n        pos: nextSource,\n        time: nextTarget\n      } = table[hi]);\n    } else {\n      if (val >= table[lo].time && val <= table[hi].time) {\n        ({\n          lo,\n          hi\n        } = _lookupByKey(table, 'time', val));\n      }\n\n      ({\n        time: prevSource,\n        pos: prevTarget\n      } = table[lo]);\n      ({\n        time: nextSource,\n        pos: nextTarget\n      } = table[hi]);\n    }\n\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n  }\n\n  class TimeSeriesScale extends TimeScale {\n    constructor(props) {\n      super(props);\n      this._table = [];\n      this._minPos = undefined;\n      this._tableRange = undefined;\n    }\n\n    initOffsets() {\n      const timestamps = this._getTimestampsForTable();\n\n      const table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      super.initOffsets(timestamps);\n    }\n\n    buildLookupTable(timestamps) {\n      const {\n        min,\n        max\n      } = this;\n      const items = [];\n      const table = [];\n      let i, ilen, prev, curr, next;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n\n      return table;\n    }\n\n    _getTimestampsForTable() {\n      let timestamps = this._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      const data = this.getDataTimestamps();\n      const label = this.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n\n    getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n\n    getValueForPixel(pixel) {\n      const offsets = this._offsets;\n      const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n\n  }\n\n  TimeSeriesScale.id = 'timeseries';\n  TimeSeriesScale.defaults = TimeScale.defaults;\n  var scales = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    CategoryScale: CategoryScale,\n    LinearScale: LinearScale,\n    LogarithmicScale: LogarithmicScale,\n    RadialLinearScale: RadialLinearScale,\n    TimeScale: TimeScale,\n    TimeSeriesScale: TimeSeriesScale\n  });\n  Chart.register(controllers, scales, elements, plugins);\n  Chart.helpers = { ...helpers\n  };\n  Chart._adapters = _adapters;\n  Chart.Animation = Animation;\n  Chart.Animations = Animations;\n  Chart.animator = animator;\n  Chart.controllers = registry.controllers.items;\n  Chart.DatasetController = DatasetController;\n  Chart.Element = Element;\n  Chart.elements = elements;\n  Chart.Interaction = Interaction;\n  Chart.layouts = layouts;\n  Chart.platforms = platforms;\n  Chart.Scale = Scale;\n  Chart.Ticks = Ticks;\n  Object.assign(Chart, controllers, scales, elements, plugins, platforms);\n  Chart.Chart = Chart;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = Chart;\n  }\n\n  return Chart;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","Chart","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","check","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","initial","currentStep","Math","min","_refresh","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","v","r","g","hexParse","str","len","ret","hexString","round","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","rgbParse","m","exec","rgbString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","range","calln","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map$1$1","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names$1","nameParse","transparent","toLowerCase","modHSL","ratio","tmp","clone$1","proto","assign","fromObject","input","functionParse","charAt","Color","_rgb","_valid","valid","obj","mix","color","weight","me","c1","c2","w2","p","w1","clone","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","isPatternOrGradient","value","CanvasGradient","CanvasPattern","getHoverColor","noop","uid","id","isNullOrUndef","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","current","console","warn","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","_isClickEvent","overrides","descriptors","getScope$1","node","split","root","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","roundedRange","almostEquals","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","isNumber","isNaN","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_lookup","table","cmp","hi","lo","mid","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","defineProperty","configurable","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","Set","from","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","evt","native","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition$1","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","getRelativePosition","evaluateAllVisibleItems","handler","metasets","getSortedVisibleDatasetMetas","skip","binarySearch","metaset","axis","controller","_sorted","iScale","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","chartArea","_minPadding","evaluationFunc","inRange","getNearestRadialItems","startAngle","endAngle","getProps","getNearestCartesianItems","distanceMetric","minDistance","center","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","meta","dataset","getDatasetMeta","nearest","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","createContext","parentContext","STATIC_POSITIONS","filterByPosition","filter","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stack","stackWeight","horizontal","isHorizontal","buildStacks","layouts","stacks","wrap","includes","_stack","count","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","update","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","display","freeze","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","createSubResolver","arr","resolver","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","t","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","bounds","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","last","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","helpers","__proto__","easingEffects","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","to","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","show","animations","visible","hide","Animations","_properties","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","parsed","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","defaultRoutes","formatters","numeric","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","offset","grid","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","_length","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","getPixelForValue","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","nestedLabel","_resolveTickFontOptions","valueAt","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","invalidatePlugins","abstract","DateAdapter","formats","timestamp","amount","unit","startOf","weekday","endOf","members","_adapters","_date","getAllScaleValues","$bar","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","grouped","_getStackCount","_getStackIndex","baseValue","minBarLength","floating","halfGrid","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","_value_","BubbleController","tooltip","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","tooltipItem","dataLabel","formattedValue","LineController","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","PolarAreaController","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","getLineByIndex","parseFillOption","fillOption","decodeFill","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","resolveTarget","propagate","visited","clipY","lineLoop","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sources":["C:/Users/user/Documents/cameraProject_frontend-main/node_modules/chart.js/dist/Chart.js"],"sourcesContent":["/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, (function () { 'use strict';\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map$1[str[1]] * 17,\n\t\t\t\tg: 255 & map$1[str[2]] * 17,\n\t\t\t\tb: 255 & map$1[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map$1[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map$1[str[1]] << 4 | map$1[str[2]],\n\t\t\t\tg: map$1[str[3]] << 4 | map$1[str[4]],\n\t\t\t\tb: map$1[str[5]] << 4 | map$1[str[6]],\n\t\t\t\ta: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone$1(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone$1(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone$1(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone(source) {\n  if (isArray(source)) {\n    return source.map(clone);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition$1(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\neasingEffects: effects,\ncolor: color,\ngetHoverColor: getHoverColor,\nnoop: noop,\nuid: uid,\nisNullOrUndef: isNullOrUndef,\nisArray: isArray,\nisObject: isObject,\nisFinite: isNumberFinite,\nfiniteOrDefault: finiteOrDefault,\nvalueOrDefault: valueOrDefault,\ntoPercentage: toPercentage,\ntoDimension: toDimension,\ncallback: callback,\neach: each,\n_elementsEqual: _elementsEqual,\nclone: clone,\n_merger: _merger,\nmerge: merge,\nmergeIf: mergeIf,\n_mergerIf: _mergerIf,\n_deprecated: _deprecated,\nresolveObjectKey: resolveObjectKey,\n_capitalize: _capitalize,\ndefined: defined,\nisFunction: isFunction,\nsetsEqual: setsEqual,\n_isClickEvent: _isClickEvent,\ntoFontString: toFontString,\n_measureText: _measureText,\n_longestText: _longestText,\n_alignPixel: _alignPixel,\nclearCanvas: clearCanvas,\ndrawPoint: drawPoint,\n_isPointInArea: _isPointInArea,\nclipArea: clipArea,\nunclipArea: unclipArea,\n_steppedLineTo: _steppedLineTo,\n_bezierCurveTo: _bezierCurveTo,\nrenderText: renderText,\naddRoundedRectPath: addRoundedRectPath,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_rlookupByKey: _rlookupByKey,\n_filterBetween: _filterBetween,\nlistenArrayEvents: listenArrayEvents,\nunlistenArrayEvents: unlistenArrayEvents,\n_arrayUnique: _arrayUnique,\n_createResolver: _createResolver,\n_attachContext: _attachContext,\n_descriptors: _descriptors,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\n_updateBezierControlPoints: _updateBezierControlPoints,\n_isDomSupported: _isDomSupported,\n_getParentNode: _getParentNode,\ngetStyle: getStyle,\ngetRelativePosition: getRelativePosition$1,\ngetMaximumSize: getMaximumSize,\nretinaScale: retinaScale,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nreadUsedSize: readUsedSize,\nfontString: fontString,\nrequestAnimFrame: requestAnimFrame,\nthrottled: throttled,\ndebounce: debounce,\n_toLeftRightCenter: _toLeftRightCenter,\n_alignStartEnd: _alignStartEnd,\n_textX: _textX,\n_pointInLine: _pointInLine,\n_steppedInterpolation: _steppedInterpolation,\n_bezierInterpolation: _bezierInterpolation,\nformatNumber: formatNumber,\ntoLineHeight: toLineHeight,\n_readValueToProps: _readValueToProps,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\ntoPadding: toPadding,\ntoFont: toFont,\nresolve: resolve,\n_addGrace: _addGrace,\ncreateContext: createContext,\nPI: PI,\nTAU: TAU,\nPITAU: PITAU,\nINFINITY: INFINITY,\nRAD_PER_DEG: RAD_PER_DEG,\nHALF_PI: HALF_PI,\nQUARTER_PI: QUARTER_PI,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\nlog10: log10,\nsign: sign,\nniceNum: niceNum,\n_factorize: _factorize,\nisNumber: isNumber,\nalmostEquals: almostEquals,\nalmostWhole: almostWhole,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\ntoRadians: toRadians,\ntoDegrees: toDegrees,\n_decimalPlaces: _decimalPlaces,\ngetAngleFromPoint: getAngleFromPoint,\ndistanceBetweenPoints: distanceBetweenPoints,\n_angleDiff: _angleDiff,\n_normalizeAngle: _normalizeAngle,\n_angleBetween: _angleBetween,\n_limitValue: _limitValue,\n_int16Range: _int16Range,\n_isBetween: _isBetween,\ngetRtlAdapter: getRtlAdapter,\noverrideTextDirection: overrideTextDirection,\nrestoreTextDirection: restoreTextDirection,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_computeSegments: _computeSegments\n});\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\n_detectPlatform: _detectPlatform,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform\n});\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar _adapters = {\n  _date: DateAdapter\n};\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nreturn Chart;\n\n}));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,UAAUA,MAAV,EAAkBC,OAAlB,EAA2B;EAC5B,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DA,MAAM,CAACD,OAAP,GAAiBD,OAAO,EAAvF,GACA,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAACH,OAAD,CAAnD,IACCD,MAAM,GAAG,OAAOM,UAAP,KAAsB,WAAtB,GAAoCA,UAApC,GAAiDN,MAAM,IAAIO,IAApE,EAA0EP,MAAM,CAACQ,KAAP,GAAeP,OAAO,EADjG,CADA;AAGC,CAJD,EAIG,IAJH,EAIU,YAAY;EAAE;;EAExB,SAASQ,UAAT,CAAoBC,SAApB,EAA+BC,SAA/B,EAA0CC,UAA1C,EAAsD;IACpD,OAAOD,SAAS,GAAG,GAAZ,GAAkBD,SAAlB,GAA8B,KAA9B,GAAsCE,UAA7C;EACD;;EACD,MAAMC,gBAAgB,GAAI,YAAW;IACnC,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;MACjC,OAAO,UAASC,QAAT,EAAmB;QACxB,OAAOA,QAAQ,EAAf;MACD,CAFD;IAGD;;IACD,OAAOD,MAAM,CAACE,qBAAd;EACD,CAPyB,EAA1B;;EAQA,SAASC,SAAT,CAAmBC,EAAnB,EAAuBC,OAAvB,EAAgCC,QAAhC,EAA0C;IACxC,MAAMC,UAAU,GAAGD,QAAQ,KAAME,IAAD,IAAUC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BJ,IAA3B,CAAf,CAA3B;;IACA,IAAIK,OAAO,GAAG,KAAd;IACA,IAAIL,IAAI,GAAG,EAAX;IACA,OAAO,YAAkB;MAAA,kCAANM,IAAM;QAANA,IAAM;MAAA;;MACvBN,IAAI,GAAGD,UAAU,CAACO,IAAD,CAAjB;;MACA,IAAI,CAACD,OAAL,EAAc;QACZA,OAAO,GAAG,IAAV;QACAd,gBAAgB,CAACa,IAAjB,CAAsBZ,MAAtB,EAA8B,MAAM;UAClCa,OAAO,GAAG,KAAV;UACAT,EAAE,CAACW,KAAH,CAASV,OAAT,EAAkBG,IAAlB;QACD,CAHD;MAID;IACF,CATD;EAUD;;EACD,SAASQ,QAAT,CAAkBZ,EAAlB,EAAsBa,KAAtB,EAA6B;IAC3B,IAAIC,OAAJ;IACA,OAAO,YAAkB;MAAA,mCAANV,IAAM;QAANA,IAAM;MAAA;;MACvB,IAAIS,KAAJ,EAAW;QACTE,YAAY,CAACD,OAAD,CAAZ;QACAA,OAAO,GAAGE,UAAU,CAAChB,EAAD,EAAKa,KAAL,EAAYT,IAAZ,CAApB;MACD,CAHD,MAGO;QACLJ,EAAE,CAACW,KAAH,CAAS,IAAT,EAAeP,IAAf;MACD;;MACD,OAAOS,KAAP;IACD,CARD;EASD;;EACD,MAAMI,kBAAkB,GAAIC,KAAD,IAAWA,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6BA,KAAK,KAAK,KAAV,GAAkB,OAAlB,GAA4B,QAA/F;;EACA,MAAMC,cAAc,GAAG,CAACD,KAAD,EAAQE,KAAR,EAAeC,GAAf,KAAuBH,KAAK,KAAK,OAAV,GAAoBE,KAApB,GAA4BF,KAAK,KAAK,KAAV,GAAkBG,GAAlB,GAAwB,CAACD,KAAK,GAAGC,GAAT,IAAgB,CAAlH;;EACA,MAAMC,MAAM,GAAG,CAACJ,KAAD,EAAQK,IAAR,EAAcC,KAAd,EAAqBC,GAArB,KAA6B;IAC1C,MAAMC,KAAK,GAAGD,GAAG,GAAG,MAAH,GAAY,OAA7B;IACA,OAAOP,KAAK,KAAKQ,KAAV,GAAkBF,KAAlB,GAA0BN,KAAK,KAAK,QAAV,GAAqB,CAACK,IAAI,GAAGC,KAAR,IAAiB,CAAtC,GAA0CD,IAA3E;EACD,CAHD;;EAKA,MAAMI,QAAN,CAAe;IACbC,WAAW,GAAG;MACZ,KAAKC,QAAL,GAAgB,IAAhB;MACA,KAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;MACA,KAAKC,QAAL,GAAgB,KAAhB;MACA,KAAKC,SAAL,GAAiBC,SAAjB;IACD;;IACDC,OAAO,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,EAAqBC,IAArB,EAA2B;MAChC,MAAMC,SAAS,GAAGH,KAAK,CAACI,SAAN,CAAgBF,IAAhB,CAAlB;MACA,MAAMG,QAAQ,GAAGL,KAAK,CAACM,QAAvB;MACAH,SAAS,CAACI,OAAV,CAAkB5C,EAAE,IAAIA,EAAE,CAAC;QACzBoC,KADyB;QAEzBS,OAAO,EAAER,KAAK,CAACQ,OAFU;QAGzBH,QAHyB;QAIzBI,WAAW,EAAEC,IAAI,CAACC,GAAL,CAASV,IAAI,GAAGD,KAAK,CAACjB,KAAtB,EAA6BsB,QAA7B;MAJY,CAAD,CAA1B;IAMD;;IACDO,QAAQ,GAAG;MACT,IAAI,KAAKpB,QAAT,EAAmB;QACjB;MACD;;MACD,KAAKG,QAAL,GAAgB,IAAhB;MACA,KAAKH,QAAL,GAAgBlC,gBAAgB,CAACa,IAAjB,CAAsBZ,MAAtB,EAA8B,MAAM;QAClD,KAAKsD,OAAL;;QACA,KAAKrB,QAAL,GAAgB,IAAhB;;QACA,IAAI,KAAKG,QAAT,EAAmB;UACjB,KAAKiB,QAAL;QACD;MACF,CANe,CAAhB;IAOD;;IACDC,OAAO,GAAoB;MAAA,IAAnBZ,IAAmB,uEAAZa,IAAI,CAACC,GAAL,EAAY;MACzB,IAAIC,SAAS,GAAG,CAAhB;;MACA,KAAKvB,OAAL,CAAac,OAAb,CAAqB,CAACP,KAAD,EAAQD,KAAR,KAAkB;QACrC,IAAI,CAACC,KAAK,CAACiB,OAAP,IAAkB,CAACjB,KAAK,CAACkB,KAAN,CAAYC,MAAnC,EAA2C;UACzC;QACD;;QACD,MAAMD,KAAK,GAAGlB,KAAK,CAACkB,KAApB;QACA,IAAIE,CAAC,GAAGF,KAAK,CAACC,MAAN,GAAe,CAAvB;QACA,IAAIE,IAAI,GAAG,KAAX;QACA,IAAIC,IAAJ;;QACA,OAAOF,CAAC,IAAI,CAAZ,EAAe,EAAEA,CAAjB,EAAoB;UAClBE,IAAI,GAAGJ,KAAK,CAACE,CAAD,CAAZ;;UACA,IAAIE,IAAI,CAACC,OAAT,EAAkB;YAChB,IAAID,IAAI,CAACE,MAAL,GAAcxB,KAAK,CAACM,QAAxB,EAAkC;cAChCN,KAAK,CAACM,QAAN,GAAiBgB,IAAI,CAACE,MAAtB;YACD;;YACDF,IAAI,CAACG,IAAL,CAAUxB,IAAV;YACAoB,IAAI,GAAG,IAAP;UACD,CAND,MAMO;YACLH,KAAK,CAACE,CAAD,CAAL,GAAWF,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAAhB;YACAD,KAAK,CAACQ,GAAN;UACD;QACF;;QACD,IAAIL,IAAJ,EAAU;UACRtB,KAAK,CAACsB,IAAN;;UACA,KAAKvB,OAAL,CAAaC,KAAb,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiC,UAAjC;QACD;;QACD,IAAI,CAACiB,KAAK,CAACC,MAAX,EAAmB;UACjBnB,KAAK,CAACiB,OAAN,GAAgB,KAAhB;;UACA,KAAKnB,OAAL,CAAaC,KAAb,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiC,UAAjC;;UACAD,KAAK,CAACQ,OAAN,GAAgB,KAAhB;QACD;;QACDQ,SAAS,IAAIE,KAAK,CAACC,MAAnB;MACD,CA/BD;;MAgCA,KAAKvB,SAAL,GAAiBK,IAAjB;;MACA,IAAIe,SAAS,KAAK,CAAlB,EAAqB;QACnB,KAAKrB,QAAL,GAAgB,KAAhB;MACD;IACF;;IACDgC,SAAS,CAAC5B,KAAD,EAAQ;MACf,MAAM6B,MAAM,GAAG,KAAKnC,OAApB;MACA,IAAIO,KAAK,GAAG4B,MAAM,CAACC,GAAP,CAAW9B,KAAX,CAAZ;;MACA,IAAI,CAACC,KAAL,EAAY;QACVA,KAAK,GAAG;UACNiB,OAAO,EAAE,KADH;UAENT,OAAO,EAAE,IAFH;UAGNU,KAAK,EAAE,EAHD;UAINd,SAAS,EAAE;YACT0B,QAAQ,EAAE,EADD;YAETC,QAAQ,EAAE;UAFD;QAJL,CAAR;QASAH,MAAM,CAACI,GAAP,CAAWjC,KAAX,EAAkBC,KAAlB;MACD;;MACD,OAAOA,KAAP;IACD;;IACDiC,MAAM,CAAClC,KAAD,EAAQmC,KAAR,EAAeC,EAAf,EAAmB;MACvB,KAAKR,SAAL,CAAe5B,KAAf,EAAsBK,SAAtB,CAAgC8B,KAAhC,EAAuCE,IAAvC,CAA4CD,EAA5C;IACD;;IACDE,GAAG,CAACtC,KAAD,EAAQmB,KAAR,EAAe;MAChB,IAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,MAArB,EAA6B;QAC3B;MACD;;MACD,KAAKQ,SAAL,CAAe5B,KAAf,EAAsBmB,KAAtB,CAA4BkB,IAA5B,CAAiC,GAAGlB,KAApC;IACD;;IACDoB,GAAG,CAACvC,KAAD,EAAQ;MACT,OAAO,KAAK4B,SAAL,CAAe5B,KAAf,EAAsBmB,KAAtB,CAA4BC,MAA5B,GAAqC,CAA5C;IACD;;IACDpC,KAAK,CAACgB,KAAD,EAAQ;MACX,MAAMC,KAAK,GAAG,KAAKP,OAAL,CAAaoC,GAAb,CAAiB9B,KAAjB,CAAd;;MACA,IAAI,CAACC,KAAL,EAAY;QACV;MACD;;MACDA,KAAK,CAACiB,OAAN,GAAgB,IAAhB;MACAjB,KAAK,CAACjB,KAAN,GAAc+B,IAAI,CAACC,GAAL,EAAd;MACAf,KAAK,CAACM,QAAN,GAAiBN,KAAK,CAACkB,KAAN,CAAYqB,MAAZ,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc/B,IAAI,CAACgC,GAAL,CAASF,GAAT,EAAcC,GAAG,CAACE,SAAlB,CAAjC,EAA+D,CAA/D,CAAjB;;MACA,KAAK/B,QAAL;IACD;;IACDK,OAAO,CAAClB,KAAD,EAAQ;MACb,IAAI,CAAC,KAAKJ,QAAV,EAAoB;QAClB,OAAO,KAAP;MACD;;MACD,MAAMK,KAAK,GAAG,KAAKP,OAAL,CAAaoC,GAAb,CAAiB9B,KAAjB,CAAd;;MACA,IAAI,CAACC,KAAD,IAAU,CAACA,KAAK,CAACiB,OAAjB,IAA4B,CAACjB,KAAK,CAACkB,KAAN,CAAYC,MAA7C,EAAqD;QACnD,OAAO,KAAP;MACD;;MACD,OAAO,IAAP;IACD;;IACDyB,IAAI,CAAC7C,KAAD,EAAQ;MACV,MAAMC,KAAK,GAAG,KAAKP,OAAL,CAAaoC,GAAb,CAAiB9B,KAAjB,CAAd;;MACA,IAAI,CAACC,KAAD,IAAU,CAACA,KAAK,CAACkB,KAAN,CAAYC,MAA3B,EAAmC;QACjC;MACD;;MACD,MAAMD,KAAK,GAAGlB,KAAK,CAACkB,KAApB;MACA,IAAIE,CAAC,GAAGF,KAAK,CAACC,MAAN,GAAe,CAAvB;;MACA,OAAOC,CAAC,IAAI,CAAZ,EAAe,EAAEA,CAAjB,EAAoB;QAClBF,KAAK,CAACE,CAAD,CAAL,CAASyB,MAAT;MACD;;MACD7C,KAAK,CAACkB,KAAN,GAAc,EAAd;;MACA,KAAKpB,OAAL,CAAaC,KAAb,EAAoBC,KAApB,EAA2Bc,IAAI,CAACC,GAAL,EAA3B,EAAuC,UAAvC;IACD;;IACD+B,MAAM,CAAC/C,KAAD,EAAQ;MACZ,OAAO,KAAKN,OAAL,CAAasD,MAAb,CAAoBhD,KAApB,CAAP;IACD;;EArIY;;EAuIf,IAAIiD,QAAQ,GAAG,IAAI1D,QAAJ,EAAf;EAEA;AACA;AACA;AACA;AACA;AACA;;EACA,MAAM2D,KAAK,GAAG;IAAC,GAAG,CAAJ;IAAO,GAAG,CAAV;IAAa,GAAG,CAAhB;IAAmB,GAAG,CAAtB;IAAyB,GAAG,CAA5B;IAA+B,GAAG,CAAlC;IAAqC,GAAG,CAAxC;IAA2C,GAAG,CAA9C;IAAiD,GAAG,CAApD;IAAuD,GAAG,CAA1D;IAA6DC,CAAC,EAAE,EAAhE;IAAoEC,CAAC,EAAE,EAAvE;IAA2EC,CAAC,EAAE,EAA9E;IAAkFC,CAAC,EAAE,EAArF;IAAyFC,CAAC,EAAE,EAA5F;IAAgGC,CAAC,EAAE,EAAnG;IAAuGC,CAAC,EAAE,EAA1G;IAA8GC,CAAC,EAAE,EAAjH;IAAqHC,CAAC,EAAE,EAAxH;IAA4HC,CAAC,EAAE,EAA/H;IAAmIC,CAAC,EAAE,EAAtI;IAA0IC,CAAC,EAAE;EAA7I,CAAd;EACA,MAAMC,GAAG,GAAG,kBAAZ;;EACA,MAAMC,EAAE,GAAIN,CAAD,IAAOK,GAAG,CAACL,CAAC,GAAG,GAAL,CAArB;;EACA,MAAMO,EAAE,GAAIP,CAAD,IAAOK,GAAG,CAAC,CAACL,CAAC,GAAG,IAAL,KAAc,CAAf,CAAH,GAAuBK,GAAG,CAACL,CAAC,GAAG,GAAL,CAA5C;;EACA,MAAMQ,EAAE,GAAIR,CAAD,IAAS,CAACA,CAAC,GAAG,IAAL,KAAc,CAAf,MAAuBA,CAAC,GAAG,GAA3B,CAAnB;;EACA,SAASS,OAAT,CAAiBC,CAAjB,EAAoB;IACnB,OAAOF,EAAE,CAACE,CAAC,CAACC,CAAH,CAAF,IAAWH,EAAE,CAACE,CAAC,CAACE,CAAH,CAAb,IAAsBJ,EAAE,CAACE,CAAC,CAACV,CAAH,CAAxB,IAAiCQ,EAAE,CAACE,CAAC,CAACX,CAAH,CAA1C;EACA;;EACD,SAASc,QAAT,CAAkBC,GAAlB,EAAuB;IACtB,IAAIC,GAAG,GAAGD,GAAG,CAACpD,MAAd;IACA,IAAIsD,GAAJ;;IACA,IAAIF,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoB;MACnB,IAAIC,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAAzB,EAA4B;QAC3BC,GAAG,GAAG;UACLL,CAAC,EAAE,MAAMnB,KAAK,CAACsB,GAAG,CAAC,CAAD,CAAJ,CAAL,GAAgB,EADpB;UAELF,CAAC,EAAE,MAAMpB,KAAK,CAACsB,GAAG,CAAC,CAAD,CAAJ,CAAL,GAAgB,EAFpB;UAGLd,CAAC,EAAE,MAAMR,KAAK,CAACsB,GAAG,CAAC,CAAD,CAAJ,CAAL,GAAgB,EAHpB;UAILf,CAAC,EAAEgB,GAAG,KAAK,CAAR,GAAYvB,KAAK,CAACsB,GAAG,CAAC,CAAD,CAAJ,CAAL,GAAgB,EAA5B,GAAiC;QAJ/B,CAAN;MAMA,CAPD,MAOO,IAAIC,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAAzB,EAA4B;QAClCC,GAAG,GAAG;UACLL,CAAC,EAAEnB,KAAK,CAACsB,GAAG,CAAC,CAAD,CAAJ,CAAL,IAAiB,CAAjB,GAAqBtB,KAAK,CAACsB,GAAG,CAAC,CAAD,CAAJ,CADxB;UAELF,CAAC,EAAEpB,KAAK,CAACsB,GAAG,CAAC,CAAD,CAAJ,CAAL,IAAiB,CAAjB,GAAqBtB,KAAK,CAACsB,GAAG,CAAC,CAAD,CAAJ,CAFxB;UAGLd,CAAC,EAAER,KAAK,CAACsB,GAAG,CAAC,CAAD,CAAJ,CAAL,IAAiB,CAAjB,GAAqBtB,KAAK,CAACsB,GAAG,CAAC,CAAD,CAAJ,CAHxB;UAILf,CAAC,EAAEgB,GAAG,KAAK,CAAR,GAAavB,KAAK,CAACsB,GAAG,CAAC,CAAD,CAAJ,CAAL,IAAiB,CAAjB,GAAqBtB,KAAK,CAACsB,GAAG,CAAC,CAAD,CAAJ,CAAvC,GAAmD;QAJjD,CAAN;MAMA;IACD;;IACD,OAAOE,GAAP;EACA;;EACD,SAASC,SAAT,CAAmBP,CAAnB,EAAsB;IACrB,IAAIN,CAAC,GAAGK,OAAO,CAACC,CAAD,CAAP,GAAaJ,EAAb,GAAkBC,EAA1B;IACA,OAAOG,CAAC,GACL,MAAMN,CAAC,CAACM,CAAC,CAACC,CAAH,CAAP,GAAeP,CAAC,CAACM,CAAC,CAACE,CAAH,CAAhB,GAAwBR,CAAC,CAACM,CAAC,CAACV,CAAH,CAAzB,IAAkCU,CAAC,CAACX,CAAF,GAAM,GAAN,GAAYK,CAAC,CAACM,CAAC,CAACX,CAAH,CAAb,GAAqB,EAAvD,CADK,GAELW,CAFH;EAGA;;EACD,SAASQ,KAAT,CAAeR,CAAf,EAAkB;IACjB,OAAOA,CAAC,GAAG,GAAJ,GAAU,CAAjB;EACA;;EACD,MAAMS,GAAG,GAAG,CAACT,CAAD,EAAIU,CAAJ,EAAOC,CAAP,KAAapE,IAAI,CAACgC,GAAL,CAAShC,IAAI,CAACC,GAAL,CAASwD,CAAT,EAAYW,CAAZ,CAAT,EAAyBD,CAAzB,CAAzB;;EACA,SAASE,GAAT,CAAaZ,CAAb,EAAgB;IACf,OAAOS,GAAG,CAACD,KAAK,CAACR,CAAC,GAAG,IAAL,CAAN,EAAkB,CAAlB,EAAqB,GAArB,CAAV;EACA;;EACD,SAASa,GAAT,CAAab,CAAb,EAAgB;IACf,OAAOS,GAAG,CAACD,KAAK,CAACR,CAAC,GAAG,GAAL,CAAN,EAAiB,CAAjB,EAAoB,GAApB,CAAV;EACA;;EACD,SAASc,GAAT,CAAad,CAAb,EAAgB;IACf,OAAOS,GAAG,CAACD,KAAK,CAACR,CAAC,GAAG,IAAL,CAAL,GAAkB,GAAnB,EAAwB,CAAxB,EAA2B,CAA3B,CAAV;EACA;;EACD,SAASe,GAAT,CAAaf,CAAb,EAAgB;IACf,OAAOS,GAAG,CAACD,KAAK,CAACR,CAAC,GAAG,GAAL,CAAN,EAAiB,CAAjB,EAAoB,GAApB,CAAV;EACA;;EACD,MAAMgB,MAAM,GAAG,sGAAf;;EACA,SAASC,QAAT,CAAkBb,GAAlB,EAAuB;IACtB,MAAMc,CAAC,GAAGF,MAAM,CAACG,IAAP,CAAYf,GAAZ,CAAV;IACA,IAAIf,CAAC,GAAG,GAAR;IACA,IAAIY,CAAJ,EAAOC,CAAP,EAAUZ,CAAV;;IACA,IAAI,CAAC4B,CAAL,EAAQ;MACP;IACA;;IACD,IAAIA,CAAC,CAAC,CAAD,CAAD,KAASjB,CAAb,EAAgB;MACf,MAAMD,CAAC,GAAG,CAACkB,CAAC,CAAC,CAAD,CAAZ;MACA7B,CAAC,GAAG,OAAO6B,CAAC,CAAC,CAAD,CAAD,GAAON,GAAG,CAACZ,CAAD,CAAV,GAAgBA,CAAC,GAAG,GAA3B,CAAJ;IACA;;IACDC,CAAC,GAAG,CAACiB,CAAC,CAAC,CAAD,CAAN;IACAhB,CAAC,GAAG,CAACgB,CAAC,CAAC,CAAD,CAAN;IACA5B,CAAC,GAAG,CAAC4B,CAAC,CAAC,CAAD,CAAN;IACAjB,CAAC,GAAG,OAAOiB,CAAC,CAAC,CAAD,CAAD,GAAON,GAAG,CAACX,CAAD,CAAV,GAAgBA,CAAvB,CAAJ;IACAC,CAAC,GAAG,OAAOgB,CAAC,CAAC,CAAD,CAAD,GAAON,GAAG,CAACV,CAAD,CAAV,GAAgBA,CAAvB,CAAJ;IACAZ,CAAC,GAAG,OAAO4B,CAAC,CAAC,CAAD,CAAD,GAAON,GAAG,CAACtB,CAAD,CAAV,GAAgBA,CAAvB,CAAJ;IACA,OAAO;MACNW,CAAC,EAAEA,CADG;MAENC,CAAC,EAAEA,CAFG;MAGNZ,CAAC,EAAEA,CAHG;MAIND,CAAC,EAAEA;IAJG,CAAP;EAMA;;EACD,SAAS+B,SAAT,CAAmBpB,CAAnB,EAAsB;IACrB,OAAOA,CAAC,KACPA,CAAC,CAACX,CAAF,GAAM,GAAN,GACI,QAAOW,CAAC,CAACC,CAAE,KAAID,CAAC,CAACE,CAAE,KAAIF,CAAC,CAACV,CAAE,KAAIwB,GAAG,CAACd,CAAC,CAACX,CAAH,CAAM,GAD5C,GAEI,OAAMW,CAAC,CAACC,CAAE,KAAID,CAAC,CAACE,CAAE,KAAIF,CAAC,CAACV,CAAE,GAHvB,CAAR;EAKA;;EACD,MAAM+B,MAAM,GAAG,8GAAf;;EACA,SAASC,QAAT,CAAkBX,CAAlB,EAAqBY,CAArB,EAAwBb,CAAxB,EAA2B;IAC1B,MAAMrB,CAAC,GAAGkC,CAAC,GAAGhF,IAAI,CAACC,GAAL,CAASkE,CAAT,EAAY,IAAIA,CAAhB,CAAd;;IACA,MAAMhB,CAAC,GAAG,UAAC8B,CAAD;MAAA,IAAIC,CAAJ,uEAAQ,CAACD,CAAC,GAAGb,CAAC,GAAG,EAAT,IAAe,EAAvB;MAAA,OAA8BD,CAAC,GAAGrB,CAAC,GAAG9C,IAAI,CAACgC,GAAL,CAAShC,IAAI,CAACC,GAAL,CAASiF,CAAC,GAAG,CAAb,EAAgB,IAAIA,CAApB,EAAuB,CAAvB,CAAT,EAAoC,CAAC,CAArC,CAAtC;IAAA,CAAV;;IACA,OAAO,CAAC/B,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,CAAP;EACA;;EACD,SAASgC,QAAT,CAAkBf,CAAlB,EAAqBY,CAArB,EAAwBvB,CAAxB,EAA2B;IAC1B,MAAMN,CAAC,GAAG,UAAC8B,CAAD;MAAA,IAAIC,CAAJ,uEAAQ,CAACD,CAAC,GAAGb,CAAC,GAAG,EAAT,IAAe,CAAvB;MAAA,OAA6BX,CAAC,GAAGA,CAAC,GAAGuB,CAAJ,GAAQhF,IAAI,CAACgC,GAAL,CAAShC,IAAI,CAACC,GAAL,CAASiF,CAAT,EAAY,IAAIA,CAAhB,EAAmB,CAAnB,CAAT,EAAgC,CAAhC,CAAzC;IAAA,CAAV;;IACA,OAAO,CAAC/B,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,CAAP;EACA;;EACD,SAASiC,QAAT,CAAkBhB,CAAlB,EAAqBiB,CAArB,EAAwBtC,CAAxB,EAA2B;IAC1B,MAAMuC,GAAG,GAAGP,QAAQ,CAACX,CAAD,EAAI,CAAJ,EAAO,GAAP,CAApB;IACA,IAAI1D,CAAJ;;IACA,IAAI2E,CAAC,GAAGtC,CAAJ,GAAQ,CAAZ,EAAe;MACdrC,CAAC,GAAG,KAAK2E,CAAC,GAAGtC,CAAT,CAAJ;MACAsC,CAAC,IAAI3E,CAAL;MACAqC,CAAC,IAAIrC,CAAL;IACA;;IACD,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAwB;MACvB4E,GAAG,CAAC5E,CAAD,CAAH,IAAU,IAAI2E,CAAJ,GAAQtC,CAAlB;MACAuC,GAAG,CAAC5E,CAAD,CAAH,IAAU2E,CAAV;IACA;;IACD,OAAOC,GAAP;EACA;;EACD,SAASC,OAAT,CAAiB9B,CAAjB,EAAoB;IACnB,MAAM+B,KAAK,GAAG,GAAd;IACA,MAAM9B,CAAC,GAAGD,CAAC,CAACC,CAAF,GAAM8B,KAAhB;IACA,MAAM7B,CAAC,GAAGF,CAAC,CAACE,CAAF,GAAM6B,KAAhB;IACA,MAAMzC,CAAC,GAAGU,CAAC,CAACV,CAAF,GAAMyC,KAAhB;IACA,MAAMxD,GAAG,GAAGhC,IAAI,CAACgC,GAAL,CAAS0B,CAAT,EAAYC,CAAZ,EAAeZ,CAAf,CAAZ;IACA,MAAM9C,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASyD,CAAT,EAAYC,CAAZ,EAAeZ,CAAf,CAAZ;IACA,MAAMoB,CAAC,GAAG,CAACnC,GAAG,GAAG/B,GAAP,IAAc,CAAxB;IACA,IAAImE,CAAJ,EAAOY,CAAP,EAAU/B,CAAV;;IACA,IAAIjB,GAAG,KAAK/B,GAAZ,EAAiB;MAChBgD,CAAC,GAAGjB,GAAG,GAAG/B,GAAV;MACA+E,CAAC,GAAGb,CAAC,GAAG,GAAJ,GAAUlB,CAAC,IAAI,IAAIjB,GAAJ,GAAU/B,GAAd,CAAX,GAAgCgD,CAAC,IAAIjB,GAAG,GAAG/B,GAAV,CAArC;MACAmE,CAAC,GAAGpC,GAAG,KAAK0B,CAAR,GACA,CAACC,CAAC,GAAGZ,CAAL,IAAUE,CAAX,IAAiBU,CAAC,GAAGZ,CAAJ,GAAQ,CAAR,GAAY,CAA7B,CADC,GAEDf,GAAG,KAAK2B,CAAR,GACC,CAACZ,CAAC,GAAGW,CAAL,IAAUT,CAAV,GAAc,CADf,GAEC,CAACS,CAAC,GAAGC,CAAL,IAAUV,CAAV,GAAc,CAJlB;MAKAmB,CAAC,GAAGA,CAAC,GAAG,EAAJ,GAAS,GAAb;IACA;;IACD,OAAO,CAACA,CAAC,GAAG,CAAL,EAAQY,CAAC,IAAI,CAAb,EAAgBb,CAAhB,CAAP;EACA;;EACD,SAASsB,KAAT,CAAetC,CAAf,EAAkBL,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;IAC1B,OAAO,CACN1F,KAAK,CAACoI,OAAN,CAAc5C,CAAd,IACGK,CAAC,CAACL,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,CADJ,GAEGK,CAAC,CAACL,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAHE,EAIL2C,GAJK,CAIDrB,GAJC,CAAP;EAKA;;EACD,SAASsB,OAAT,CAAiBxB,CAAjB,EAAoBY,CAApB,EAAuBb,CAAvB,EAA0B;IACzB,OAAOsB,KAAK,CAACV,QAAD,EAAWX,CAAX,EAAcY,CAAd,EAAiBb,CAAjB,CAAZ;EACA;;EACD,SAAS0B,OAAT,CAAiBzB,CAAjB,EAAoBiB,CAApB,EAAuBtC,CAAvB,EAA0B;IACzB,OAAO0C,KAAK,CAACL,QAAD,EAAWhB,CAAX,EAAciB,CAAd,EAAiBtC,CAAjB,CAAZ;EACA;;EACD,SAAS+C,OAAT,CAAiB1B,CAAjB,EAAoBY,CAApB,EAAuBvB,CAAvB,EAA0B;IACzB,OAAOgC,KAAK,CAACN,QAAD,EAAWf,CAAX,EAAcY,CAAd,EAAiBvB,CAAjB,CAAZ;EACA;;EACD,SAASsC,GAAT,CAAa3B,CAAb,EAAgB;IACf,OAAO,CAACA,CAAC,GAAG,GAAJ,GAAU,GAAX,IAAkB,GAAzB;EACA;;EACD,SAAS4B,QAAT,CAAkBnC,GAAlB,EAAuB;IACtB,MAAMc,CAAC,GAAGG,MAAM,CAACF,IAAP,CAAYf,GAAZ,CAAV;IACA,IAAIf,CAAC,GAAG,GAAR;IACA,IAAIW,CAAJ;;IACA,IAAI,CAACkB,CAAL,EAAQ;MACP;IACA;;IACD,IAAIA,CAAC,CAAC,CAAD,CAAD,KAASlB,CAAb,EAAgB;MACfX,CAAC,GAAG6B,CAAC,CAAC,CAAD,CAAD,GAAON,GAAG,CAAC,CAACM,CAAC,CAAC,CAAD,CAAH,CAAV,GAAoBL,GAAG,CAAC,CAACK,CAAC,CAAC,CAAD,CAAH,CAA3B;IACA;;IACD,MAAMP,CAAC,GAAG2B,GAAG,CAAC,CAACpB,CAAC,CAAC,CAAD,CAAH,CAAb;IACA,MAAMsB,EAAE,GAAG,CAACtB,CAAC,CAAC,CAAD,CAAF,GAAQ,GAAnB;IACA,MAAMuB,EAAE,GAAG,CAACvB,CAAC,CAAC,CAAD,CAAF,GAAQ,GAAnB;;IACA,IAAIA,CAAC,CAAC,CAAD,CAAD,KAAS,KAAb,EAAoB;MACnBlB,CAAC,GAAGoC,OAAO,CAACzB,CAAD,EAAI6B,EAAJ,EAAQC,EAAR,CAAX;IACA,CAFD,MAEO,IAAIvB,CAAC,CAAC,CAAD,CAAD,KAAS,KAAb,EAAoB;MAC1BlB,CAAC,GAAGqC,OAAO,CAAC1B,CAAD,EAAI6B,EAAJ,EAAQC,EAAR,CAAX;IACA,CAFM,MAEA;MACNzC,CAAC,GAAGmC,OAAO,CAACxB,CAAD,EAAI6B,EAAJ,EAAQC,EAAR,CAAX;IACA;;IACD,OAAO;MACNxC,CAAC,EAAED,CAAC,CAAC,CAAD,CADE;MAENE,CAAC,EAAEF,CAAC,CAAC,CAAD,CAFE;MAGNV,CAAC,EAAEU,CAAC,CAAC,CAAD,CAHE;MAINX,CAAC,EAAEA;IAJG,CAAP;EAMA;;EACD,SAASqD,MAAT,CAAgB1C,CAAhB,EAAmB2C,GAAnB,EAAwB;IACvB,IAAIhC,CAAC,GAAGmB,OAAO,CAAC9B,CAAD,CAAf;IACAW,CAAC,CAAC,CAAD,CAAD,GAAO2B,GAAG,CAAC3B,CAAC,CAAC,CAAD,CAAD,GAAOgC,GAAR,CAAV;IACAhC,CAAC,GAAGwB,OAAO,CAACxB,CAAD,CAAX;IACAX,CAAC,CAACC,CAAF,GAAMU,CAAC,CAAC,CAAD,CAAP;IACAX,CAAC,CAACE,CAAF,GAAMS,CAAC,CAAC,CAAD,CAAP;IACAX,CAAC,CAACV,CAAF,GAAMqB,CAAC,CAAC,CAAD,CAAP;EACA;;EACD,SAASiC,SAAT,CAAmB5C,CAAnB,EAAsB;IACrB,IAAI,CAACA,CAAL,EAAQ;MACP;IACA;;IACD,MAAMX,CAAC,GAAGyC,OAAO,CAAC9B,CAAD,CAAjB;IACA,MAAMW,CAAC,GAAGtB,CAAC,CAAC,CAAD,CAAX;IACA,MAAMkC,CAAC,GAAGR,GAAG,CAAC1B,CAAC,CAAC,CAAD,CAAF,CAAb;IACA,MAAMqB,CAAC,GAAGK,GAAG,CAAC1B,CAAC,CAAC,CAAD,CAAF,CAAb;IACA,OAAOW,CAAC,CAACX,CAAF,GAAM,GAAN,GACH,QAAOsB,CAAE,KAAIY,CAAE,MAAKb,CAAE,MAAKI,GAAG,CAACd,CAAC,CAACX,CAAH,CAAM,GADjC,GAEH,OAAMsB,CAAE,KAAIY,CAAE,MAAKb,CAAE,IAFzB;EAGA;;EACD,MAAMmC,OAAO,GAAG;IACfC,CAAC,EAAE,MADY;IAEfC,CAAC,EAAE,OAFY;IAGfC,CAAC,EAAE,IAHY;IAIfC,CAAC,EAAE,KAJY;IAKfC,CAAC,EAAE,IALY;IAMfC,CAAC,EAAE,QANY;IAOfC,CAAC,EAAE,OAPY;IAQfrE,CAAC,EAAE,IARY;IASfsE,CAAC,EAAE,IATY;IAUfC,CAAC,EAAE,IAVY;IAWftE,CAAC,EAAE,IAXY;IAYfC,CAAC,EAAE,OAZY;IAafC,CAAC,EAAE,OAbY;IAcfqE,CAAC,EAAE,IAdY;IAefC,CAAC,EAAE,UAfY;IAgBfrE,CAAC,EAAE,IAhBY;IAiBfsE,CAAC,EAAE,IAjBY;IAkBfC,CAAC,EAAE,IAlBY;IAmBfC,CAAC,EAAE,IAnBY;IAoBfC,CAAC,EAAE,IApBY;IAqBfC,CAAC,EAAE,OArBY;IAsBfzE,CAAC,EAAE,IAtBY;IAuBf0E,CAAC,EAAE,IAvBY;IAwBfC,CAAC,EAAE,MAxBY;IAyBfC,CAAC,EAAE,IAzBY;IA0BfC,CAAC,EAAE,OA1BY;IA2BfC,CAAC,EAAE;EA3BY,CAAhB;EA6BA,MAAMC,KAAK,GAAG;IACbC,MAAM,EAAE,QADK;IAEbC,WAAW,EAAE,QAFA;IAGbC,IAAI,EAAE,MAHO;IAIbC,SAAS,EAAE,QAJE;IAKbC,IAAI,EAAE,QALO;IAMbC,KAAK,EAAE,QANM;IAObC,MAAM,EAAE,QAPK;IAQbC,KAAK,EAAE,GARM;IASbC,YAAY,EAAE,QATD;IAUbC,EAAE,EAAE,IAVS;IAWbC,OAAO,EAAE,QAXI;IAYbC,IAAI,EAAE,QAZO;IAabC,SAAS,EAAE,QAbE;IAcbC,MAAM,EAAE,QAdK;IAebC,QAAQ,EAAE,QAfG;IAgBbC,OAAO,EAAE,QAhBI;IAiBbC,GAAG,EAAE,QAjBQ;IAkBbC,WAAW,EAAE,QAlBA;IAmBbC,OAAO,EAAE,QAnBI;IAoBbC,OAAO,EAAE,QApBI;IAqBbC,IAAI,EAAE,MArBO;IAsBbC,GAAG,EAAE,IAtBQ;IAuBbC,KAAK,EAAE,MAvBM;IAwBbC,OAAO,EAAE,QAxBI;IAyBbC,IAAI,EAAE,QAzBO;IA0BbC,IAAI,EAAE,MA1BO;IA2BbC,IAAI,EAAE,QA3BO;IA4BbC,MAAM,EAAE,QA5BK;IA6BbC,OAAO,EAAE,QA7BI;IA8BbC,QAAQ,EAAE,QA9BG;IA+BbC,MAAM,EAAE,QA/BK;IAgCbC,KAAK,EAAE,QAhCM;IAiCbC,GAAG,EAAE,QAjCQ;IAkCbC,MAAM,EAAE,QAlCK;IAmCbC,MAAM,EAAE,QAnCK;IAoCbC,IAAI,EAAE,QApCO;IAqCbC,KAAK,EAAE,QArCM;IAsCbC,KAAK,EAAE,QAtCM;IAuCbC,GAAG,EAAE,MAvCQ;IAwCbC,MAAM,EAAE,QAxCK;IAyCbC,MAAM,EAAE,QAzCK;IA0CbC,QAAQ,EAAE,MA1CG;IA2CbC,MAAM,EAAE,QA3CK;IA4CbC,MAAM,EAAE,QA5CK;IA6CbC,QAAQ,EAAE,QA7CG;IA8CbC,QAAQ,EAAE,QA9CG;IA+CbC,QAAQ,EAAE,QA/CG;IAgDbC,QAAQ,EAAE,QAhDG;IAiDbC,MAAM,EAAE,QAjDK;IAkDbC,OAAO,EAAE,QAlDI;IAmDbC,SAAS,EAAE,QAnDE;IAoDbC,GAAG,EAAE,QApDQ;IAqDbC,MAAM,EAAE,QArDK;IAsDbC,GAAG,EAAE,QAtDQ;IAuDbC,GAAG,EAAE,MAvDQ;IAwDbC,KAAK,EAAE,QAxDM;IAyDbC,GAAG,EAAE,QAzDQ;IA0DbC,OAAO,EAAE,QA1DI;IA2DbC,MAAM,EAAE,QA3DK;IA4DbC,OAAO,EAAE,QA5DI;IA6DbC,KAAK,EAAE,QA7DM;IA8DbC,IAAI,EAAE,QA9DO;IA+DbC,KAAK,EAAE,QA/DM;IAgEbC,MAAM,EAAE,QAhEK;IAiEbC,SAAS,EAAE,QAjEE;IAkEbC,OAAO,EAAE,QAlEI;IAmEbC,UAAU,EAAE,QAnEC;IAoEbC,GAAG,EAAE,QApEQ;IAqEbC,IAAI,EAAE,QArEO;IAsEbC,KAAK,EAAE,QAtEM;IAuEbC,SAAS,EAAE,QAvEE;IAwEbC,IAAI,EAAE,QAxEO;IAyEbC,IAAI,EAAE,QAzEO;IA0EbC,IAAI,EAAE,QA1EO;IA2EbC,IAAI,EAAE,QA3EO;IA4EbC,MAAM,EAAE,QA5EK;IA6EbC,MAAM,EAAE,QA7EK;IA8EbC,MAAM,EAAE,QA9EK;IA+EbC,KAAK,EAAE,QA/EM;IAgFbC,KAAK,EAAE,QAhFM;IAiFbC,OAAO,EAAE,QAjFI;IAkFbC,GAAG,EAAE,QAlFQ;IAmFbC,IAAI,EAAE,MAnFO;IAoFbC,OAAO,EAAE,QApFI;IAqFbC,GAAG,EAAE,QArFQ;IAsFbC,MAAM,EAAE,QAtFK;IAuFbC,KAAK,EAAE,QAvFM;IAwFbC,UAAU,EAAE,QAxFC;IAyFbC,GAAG,EAAE,IAzFQ;IA0FbC,KAAK,EAAE,QA1FM;IA2FbC,MAAM,EAAE,QA3FK;IA4FbC,MAAM,EAAE,QA5FK;IA6FbC,IAAI,EAAE,QA7FO;IA8FbC,SAAS,EAAE,MA9FE;IA+FbC,GAAG,EAAE,QA/FQ;IAgGbC,QAAQ,EAAE,QAhGG;IAiGbC,UAAU,EAAE,QAjGC;IAkGbC,OAAO,EAAE,QAlGI;IAmGbC,QAAQ,EAAE,QAnGG;IAoGbC,OAAO,EAAE,QApGI;IAqGbC,UAAU,EAAE,QArGC;IAsGbC,IAAI,EAAE,IAtGO;IAuGbC,MAAM,EAAE,QAvGK;IAwGbC,IAAI,EAAE,QAxGO;IAyGbC,OAAO,EAAE,QAzGI;IA0GbC,KAAK,EAAE,QA1GM;IA2GbC,OAAO,EAAE,QA3GI;IA4GbC,IAAI,EAAE,QA5GO;IA6GbC,SAAS,EAAE,QA7GE;IA8GbC,MAAM,EAAE,QA9GK;IA+GbC,KAAK,EAAE,QA/GM;IAgHbC,UAAU,EAAE,QAhHC;IAiHbC,SAAS,EAAE,QAjHE;IAkHbC,OAAO,EAAE,QAlHI;IAmHbC,IAAI,EAAE,QAnHO;IAoHbC,GAAG,EAAE,QApHQ;IAqHbC,IAAI,EAAE,QArHO;IAsHbC,OAAO,EAAE,QAtHI;IAuHbC,KAAK,EAAE,QAvHM;IAwHbC,WAAW,EAAE,QAxHA;IAyHbC,EAAE,EAAE,QAzHS;IA0HbC,QAAQ,EAAE,QA1HG;IA2HbC,KAAK,EAAE,QA3HM;IA4HbC,SAAS,EAAE,QA5HE;IA6HbC,KAAK,EAAE,QA7HM;IA8HbC,SAAS,EAAE,QA9HE;IA+HbC,KAAK,EAAE,QA/HM;IAgIbC,OAAO,EAAE,QAhII;IAiIbC,KAAK,EAAE,QAjIM;IAkIbC,MAAM,EAAE,QAlIK;IAmIbC,KAAK,EAAE,QAnIM;IAoIbC,GAAG,EAAE,QApIQ;IAqIbC,IAAI,EAAE,QArIO;IAsIbC,IAAI,EAAE,QAtIO;IAuIbC,IAAI,EAAE,QAvIO;IAwIbC,QAAQ,EAAE,MAxIG;IAyIbC,MAAM,EAAE,QAzIK;IA0IbC,GAAG,EAAE,QA1IQ;IA2IbC,GAAG,EAAE,MA3IQ;IA4IbC,KAAK,EAAE,QA5IM;IA6IbC,MAAM,EAAE,QA7IK;IA8IbC,EAAE,EAAE,QA9IS;IA+IbC,KAAK,EAAE,QA/IM;IAgJbC,GAAG,EAAE,QAhJQ;IAiJbC,IAAI,EAAE,QAjJO;IAkJbC,SAAS,EAAE,QAlJE;IAmJbC,EAAE,EAAE,QAnJS;IAoJbC,KAAK,EAAE;EApJM,CAAd;;EAsJA,SAASC,MAAT,GAAkB;IACjB,MAAMC,QAAQ,GAAG,EAAjB;IACA,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYvJ,KAAZ,CAAb;IACA,MAAMyJ,KAAK,GAAGD,MAAM,CAACD,IAAP,CAAY7K,OAAZ,CAAd;IACA,IAAI5F,CAAJ,EAAO4Q,CAAP,EAAUpM,CAAV,EAAaqM,EAAb,EAAiBC,EAAjB;;IACA,KAAK9Q,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyQ,IAAI,CAAC1Q,MAArB,EAA6BC,CAAC,EAA9B,EAAkC;MACjC6Q,EAAE,GAAGC,EAAE,GAAGL,IAAI,CAACzQ,CAAD,CAAd;;MACA,KAAK4Q,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,KAAK,CAAC5Q,MAAtB,EAA8B6Q,CAAC,EAA/B,EAAmC;QAClCpM,CAAC,GAAGmM,KAAK,CAACC,CAAD,CAAT;QACAE,EAAE,GAAGA,EAAE,CAACC,OAAH,CAAWvM,CAAX,EAAcoB,OAAO,CAACpB,CAAD,CAArB,CAAL;MACA;;MACDA,CAAC,GAAGwM,QAAQ,CAAC9J,KAAK,CAAC2J,EAAD,CAAN,EAAY,EAAZ,CAAZ;MACAL,QAAQ,CAACM,EAAD,CAAR,GAAe,CAACtM,CAAC,IAAI,EAAL,GAAU,IAAX,EAAiBA,CAAC,IAAI,CAAL,GAAS,IAA1B,EAAgCA,CAAC,GAAG,IAApC,CAAf;IACA;;IACD,OAAOgM,QAAP;EACA;;EACD,IAAIS,OAAJ;;EACA,SAASC,SAAT,CAAmB/N,GAAnB,EAAwB;IACvB,IAAI,CAAC8N,OAAL,EAAc;MACbA,OAAO,GAAGV,MAAM,EAAhB;MACAU,OAAO,CAACE,WAAR,GAAsB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAtB;IACA;;IACD,MAAM/O,CAAC,GAAG6O,OAAO,CAAC9N,GAAG,CAACiO,WAAJ,EAAD,CAAjB;IACA,OAAOhP,CAAC,IAAI;MACXY,CAAC,EAAEZ,CAAC,CAAC,CAAD,CADO;MAEXa,CAAC,EAAEb,CAAC,CAAC,CAAD,CAFO;MAGXC,CAAC,EAAED,CAAC,CAAC,CAAD,CAHO;MAIXA,CAAC,EAAEA,CAAC,CAACrC,MAAF,KAAa,CAAb,GAAiBqC,CAAC,CAAC,CAAD,CAAlB,GAAwB;IAJhB,CAAZ;EAMA;;EACD,SAASiP,MAAT,CAAgBtO,CAAhB,EAAmB/C,CAAnB,EAAsBsR,KAAtB,EAA6B;IAC5B,IAAIvO,CAAJ,EAAO;MACN,IAAIwO,GAAG,GAAG1M,OAAO,CAAC9B,CAAD,CAAjB;MACAwO,GAAG,CAACvR,CAAD,CAAH,GAASV,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAYhC,IAAI,CAACC,GAAL,CAASgS,GAAG,CAACvR,CAAD,CAAH,GAASuR,GAAG,CAACvR,CAAD,CAAH,GAASsR,KAA3B,EAAkCtR,CAAC,KAAK,CAAN,GAAU,GAAV,GAAgB,CAAlD,CAAZ,CAAT;MACAuR,GAAG,GAAGrM,OAAO,CAACqM,GAAD,CAAb;MACAxO,CAAC,CAACC,CAAF,GAAMuO,GAAG,CAAC,CAAD,CAAT;MACAxO,CAAC,CAACE,CAAF,GAAMsO,GAAG,CAAC,CAAD,CAAT;MACAxO,CAAC,CAACV,CAAF,GAAMkP,GAAG,CAAC,CAAD,CAAT;IACA;EACD;;EACD,SAASC,OAAT,CAAiBzO,CAAjB,EAAoB0O,KAApB,EAA2B;IAC1B,OAAO1O,CAAC,GAAG2N,MAAM,CAACgB,MAAP,CAAcD,KAAK,IAAI,EAAvB,EAA2B1O,CAA3B,CAAH,GAAmCA,CAA3C;EACA;;EACD,SAAS4O,UAAT,CAAoBC,KAApB,EAA2B;IAC1B,IAAI7O,CAAC,GAAG;MAACC,CAAC,EAAE,CAAJ;MAAOC,CAAC,EAAE,CAAV;MAAaZ,CAAC,EAAE,CAAhB;MAAmBD,CAAC,EAAE;IAAtB,CAAR;;IACA,IAAIxF,KAAK,CAACoI,OAAN,CAAc4M,KAAd,CAAJ,EAA0B;MACzB,IAAIA,KAAK,CAAC7R,MAAN,IAAgB,CAApB,EAAuB;QACtBgD,CAAC,GAAG;UAACC,CAAC,EAAE4O,KAAK,CAAC,CAAD,CAAT;UAAc3O,CAAC,EAAE2O,KAAK,CAAC,CAAD,CAAtB;UAA2BvP,CAAC,EAAEuP,KAAK,CAAC,CAAD,CAAnC;UAAwCxP,CAAC,EAAE;QAA3C,CAAJ;;QACA,IAAIwP,KAAK,CAAC7R,MAAN,GAAe,CAAnB,EAAsB;UACrBgD,CAAC,CAACX,CAAF,GAAMwB,GAAG,CAACgO,KAAK,CAAC,CAAD,CAAN,CAAT;QACA;MACD;IACD,CAPD,MAOO;MACN7O,CAAC,GAAGyO,OAAO,CAACI,KAAD,EAAQ;QAAC5O,CAAC,EAAE,CAAJ;QAAOC,CAAC,EAAE,CAAV;QAAaZ,CAAC,EAAE,CAAhB;QAAmBD,CAAC,EAAE;MAAtB,CAAR,CAAX;MACAW,CAAC,CAACX,CAAF,GAAMwB,GAAG,CAACb,CAAC,CAACX,CAAH,CAAT;IACA;;IACD,OAAOW,CAAP;EACA;;EACD,SAAS8O,aAAT,CAAuB1O,GAAvB,EAA4B;IAC3B,IAAIA,GAAG,CAAC2O,MAAJ,CAAW,CAAX,MAAkB,GAAtB,EAA2B;MAC1B,OAAO9N,QAAQ,CAACb,GAAD,CAAf;IACA;;IACD,OAAOmC,QAAQ,CAACnC,GAAD,CAAf;EACA;;EACD,MAAM4O,KAAN,CAAY;IACX5T,WAAW,CAACyT,KAAD,EAAQ;MAClB,IAAIA,KAAK,YAAYG,KAArB,EAA4B;QAC3B,OAAOH,KAAP;MACA;;MACD,MAAM9S,IAAI,GAAG,OAAO8S,KAApB;MACA,IAAI7O,CAAJ;;MACA,IAAIjE,IAAI,KAAK,QAAb,EAAuB;QACtBiE,CAAC,GAAG4O,UAAU,CAACC,KAAD,CAAd;MACA,CAFD,MAEO,IAAI9S,IAAI,KAAK,QAAb,EAAuB;QAC7BiE,CAAC,GAAGG,QAAQ,CAAC0O,KAAD,CAAR,IAAmBV,SAAS,CAACU,KAAD,CAA5B,IAAuCC,aAAa,CAACD,KAAD,CAAxD;MACA;;MACD,KAAKI,IAAL,GAAYjP,CAAZ;MACA,KAAKkP,MAAL,GAAc,CAAC,CAAClP,CAAhB;IACA;;IACQ,IAALmP,KAAK,GAAG;MACX,OAAO,KAAKD,MAAZ;IACA;;IACM,IAAHrN,GAAG,GAAG;MACT,IAAI7B,CAAC,GAAGyO,OAAO,CAAC,KAAKQ,IAAN,CAAf;;MACA,IAAIjP,CAAJ,EAAO;QACNA,CAAC,CAACX,CAAF,GAAMyB,GAAG,CAACd,CAAC,CAACX,CAAH,CAAT;MACA;;MACD,OAAOW,CAAP;IACA;;IACM,IAAH6B,GAAG,CAACuN,GAAD,EAAM;MACZ,KAAKH,IAAL,GAAYL,UAAU,CAACQ,GAAD,CAAtB;IACA;;IACDhO,SAAS,GAAG;MACX,OAAO,KAAK8N,MAAL,GAAc9N,SAAS,CAAC,KAAK6N,IAAN,CAAvB,GAAqC,KAAKA,IAAjD;IACA;;IACD1O,SAAS,GAAG;MACX,OAAO,KAAK2O,MAAL,GAAc3O,SAAS,CAAC,KAAK0O,IAAN,CAAvB,GAAqC,KAAKA,IAAjD;IACA;;IACDrM,SAAS,GAAG;MACX,OAAO,KAAKsM,MAAL,GAActM,SAAS,CAAC,KAAKqM,IAAN,CAAvB,GAAqC,KAAKA,IAAjD;IACA;;IACDI,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAClB,MAAMC,EAAE,GAAG,IAAX;;MACA,IAAIF,KAAJ,EAAW;QACV,MAAMG,EAAE,GAAGD,EAAE,CAAC3N,GAAd;QACA,MAAM6N,EAAE,GAAGJ,KAAK,CAACzN,GAAjB;QACA,IAAI8N,EAAJ;QACA,MAAMC,CAAC,GAAGL,MAAM,KAAKI,EAAX,GAAgB,GAAhB,GAAsBJ,MAAhC;QACA,MAAM3N,CAAC,GAAG,IAAIgO,CAAJ,GAAQ,CAAlB;QACA,MAAMvQ,CAAC,GAAGoQ,EAAE,CAACpQ,CAAH,GAAOqQ,EAAE,CAACrQ,CAApB;QACA,MAAMwQ,EAAE,GAAG,CAAC,CAACjO,CAAC,GAAGvC,CAAJ,KAAU,CAAC,CAAX,GAAeuC,CAAf,GAAmB,CAACA,CAAC,GAAGvC,CAAL,KAAW,IAAIuC,CAAC,GAAGvC,CAAnB,CAApB,IAA6C,CAA9C,IAAmD,GAA9D;QACAsQ,EAAE,GAAG,IAAIE,EAAT;QACAJ,EAAE,CAACxP,CAAH,GAAO,OAAO4P,EAAE,GAAGJ,EAAE,CAACxP,CAAR,GAAY0P,EAAE,GAAGD,EAAE,CAACzP,CAApB,GAAwB,GAAtC;QACAwP,EAAE,CAACvP,CAAH,GAAO,OAAO2P,EAAE,GAAGJ,EAAE,CAACvP,CAAR,GAAYyP,EAAE,GAAGD,EAAE,CAACxP,CAApB,GAAwB,GAAtC;QACAuP,EAAE,CAACnQ,CAAH,GAAO,OAAOuQ,EAAE,GAAGJ,EAAE,CAACnQ,CAAR,GAAYqQ,EAAE,GAAGD,EAAE,CAACpQ,CAApB,GAAwB,GAAtC;QACAmQ,EAAE,CAACpQ,CAAH,GAAOuQ,CAAC,GAAGH,EAAE,CAACpQ,CAAP,GAAW,CAAC,IAAIuQ,CAAL,IAAUF,EAAE,CAACrQ,CAA/B;QACAmQ,EAAE,CAAC3N,GAAH,GAAS4N,EAAT;MACA;;MACD,OAAOD,EAAP;IACA;;IACDM,KAAK,GAAG;MACP,OAAO,IAAId,KAAJ,CAAU,KAAKnN,GAAf,CAAP;IACA;;IACDkO,KAAK,CAAC1Q,CAAD,EAAI;MACR,KAAK4P,IAAL,CAAU5P,CAAV,GAAcwB,GAAG,CAACxB,CAAD,CAAjB;MACA,OAAO,IAAP;IACA;;IACD2Q,OAAO,CAACzB,KAAD,EAAQ;MACd,MAAM1M,GAAG,GAAG,KAAKoN,IAAjB;MACApN,GAAG,CAACxC,CAAJ,IAAS,IAAIkP,KAAb;MACA,OAAO,IAAP;IACA;;IACD0B,SAAS,GAAG;MACX,MAAMpO,GAAG,GAAG,KAAKoN,IAAjB;MACA,MAAMiB,GAAG,GAAG1P,KAAK,CAACqB,GAAG,CAAC5B,CAAJ,GAAQ,GAAR,GAAc4B,GAAG,CAAC3B,CAAJ,GAAQ,IAAtB,GAA6B2B,GAAG,CAACvC,CAAJ,GAAQ,IAAtC,CAAjB;MACAuC,GAAG,CAAC5B,CAAJ,GAAQ4B,GAAG,CAAC3B,CAAJ,GAAQ2B,GAAG,CAACvC,CAAJ,GAAQ4Q,GAAxB;MACA,OAAO,IAAP;IACA;;IACDC,OAAO,CAAC5B,KAAD,EAAQ;MACd,MAAM1M,GAAG,GAAG,KAAKoN,IAAjB;MACApN,GAAG,CAACxC,CAAJ,IAAS,IAAIkP,KAAb;MACA,OAAO,IAAP;IACA;;IACD6B,MAAM,GAAG;MACR,MAAMpQ,CAAC,GAAG,KAAKiP,IAAf;MACAjP,CAAC,CAACC,CAAF,GAAM,MAAMD,CAAC,CAACC,CAAd;MACAD,CAAC,CAACE,CAAF,GAAM,MAAMF,CAAC,CAACE,CAAd;MACAF,CAAC,CAACV,CAAF,GAAM,MAAMU,CAAC,CAACV,CAAd;MACA,OAAO,IAAP;IACA;;IACD+Q,OAAO,CAAC9B,KAAD,EAAQ;MACdD,MAAM,CAAC,KAAKW,IAAN,EAAY,CAAZ,EAAeV,KAAf,CAAN;MACA,OAAO,IAAP;IACA;;IACD+B,MAAM,CAAC/B,KAAD,EAAQ;MACbD,MAAM,CAAC,KAAKW,IAAN,EAAY,CAAZ,EAAe,CAACV,KAAhB,CAAN;MACA,OAAO,IAAP;IACA;;IACDgC,QAAQ,CAAChC,KAAD,EAAQ;MACfD,MAAM,CAAC,KAAKW,IAAN,EAAY,CAAZ,EAAeV,KAAf,CAAN;MACA,OAAO,IAAP;IACA;;IACDiC,UAAU,CAACjC,KAAD,EAAQ;MACjBD,MAAM,CAAC,KAAKW,IAAN,EAAY,CAAZ,EAAe,CAACV,KAAhB,CAAN;MACA,OAAO,IAAP;IACA;;IACD7L,MAAM,CAACC,GAAD,EAAM;MACXD,MAAM,CAAC,KAAKuM,IAAN,EAAYtM,GAAZ,CAAN;MACA,OAAO,IAAP;IACA;;EAzGU;;EA2GZ,SAAS8N,SAAT,CAAmB5B,KAAnB,EAA0B;IACzB,OAAO,IAAIG,KAAJ,CAAUH,KAAV,CAAP;EACA;;EAED,MAAM6B,mBAAmB,GAAIC,KAAD,IAAWA,KAAK,YAAYC,cAAjB,IAAmCD,KAAK,YAAYE,aAA3F;;EACA,SAASvB,KAAT,CAAeqB,KAAf,EAAsB;IACpB,OAAOD,mBAAmB,CAACC,KAAD,CAAnB,GAA6BA,KAA7B,GAAqCF,SAAS,CAACE,KAAD,CAArD;EACD;;EACD,SAASG,aAAT,CAAuBH,KAAvB,EAA8B;IAC5B,OAAOD,mBAAmB,CAACC,KAAD,CAAnB,GACHA,KADG,GAEHF,SAAS,CAACE,KAAD,CAAT,CAAiBJ,QAAjB,CAA0B,GAA1B,EAA+BD,MAA/B,CAAsC,GAAtC,EAA2C/P,SAA3C,EAFJ;EAGD;;EAED,SAASwQ,IAAT,GAAgB,CAAE;;EAClB,MAAMC,GAAG,GAAI,YAAW;IACtB,IAAIC,EAAE,GAAG,CAAT;IACA,OAAO,YAAW;MAChB,OAAOA,EAAE,EAAT;IACD,CAFD;EAGD,CALY,EAAb;;EAMA,SAASC,aAAT,CAAuBP,KAAvB,EAA8B;IAC5B,OAAOA,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,WAA1C;EACD;;EACD,SAAS1O,OAAT,CAAiB0O,KAAjB,EAAwB;IACtB,IAAI9W,KAAK,CAACoI,OAAN,IAAiBpI,KAAK,CAACoI,OAAN,CAAc0O,KAAd,CAArB,EAA2C;MACzC,OAAO,IAAP;IACD;;IACD,MAAM5U,IAAI,GAAG4R,MAAM,CAAC7T,SAAP,CAAiBqX,QAAjB,CAA0BnX,IAA1B,CAA+B2W,KAA/B,CAAb;;IACA,IAAI5U,IAAI,CAACqV,MAAL,CAAY,CAAZ,EAAe,CAAf,MAAsB,SAAtB,IAAmCrV,IAAI,CAACqV,MAAL,CAAY,CAAC,CAAb,MAAoB,QAA3D,EAAqE;MACnE,OAAO,IAAP;IACD;;IACD,OAAO,KAAP;EACD;;EACD,SAASC,QAAT,CAAkBV,KAAlB,EAAyB;IACvB,OAAOA,KAAK,KAAK,IAAV,IAAkBhD,MAAM,CAAC7T,SAAP,CAAiBqX,QAAjB,CAA0BnX,IAA1B,CAA+B2W,KAA/B,MAA0C,iBAAnE;EACD;;EACD,MAAMW,cAAc,GAAIX,KAAD,IAAW,CAAC,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYY,MAA/C,KAA0DC,QAAQ,CAAC,CAACb,KAAF,CAApG;;EACA,SAASc,eAAT,CAAyBd,KAAzB,EAAgCe,YAAhC,EAA8C;IAC5C,OAAOJ,cAAc,CAACX,KAAD,CAAd,GAAwBA,KAAxB,GAAgCe,YAAvC;EACD;;EACD,SAASC,cAAT,CAAwBhB,KAAxB,EAA+Be,YAA/B,EAA6C;IAC3C,OAAO,OAAOf,KAAP,KAAiB,WAAjB,GAA+Be,YAA/B,GAA8Cf,KAArD;EACD;;EACD,MAAMiB,YAAY,GAAG,CAACjB,KAAD,EAAQkB,SAAR,KACnB,OAAOlB,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACmB,QAAN,CAAe,GAAf,CAA7B,GACEC,UAAU,CAACpB,KAAD,CAAV,GAAoB,GADtB,GAEIA,KAAK,GAAGkB,SAHd;;EAIA,MAAMG,WAAW,GAAG,CAACrB,KAAD,EAAQkB,SAAR,KAClB,OAAOlB,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACmB,QAAN,CAAe,GAAf,CAA7B,GACEC,UAAU,CAACpB,KAAD,CAAV,GAAoB,GAApB,GAA0BkB,SAD5B,GAEI,CAAClB,KAHP;;EAIA,SAAStX,QAAT,CAAkBG,EAAlB,EAAsBI,IAAtB,EAA4BH,OAA5B,EAAqC;IACnC,IAAID,EAAE,IAAI,OAAOA,EAAE,CAACQ,IAAV,KAAmB,UAA7B,EAAyC;MACvC,OAAOR,EAAE,CAACW,KAAH,CAASV,OAAT,EAAkBG,IAAlB,CAAP;IACD;EACF;;EACD,SAASqY,IAAT,CAAcC,QAAd,EAAwB1Y,EAAxB,EAA4BC,OAA5B,EAAqC0Y,OAArC,EAA8C;IAC5C,IAAIlV,CAAJ,EAAOoD,GAAP,EAAYqN,IAAZ;;IACA,IAAIzL,OAAO,CAACiQ,QAAD,CAAX,EAAuB;MACrB7R,GAAG,GAAG6R,QAAQ,CAAClV,MAAf;;MACA,IAAImV,OAAJ,EAAa;QACX,KAAKlV,CAAC,GAAGoD,GAAG,GAAG,CAAf,EAAkBpD,CAAC,IAAI,CAAvB,EAA0BA,CAAC,EAA3B,EAA+B;UAC7BzD,EAAE,CAACQ,IAAH,CAAQP,OAAR,EAAiByY,QAAQ,CAACjV,CAAD,CAAzB,EAA8BA,CAA9B;QACD;MACF,CAJD,MAIO;QACL,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoD,GAAhB,EAAqBpD,CAAC,EAAtB,EAA0B;UACxBzD,EAAE,CAACQ,IAAH,CAAQP,OAAR,EAAiByY,QAAQ,CAACjV,CAAD,CAAzB,EAA8BA,CAA9B;QACD;MACF;IACF,CAXD,MAWO,IAAIoU,QAAQ,CAACa,QAAD,CAAZ,EAAwB;MAC7BxE,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYwE,QAAZ,CAAP;MACA7R,GAAG,GAAGqN,IAAI,CAAC1Q,MAAX;;MACA,KAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoD,GAAhB,EAAqBpD,CAAC,EAAtB,EAA0B;QACxBzD,EAAE,CAACQ,IAAH,CAAQP,OAAR,EAAiByY,QAAQ,CAACxE,IAAI,CAACzQ,CAAD,CAAL,CAAzB,EAAoCyQ,IAAI,CAACzQ,CAAD,CAAxC;MACD;IACF;EACF;;EACD,SAASmV,cAAT,CAAwBC,EAAxB,EAA4BC,EAA5B,EAAgC;IAC9B,IAAIrV,CAAJ,EAAOsV,IAAP,EAAaC,EAAb,EAAiBC,EAAjB;;IACA,IAAI,CAACJ,EAAD,IAAO,CAACC,EAAR,IAAcD,EAAE,CAACrV,MAAH,KAAcsV,EAAE,CAACtV,MAAnC,EAA2C;MACzC,OAAO,KAAP;IACD;;IACD,KAAKC,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGF,EAAE,CAACrV,MAAtB,EAA8BC,CAAC,GAAGsV,IAAlC,EAAwC,EAAEtV,CAA1C,EAA6C;MAC3CuV,EAAE,GAAGH,EAAE,CAACpV,CAAD,CAAP;MACAwV,EAAE,GAAGH,EAAE,CAACrV,CAAD,CAAP;;MACA,IAAIuV,EAAE,CAACE,YAAH,KAAoBD,EAAE,CAACC,YAAvB,IAAuCF,EAAE,CAACG,KAAH,KAAaF,EAAE,CAACE,KAA3D,EAAkE;QAChE,OAAO,KAAP;MACD;IACF;;IACD,OAAO,IAAP;EACD;;EACD,SAAS7C,KAAT,CAAe8C,MAAf,EAAuB;IACrB,IAAI3Q,OAAO,CAAC2Q,MAAD,CAAX,EAAqB;MACnB,OAAOA,MAAM,CAAC1Q,GAAP,CAAW4N,KAAX,CAAP;IACD;;IACD,IAAIuB,QAAQ,CAACuB,MAAD,CAAZ,EAAsB;MACpB,MAAMC,MAAM,GAAGlF,MAAM,CAACmF,MAAP,CAAc,IAAd,CAAf;MACA,MAAMpF,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYkF,MAAZ,CAAb;MACA,MAAMG,IAAI,GAAGrF,IAAI,CAAC1Q,MAAlB;MACA,IAAIyE,CAAC,GAAG,CAAR;;MACA,OAAOA,CAAC,GAAGsR,IAAX,EAAiB,EAAEtR,CAAnB,EAAsB;QACpBoR,MAAM,CAACnF,IAAI,CAACjM,CAAD,CAAL,CAAN,GAAkBqO,KAAK,CAAC8C,MAAM,CAAClF,IAAI,CAACjM,CAAD,CAAL,CAAP,CAAvB;MACD;;MACD,OAAOoR,MAAP;IACD;;IACD,OAAOD,MAAP;EACD;;EACD,SAASI,UAAT,CAAoBC,GAApB,EAAyB;IACvB,OAAO,CAAC,WAAD,EAAc,WAAd,EAA2B,aAA3B,EAA0CC,OAA1C,CAAkDD,GAAlD,MAA2D,CAAC,CAAnE;EACD;;EACD,SAASE,OAAT,CAAiBF,GAAjB,EAAsBJ,MAAtB,EAA8BD,MAA9B,EAAsCQ,OAAtC,EAA+C;IAC7C,IAAI,CAACJ,UAAU,CAACC,GAAD,CAAf,EAAsB;MACpB;IACD;;IACD,MAAMI,IAAI,GAAGR,MAAM,CAACI,GAAD,CAAnB;IACA,MAAMK,IAAI,GAAGV,MAAM,CAACK,GAAD,CAAnB;;IACA,IAAI5B,QAAQ,CAACgC,IAAD,CAAR,IAAkBhC,QAAQ,CAACiC,IAAD,CAA9B,EAAsC;MACpCC,KAAK,CAACF,IAAD,EAAOC,IAAP,EAAaF,OAAb,CAAL;IACD,CAFD,MAEO;MACLP,MAAM,CAACI,GAAD,CAAN,GAAcnD,KAAK,CAACwD,IAAD,CAAnB;IACD;EACF;;EACD,SAASC,KAAT,CAAeV,MAAf,EAAuBD,MAAvB,EAA+BQ,OAA/B,EAAwC;IACtC,MAAMI,OAAO,GAAGvR,OAAO,CAAC2Q,MAAD,CAAP,GAAkBA,MAAlB,GAA2B,CAACA,MAAD,CAA3C;IACA,MAAML,IAAI,GAAGiB,OAAO,CAACxW,MAArB;;IACA,IAAI,CAACqU,QAAQ,CAACwB,MAAD,CAAb,EAAuB;MACrB,OAAOA,MAAP;IACD;;IACDO,OAAO,GAAGA,OAAO,IAAI,EAArB;IACA,MAAMK,MAAM,GAAGL,OAAO,CAACK,MAAR,IAAkBN,OAAjC;;IACA,KAAK,IAAIlW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsV,IAApB,EAA0B,EAAEtV,CAA5B,EAA+B;MAC7B2V,MAAM,GAAGY,OAAO,CAACvW,CAAD,CAAhB;;MACA,IAAI,CAACoU,QAAQ,CAACuB,MAAD,CAAb,EAAuB;QACrB;MACD;;MACD,MAAMlF,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYkF,MAAZ,CAAb;;MACA,KAAK,IAAInR,CAAC,GAAG,CAAR,EAAWsR,IAAI,GAAGrF,IAAI,CAAC1Q,MAA5B,EAAoCyE,CAAC,GAAGsR,IAAxC,EAA8C,EAAEtR,CAAhD,EAAmD;QACjDgS,MAAM,CAAC/F,IAAI,CAACjM,CAAD,CAAL,EAAUoR,MAAV,EAAkBD,MAAlB,EAA0BQ,OAA1B,CAAN;MACD;IACF;;IACD,OAAOP,MAAP;EACD;;EACD,SAASa,OAAT,CAAiBb,MAAjB,EAAyBD,MAAzB,EAAiC;IAC/B,OAAOW,KAAK,CAACV,MAAD,EAASD,MAAT,EAAiB;MAACa,MAAM,EAAEE;IAAT,CAAjB,CAAZ;EACD;;EACD,SAASA,SAAT,CAAmBV,GAAnB,EAAwBJ,MAAxB,EAAgCD,MAAhC,EAAwC;IACtC,IAAI,CAACI,UAAU,CAACC,GAAD,CAAf,EAAsB;MACpB;IACD;;IACD,MAAMI,IAAI,GAAGR,MAAM,CAACI,GAAD,CAAnB;IACA,MAAMK,IAAI,GAAGV,MAAM,CAACK,GAAD,CAAnB;;IACA,IAAI5B,QAAQ,CAACgC,IAAD,CAAR,IAAkBhC,QAAQ,CAACiC,IAAD,CAA9B,EAAsC;MACpCI,OAAO,CAACL,IAAD,EAAOC,IAAP,CAAP;IACD,CAFD,MAEO,IAAI,CAAC3F,MAAM,CAAC7T,SAAP,CAAiB8Z,cAAjB,CAAgC5Z,IAAhC,CAAqC6Y,MAArC,EAA6CI,GAA7C,CAAL,EAAwD;MAC7DJ,MAAM,CAACI,GAAD,CAAN,GAAcnD,KAAK,CAACwD,IAAD,CAAnB;IACD;EACF;;EACD,SAASO,WAAT,CAAqBC,KAArB,EAA4BnD,KAA5B,EAAmCoD,QAAnC,EAA6CC,OAA7C,EAAsD;IACpD,IAAIrD,KAAK,KAAKjV,SAAd,EAAyB;MACvBuY,OAAO,CAACC,IAAR,CAAaJ,KAAK,GAAG,KAAR,GAAgBC,QAAhB,GACd,+BADc,GACoBC,OADpB,GAC8B,WAD3C;IAED;EACF;;EACD,MAAMG,WAAW,GAAG,EAApB;EACA,MAAMC,GAAG,GAAG,GAAZ;;EACA,SAASC,kBAAT,CAA4BpB,GAA5B,EAAiCrY,KAAjC,EAAwC;IACtC,MAAM0Z,GAAG,GAAGrB,GAAG,CAACC,OAAJ,CAAYkB,GAAZ,EAAiBxZ,KAAjB,CAAZ;IACA,OAAO0Z,GAAG,KAAK,CAAC,CAAT,GAAarB,GAAG,CAACjW,MAAjB,GAA0BsX,GAAjC;EACD;;EACD,SAASC,gBAAT,CAA0BnF,GAA1B,EAA+B6D,GAA/B,EAAoC;IAClC,IAAIA,GAAG,KAAKkB,WAAZ,EAAyB;MACvB,OAAO/E,GAAP;IACD;;IACD,IAAIoF,GAAG,GAAG,CAAV;IACA,IAAIF,GAAG,GAAGD,kBAAkB,CAACpB,GAAD,EAAMuB,GAAN,CAA5B;;IACA,OAAOpF,GAAG,IAAIkF,GAAG,GAAGE,GAApB,EAAyB;MACvBpF,GAAG,GAAGA,GAAG,CAAC6D,GAAG,CAAC7B,MAAJ,CAAWoD,GAAX,EAAgBF,GAAG,GAAGE,GAAtB,CAAD,CAAT;MACAA,GAAG,GAAGF,GAAG,GAAG,CAAZ;MACAA,GAAG,GAAGD,kBAAkB,CAACpB,GAAD,EAAMuB,GAAN,CAAxB;IACD;;IACD,OAAOpF,GAAP;EACD;;EACD,SAASqF,WAAT,CAAqBrU,GAArB,EAA0B;IACxB,OAAOA,GAAG,CAAC2O,MAAJ,CAAW,CAAX,EAAc2F,WAAd,KAA8BtU,GAAG,CAACrG,KAAJ,CAAU,CAAV,CAArC;EACD;;EACD,MAAM4a,OAAO,GAAIhE,KAAD,IAAW,OAAOA,KAAP,KAAiB,WAA5C;;EACA,MAAMiE,UAAU,GAAIjE,KAAD,IAAW,OAAOA,KAAP,KAAiB,UAA/C;;EACA,MAAMkE,SAAS,GAAG,CAACxV,CAAD,EAAIC,CAAJ,KAAU;IAC1B,IAAID,CAAC,CAACyV,IAAF,KAAWxV,CAAC,CAACwV,IAAjB,EAAuB;MACrB,OAAO,KAAP;IACD;;IACD,KAAK,MAAM3X,IAAX,IAAmBkC,CAAnB,EAAsB;MACpB,IAAI,CAACC,CAAC,CAACnB,GAAF,CAAMhB,IAAN,CAAL,EAAkB;QAChB,OAAO,KAAP;MACD;IACF;;IACD,OAAO,IAAP;EACD,CAVD;;EAWA,SAAS4X,aAAT,CAAuBtV,CAAvB,EAA0B;IACxB,OAAOA,CAAC,CAAC1D,IAAF,KAAW,SAAX,IAAwB0D,CAAC,CAAC1D,IAAF,KAAW,OAAnC,IAA8C0D,CAAC,CAAC1D,IAAF,KAAW,aAAhE;EACD;;EAED,MAAMiZ,SAAS,GAAGrH,MAAM,CAACmF,MAAP,CAAc,IAAd,CAAlB;EACA,MAAMmC,WAAW,GAAGtH,MAAM,CAACmF,MAAP,CAAc,IAAd,CAApB;;EACA,SAASoC,UAAT,CAAoBC,IAApB,EAA0BlC,GAA1B,EAA+B;IAC7B,IAAI,CAACA,GAAL,EAAU;MACR,OAAOkC,IAAP;IACD;;IACD,MAAMzH,IAAI,GAAGuF,GAAG,CAACmC,KAAJ,CAAU,GAAV,CAAb;;IACA,KAAK,IAAInY,CAAC,GAAG,CAAR,EAAWuE,CAAC,GAAGkM,IAAI,CAAC1Q,MAAzB,EAAiCC,CAAC,GAAGuE,CAArC,EAAwC,EAAEvE,CAA1C,EAA6C;MAC3C,MAAMwE,CAAC,GAAGiM,IAAI,CAACzQ,CAAD,CAAd;MACAkY,IAAI,GAAGA,IAAI,CAAC1T,CAAD,CAAJ,KAAY0T,IAAI,CAAC1T,CAAD,CAAJ,GAAUkM,MAAM,CAACmF,MAAP,CAAc,IAAd,CAAtB,CAAP;IACD;;IACD,OAAOqC,IAAP;EACD;;EACD,SAAStX,GAAT,CAAawX,IAAb,EAAmBvB,KAAnB,EAA0BwB,MAA1B,EAAkC;IAChC,IAAI,OAAOxB,KAAP,KAAiB,QAArB,EAA+B;MAC7B,OAAOP,KAAK,CAAC2B,UAAU,CAACG,IAAD,EAAOvB,KAAP,CAAX,EAA0BwB,MAA1B,CAAZ;IACD;;IACD,OAAO/B,KAAK,CAAC2B,UAAU,CAACG,IAAD,EAAO,EAAP,CAAX,EAAuBvB,KAAvB,CAAZ;EACD;;EACD,MAAMyB,QAAN,CAAe;IACbna,WAAW,CAACoa,YAAD,EAAe;MACxB,KAAKC,SAAL,GAAiB/Z,SAAjB;MACA,KAAKga,eAAL,GAAuB,iBAAvB;MACA,KAAKC,WAAL,GAAmB,iBAAnB;MACA,KAAKrG,KAAL,GAAa,MAAb;MACA,KAAKsG,QAAL,GAAgB,EAAhB;;MACA,KAAKC,gBAAL,GAAyBC,OAAD,IAAaA,OAAO,CAACla,KAAR,CAAcma,QAAd,CAAuBC,mBAAvB,EAArC;;MACA,KAAKC,QAAL,GAAgB,EAAhB;MACA,KAAKC,MAAL,GAAc,CACZ,WADY,EAEZ,UAFY,EAGZ,OAHY,EAIZ,YAJY,EAKZ,WALY,CAAd;MAOA,KAAKC,IAAL,GAAY;QACVC,MAAM,EAAE,oDADE;QAEVtB,IAAI,EAAE,EAFI;QAGVuB,KAAK,EAAE,QAHG;QAIVC,UAAU,EAAE,GAJF;QAKV/G,MAAM,EAAE;MALE,CAAZ;MAOA,KAAKgH,KAAL,GAAa,EAAb;;MACA,KAAKC,oBAAL,GAA4B,CAACC,GAAD,EAAMrD,OAAN,KAAkBtC,aAAa,CAACsC,OAAO,CAACsC,eAAT,CAA3D;;MACA,KAAKgB,gBAAL,GAAwB,CAACD,GAAD,EAAMrD,OAAN,KAAkBtC,aAAa,CAACsC,OAAO,CAACuC,WAAT,CAAvD;;MACA,KAAKgB,UAAL,GAAkB,CAACF,GAAD,EAAMrD,OAAN,KAAkBtC,aAAa,CAACsC,OAAO,CAAC9D,KAAT,CAAjD;;MACA,KAAKsH,SAAL,GAAiB,GAAjB;MACA,KAAKC,WAAL,GAAmB;QACjBC,IAAI,EAAE,SADW;QAEjBC,SAAS,EAAE;MAFM,CAAnB;MAIA,KAAKC,mBAAL,GAA2B,IAA3B;MACA,KAAKC,OAAL,GAAe,IAAf;MACA,KAAKC,OAAL,GAAe,IAAf;MACA,KAAKC,OAAL,GAAe,IAAf;MACA,KAAKC,OAAL,GAAe,EAAf;MACA,KAAKC,UAAL,GAAkB,IAAlB;MACA,KAAKC,KAAL,GAAa5b,SAAb;MACA,KAAK6b,MAAL,GAAc,EAAd;MACA,KAAKC,QAAL,GAAgB,IAAhB;MACA,KAAKC,uBAAL,GAA+B,IAA/B;MACA,KAAKC,QAAL,CAAclC,YAAd;IACD;;IACD3X,GAAG,CAACiW,KAAD,EAAQwB,MAAR,EAAgB;MACjB,OAAOzX,GAAG,CAAC,IAAD,EAAOiW,KAAP,EAAcwB,MAAd,CAAV;IACD;;IACD5X,GAAG,CAACoW,KAAD,EAAQ;MACT,OAAOoB,UAAU,CAAC,IAAD,EAAOpB,KAAP,CAAjB;IACD;;IACD4D,QAAQ,CAAC5D,KAAD,EAAQwB,MAAR,EAAgB;MACtB,OAAOzX,GAAG,CAACoX,WAAD,EAAcnB,KAAd,EAAqBwB,MAArB,CAAV;IACD;;IACDqC,QAAQ,CAAC7D,KAAD,EAAQwB,MAAR,EAAgB;MACtB,OAAOzX,GAAG,CAACmX,SAAD,EAAYlB,KAAZ,EAAmBwB,MAAnB,CAAV;IACD;;IACDsC,KAAK,CAAC9D,KAAD,EAAQ+D,IAAR,EAAcC,WAAd,EAA2BC,UAA3B,EAAuC;MAC1C,MAAMC,WAAW,GAAG9C,UAAU,CAAC,IAAD,EAAOpB,KAAP,CAA9B;MACA,MAAMmE,iBAAiB,GAAG/C,UAAU,CAAC,IAAD,EAAO4C,WAAP,CAApC;MACA,MAAMI,WAAW,GAAG,MAAML,IAA1B;MACAlK,MAAM,CAACwK,gBAAP,CAAwBH,WAAxB,EAAqC;QACnC,CAACE,WAAD,GAAe;UACbvH,KAAK,EAAEqH,WAAW,CAACH,IAAD,CADL;UAEbO,QAAQ,EAAE;QAFG,CADoB;QAKnC,CAACP,IAAD,GAAQ;UACNQ,UAAU,EAAE,IADN;;UAEN3a,GAAG,GAAG;YACJ,MAAM4a,KAAK,GAAG,KAAKJ,WAAL,CAAd;YACA,MAAMrF,MAAM,GAAGoF,iBAAiB,CAACF,UAAD,CAAhC;;YACA,IAAI1G,QAAQ,CAACiH,KAAD,CAAZ,EAAqB;cACnB,OAAO3K,MAAM,CAACgB,MAAP,CAAc,EAAd,EAAkBkE,MAAlB,EAA0ByF,KAA1B,CAAP;YACD;;YACD,OAAO3G,cAAc,CAAC2G,KAAD,EAAQzF,MAAR,CAArB;UACD,CATK;;UAUNhV,GAAG,CAAC8S,KAAD,EAAQ;YACT,KAAKuH,WAAL,IAAoBvH,KAApB;UACD;;QAZK;MAL2B,CAArC;IAoBD;;EAhFY;;EAkFf,IAAI4H,QAAQ,GAAG,IAAIhD,QAAJ,CAAa;IAC1BiD,WAAW,EAAGX,IAAD,IAAU,CAACA,IAAI,CAACY,UAAL,CAAgB,IAAhB,CADE;IAE1BC,UAAU,EAAGb,IAAD,IAAUA,IAAI,KAAK,QAFL;IAG1BtB,KAAK,EAAE;MACLoC,SAAS,EAAE;IADN,CAHmB;IAM1B9B,WAAW,EAAE;MACX2B,WAAW,EAAE,KADF;MAEXE,UAAU,EAAE;IAFD;EANa,CAAb,CAAf;EAYA,MAAME,EAAE,GAAGrc,IAAI,CAACqc,EAAhB;EACA,MAAMC,GAAG,GAAG,IAAID,EAAhB;EACA,MAAME,KAAK,GAAGD,GAAG,GAAGD,EAApB;EACA,MAAMG,QAAQ,GAAGxH,MAAM,CAACyH,iBAAxB;EACA,MAAMC,WAAW,GAAGL,EAAE,GAAG,GAAzB;EACA,MAAMM,OAAO,GAAGN,EAAE,GAAG,CAArB;EACA,MAAMO,UAAU,GAAGP,EAAE,GAAG,CAAxB;EACA,MAAMQ,aAAa,GAAGR,EAAE,GAAG,CAAL,GAAS,CAA/B;EACA,MAAMS,KAAK,GAAG9c,IAAI,CAAC8c,KAAnB;EACA,MAAMC,IAAI,GAAG/c,IAAI,CAAC+c,IAAlB;;EACA,SAASC,OAAT,CAAiBxX,KAAjB,EAAwB;IACtB,MAAMyX,YAAY,GAAGjd,IAAI,CAACiE,KAAL,CAAWuB,KAAX,CAArB;IACAA,KAAK,GAAG0X,YAAY,CAAC1X,KAAD,EAAQyX,YAAR,EAAsBzX,KAAK,GAAG,IAA9B,CAAZ,GAAkDyX,YAAlD,GAAiEzX,KAAzE;IACA,MAAM2X,SAAS,GAAGnd,IAAI,CAACod,GAAL,CAAS,EAAT,EAAapd,IAAI,CAACqd,KAAL,CAAWP,KAAK,CAACtX,KAAD,CAAhB,CAAb,CAAlB;IACA,MAAM8X,QAAQ,GAAG9X,KAAK,GAAG2X,SAAzB;IACA,MAAMI,YAAY,GAAGD,QAAQ,IAAI,CAAZ,GAAgB,CAAhB,GAAoBA,QAAQ,IAAI,CAAZ,GAAgB,CAAhB,GAAoBA,QAAQ,IAAI,CAAZ,GAAgB,CAAhB,GAAoB,EAAjF;IACA,OAAOC,YAAY,GAAGJ,SAAtB;EACD;;EACD,SAASK,UAAT,CAAoBpJ,KAApB,EAA2B;IACzB,MAAMqJ,MAAM,GAAG,EAAf;IACA,MAAMC,IAAI,GAAG1d,IAAI,CAAC0d,IAAL,CAAUtJ,KAAV,CAAb;IACA,IAAI1T,CAAJ;;IACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgd,IAAhB,EAAsBhd,CAAC,EAAvB,EAA2B;MACzB,IAAI0T,KAAK,GAAG1T,CAAR,KAAc,CAAlB,EAAqB;QACnB+c,MAAM,CAAC/b,IAAP,CAAYhB,CAAZ;QACA+c,MAAM,CAAC/b,IAAP,CAAY0S,KAAK,GAAG1T,CAApB;MACD;IACF;;IACD,IAAIgd,IAAI,MAAMA,IAAI,GAAG,CAAb,CAAR,EAAyB;MACvBD,MAAM,CAAC/b,IAAP,CAAYgc,IAAZ;IACD;;IACDD,MAAM,CAACE,IAAP,CAAY,CAAC7a,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA1B,EAA6B/B,GAA7B;IACA,OAAOyc,MAAP;EACD;;EACD,SAASG,QAAT,CAAkB3Y,CAAlB,EAAqB;IACnB,OAAO,CAAC4Y,KAAK,CAACrI,UAAU,CAACvQ,CAAD,CAAX,CAAN,IAAyBgQ,QAAQ,CAAChQ,CAAD,CAAxC;EACD;;EACD,SAASiY,YAAT,CAAsB3W,CAAtB,EAAyBuX,CAAzB,EAA4BC,OAA5B,EAAqC;IACnC,OAAO/d,IAAI,CAACge,GAAL,CAASzX,CAAC,GAAGuX,CAAb,IAAkBC,OAAzB;EACD;;EACD,SAASE,WAAT,CAAqB1X,CAArB,EAAwBwX,OAAxB,EAAiC;IAC/B,MAAMG,OAAO,GAAGle,IAAI,CAACiE,KAAL,CAAWsC,CAAX,CAAhB;IACA,OAAS2X,OAAO,GAAGH,OAAX,IAAuBxX,CAAxB,IAAgC2X,OAAO,GAAGH,OAAX,IAAuBxX,CAA7D;EACD;;EACD,SAAS4X,kBAAT,CAA4BC,KAA5B,EAAmC9H,MAAnC,EAA2C+H,QAA3C,EAAqD;IACnD,IAAI3d,CAAJ,EAAOsV,IAAP,EAAa5B,KAAb;;IACA,KAAK1T,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGoI,KAAK,CAAC3d,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2CtV,CAAC,EAA5C,EAAgD;MAC9C0T,KAAK,GAAGgK,KAAK,CAAC1d,CAAD,CAAL,CAAS2d,QAAT,CAAR;;MACA,IAAI,CAACR,KAAK,CAACzJ,KAAD,CAAV,EAAmB;QACjBkC,MAAM,CAACrW,GAAP,GAAaD,IAAI,CAACC,GAAL,CAASqW,MAAM,CAACrW,GAAhB,EAAqBmU,KAArB,CAAb;QACAkC,MAAM,CAACtU,GAAP,GAAahC,IAAI,CAACgC,GAAL,CAASsU,MAAM,CAACtU,GAAhB,EAAqBoS,KAArB,CAAb;MACD;IACF;EACF;;EACD,SAASkK,SAAT,CAAmBC,OAAnB,EAA4B;IAC1B,OAAOA,OAAO,IAAIlC,EAAE,GAAG,GAAT,CAAd;EACD;;EACD,SAASmC,SAAT,CAAmBC,OAAnB,EAA4B;IAC1B,OAAOA,OAAO,IAAI,MAAMpC,EAAV,CAAd;EACD;;EACD,SAASqC,cAAT,CAAwBnY,CAAxB,EAA2B;IACzB,IAAI,CAACwO,cAAc,CAACxO,CAAD,CAAnB,EAAwB;MACtB;IACD;;IACD,IAAIrD,CAAC,GAAG,CAAR;IACA,IAAImQ,CAAC,GAAG,CAAR;;IACA,OAAOrT,IAAI,CAACiE,KAAL,CAAWsC,CAAC,GAAGrD,CAAf,IAAoBA,CAApB,KAA0BqD,CAAjC,EAAoC;MAClCrD,CAAC,IAAI,EAAL;MACAmQ,CAAC;IACF;;IACD,OAAOA,CAAP;EACD;;EACD,SAASsL,iBAAT,CAA2BC,WAA3B,EAAwCC,UAAxC,EAAoD;IAClD,MAAMC,mBAAmB,GAAGD,UAAU,CAACtY,CAAX,GAAeqY,WAAW,CAACrY,CAAvD;IACA,MAAMwY,mBAAmB,GAAGF,UAAU,CAACf,CAAX,GAAec,WAAW,CAACd,CAAvD;IACA,MAAMkB,wBAAwB,GAAGhf,IAAI,CAAC0d,IAAL,CAAUoB,mBAAmB,GAAGA,mBAAtB,GAA4CC,mBAAmB,GAAGA,mBAA5E,CAAjC;IACA,IAAIE,KAAK,GAAGjf,IAAI,CAACkf,KAAL,CAAWH,mBAAX,EAAgCD,mBAAhC,CAAZ;;IACA,IAAIG,KAAK,GAAI,CAAC,GAAD,GAAO5C,EAApB,EAAyB;MACvB4C,KAAK,IAAI3C,GAAT;IACD;;IACD,OAAO;MACL2C,KADK;MAELE,QAAQ,EAAEH;IAFL,CAAP;EAID;;EACD,SAASI,qBAAT,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyC;IACvC,OAAOtf,IAAI,CAAC0d,IAAL,CAAU1d,IAAI,CAACod,GAAL,CAASkC,GAAG,CAAC/Y,CAAJ,GAAQ8Y,GAAG,CAAC9Y,CAArB,EAAwB,CAAxB,IAA6BvG,IAAI,CAACod,GAAL,CAASkC,GAAG,CAACxB,CAAJ,GAAQuB,GAAG,CAACvB,CAArB,EAAwB,CAAxB,CAAvC,CAAP;EACD;;EACD,SAASyB,UAAT,CAAoBzc,CAApB,EAAuBC,CAAvB,EAA0B;IACxB,OAAO,CAACD,CAAC,GAAGC,CAAJ,GAAQwZ,KAAT,IAAkBD,GAAlB,GAAwBD,EAA/B;EACD;;EACD,SAASmD,eAAT,CAAyB1c,CAAzB,EAA4B;IAC1B,OAAO,CAACA,CAAC,GAAGwZ,GAAJ,GAAUA,GAAX,IAAkBA,GAAzB;EACD;;EACD,SAASmD,aAAT,CAAuBR,KAAvB,EAA8B5gB,KAA9B,EAAqCC,GAArC,EAA0CohB,qBAA1C,EAAiE;IAC/D,MAAM5c,CAAC,GAAG0c,eAAe,CAACP,KAAD,CAAzB;;IACA,MAAMja,CAAC,GAAGwa,eAAe,CAACnhB,KAAD,CAAzB;;IACA,MAAM6E,CAAC,GAAGsc,eAAe,CAAClhB,GAAD,CAAzB;;IACA,MAAMqhB,YAAY,GAAGH,eAAe,CAACxa,CAAC,GAAGlC,CAAL,CAApC;;IACA,MAAM8c,UAAU,GAAGJ,eAAe,CAACtc,CAAC,GAAGJ,CAAL,CAAlC;;IACA,MAAM+c,YAAY,GAAGL,eAAe,CAAC1c,CAAC,GAAGkC,CAAL,CAApC;;IACA,MAAM8a,UAAU,GAAGN,eAAe,CAAC1c,CAAC,GAAGI,CAAL,CAAlC;;IACA,OAAOJ,CAAC,KAAKkC,CAAN,IAAWlC,CAAC,KAAKI,CAAjB,IAAuBwc,qBAAqB,IAAI1a,CAAC,KAAK9B,CAAtD,IACDyc,YAAY,GAAGC,UAAf,IAA6BC,YAAY,GAAGC,UADlD;EAED;;EACD,SAASC,WAAT,CAAqB3L,KAArB,EAA4BnU,GAA5B,EAAiC+B,GAAjC,EAAsC;IACpC,OAAOhC,IAAI,CAACgC,GAAL,CAAS/B,GAAT,EAAcD,IAAI,CAACC,GAAL,CAAS+B,GAAT,EAAcoS,KAAd,CAAd,CAAP;EACD;;EACD,SAAS4L,WAAT,CAAqB5L,KAArB,EAA4B;IAC1B,OAAO2L,WAAW,CAAC3L,KAAD,EAAQ,CAAC,KAAT,EAAgB,KAAhB,CAAlB;EACD;;EACD,SAAS6L,UAAT,CAAoB7L,KAApB,EAA2B/V,KAA3B,EAAkCC,GAAlC,EAAuD;IAAA,IAAhByf,OAAgB,uEAAN,IAAM;IACrD,OAAO3J,KAAK,IAAIpU,IAAI,CAACC,GAAL,CAAS5B,KAAT,EAAgBC,GAAhB,IAAuByf,OAAhC,IAA2C3J,KAAK,IAAIpU,IAAI,CAACgC,GAAL,CAAS3D,KAAT,EAAgBC,GAAhB,IAAuByf,OAAlF;EACD;;EAED,SAASmC,YAAT,CAAsBtG,IAAtB,EAA4B;IAC1B,IAAI,CAACA,IAAD,IAASjF,aAAa,CAACiF,IAAI,CAACrB,IAAN,CAAtB,IAAqC5D,aAAa,CAACiF,IAAI,CAACC,MAAN,CAAtD,EAAqE;MACnE,OAAO,IAAP;IACD;;IACD,OAAO,CAACD,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACE,KAAL,GAAa,GAA1B,GAAgC,EAAjC,KACJF,IAAI,CAAC5G,MAAL,GAAc4G,IAAI,CAAC5G,MAAL,GAAc,GAA5B,GAAkC,EAD9B,IAEL4G,IAAI,CAACrB,IAFA,GAEO,KAFP,GAGLqB,IAAI,CAACC,MAHP;EAID;;EACD,SAASsG,YAAT,CAAsBjG,GAAtB,EAA2BkG,IAA3B,EAAiCC,EAAjC,EAAqCC,OAArC,EAA8CC,MAA9C,EAAsD;IACpD,IAAIC,SAAS,GAAGJ,IAAI,CAACG,MAAD,CAApB;;IACA,IAAI,CAACC,SAAL,EAAgB;MACdA,SAAS,GAAGJ,IAAI,CAACG,MAAD,CAAJ,GAAerG,GAAG,CAACuG,WAAJ,CAAgBF,MAAhB,EAAwBG,KAAnD;MACAL,EAAE,CAAC3e,IAAH,CAAQ6e,MAAR;IACD;;IACD,IAAIC,SAAS,GAAGF,OAAhB,EAAyB;MACvBA,OAAO,GAAGE,SAAV;IACD;;IACD,OAAOF,OAAP;EACD;;EACD,SAASK,YAAT,CAAsBzG,GAAtB,EAA2BN,IAA3B,EAAiCgH,aAAjC,EAAgDC,KAAhD,EAAuD;IACrDA,KAAK,GAAGA,KAAK,IAAI,EAAjB;IACA,IAAIT,IAAI,GAAGS,KAAK,CAACT,IAAN,GAAaS,KAAK,CAACT,IAAN,IAAc,EAAtC;IACA,IAAIC,EAAE,GAAGQ,KAAK,CAACC,cAAN,GAAuBD,KAAK,CAACC,cAAN,IAAwB,EAAxD;;IACA,IAAID,KAAK,CAACjH,IAAN,KAAeA,IAAnB,EAAyB;MACvBwG,IAAI,GAAGS,KAAK,CAACT,IAAN,GAAa,EAApB;MACAC,EAAE,GAAGQ,KAAK,CAACC,cAAN,GAAuB,EAA5B;MACAD,KAAK,CAACjH,IAAN,GAAaA,IAAb;IACD;;IACDM,GAAG,CAAC6G,IAAJ;IACA7G,GAAG,CAACN,IAAJ,GAAWA,IAAX;IACA,IAAI0G,OAAO,GAAG,CAAd;IACA,MAAMtK,IAAI,GAAG4K,aAAa,CAACngB,MAA3B;IACA,IAAIC,CAAJ,EAAO4Q,CAAP,EAAU0P,IAAV,EAAgBC,KAAhB,EAAuBC,WAAvB;;IACA,KAAKxgB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsV,IAAhB,EAAsBtV,CAAC,EAAvB,EAA2B;MACzBugB,KAAK,GAAGL,aAAa,CAAClgB,CAAD,CAArB;;MACA,IAAIugB,KAAK,KAAK9hB,SAAV,IAAuB8hB,KAAK,KAAK,IAAjC,IAAyCvb,OAAO,CAACub,KAAD,CAAP,KAAmB,IAAhE,EAAsE;QACpEX,OAAO,GAAGH,YAAY,CAACjG,GAAD,EAAMkG,IAAN,EAAYC,EAAZ,EAAgBC,OAAhB,EAAyBW,KAAzB,CAAtB;MACD,CAFD,MAEO,IAAIvb,OAAO,CAACub,KAAD,CAAX,EAAoB;QACzB,KAAK3P,CAAC,GAAG,CAAJ,EAAO0P,IAAI,GAAGC,KAAK,CAACxgB,MAAzB,EAAiC6Q,CAAC,GAAG0P,IAArC,EAA2C1P,CAAC,EAA5C,EAAgD;UAC9C4P,WAAW,GAAGD,KAAK,CAAC3P,CAAD,CAAnB;;UACA,IAAI4P,WAAW,KAAK/hB,SAAhB,IAA6B+hB,WAAW,KAAK,IAA7C,IAAqD,CAACxb,OAAO,CAACwb,WAAD,CAAjE,EAAgF;YAC9EZ,OAAO,GAAGH,YAAY,CAACjG,GAAD,EAAMkG,IAAN,EAAYC,EAAZ,EAAgBC,OAAhB,EAAyBY,WAAzB,CAAtB;UACD;QACF;MACF;IACF;;IACDhH,GAAG,CAACiH,OAAJ;IACA,MAAMC,KAAK,GAAGf,EAAE,CAAC5f,MAAH,GAAY,CAA1B;;IACA,IAAI2gB,KAAK,GAAGR,aAAa,CAACngB,MAA1B,EAAkC;MAChC,KAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0gB,KAAhB,EAAuB1gB,CAAC,EAAxB,EAA4B;QAC1B,OAAO0f,IAAI,CAACC,EAAE,CAAC3f,CAAD,CAAH,CAAX;MACD;;MACD2f,EAAE,CAACgB,MAAH,CAAU,CAAV,EAAaD,KAAb;IACD;;IACD,OAAOd,OAAP;EACD;;EACD,SAASgB,WAAT,CAAqBjiB,KAArB,EAA4BkiB,KAA5B,EAAmCb,KAAnC,EAA0C;IACxC,MAAMpH,gBAAgB,GAAGja,KAAK,CAACmiB,uBAA/B;IACA,MAAMC,SAAS,GAAGf,KAAK,KAAK,CAAV,GAAc1gB,IAAI,CAACgC,GAAL,CAAS0e,KAAK,GAAG,CAAjB,EAAoB,GAApB,CAAd,GAAyC,CAA3D;IACA,OAAO1gB,IAAI,CAACiE,KAAL,CAAW,CAACsd,KAAK,GAAGE,SAAT,IAAsBnI,gBAAjC,IAAqDA,gBAArD,GAAwEmI,SAA/E;EACD;;EACD,SAASC,WAAT,CAAqBC,MAArB,EAA6BzH,GAA7B,EAAkC;IAChCA,GAAG,GAAGA,GAAG,IAAIyH,MAAM,CAACC,UAAP,CAAkB,IAAlB,CAAb;IACA1H,GAAG,CAAC6G,IAAJ;IACA7G,GAAG,CAAC2H,cAAJ;IACA3H,GAAG,CAAC4H,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBH,MAAM,CAACjB,KAA3B,EAAkCiB,MAAM,CAACI,MAAzC;IACA7H,GAAG,CAACiH,OAAJ;EACD;;EACD,SAASa,SAAT,CAAmB9H,GAAnB,EAAwBrD,OAAxB,EAAiCtQ,CAAjC,EAAoCuX,CAApC,EAAuC;IACrC,IAAIte,IAAJ,EAAUyiB,OAAV,EAAmBC,OAAnB,EAA4B3J,IAA5B,EAAkC4J,YAAlC;IACA,MAAMrI,KAAK,GAAGjD,OAAO,CAACuL,UAAtB;IACA,MAAMC,QAAQ,GAAGxL,OAAO,CAACwL,QAAzB;IACA,MAAMC,MAAM,GAAGzL,OAAO,CAACyL,MAAvB;IACA,IAAIC,GAAG,GAAG,CAACF,QAAQ,IAAI,CAAb,IAAkB3F,WAA5B;;IACA,IAAI5C,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;MACtCta,IAAI,GAAGsa,KAAK,CAAClF,QAAN,EAAP;;MACA,IAAIpV,IAAI,KAAK,2BAAT,IAAwCA,IAAI,KAAK,4BAArD,EAAmF;QACjF0a,GAAG,CAAC6G,IAAJ;QACA7G,GAAG,CAACsI,SAAJ,CAAcjc,CAAd,EAAiBuX,CAAjB;QACA5D,GAAG,CAAC/T,MAAJ,CAAWoc,GAAX;QACArI,GAAG,CAACuI,SAAJ,CAAc3I,KAAd,EAAqB,CAACA,KAAK,CAAC4G,KAAP,GAAe,CAApC,EAAuC,CAAC5G,KAAK,CAACiI,MAAP,GAAgB,CAAvD,EAA0DjI,KAAK,CAAC4G,KAAhE,EAAuE5G,KAAK,CAACiI,MAA7E;QACA7H,GAAG,CAACiH,OAAJ;QACA;MACD;IACF;;IACD,IAAItD,KAAK,CAACyE,MAAD,CAAL,IAAiBA,MAAM,IAAI,CAA/B,EAAkC;MAChC;IACD;;IACDpI,GAAG,CAACwI,SAAJ;;IACA,QAAQ5I,KAAR;MACA;QACEI,GAAG,CAACyI,GAAJ,CAAQpc,CAAR,EAAWuX,CAAX,EAAcwE,MAAd,EAAsB,CAAtB,EAAyBhG,GAAzB;QACApC,GAAG,CAAC0I,SAAJ;QACA;;MACF,KAAK,UAAL;QACE1I,GAAG,CAAC2I,MAAJ,CAAWtc,CAAC,GAAGvG,IAAI,CAAC8iB,GAAL,CAASP,GAAT,IAAgBD,MAA/B,EAAuCxE,CAAC,GAAG9d,IAAI,CAAC+iB,GAAL,CAASR,GAAT,IAAgBD,MAA3D;QACAC,GAAG,IAAI1F,aAAP;QACA3C,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAGvG,IAAI,CAAC8iB,GAAL,CAASP,GAAT,IAAgBD,MAA/B,EAAuCxE,CAAC,GAAG9d,IAAI,CAAC+iB,GAAL,CAASR,GAAT,IAAgBD,MAA3D;QACAC,GAAG,IAAI1F,aAAP;QACA3C,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAGvG,IAAI,CAAC8iB,GAAL,CAASP,GAAT,IAAgBD,MAA/B,EAAuCxE,CAAC,GAAG9d,IAAI,CAAC+iB,GAAL,CAASR,GAAT,IAAgBD,MAA3D;QACApI,GAAG,CAAC0I,SAAJ;QACA;;MACF,KAAK,aAAL;QACET,YAAY,GAAGG,MAAM,GAAG,KAAxB;QACA/J,IAAI,GAAG+J,MAAM,GAAGH,YAAhB;QACAF,OAAO,GAAGjiB,IAAI,CAAC+iB,GAAL,CAASR,GAAG,GAAG3F,UAAf,IAA6BrE,IAAvC;QACA2J,OAAO,GAAGliB,IAAI,CAAC8iB,GAAL,CAASP,GAAG,GAAG3F,UAAf,IAA6BrE,IAAvC;QACA2B,GAAG,CAACyI,GAAJ,CAAQpc,CAAC,GAAG0b,OAAZ,EAAqBnE,CAAC,GAAGoE,OAAzB,EAAkCC,YAAlC,EAAgDI,GAAG,GAAGlG,EAAtD,EAA0DkG,GAAG,GAAG5F,OAAhE;QACAzC,GAAG,CAACyI,GAAJ,CAAQpc,CAAC,GAAG2b,OAAZ,EAAqBpE,CAAC,GAAGmE,OAAzB,EAAkCE,YAAlC,EAAgDI,GAAG,GAAG5F,OAAtD,EAA+D4F,GAA/D;QACArI,GAAG,CAACyI,GAAJ,CAAQpc,CAAC,GAAG0b,OAAZ,EAAqBnE,CAAC,GAAGoE,OAAzB,EAAkCC,YAAlC,EAAgDI,GAAhD,EAAqDA,GAAG,GAAG5F,OAA3D;QACAzC,GAAG,CAACyI,GAAJ,CAAQpc,CAAC,GAAG2b,OAAZ,EAAqBpE,CAAC,GAAGmE,OAAzB,EAAkCE,YAAlC,EAAgDI,GAAG,GAAG5F,OAAtD,EAA+D4F,GAAG,GAAGlG,EAArE;QACAnC,GAAG,CAAC0I,SAAJ;QACA;;MACF,KAAK,MAAL;QACE,IAAI,CAACP,QAAL,EAAe;UACb9J,IAAI,GAAGvY,IAAI,CAACijB,OAAL,GAAeX,MAAtB;UACApI,GAAG,CAACgJ,IAAJ,CAAS3c,CAAC,GAAGgS,IAAb,EAAmBuF,CAAC,GAAGvF,IAAvB,EAA6B,IAAIA,IAAjC,EAAuC,IAAIA,IAA3C;UACA;QACD;;QACDgK,GAAG,IAAI3F,UAAP;;MACF,KAAK,SAAL;QACEqF,OAAO,GAAGjiB,IAAI,CAAC+iB,GAAL,CAASR,GAAT,IAAgBD,MAA1B;QACAJ,OAAO,GAAGliB,IAAI,CAAC8iB,GAAL,CAASP,GAAT,IAAgBD,MAA1B;QACApI,GAAG,CAAC2I,MAAJ,CAAWtc,CAAC,GAAG0b,OAAf,EAAwBnE,CAAC,GAAGoE,OAA5B;QACAhI,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAG2b,OAAf,EAAwBpE,CAAC,GAAGmE,OAA5B;QACA/H,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAG0b,OAAf,EAAwBnE,CAAC,GAAGoE,OAA5B;QACAhI,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAG2b,OAAf,EAAwBpE,CAAC,GAAGmE,OAA5B;QACA/H,GAAG,CAAC0I,SAAJ;QACA;;MACF,KAAK,UAAL;QACEL,GAAG,IAAI3F,UAAP;;MACF,KAAK,OAAL;QACEqF,OAAO,GAAGjiB,IAAI,CAAC+iB,GAAL,CAASR,GAAT,IAAgBD,MAA1B;QACAJ,OAAO,GAAGliB,IAAI,CAAC8iB,GAAL,CAASP,GAAT,IAAgBD,MAA1B;QACApI,GAAG,CAAC2I,MAAJ,CAAWtc,CAAC,GAAG0b,OAAf,EAAwBnE,CAAC,GAAGoE,OAA5B;QACAhI,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAG0b,OAAf,EAAwBnE,CAAC,GAAGoE,OAA5B;QACAhI,GAAG,CAAC2I,MAAJ,CAAWtc,CAAC,GAAG2b,OAAf,EAAwBpE,CAAC,GAAGmE,OAA5B;QACA/H,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAG2b,OAAf,EAAwBpE,CAAC,GAAGmE,OAA5B;QACA;;MACF,KAAK,MAAL;QACEA,OAAO,GAAGjiB,IAAI,CAAC+iB,GAAL,CAASR,GAAT,IAAgBD,MAA1B;QACAJ,OAAO,GAAGliB,IAAI,CAAC8iB,GAAL,CAASP,GAAT,IAAgBD,MAA1B;QACApI,GAAG,CAAC2I,MAAJ,CAAWtc,CAAC,GAAG0b,OAAf,EAAwBnE,CAAC,GAAGoE,OAA5B;QACAhI,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAG0b,OAAf,EAAwBnE,CAAC,GAAGoE,OAA5B;QACAhI,GAAG,CAAC2I,MAAJ,CAAWtc,CAAC,GAAG2b,OAAf,EAAwBpE,CAAC,GAAGmE,OAA5B;QACA/H,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAG2b,OAAf,EAAwBpE,CAAC,GAAGmE,OAA5B;QACAM,GAAG,IAAI3F,UAAP;QACAqF,OAAO,GAAGjiB,IAAI,CAAC+iB,GAAL,CAASR,GAAT,IAAgBD,MAA1B;QACAJ,OAAO,GAAGliB,IAAI,CAAC8iB,GAAL,CAASP,GAAT,IAAgBD,MAA1B;QACApI,GAAG,CAAC2I,MAAJ,CAAWtc,CAAC,GAAG0b,OAAf,EAAwBnE,CAAC,GAAGoE,OAA5B;QACAhI,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAG0b,OAAf,EAAwBnE,CAAC,GAAGoE,OAA5B;QACAhI,GAAG,CAAC2I,MAAJ,CAAWtc,CAAC,GAAG2b,OAAf,EAAwBpE,CAAC,GAAGmE,OAA5B;QACA/H,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAG2b,OAAf,EAAwBpE,CAAC,GAAGmE,OAA5B;QACA;;MACF,KAAK,MAAL;QACEA,OAAO,GAAGjiB,IAAI,CAAC+iB,GAAL,CAASR,GAAT,IAAgBD,MAA1B;QACAJ,OAAO,GAAGliB,IAAI,CAAC8iB,GAAL,CAASP,GAAT,IAAgBD,MAA1B;QACApI,GAAG,CAAC2I,MAAJ,CAAWtc,CAAC,GAAG0b,OAAf,EAAwBnE,CAAC,GAAGoE,OAA5B;QACAhI,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAG0b,OAAf,EAAwBnE,CAAC,GAAGoE,OAA5B;QACA;;MACF,KAAK,MAAL;QACEhI,GAAG,CAAC2I,MAAJ,CAAWtc,CAAX,EAAcuX,CAAd;QACA5D,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAGvG,IAAI,CAAC+iB,GAAL,CAASR,GAAT,IAAgBD,MAA/B,EAAuCxE,CAAC,GAAG9d,IAAI,CAAC8iB,GAAL,CAASP,GAAT,IAAgBD,MAA3D;QACA;IA1EF;;IA4EApI,GAAG,CAACiJ,IAAJ;;IACA,IAAItM,OAAO,CAACuM,WAAR,GAAsB,CAA1B,EAA6B;MAC3BlJ,GAAG,CAACmJ,MAAJ;IACD;EACF;;EACD,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,MAArC,EAA6C;IAC3CA,MAAM,GAAGA,MAAM,IAAI,GAAnB;IACA,OAAO,CAACD,IAAD,IAAUD,KAAK,IAAIA,KAAK,CAAChd,CAAN,GAAUid,IAAI,CAAChlB,IAAL,GAAYilB,MAA/B,IAAyCF,KAAK,CAAChd,CAAN,GAAUid,IAAI,CAAC/kB,KAAL,GAAaglB,MAAhE,IACjBF,KAAK,CAACzF,CAAN,GAAU0F,IAAI,CAACE,GAAL,GAAWD,MADJ,IACcF,KAAK,CAACzF,CAAN,GAAU0F,IAAI,CAACG,MAAL,GAAcF,MADvD;EAED;;EACD,SAASG,QAAT,CAAkB1J,GAAlB,EAAuBsJ,IAAvB,EAA6B;IAC3BtJ,GAAG,CAAC6G,IAAJ;IACA7G,GAAG,CAACwI,SAAJ;IACAxI,GAAG,CAACgJ,IAAJ,CAASM,IAAI,CAAChlB,IAAd,EAAoBglB,IAAI,CAACE,GAAzB,EAA8BF,IAAI,CAAC/kB,KAAL,GAAa+kB,IAAI,CAAChlB,IAAhD,EAAsDglB,IAAI,CAACG,MAAL,GAAcH,IAAI,CAACE,GAAzE;IACAxJ,GAAG,CAAC2J,IAAJ;EACD;;EACD,SAASC,UAAT,CAAoB5J,GAApB,EAAyB;IACvBA,GAAG,CAACiH,OAAJ;EACD;;EACD,SAAS4C,cAAT,CAAwB7J,GAAxB,EAA6B1C,QAA7B,EAAuClB,MAAvC,EAA+C0N,IAA/C,EAAqDzJ,IAArD,EAA2D;IACzD,IAAI,CAAC/C,QAAL,EAAe;MACb,OAAO0C,GAAG,CAAC8I,MAAJ,CAAW1M,MAAM,CAAC/P,CAAlB,EAAqB+P,MAAM,CAACwH,CAA5B,CAAP;IACD;;IACD,IAAIvD,IAAI,KAAK,QAAb,EAAuB;MACrB,MAAM0J,QAAQ,GAAG,CAACzM,QAAQ,CAACjR,CAAT,GAAa+P,MAAM,CAAC/P,CAArB,IAA0B,GAA3C;MACA2T,GAAG,CAAC8I,MAAJ,CAAWiB,QAAX,EAAqBzM,QAAQ,CAACsG,CAA9B;MACA5D,GAAG,CAAC8I,MAAJ,CAAWiB,QAAX,EAAqB3N,MAAM,CAACwH,CAA5B;IACD,CAJD,MAIO,IAAIvD,IAAI,KAAK,OAAT,KAAqB,CAAC,CAACyJ,IAA3B,EAAiC;MACtC9J,GAAG,CAAC8I,MAAJ,CAAWxL,QAAQ,CAACjR,CAApB,EAAuB+P,MAAM,CAACwH,CAA9B;IACD,CAFM,MAEA;MACL5D,GAAG,CAAC8I,MAAJ,CAAW1M,MAAM,CAAC/P,CAAlB,EAAqBiR,QAAQ,CAACsG,CAA9B;IACD;;IACD5D,GAAG,CAAC8I,MAAJ,CAAW1M,MAAM,CAAC/P,CAAlB,EAAqB+P,MAAM,CAACwH,CAA5B;EACD;;EACD,SAASoG,cAAT,CAAwBhK,GAAxB,EAA6B1C,QAA7B,EAAuClB,MAAvC,EAA+C0N,IAA/C,EAAqD;IACnD,IAAI,CAACxM,QAAL,EAAe;MACb,OAAO0C,GAAG,CAAC8I,MAAJ,CAAW1M,MAAM,CAAC/P,CAAlB,EAAqB+P,MAAM,CAACwH,CAA5B,CAAP;IACD;;IACD5D,GAAG,CAACiK,aAAJ,CACEH,IAAI,GAAGxM,QAAQ,CAAC4M,IAAZ,GAAmB5M,QAAQ,CAAC6M,IADlC,EAEEL,IAAI,GAAGxM,QAAQ,CAAC8M,IAAZ,GAAmB9M,QAAQ,CAAC+M,IAFlC,EAGEP,IAAI,GAAG1N,MAAM,CAAC+N,IAAV,GAAiB/N,MAAM,CAAC8N,IAH9B,EAIEJ,IAAI,GAAG1N,MAAM,CAACiO,IAAV,GAAiBjO,MAAM,CAACgO,IAJ9B,EAKEhO,MAAM,CAAC/P,CALT,EAME+P,MAAM,CAACwH,CANT;EAOD;;EACD,SAAS0G,UAAT,CAAoBtK,GAApB,EAAyBuK,IAAzB,EAA+Ble,CAA/B,EAAkCuX,CAAlC,EAAqClE,IAArC,EAAsD;IAAA,IAAX8K,IAAW,uEAAJ,EAAI;IACpD,MAAMC,KAAK,GAAGjf,OAAO,CAAC+e,IAAD,CAAP,GAAgBA,IAAhB,GAAuB,CAACA,IAAD,CAArC;IACA,MAAMpB,MAAM,GAAGqB,IAAI,CAACE,WAAL,GAAmB,CAAnB,IAAwBF,IAAI,CAACG,WAAL,KAAqB,EAA5D;IACA,IAAInkB,CAAJ,EAAOokB,IAAP;IACA5K,GAAG,CAAC6G,IAAJ;IACA7G,GAAG,CAACN,IAAJ,GAAWA,IAAI,CAAC2G,MAAhB;IACAwE,aAAa,CAAC7K,GAAD,EAAMwK,IAAN,CAAb;;IACA,KAAKhkB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGikB,KAAK,CAAClkB,MAAtB,EAA8B,EAAEC,CAAhC,EAAmC;MACjCokB,IAAI,GAAGH,KAAK,CAACjkB,CAAD,CAAZ;;MACA,IAAI2iB,MAAJ,EAAY;QACV,IAAIqB,IAAI,CAACG,WAAT,EAAsB;UACpB3K,GAAG,CAAC8K,WAAJ,GAAkBN,IAAI,CAACG,WAAvB;QACD;;QACD,IAAI,CAAClQ,aAAa,CAAC+P,IAAI,CAACE,WAAN,CAAlB,EAAsC;UACpC1K,GAAG,CAAC+K,SAAJ,GAAgBP,IAAI,CAACE,WAArB;QACD;;QACD1K,GAAG,CAACgL,UAAJ,CAAeJ,IAAf,EAAqBve,CAArB,EAAwBuX,CAAxB,EAA2B4G,IAAI,CAACS,QAAhC;MACD;;MACDjL,GAAG,CAACkL,QAAJ,CAAaN,IAAb,EAAmBve,CAAnB,EAAsBuX,CAAtB,EAAyB4G,IAAI,CAACS,QAA9B;MACAE,YAAY,CAACnL,GAAD,EAAM3T,CAAN,EAASuX,CAAT,EAAYgH,IAAZ,EAAkBJ,IAAlB,CAAZ;MACA5G,CAAC,IAAIlE,IAAI,CAACG,UAAV;IACD;;IACDG,GAAG,CAACiH,OAAJ;EACD;;EACD,SAAS4D,aAAT,CAAuB7K,GAAvB,EAA4BwK,IAA5B,EAAkC;IAChC,IAAIA,IAAI,CAACY,WAAT,EAAsB;MACpBpL,GAAG,CAACsI,SAAJ,CAAckC,IAAI,CAACY,WAAL,CAAiB,CAAjB,CAAd,EAAmCZ,IAAI,CAACY,WAAL,CAAiB,CAAjB,CAAnC;IACD;;IACD,IAAI,CAAC3Q,aAAa,CAAC+P,IAAI,CAACrC,QAAN,CAAlB,EAAmC;MACjCnI,GAAG,CAAC/T,MAAJ,CAAWue,IAAI,CAACrC,QAAhB;IACD;;IACD,IAAIqC,IAAI,CAAC3R,KAAT,EAAgB;MACdmH,GAAG,CAACqL,SAAJ,GAAgBb,IAAI,CAAC3R,KAArB;IACD;;IACD,IAAI2R,IAAI,CAACc,SAAT,EAAoB;MAClBtL,GAAG,CAACsL,SAAJ,GAAgBd,IAAI,CAACc,SAArB;IACD;;IACD,IAAId,IAAI,CAACe,YAAT,EAAuB;MACrBvL,GAAG,CAACuL,YAAJ,GAAmBf,IAAI,CAACe,YAAxB;IACD;EACF;;EACD,SAASJ,YAAT,CAAsBnL,GAAtB,EAA2B3T,CAA3B,EAA8BuX,CAA9B,EAAiCgH,IAAjC,EAAuCJ,IAAvC,EAA6C;IAC3C,IAAIA,IAAI,CAACgB,aAAL,IAAsBhB,IAAI,CAACiB,SAA/B,EAA0C;MACxC,MAAMC,OAAO,GAAG1L,GAAG,CAACuG,WAAJ,CAAgBqE,IAAhB,CAAhB;MACA,MAAMtmB,IAAI,GAAG+H,CAAC,GAAGqf,OAAO,CAACC,qBAAzB;MACA,MAAMpnB,KAAK,GAAG8H,CAAC,GAAGqf,OAAO,CAACE,sBAA1B;MACA,MAAMpC,GAAG,GAAG5F,CAAC,GAAG8H,OAAO,CAACG,uBAAxB;MACA,MAAMpC,MAAM,GAAG7F,CAAC,GAAG8H,OAAO,CAACI,wBAA3B;MACA,MAAMC,WAAW,GAAGvB,IAAI,CAACgB,aAAL,GAAqB,CAAChC,GAAG,GAAGC,MAAP,IAAiB,CAAtC,GAA0CA,MAA9D;MACAzJ,GAAG,CAAC8K,WAAJ,GAAkB9K,GAAG,CAACqL,SAAtB;MACArL,GAAG,CAACwI,SAAJ;MACAxI,GAAG,CAAC+K,SAAJ,GAAgBP,IAAI,CAACwB,eAAL,IAAwB,CAAxC;MACAhM,GAAG,CAAC2I,MAAJ,CAAWrkB,IAAX,EAAiBynB,WAAjB;MACA/L,GAAG,CAAC8I,MAAJ,CAAWvkB,KAAX,EAAkBwnB,WAAlB;MACA/L,GAAG,CAACmJ,MAAJ;IACD;EACF;;EACD,SAAS8C,kBAAT,CAA4BjM,GAA5B,EAAiCgJ,IAAjC,EAAuC;IACrC,MAAM;MAAC3c,CAAD;MAAIuX,CAAJ;MAAOzY,CAAP;MAAUjB,CAAV;MAAake;IAAb,IAAuBY,IAA7B;IACAhJ,GAAG,CAACyI,GAAJ,CAAQpc,CAAC,GAAG+b,MAAM,CAAC8D,OAAnB,EAA4BtI,CAAC,GAAGwE,MAAM,CAAC8D,OAAvC,EAAgD9D,MAAM,CAAC8D,OAAvD,EAAgE,CAACzJ,OAAjE,EAA0EN,EAA1E,EAA8E,IAA9E;IACAnC,GAAG,CAAC8I,MAAJ,CAAWzc,CAAX,EAAcuX,CAAC,GAAG1Z,CAAJ,GAAQke,MAAM,CAAC+D,UAA7B;IACAnM,GAAG,CAACyI,GAAJ,CAAQpc,CAAC,GAAG+b,MAAM,CAAC+D,UAAnB,EAA+BvI,CAAC,GAAG1Z,CAAJ,GAAQke,MAAM,CAAC+D,UAA9C,EAA0D/D,MAAM,CAAC+D,UAAjE,EAA6EhK,EAA7E,EAAiFM,OAAjF,EAA0F,IAA1F;IACAzC,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAGlB,CAAJ,GAAQid,MAAM,CAACgE,WAA1B,EAAuCxI,CAAC,GAAG1Z,CAA3C;IACA8V,GAAG,CAACyI,GAAJ,CAAQpc,CAAC,GAAGlB,CAAJ,GAAQid,MAAM,CAACgE,WAAvB,EAAoCxI,CAAC,GAAG1Z,CAAJ,GAAQke,MAAM,CAACgE,WAAnD,EAAgEhE,MAAM,CAACgE,WAAvE,EAAoF3J,OAApF,EAA6F,CAA7F,EAAgG,IAAhG;IACAzC,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAGlB,CAAf,EAAkByY,CAAC,GAAGwE,MAAM,CAACiE,QAA7B;IACArM,GAAG,CAACyI,GAAJ,CAAQpc,CAAC,GAAGlB,CAAJ,GAAQid,MAAM,CAACiE,QAAvB,EAAiCzI,CAAC,GAAGwE,MAAM,CAACiE,QAA5C,EAAsDjE,MAAM,CAACiE,QAA7D,EAAuE,CAAvE,EAA0E,CAAC5J,OAA3E,EAAoF,IAApF;IACAzC,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAG+b,MAAM,CAAC8D,OAAtB,EAA+BtI,CAA/B;EACD;;EAED,SAAS0I,OAAT,CAAiBC,KAAjB,EAAwBrS,KAAxB,EAA+BsS,GAA/B,EAAoC;IAClCA,GAAG,GAAGA,GAAG,KAAMtQ,KAAD,IAAWqQ,KAAK,CAACrQ,KAAD,CAAL,GAAehC,KAA/B,CAAT;;IACA,IAAIuS,EAAE,GAAGF,KAAK,CAAChmB,MAAN,GAAe,CAAxB;IACA,IAAImmB,EAAE,GAAG,CAAT;IACA,IAAIC,GAAJ;;IACA,OAAOF,EAAE,GAAGC,EAAL,GAAU,CAAjB,EAAoB;MAClBC,GAAG,GAAID,EAAE,GAAGD,EAAN,IAAa,CAAnB;;MACA,IAAID,GAAG,CAACG,GAAD,CAAP,EAAc;QACZD,EAAE,GAAGC,GAAL;MACD,CAFD,MAEO;QACLF,EAAE,GAAGE,GAAL;MACD;IACF;;IACD,OAAO;MAACD,EAAD;MAAKD;IAAL,CAAP;EACD;;EACD,MAAMG,YAAY,GAAG,CAACL,KAAD,EAAQ/P,GAAR,EAAatC,KAAb,KACnBoS,OAAO,CAACC,KAAD,EAAQrS,KAAR,EAAegC,KAAK,IAAIqQ,KAAK,CAACrQ,KAAD,CAAL,CAAaM,GAAb,IAAoBtC,KAA5C,CADT;;EAEA,MAAM2S,aAAa,GAAG,CAACN,KAAD,EAAQ/P,GAAR,EAAatC,KAAb,KACpBoS,OAAO,CAACC,KAAD,EAAQrS,KAAR,EAAegC,KAAK,IAAIqQ,KAAK,CAACrQ,KAAD,CAAL,CAAaM,GAAb,KAAqBtC,KAA7C,CADT;;EAEA,SAAS4S,cAAT,CAAwBjO,MAAxB,EAAgC9Y,GAAhC,EAAqC+B,GAArC,EAA0C;IACxC,IAAI3D,KAAK,GAAG,CAAZ;IACA,IAAIC,GAAG,GAAGya,MAAM,CAACtY,MAAjB;;IACA,OAAOpC,KAAK,GAAGC,GAAR,IAAeya,MAAM,CAAC1a,KAAD,CAAN,GAAgB4B,GAAtC,EAA2C;MACzC5B,KAAK;IACN;;IACD,OAAOC,GAAG,GAAGD,KAAN,IAAe0a,MAAM,CAACza,GAAG,GAAG,CAAP,CAAN,GAAkB0D,GAAxC,EAA6C;MAC3C1D,GAAG;IACJ;;IACD,OAAOD,KAAK,GAAG,CAAR,IAAaC,GAAG,GAAGya,MAAM,CAACtY,MAA1B,GACHsY,MAAM,CAACvb,KAAP,CAAaa,KAAb,EAAoBC,GAApB,CADG,GAEHya,MAFJ;EAGD;;EACD,MAAMkO,WAAW,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,QAAzB,EAAmC,SAAnC,CAApB;;EACA,SAASC,iBAAT,CAA2B9I,KAA3B,EAAkC+I,QAAlC,EAA4C;IAC1C,IAAI/I,KAAK,CAACgJ,QAAV,EAAoB;MAClBhJ,KAAK,CAACgJ,QAAN,CAAe1nB,SAAf,CAAyBgC,IAAzB,CAA8BylB,QAA9B;;MACA;IACD;;IACD/V,MAAM,CAACiW,cAAP,CAAsBjJ,KAAtB,EAA6B,UAA7B,EAAyC;MACvCkJ,YAAY,EAAE,IADyB;MAEvCxL,UAAU,EAAE,KAF2B;MAGvC1H,KAAK,EAAE;QACL1U,SAAS,EAAE,CAACynB,QAAD;MADN;IAHgC,CAAzC;IAOAF,WAAW,CAACpnB,OAAZ,CAAqB6W,GAAD,IAAS;MAC3B,MAAM6Q,MAAM,GAAG,YAAYrP,WAAW,CAACxB,GAAD,CAAtC;;MACA,MAAM8Q,IAAI,GAAGpJ,KAAK,CAAC1H,GAAD,CAAlB;MACAtF,MAAM,CAACiW,cAAP,CAAsBjJ,KAAtB,EAA6B1H,GAA7B,EAAkC;QAChC4Q,YAAY,EAAE,IADkB;QAEhCxL,UAAU,EAAE,KAFoB;;QAGhC1H,KAAK,GAAU;UAAA,mCAAN/W,IAAM;YAANA,IAAM;UAAA;;UACb,MAAMoqB,GAAG,GAAGD,IAAI,CAAC5pB,KAAL,CAAW,IAAX,EAAiBP,IAAjB,CAAZ;;UACA+gB,KAAK,CAACgJ,QAAN,CAAe1nB,SAAf,CAAyBG,OAAzB,CAAkC6nB,MAAD,IAAY;YAC3C,IAAI,OAAOA,MAAM,CAACH,MAAD,CAAb,KAA0B,UAA9B,EAA0C;cACxCG,MAAM,CAACH,MAAD,CAAN,CAAe,GAAGlqB,IAAlB;YACD;UACF,CAJD;;UAKA,OAAOoqB,GAAP;QACD;;MAX+B,CAAlC;IAaD,CAhBD;EAiBD;;EACD,SAASE,mBAAT,CAA6BvJ,KAA7B,EAAoC+I,QAApC,EAA8C;IAC5C,MAAMS,IAAI,GAAGxJ,KAAK,CAACgJ,QAAnB;;IACA,IAAI,CAACQ,IAAL,EAAW;MACT;IACD;;IACD,MAAMloB,SAAS,GAAGkoB,IAAI,CAACloB,SAAvB;IACA,MAAM0W,KAAK,GAAG1W,SAAS,CAACiX,OAAV,CAAkBwQ,QAAlB,CAAd;;IACA,IAAI/Q,KAAK,KAAK,CAAC,CAAf,EAAkB;MAChB1W,SAAS,CAAC2hB,MAAV,CAAiBjL,KAAjB,EAAwB,CAAxB;IACD;;IACD,IAAI1W,SAAS,CAACe,MAAV,GAAmB,CAAvB,EAA0B;MACxB;IACD;;IACDwmB,WAAW,CAACpnB,OAAZ,CAAqB6W,GAAD,IAAS;MAC3B,OAAO0H,KAAK,CAAC1H,GAAD,CAAZ;IACD,CAFD;IAGA,OAAO0H,KAAK,CAACgJ,QAAb;EACD;;EACD,SAASS,YAAT,CAAsBrnB,KAAtB,EAA6B;IAC3B,MAAMc,GAAG,GAAG,IAAIwmB,GAAJ,EAAZ;IACA,IAAIpnB,CAAJ,EAAOsV,IAAP;;IACA,KAAKtV,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGxV,KAAK,CAACC,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2C,EAAEtV,CAA7C,EAAgD;MAC9CY,GAAG,CAACK,GAAJ,CAAQnB,KAAK,CAACE,CAAD,CAAb;IACD;;IACD,IAAIY,GAAG,CAACiX,IAAJ,KAAavC,IAAjB,EAAuB;MACrB,OAAOxV,KAAP;IACD;;IACD,OAAOlD,KAAK,CAACyqB,IAAN,CAAWzmB,GAAX,CAAP;EACD;;EAED,SAAS0mB,eAAT,GAA2B;IACzB,OAAO,OAAOnrB,MAAP,KAAkB,WAAlB,IAAiC,OAAOorB,QAAP,KAAoB,WAA5D;EACD;;EACD,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;IAC/B,IAAIC,MAAM,GAAGD,OAAO,CAACE,UAArB;;IACA,IAAID,MAAM,IAAIA,MAAM,CAACxT,QAAP,OAAsB,qBAApC,EAA2D;MACzDwT,MAAM,GAAGA,MAAM,CAACE,IAAhB;IACD;;IACD,OAAOF,MAAP;EACD;;EACD,SAASG,aAAT,CAAuBC,UAAvB,EAAmC5P,IAAnC,EAAyC6P,cAAzC,EAAyD;IACvD,IAAIC,aAAJ;;IACA,IAAI,OAAOF,UAAP,KAAsB,QAA1B,EAAoC;MAClCE,aAAa,GAAGhX,QAAQ,CAAC8W,UAAD,EAAa,EAAb,CAAxB;;MACA,IAAIA,UAAU,CAAC7R,OAAX,CAAmB,GAAnB,MAA4B,CAAC,CAAjC,EAAoC;QAClC+R,aAAa,GAAGA,aAAa,GAAG,GAAhB,GAAsB9P,IAAI,CAACyP,UAAL,CAAgBI,cAAhB,CAAtC;MACD;IACF,CALD,MAKO;MACLC,aAAa,GAAGF,UAAhB;IACD;;IACD,OAAOE,aAAP;EACD;;EACD,MAAMC,gBAAgB,GAAIC,OAAD,IAAa/rB,MAAM,CAAC8rB,gBAAP,CAAwBC,OAAxB,EAAiC,IAAjC,CAAtC;;EACA,SAASC,QAAT,CAAkBC,EAAlB,EAAsBzK,QAAtB,EAAgC;IAC9B,OAAOsK,gBAAgB,CAACG,EAAD,CAAhB,CAAqBC,gBAArB,CAAsC1K,QAAtC,CAAP;EACD;;EACD,MAAM2K,SAAS,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAAlB;;EACA,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCpP,KAApC,EAA2CqP,MAA3C,EAAmD;IACjD,MAAM1L,MAAM,GAAG,EAAf;IACA0L,MAAM,GAAGA,MAAM,GAAG,MAAMA,MAAT,GAAkB,EAAjC;;IACA,KAAK,IAAIzoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1B,MAAMuX,GAAG,GAAG+Q,SAAS,CAACtoB,CAAD,CAArB;MACA+c,MAAM,CAACxF,GAAD,CAAN,GAAczC,UAAU,CAAC0T,MAAM,CAACpP,KAAK,GAAG,GAAR,GAAc7B,GAAd,GAAoBkR,MAArB,CAAP,CAAV,IAAkD,CAAhE;IACD;;IACD1L,MAAM,CAACiD,KAAP,GAAejD,MAAM,CAACjf,IAAP,GAAcif,MAAM,CAAChf,KAApC;IACAgf,MAAM,CAACsE,MAAP,GAAgBtE,MAAM,CAACiG,GAAP,GAAajG,MAAM,CAACkG,MAApC;IACA,OAAOlG,MAAP;EACD;;EACD,MAAM2L,YAAY,GAAG,CAAC7iB,CAAD,EAAIuX,CAAJ,EAAOxH,MAAP,KAAkB,CAAC/P,CAAC,GAAG,CAAJ,IAASuX,CAAC,GAAG,CAAd,MAAqB,CAACxH,MAAD,IAAW,CAACA,MAAM,CAAC+S,UAAxC,CAAvC;;EACA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC5H,MAAhC,EAAwC;IACtC,MAAMze,CAAC,GAAGqmB,GAAG,CAACC,MAAJ,IAAcD,GAAxB;IACA,MAAME,OAAO,GAAGvmB,CAAC,CAACumB,OAAlB;IACA,MAAMpT,MAAM,GAAGoT,OAAO,IAAIA,OAAO,CAAChpB,MAAnB,GAA4BgpB,OAAO,CAAC,CAAD,CAAnC,GAAyCvmB,CAAxD;IACA,MAAM;MAACwmB,OAAD;MAAUC;IAAV,IAAqBtT,MAA3B;IACA,IAAIuT,GAAG,GAAG,KAAV;IACA,IAAIrjB,CAAJ,EAAOuX,CAAP;;IACA,IAAIsL,YAAY,CAACM,OAAD,EAAUC,OAAV,EAAmBzmB,CAAC,CAACoT,MAArB,CAAhB,EAA8C;MAC5C/P,CAAC,GAAGmjB,OAAJ;MACA5L,CAAC,GAAG6L,OAAJ;IACD,CAHD,MAGO;MACL,MAAMzG,IAAI,GAAGvB,MAAM,CAACkI,qBAAP,EAAb;MACAtjB,CAAC,GAAG8P,MAAM,CAACyT,OAAP,GAAiB5G,IAAI,CAAC1kB,IAA1B;MACAsf,CAAC,GAAGzH,MAAM,CAAC0T,OAAP,GAAiB7G,IAAI,CAACQ,GAA1B;MACAkG,GAAG,GAAG,IAAN;IACD;;IACD,OAAO;MAACrjB,CAAD;MAAIuX,CAAJ;MAAO8L;IAAP,CAAP;EACD;;EACD,SAASI,qBAAT,CAA+BT,GAA/B,EAAoClqB,KAApC,EAA2C;IACzC,MAAM;MAACsiB,MAAD;MAASH;IAAT,IAAoCniB,KAA1C;IACA,MAAMya,KAAK,GAAG6O,gBAAgB,CAAChH,MAAD,CAA9B;IACA,MAAMsI,SAAS,GAAGnQ,KAAK,CAACoQ,SAAN,KAAoB,YAAtC;IACA,MAAMC,QAAQ,GAAGlB,kBAAkB,CAACnP,KAAD,EAAQ,SAAR,CAAnC;IACA,MAAMsQ,OAAO,GAAGnB,kBAAkB,CAACnP,KAAD,EAAQ,QAAR,EAAkB,OAAlB,CAAlC;IACA,MAAM;MAACvT,CAAD;MAAIuX,CAAJ;MAAO8L;IAAP,IAAcN,iBAAiB,CAACC,GAAD,EAAM5H,MAAN,CAArC;IACA,MAAMM,OAAO,GAAGkI,QAAQ,CAAC3rB,IAAT,IAAiBorB,GAAG,IAAIQ,OAAO,CAAC5rB,IAAhC,CAAhB;IACA,MAAM0jB,OAAO,GAAGiI,QAAQ,CAACzG,GAAT,IAAgBkG,GAAG,IAAIQ,OAAO,CAAC1G,GAA/B,CAAhB;IACA,IAAI;MAAChD,KAAD;MAAQqB;IAAR,IAAkB1iB,KAAtB;;IACA,IAAI4qB,SAAJ,EAAe;MACbvJ,KAAK,IAAIyJ,QAAQ,CAACzJ,KAAT,GAAiB0J,OAAO,CAAC1J,KAAlC;MACAqB,MAAM,IAAIoI,QAAQ,CAACpI,MAAT,GAAkBqI,OAAO,CAACrI,MAApC;IACD;;IACD,OAAO;MACLxb,CAAC,EAAEvG,IAAI,CAACiE,KAAL,CAAW,CAACsC,CAAC,GAAG0b,OAAL,IAAgBvB,KAAhB,GAAwBiB,MAAM,CAACjB,KAA/B,GAAuCc,uBAAlD,CADE;MAEL1D,CAAC,EAAE9d,IAAI,CAACiE,KAAL,CAAW,CAAC6Z,CAAC,GAAGoE,OAAL,IAAgBH,MAAhB,GAAyBJ,MAAM,CAACI,MAAhC,GAAyCP,uBAApD;IAFE,CAAP;EAID;;EACD,SAAS6I,gBAAT,CAA0B1I,MAA1B,EAAkCjB,KAAlC,EAAyCqB,MAAzC,EAAiD;IAC/C,IAAIoD,QAAJ,EAAcmF,SAAd;;IACA,IAAI5J,KAAK,KAAKvhB,SAAV,IAAuB4iB,MAAM,KAAK5iB,SAAtC,EAAiD;MAC/C,MAAMorB,SAAS,GAAGrC,cAAc,CAACvG,MAAD,CAAhC;;MACA,IAAI,CAAC4I,SAAL,EAAgB;QACd7J,KAAK,GAAGiB,MAAM,CAAC6I,WAAf;QACAzI,MAAM,GAAGJ,MAAM,CAAC8I,YAAhB;MACD,CAHD,MAGO;QACL,MAAMvH,IAAI,GAAGqH,SAAS,CAACV,qBAAV,EAAb;QACA,MAAMa,cAAc,GAAG/B,gBAAgB,CAAC4B,SAAD,CAAvC;QACA,MAAMI,eAAe,GAAG1B,kBAAkB,CAACyB,cAAD,EAAiB,QAAjB,EAA2B,OAA3B,CAA1C;QACA,MAAME,gBAAgB,GAAG3B,kBAAkB,CAACyB,cAAD,EAAiB,SAAjB,CAA3C;QACAhK,KAAK,GAAGwC,IAAI,CAACxC,KAAL,GAAakK,gBAAgB,CAAClK,KAA9B,GAAsCiK,eAAe,CAACjK,KAA9D;QACAqB,MAAM,GAAGmB,IAAI,CAACnB,MAAL,GAAc6I,gBAAgB,CAAC7I,MAA/B,GAAwC4I,eAAe,CAAC5I,MAAjE;QACAoD,QAAQ,GAAGoD,aAAa,CAACmC,cAAc,CAACvF,QAAhB,EAA0BoF,SAA1B,EAAqC,aAArC,CAAxB;QACAD,SAAS,GAAG/B,aAAa,CAACmC,cAAc,CAACJ,SAAhB,EAA2BC,SAA3B,EAAsC,cAAtC,CAAzB;MACD;IACF;;IACD,OAAO;MACL7J,KADK;MAELqB,MAFK;MAGLoD,QAAQ,EAAEA,QAAQ,IAAI3I,QAHjB;MAIL8N,SAAS,EAAEA,SAAS,IAAI9N;IAJnB,CAAP;EAMD;;EACD,MAAMqO,MAAM,GAAGpnB,CAAC,IAAIzD,IAAI,CAACiE,KAAL,CAAWR,CAAC,GAAG,EAAf,IAAqB,EAAzC;;EACA,SAASqnB,cAAT,CAAwBnJ,MAAxB,EAAgCoJ,OAAhC,EAAyCC,QAAzC,EAAmDC,WAAnD,EAAgE;IAC9D,MAAMnR,KAAK,GAAG6O,gBAAgB,CAAChH,MAAD,CAA9B;IACA,MAAMuJ,OAAO,GAAGjC,kBAAkB,CAACnP,KAAD,EAAQ,QAAR,CAAlC;IACA,MAAMqL,QAAQ,GAAGoD,aAAa,CAACzO,KAAK,CAACqL,QAAP,EAAiBxD,MAAjB,EAAyB,aAAzB,CAAb,IAAwDnF,QAAzE;IACA,MAAM8N,SAAS,GAAG/B,aAAa,CAACzO,KAAK,CAACwQ,SAAP,EAAkB3I,MAAlB,EAA0B,cAA1B,CAAb,IAA0DnF,QAA5E;IACA,MAAM2O,aAAa,GAAGd,gBAAgB,CAAC1I,MAAD,EAASoJ,OAAT,EAAkBC,QAAlB,CAAtC;IACA,IAAI;MAACtK,KAAD;MAAQqB;IAAR,IAAkBoJ,aAAtB;;IACA,IAAIrR,KAAK,CAACoQ,SAAN,KAAoB,aAAxB,EAAuC;MACrC,MAAME,OAAO,GAAGnB,kBAAkB,CAACnP,KAAD,EAAQ,QAAR,EAAkB,OAAlB,CAAlC;MACA,MAAMqQ,QAAQ,GAAGlB,kBAAkB,CAACnP,KAAD,EAAQ,SAAR,CAAnC;MACA4G,KAAK,IAAIyJ,QAAQ,CAACzJ,KAAT,GAAiB0J,OAAO,CAAC1J,KAAlC;MACAqB,MAAM,IAAIoI,QAAQ,CAACpI,MAAT,GAAkBqI,OAAO,CAACrI,MAApC;IACD;;IACDrB,KAAK,GAAG1gB,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAY0e,KAAK,GAAGwK,OAAO,CAACxK,KAA5B,CAAR;IACAqB,MAAM,GAAG/hB,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAYipB,WAAW,GAAGjrB,IAAI,CAACqd,KAAL,CAAWqD,KAAK,GAAGuK,WAAnB,CAAH,GAAqClJ,MAAM,GAAGmJ,OAAO,CAACnJ,MAA7E,CAAT;IACArB,KAAK,GAAGmK,MAAM,CAAC7qB,IAAI,CAACC,GAAL,CAASygB,KAAT,EAAgByE,QAAhB,EAA0BgG,aAAa,CAAChG,QAAxC,CAAD,CAAd;IACApD,MAAM,GAAG8I,MAAM,CAAC7qB,IAAI,CAACC,GAAL,CAAS8hB,MAAT,EAAiBuI,SAAjB,EAA4Ba,aAAa,CAACb,SAA1C,CAAD,CAAf;;IACA,IAAI5J,KAAK,IAAI,CAACqB,MAAd,EAAsB;MACpBA,MAAM,GAAG8I,MAAM,CAACnK,KAAK,GAAG,CAAT,CAAf;IACD;;IACD,OAAO;MACLA,KADK;MAELqB;IAFK,CAAP;EAID;;EACD,SAASqJ,WAAT,CAAqB/rB,KAArB,EAA4BgsB,UAA5B,EAAwCC,UAAxC,EAAoD;IAClD,MAAMC,UAAU,GAAGF,UAAU,IAAI,CAAjC;IACA,MAAMG,YAAY,GAAGxrB,IAAI,CAACqd,KAAL,CAAWhe,KAAK,CAAC0iB,MAAN,GAAewJ,UAA1B,CAArB;IACA,MAAME,WAAW,GAAGzrB,IAAI,CAACqd,KAAL,CAAWhe,KAAK,CAACqhB,KAAN,GAAc6K,UAAzB,CAApB;IACAlsB,KAAK,CAAC0iB,MAAN,GAAeyJ,YAAY,GAAGD,UAA9B;IACAlsB,KAAK,CAACqhB,KAAN,GAAc+K,WAAW,GAAGF,UAA5B;IACA,MAAM5J,MAAM,GAAGtiB,KAAK,CAACsiB,MAArB;;IACA,IAAIA,MAAM,CAAC7H,KAAP,KAAiBwR,UAAU,IAAK,CAAC3J,MAAM,CAAC7H,KAAP,CAAaiI,MAAd,IAAwB,CAACJ,MAAM,CAAC7H,KAAP,CAAa4G,KAAtE,CAAJ,EAAmF;MACjFiB,MAAM,CAAC7H,KAAP,CAAaiI,MAAb,GAAuB,GAAE1iB,KAAK,CAAC0iB,MAAO,IAAtC;MACAJ,MAAM,CAAC7H,KAAP,CAAa4G,KAAb,GAAsB,GAAErhB,KAAK,CAACqhB,KAAM,IAApC;IACD;;IACD,IAAIrhB,KAAK,CAACmiB,uBAAN,KAAkC+J,UAAlC,IACG5J,MAAM,CAACI,MAAP,KAAkByJ,YADrB,IAEG7J,MAAM,CAACjB,KAAP,KAAiB+K,WAFxB,EAEqC;MACnCpsB,KAAK,CAACmiB,uBAAN,GAAgC+J,UAAhC;MACA5J,MAAM,CAACI,MAAP,GAAgByJ,YAAhB;MACA7J,MAAM,CAACjB,KAAP,GAAe+K,WAAf;MACApsB,KAAK,CAAC6a,GAAN,CAAUwR,YAAV,CAAuBH,UAAvB,EAAmC,CAAnC,EAAsC,CAAtC,EAAyCA,UAAzC,EAAqD,CAArD,EAAwD,CAAxD;MACA,OAAO,IAAP;IACD;;IACD,OAAO,KAAP;EACD;;EACD,MAAMI,4BAA4B,GAAI,YAAW;IAC/C,IAAIC,gBAAgB,GAAG,KAAvB;;IACA,IAAI;MACF,MAAM/U,OAAO,GAAG;QACd,IAAIgV,OAAJ,GAAc;UACZD,gBAAgB,GAAG,IAAnB;UACA,OAAO,KAAP;QACD;;MAJa,CAAhB;MAMA/uB,MAAM,CAACivB,gBAAP,CAAwB,MAAxB,EAAgC,IAAhC,EAAsCjV,OAAtC;MACAha,MAAM,CAACkvB,mBAAP,CAA2B,MAA3B,EAAmC,IAAnC,EAAyClV,OAAzC;IACD,CATD,CASE,OAAO3T,CAAP,EAAU,CACX;;IACD,OAAO0oB,gBAAP;EACD,CAdqC,EAAtC;;EAeA,SAASI,YAAT,CAAsBpD,OAAtB,EAA+BvK,QAA/B,EAAyC;IACvC,MAAMjK,KAAK,GAAGyU,QAAQ,CAACD,OAAD,EAAUvK,QAAV,CAAtB;IACA,MAAM4N,OAAO,GAAG7X,KAAK,IAAIA,KAAK,CAAC8X,KAAN,CAAY,mBAAZ,CAAzB;IACA,OAAOD,OAAO,GAAG,CAACA,OAAO,CAAC,CAAD,CAAX,GAAiB9sB,SAA/B;EACD;;EAED,SAASgtB,mBAAT,CAA6BjpB,CAA7B,EAAgC7D,KAAhC,EAAuC;IACrC,IAAI,YAAY6D,CAAhB,EAAmB;MACjB,OAAO;QACLqD,CAAC,EAAErD,CAAC,CAACqD,CADA;QAELuX,CAAC,EAAE5a,CAAC,CAAC4a;MAFA,CAAP;IAID;;IACD,OAAOkM,qBAAqB,CAAC9mB,CAAD,EAAI7D,KAAJ,CAA5B;EACD;;EACD,SAAS+sB,uBAAT,CAAiC/sB,KAAjC,EAAwCgtB,OAAxC,EAAiD;IAC/C,MAAMC,QAAQ,GAAGjtB,KAAK,CAACktB,4BAAN,EAAjB;IACA,IAAInW,KAAJ,EAAWgK,IAAX,EAAiBwI,OAAjB;;IACA,KAAK,IAAIloB,CAAC,GAAG,CAAR,EAAWsV,IAAI,GAAGsW,QAAQ,CAAC7rB,MAAhC,EAAwCC,CAAC,GAAGsV,IAA5C,EAAkD,EAAEtV,CAApD,EAAuD;MACrD,CAAC;QAAC0V,KAAD;QAAQgK;MAAR,IAAgBkM,QAAQ,CAAC5rB,CAAD,CAAzB;;MACA,KAAK,IAAI4Q,CAAC,GAAG,CAAR,EAAW0P,IAAI,GAAGZ,IAAI,CAAC3f,MAA5B,EAAoC6Q,CAAC,GAAG0P,IAAxC,EAA8C,EAAE1P,CAAhD,EAAmD;QACjDsX,OAAO,GAAGxI,IAAI,CAAC9O,CAAD,CAAd;;QACA,IAAI,CAACsX,OAAO,CAAC4D,IAAb,EAAmB;UACjBH,OAAO,CAACzD,OAAD,EAAUxS,KAAV,EAAiB9E,CAAjB,CAAP;QACD;MACF;IACF;EACF;;EACD,SAASmb,YAAT,CAAsBC,OAAtB,EAA+BC,IAA/B,EAAqCvY,KAArC,EAA4CoG,SAA5C,EAAuD;IACrD,MAAM;MAACoS,UAAD;MAAaxM,IAAb;MAAmByM;IAAnB,IAA8BH,OAApC;IACA,MAAMI,MAAM,GAAGF,UAAU,CAACG,WAAX,CAAuBD,MAAtC;;IACA,IAAIA,MAAM,IAAIH,IAAI,KAAKG,MAAM,CAACH,IAA1B,IAAkCA,IAAI,KAAK,GAA3C,IAAkDE,OAAlD,IAA6DzM,IAAI,CAAC3f,MAAtE,EAA8E;MAC5E,MAAMusB,YAAY,GAAGF,MAAM,CAACG,cAAP,GAAwBlG,aAAxB,GAAwCD,YAA7D;;MACA,IAAI,CAACtM,SAAL,EAAgB;QACd,OAAOwS,YAAY,CAAC5M,IAAD,EAAOuM,IAAP,EAAavY,KAAb,CAAnB;MACD,CAFD,MAEO,IAAIwY,UAAU,CAACM,cAAf,EAA+B;QACpC,MAAMpE,EAAE,GAAG1I,IAAI,CAAC,CAAD,CAAf;QACA,MAAM5a,KAAK,GAAG,OAAOsjB,EAAE,CAACqE,QAAV,KAAuB,UAAvB,IAAqCrE,EAAE,CAACqE,QAAH,CAAYR,IAAZ,CAAnD;;QACA,IAAInnB,KAAJ,EAAW;UACT,MAAMnH,KAAK,GAAG2uB,YAAY,CAAC5M,IAAD,EAAOuM,IAAP,EAAavY,KAAK,GAAG5O,KAArB,CAA1B;UACA,MAAMlH,GAAG,GAAG0uB,YAAY,CAAC5M,IAAD,EAAOuM,IAAP,EAAavY,KAAK,GAAG5O,KAArB,CAAxB;UACA,OAAO;YAACohB,EAAE,EAAEvoB,KAAK,CAACuoB,EAAX;YAAeD,EAAE,EAAEroB,GAAG,CAACqoB;UAAvB,CAAP;QACD;MACF;IACF;;IACD,OAAO;MAACC,EAAE,EAAE,CAAL;MAAQD,EAAE,EAAEvG,IAAI,CAAC3f,MAAL,GAAc;IAA1B,CAAP;EACD;;EACD,SAAS2sB,sBAAT,CAAgC/tB,KAAhC,EAAuCstB,IAAvC,EAA6CU,QAA7C,EAAuDhB,OAAvD,EAAgE7R,SAAhE,EAA2E;IACzE,MAAM8R,QAAQ,GAAGjtB,KAAK,CAACktB,4BAAN,EAAjB;IACA,MAAMnY,KAAK,GAAGiZ,QAAQ,CAACV,IAAD,CAAtB;;IACA,KAAK,IAAIjsB,CAAC,GAAG,CAAR,EAAWsV,IAAI,GAAGsW,QAAQ,CAAC7rB,MAAhC,EAAwCC,CAAC,GAAGsV,IAA5C,EAAkD,EAAEtV,CAApD,EAAuD;MACrD,MAAM;QAAC0V,KAAD;QAAQgK;MAAR,IAAgBkM,QAAQ,CAAC5rB,CAAD,CAA9B;MACA,MAAM;QAACkmB,EAAD;QAAKD;MAAL,IAAW8F,YAAY,CAACH,QAAQ,CAAC5rB,CAAD,CAAT,EAAcisB,IAAd,EAAoBvY,KAApB,EAA2BoG,SAA3B,CAA7B;;MACA,KAAK,IAAIlJ,CAAC,GAAGsV,EAAb,EAAiBtV,CAAC,IAAIqV,EAAtB,EAA0B,EAAErV,CAA5B,EAA+B;QAC7B,MAAMsX,OAAO,GAAGxI,IAAI,CAAC9O,CAAD,CAApB;;QACA,IAAI,CAACsX,OAAO,CAAC4D,IAAb,EAAmB;UACjBH,OAAO,CAACzD,OAAD,EAAUxS,KAAV,EAAiB9E,CAAjB,CAAP;QACD;MACF;IACF;EACF;;EACD,SAASgc,wBAAT,CAAkCX,IAAlC,EAAwC;IACtC,MAAMY,IAAI,GAAGZ,IAAI,CAAChW,OAAL,CAAa,GAAb,MAAsB,CAAC,CAApC;IACA,MAAM6W,IAAI,GAAGb,IAAI,CAAChW,OAAL,CAAa,GAAb,MAAsB,CAAC,CAApC;IACA,OAAO,UAAS0I,GAAT,EAAcC,GAAd,EAAmB;MACxB,MAAMmO,MAAM,GAAGF,IAAI,GAAGvtB,IAAI,CAACge,GAAL,CAASqB,GAAG,CAAC9Y,CAAJ,GAAQ+Y,GAAG,CAAC/Y,CAArB,CAAH,GAA6B,CAAhD;MACA,MAAMmnB,MAAM,GAAGF,IAAI,GAAGxtB,IAAI,CAACge,GAAL,CAASqB,GAAG,CAACvB,CAAJ,GAAQwB,GAAG,CAACxB,CAArB,CAAH,GAA6B,CAAhD;MACA,OAAO9d,IAAI,CAAC0d,IAAL,CAAU1d,IAAI,CAACod,GAAL,CAASqQ,MAAT,EAAiB,CAAjB,IAAsBztB,IAAI,CAACod,GAAL,CAASsQ,MAAT,EAAiB,CAAjB,CAAhC,CAAP;IACD,CAJD;EAKD;;EACD,SAASC,iBAAT,CAA2BtuB,KAA3B,EAAkCguB,QAAlC,EAA4CV,IAA5C,EAAkDiB,gBAAlD,EAAoE;IAClE,MAAMptB,KAAK,GAAG,EAAd;;IACA,IAAI,CAAC8iB,cAAc,CAAC+J,QAAD,EAAWhuB,KAAK,CAACwuB,SAAjB,EAA4BxuB,KAAK,CAACyuB,WAAlC,CAAnB,EAAmE;MACjE,OAAOttB,KAAP;IACD;;IACD,MAAMutB,cAAc,GAAG,UAASnF,OAAT,EAAkBzS,YAAlB,EAAgCC,KAAhC,EAAuC;MAC5D,IAAIwS,OAAO,CAACoF,OAAR,CAAgBX,QAAQ,CAAC9mB,CAAzB,EAA4B8mB,QAAQ,CAACvP,CAArC,EAAwC8P,gBAAxC,CAAJ,EAA+D;QAC7DptB,KAAK,CAACkB,IAAN,CAAW;UAACknB,OAAD;UAAUzS,YAAV;UAAwBC;QAAxB,CAAX;MACD;IACF,CAJD;;IAKAgX,sBAAsB,CAAC/tB,KAAD,EAAQstB,IAAR,EAAcU,QAAd,EAAwBU,cAAxB,EAAwC,IAAxC,CAAtB;IACA,OAAOvtB,KAAP;EACD;;EACD,SAASytB,qBAAT,CAA+B5uB,KAA/B,EAAsCguB,QAAtC,EAAgDV,IAAhD,EAAsDiB,gBAAtD,EAAwE;IACtE,IAAIptB,KAAK,GAAG,EAAZ;;IACA,SAASutB,cAAT,CAAwBnF,OAAxB,EAAiCzS,YAAjC,EAA+CC,KAA/C,EAAsD;MACpD,MAAM;QAAC8X,UAAD;QAAaC;MAAb,IAAyBvF,OAAO,CAACwF,QAAR,CAAiB,CAAC,YAAD,EAAe,UAAf,CAAjB,EAA6CR,gBAA7C,CAA/B;MACA,MAAM;QAAC3O;MAAD,IAAUN,iBAAiB,CAACiK,OAAD,EAAU;QAACriB,CAAC,EAAE8mB,QAAQ,CAAC9mB,CAAb;QAAgBuX,CAAC,EAAEuP,QAAQ,CAACvP;MAA5B,CAAV,CAAjC;;MACA,IAAI2B,aAAa,CAACR,KAAD,EAAQiP,UAAR,EAAoBC,QAApB,CAAjB,EAAgD;QAC9C3tB,KAAK,CAACkB,IAAN,CAAW;UAACknB,OAAD;UAAUzS,YAAV;UAAwBC;QAAxB,CAAX;MACD;IACF;;IACDgX,sBAAsB,CAAC/tB,KAAD,EAAQstB,IAAR,EAAcU,QAAd,EAAwBU,cAAxB,CAAtB;IACA,OAAOvtB,KAAP;EACD;;EACD,SAAS6tB,wBAAT,CAAkChvB,KAAlC,EAAyCguB,QAAzC,EAAmDV,IAAnD,EAAyDnS,SAAzD,EAAoEoT,gBAApE,EAAsF;IACpF,IAAIptB,KAAK,GAAG,EAAZ;IACA,MAAM8tB,cAAc,GAAGhB,wBAAwB,CAACX,IAAD,CAA/C;IACA,IAAI4B,WAAW,GAAGvZ,MAAM,CAACyH,iBAAzB;;IACA,SAASsR,cAAT,CAAwBnF,OAAxB,EAAiCzS,YAAjC,EAA+CC,KAA/C,EAAsD;MACpD,MAAM4X,OAAO,GAAGpF,OAAO,CAACoF,OAAR,CAAgBX,QAAQ,CAAC9mB,CAAzB,EAA4B8mB,QAAQ,CAACvP,CAArC,EAAwC8P,gBAAxC,CAAhB;;MACA,IAAIpT,SAAS,IAAI,CAACwT,OAAlB,EAA2B;QACzB;MACD;;MACD,MAAMQ,MAAM,GAAG5F,OAAO,CAAC6F,cAAR,CAAuBb,gBAAvB,CAAf;;MACA,MAAMc,WAAW,GAAGpL,cAAc,CAACkL,MAAD,EAASnvB,KAAK,CAACwuB,SAAf,EAA0BxuB,KAAK,CAACyuB,WAAhC,CAAlC;;MACA,IAAI,CAACY,WAAD,IAAgB,CAACV,OAArB,EAA8B;QAC5B;MACD;;MACD,MAAM7O,QAAQ,GAAGmP,cAAc,CAACjB,QAAD,EAAWmB,MAAX,CAA/B;;MACA,IAAIrP,QAAQ,GAAGoP,WAAf,EAA4B;QAC1B/tB,KAAK,GAAG,CAAC;UAACooB,OAAD;UAAUzS,YAAV;UAAwBC;QAAxB,CAAD,CAAR;QACAmY,WAAW,GAAGpP,QAAd;MACD,CAHD,MAGO,IAAIA,QAAQ,KAAKoP,WAAjB,EAA8B;QACnC/tB,KAAK,CAACkB,IAAN,CAAW;UAACknB,OAAD;UAAUzS,YAAV;UAAwBC;QAAxB,CAAX;MACD;IACF;;IACDgX,sBAAsB,CAAC/tB,KAAD,EAAQstB,IAAR,EAAcU,QAAd,EAAwBU,cAAxB,CAAtB;IACA,OAAOvtB,KAAP;EACD;;EACD,SAASmuB,eAAT,CAAyBtvB,KAAzB,EAAgCguB,QAAhC,EAA0CV,IAA1C,EAAgDnS,SAAhD,EAA2DoT,gBAA3D,EAA6E;IAC3E,IAAI,CAACtK,cAAc,CAAC+J,QAAD,EAAWhuB,KAAK,CAACwuB,SAAjB,EAA4BxuB,KAAK,CAACyuB,WAAlC,CAAnB,EAAmE;MACjE,OAAO,EAAP;IACD;;IACD,OAAOnB,IAAI,KAAK,GAAT,IAAgB,CAACnS,SAAjB,GACHyT,qBAAqB,CAAC5uB,KAAD,EAAQguB,QAAR,EAAkBV,IAAlB,EAAwBiB,gBAAxB,CADlB,GAEHS,wBAAwB,CAAChvB,KAAD,EAAQguB,QAAR,EAAkBV,IAAlB,EAAwBnS,SAAxB,EAAmCoT,gBAAnC,CAF5B;EAGD;;EACD,SAASgB,YAAT,CAAsBvvB,KAAtB,EAA6B6D,CAA7B,EAAgC2T,OAAhC,EAAyC+W,gBAAzC,EAA2D;IACzD,MAAMP,QAAQ,GAAGlB,mBAAmB,CAACjpB,CAAD,EAAI7D,KAAJ,CAApC;IACA,MAAMmB,KAAK,GAAG,EAAd;IACA,MAAMmsB,IAAI,GAAG9V,OAAO,CAAC8V,IAArB;IACA,MAAMkC,WAAW,GAAGlC,IAAI,KAAK,GAAT,GAAe,UAAf,GAA4B,UAAhD;IACA,IAAImC,cAAc,GAAG,KAArB;IACA1C,uBAAuB,CAAC/sB,KAAD,EAAQ,CAACupB,OAAD,EAAUzS,YAAV,EAAwBC,KAAxB,KAAkC;MAC/D,IAAIwS,OAAO,CAACiG,WAAD,CAAP,CAAqBxB,QAAQ,CAACV,IAAD,CAA7B,EAAqCiB,gBAArC,CAAJ,EAA4D;QAC1DptB,KAAK,CAACkB,IAAN,CAAW;UAACknB,OAAD;UAAUzS,YAAV;UAAwBC;QAAxB,CAAX;MACD;;MACD,IAAIwS,OAAO,CAACoF,OAAR,CAAgBX,QAAQ,CAAC9mB,CAAzB,EAA4B8mB,QAAQ,CAACvP,CAArC,EAAwC8P,gBAAxC,CAAJ,EAA+D;QAC7DkB,cAAc,GAAG,IAAjB;MACD;IACF,CAPsB,CAAvB;;IAQA,IAAIjY,OAAO,CAAC2D,SAAR,IAAqB,CAACsU,cAA1B,EAA0C;MACxC,OAAO,EAAP;IACD;;IACD,OAAOtuB,KAAP;EACD;;EACD,IAAIuuB,WAAW,GAAG;IAChBC,KAAK,EAAE;MACL5Y,KAAK,CAAC/W,KAAD,EAAQ6D,CAAR,EAAW2T,OAAX,EAAoB+W,gBAApB,EAAsC;QACzC,MAAMP,QAAQ,GAAGlB,mBAAmB,CAACjpB,CAAD,EAAI7D,KAAJ,CAApC;QACA,MAAMstB,IAAI,GAAG9V,OAAO,CAAC8V,IAAR,IAAgB,GAA7B;QACA,MAAMnsB,KAAK,GAAGqW,OAAO,CAAC2D,SAAR,GACVmT,iBAAiB,CAACtuB,KAAD,EAAQguB,QAAR,EAAkBV,IAAlB,EAAwBiB,gBAAxB,CADP,GAEVe,eAAe,CAACtvB,KAAD,EAAQguB,QAAR,EAAkBV,IAAlB,EAAwB,KAAxB,EAA+BiB,gBAA/B,CAFnB;QAGA,MAAMlU,QAAQ,GAAG,EAAjB;;QACA,IAAI,CAAClZ,KAAK,CAACC,MAAX,EAAmB;UACjB,OAAO,EAAP;QACD;;QACDpB,KAAK,CAACktB,4BAAN,GAAqC1sB,OAArC,CAA8CovB,IAAD,IAAU;UACrD,MAAM7Y,KAAK,GAAG5V,KAAK,CAAC,CAAD,CAAL,CAAS4V,KAAvB;UACA,MAAMwS,OAAO,GAAGqG,IAAI,CAAC7O,IAAL,CAAUhK,KAAV,CAAhB;;UACA,IAAIwS,OAAO,IAAI,CAACA,OAAO,CAAC4D,IAAxB,EAA8B;YAC5B9S,QAAQ,CAAChY,IAAT,CAAc;cAACknB,OAAD;cAAUzS,YAAY,EAAE8Y,IAAI,CAAC7Y,KAA7B;cAAoCA;YAApC,CAAd;UACD;QACF,CAND;QAOA,OAAOsD,QAAP;MACD,CAnBI;;MAoBLwV,OAAO,CAAC7vB,KAAD,EAAQ6D,CAAR,EAAW2T,OAAX,EAAoB+W,gBAApB,EAAsC;QAC3C,MAAMP,QAAQ,GAAGlB,mBAAmB,CAACjpB,CAAD,EAAI7D,KAAJ,CAApC;QACA,MAAMstB,IAAI,GAAG9V,OAAO,CAAC8V,IAAR,IAAgB,IAA7B;QACA,IAAInsB,KAAK,GAAGqW,OAAO,CAAC2D,SAAR,GACRmT,iBAAiB,CAACtuB,KAAD,EAAQguB,QAAR,EAAkBV,IAAlB,EAAwBiB,gBAAxB,CADT,GAEVe,eAAe,CAACtvB,KAAD,EAAQguB,QAAR,EAAkBV,IAAlB,EAAwB,KAAxB,EAA+BiB,gBAA/B,CAFjB;;QAGA,IAAIptB,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;UACpB,MAAM0V,YAAY,GAAG3V,KAAK,CAAC,CAAD,CAAL,CAAS2V,YAA9B;UACA,MAAMiK,IAAI,GAAG/gB,KAAK,CAAC8vB,cAAN,CAAqBhZ,YAArB,EAAmCiK,IAAhD;UACA5f,KAAK,GAAG,EAAR;;UACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0f,IAAI,CAAC3f,MAAzB,EAAiC,EAAEC,CAAnC,EAAsC;YACpCF,KAAK,CAACkB,IAAN,CAAW;cAACknB,OAAO,EAAExI,IAAI,CAAC1f,CAAD,CAAd;cAAmByV,YAAnB;cAAiCC,KAAK,EAAE1V;YAAxC,CAAX;UACD;QACF;;QACD,OAAOF,KAAP;MACD,CAnCI;;MAoCL+iB,KAAK,CAAClkB,KAAD,EAAQ6D,CAAR,EAAW2T,OAAX,EAAoB+W,gBAApB,EAAsC;QACzC,MAAMP,QAAQ,GAAGlB,mBAAmB,CAACjpB,CAAD,EAAI7D,KAAJ,CAApC;QACA,MAAMstB,IAAI,GAAG9V,OAAO,CAAC8V,IAAR,IAAgB,IAA7B;QACA,OAAOgB,iBAAiB,CAACtuB,KAAD,EAAQguB,QAAR,EAAkBV,IAAlB,EAAwBiB,gBAAxB,CAAxB;MACD,CAxCI;;MAyCLwB,OAAO,CAAC/vB,KAAD,EAAQ6D,CAAR,EAAW2T,OAAX,EAAoB+W,gBAApB,EAAsC;QAC3C,MAAMP,QAAQ,GAAGlB,mBAAmB,CAACjpB,CAAD,EAAI7D,KAAJ,CAApC;QACA,MAAMstB,IAAI,GAAG9V,OAAO,CAAC8V,IAAR,IAAgB,IAA7B;QACA,OAAOgC,eAAe,CAACtvB,KAAD,EAAQguB,QAAR,EAAkBV,IAAlB,EAAwB9V,OAAO,CAAC2D,SAAhC,EAA2CoT,gBAA3C,CAAtB;MACD,CA7CI;;MA8CLrnB,CAAC,CAAClH,KAAD,EAAQ6D,CAAR,EAAW2T,OAAX,EAAoB+W,gBAApB,EAAsC;QACrC,OAAOgB,YAAY,CAACvvB,KAAD,EAAQ6D,CAAR,EAAW;UAACypB,IAAI,EAAE,GAAP;UAAYnS,SAAS,EAAE3D,OAAO,CAAC2D;QAA/B,CAAX,EAAsDoT,gBAAtD,CAAnB;MACD,CAhDI;;MAiDL9P,CAAC,CAACze,KAAD,EAAQ6D,CAAR,EAAW2T,OAAX,EAAoB+W,gBAApB,EAAsC;QACrC,OAAOgB,YAAY,CAACvvB,KAAD,EAAQ6D,CAAR,EAAW;UAACypB,IAAI,EAAE,GAAP;UAAYnS,SAAS,EAAE3D,OAAO,CAAC2D;QAA/B,CAAX,EAAsDoT,gBAAtD,CAAnB;MACD;;IAnDI;EADS,CAAlB;EAwDA,MAAMyB,WAAW,GAAG,IAAIC,MAAJ,CAAW,sCAAX,CAApB;EACA,MAAMC,UAAU,GAAG,IAAID,MAAJ,CAAW,uEAAX,CAAnB;;EACA,SAASE,YAAT,CAAsBpb,KAAtB,EAA6BmE,IAA7B,EAAmC;IACjC,MAAM0T,OAAO,GAAG,CAAC,KAAK7X,KAAN,EAAa8X,KAAb,CAAmBmD,WAAnB,CAAhB;;IACA,IAAI,CAACpD,OAAD,IAAYA,OAAO,CAAC,CAAD,CAAP,KAAe,QAA/B,EAAyC;MACvC,OAAO1T,IAAI,GAAG,GAAd;IACD;;IACDnE,KAAK,GAAG,CAAC6X,OAAO,CAAC,CAAD,CAAhB;;IACA,QAAQA,OAAO,CAAC,CAAD,CAAf;MACA,KAAK,IAAL;QACE,OAAO7X,KAAP;;MACF,KAAK,GAAL;QACEA,KAAK,IAAI,GAAT;QACA;IALF;;IAOA,OAAOmE,IAAI,GAAGnE,KAAd;EACD;;EACD,MAAMqb,YAAY,GAAGhsB,CAAC,IAAI,CAACA,CAAD,IAAM,CAAhC;;EACA,SAASisB,iBAAT,CAA2Btb,KAA3B,EAAkCub,KAAlC,EAAyC;IACvC,MAAM5rB,GAAG,GAAG,EAAZ;IACA,MAAM6rB,QAAQ,GAAG9a,QAAQ,CAAC6a,KAAD,CAAzB;IACA,MAAMxe,IAAI,GAAGye,QAAQ,GAAGxe,MAAM,CAACD,IAAP,CAAYwe,KAAZ,CAAH,GAAwBA,KAA7C;IACA,MAAME,IAAI,GAAG/a,QAAQ,CAACV,KAAD,CAAR,GACTwb,QAAQ,GACNE,IAAI,IAAI1a,cAAc,CAAChB,KAAK,CAAC0b,IAAD,CAAN,EAAc1b,KAAK,CAACub,KAAK,CAACG,IAAD,CAAN,CAAnB,CADhB,GAENA,IAAI,IAAI1b,KAAK,CAAC0b,IAAD,CAHN,GAIT,MAAM1b,KAJV;;IAKA,KAAK,MAAM0b,IAAX,IAAmB3e,IAAnB,EAAyB;MACvBpN,GAAG,CAAC+rB,IAAD,CAAH,GAAYL,YAAY,CAACI,IAAI,CAACC,IAAD,CAAL,CAAxB;IACD;;IACD,OAAO/rB,GAAP;EACD;;EACD,SAASgsB,MAAT,CAAgB3b,KAAhB,EAAuB;IACrB,OAAOsb,iBAAiB,CAACtb,KAAD,EAAQ;MAACsP,GAAG,EAAE,GAAN;MAAWjlB,KAAK,EAAE,GAAlB;MAAuBklB,MAAM,EAAE,GAA/B;MAAoCnlB,IAAI,EAAE;IAA1C,CAAR,CAAxB;EACD;;EACD,SAASwxB,aAAT,CAAuB5b,KAAvB,EAA8B;IAC5B,OAAOsb,iBAAiB,CAACtb,KAAD,EAAQ,CAAC,SAAD,EAAY,UAAZ,EAAwB,YAAxB,EAAsC,aAAtC,CAAR,CAAxB;EACD;;EACD,SAAS6b,SAAT,CAAmB7b,KAAnB,EAA0B;IACxB,MAAMvB,GAAG,GAAGkd,MAAM,CAAC3b,KAAD,CAAlB;IACAvB,GAAG,CAAC6N,KAAJ,GAAY7N,GAAG,CAACrU,IAAJ,GAAWqU,GAAG,CAACpU,KAA3B;IACAoU,GAAG,CAACkP,MAAJ,GAAalP,GAAG,CAAC6Q,GAAJ,GAAU7Q,GAAG,CAAC8Q,MAA3B;IACA,OAAO9Q,GAAP;EACD;;EACD,SAASqd,MAAT,CAAgBrZ,OAAhB,EAAyBsZ,QAAzB,EAAmC;IACjCtZ,OAAO,GAAGA,OAAO,IAAI,EAArB;IACAsZ,QAAQ,GAAGA,QAAQ,IAAInU,QAAQ,CAACpC,IAAhC;IACA,IAAIrB,IAAI,GAAGnD,cAAc,CAACyB,OAAO,CAAC0B,IAAT,EAAe4X,QAAQ,CAAC5X,IAAxB,CAAzB;;IACA,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;MAC5BA,IAAI,GAAG7G,QAAQ,CAAC6G,IAAD,EAAO,EAAP,CAAf;IACD;;IACD,IAAIuB,KAAK,GAAG1E,cAAc,CAACyB,OAAO,CAACiD,KAAT,EAAgBqW,QAAQ,CAACrW,KAAzB,CAA1B;;IACA,IAAIA,KAAK,IAAI,CAAC,CAAC,KAAKA,KAAN,EAAaoS,KAAb,CAAmBqD,UAAnB,CAAd,EAA8C;MAC5C7X,OAAO,CAACC,IAAR,CAAa,oCAAoCmC,KAApC,GAA4C,GAAzD;MACAA,KAAK,GAAG,EAAR;IACD;;IACD,MAAMF,IAAI,GAAG;MACXC,MAAM,EAAEzE,cAAc,CAACyB,OAAO,CAACgD,MAAT,EAAiBsW,QAAQ,CAACtW,MAA1B,CADX;MAEXE,UAAU,EAAEyV,YAAY,CAACpa,cAAc,CAACyB,OAAO,CAACkD,UAAT,EAAqBoW,QAAQ,CAACpW,UAA9B,CAAf,EAA0DxB,IAA1D,CAFb;MAGXA,IAHW;MAIXuB,KAJW;MAKX9G,MAAM,EAAEoC,cAAc,CAACyB,OAAO,CAAC7D,MAAT,EAAiBmd,QAAQ,CAACnd,MAA1B,CALX;MAMXuN,MAAM,EAAE;IANG,CAAb;IAQA3G,IAAI,CAAC2G,MAAL,GAAcL,YAAY,CAACtG,IAAD,CAA1B;IACA,OAAOA,IAAP;EACD;;EACD,SAASwW,OAAT,CAAiBC,MAAjB,EAAyB9W,OAAzB,EAAkCnD,KAAlC,EAAyCka,IAAzC,EAA+C;IAC7C,IAAIC,SAAS,GAAG,IAAhB;IACA,IAAI7vB,CAAJ,EAAOsV,IAAP,EAAa5B,KAAb;;IACA,KAAK1T,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGqa,MAAM,CAAC5vB,MAA1B,EAAkCC,CAAC,GAAGsV,IAAtC,EAA4C,EAAEtV,CAA9C,EAAiD;MAC/C0T,KAAK,GAAGic,MAAM,CAAC3vB,CAAD,CAAd;;MACA,IAAI0T,KAAK,KAAKjV,SAAd,EAAyB;QACvB;MACD;;MACD,IAAIoa,OAAO,KAAKpa,SAAZ,IAAyB,OAAOiV,KAAP,KAAiB,UAA9C,EAA0D;QACxDA,KAAK,GAAGA,KAAK,CAACmF,OAAD,CAAb;QACAgX,SAAS,GAAG,KAAZ;MACD;;MACD,IAAIna,KAAK,KAAKjX,SAAV,IAAuBuG,OAAO,CAAC0O,KAAD,CAAlC,EAA2C;QACzCA,KAAK,GAAGA,KAAK,CAACgC,KAAK,GAAGhC,KAAK,CAAC3T,MAAf,CAAb;QACA8vB,SAAS,GAAG,KAAZ;MACD;;MACD,IAAInc,KAAK,KAAKjV,SAAd,EAAyB;QACvB,IAAImxB,IAAI,IAAI,CAACC,SAAb,EAAwB;UACtBD,IAAI,CAACC,SAAL,GAAiB,KAAjB;QACD;;QACD,OAAOnc,KAAP;MACD;IACF;EACF;;EACD,SAASoc,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCC,WAAlC,EAA+C;IAC7C,MAAM;MAAC1wB,GAAD;MAAM+B;IAAN,IAAayuB,MAAnB;IACA,MAAMG,MAAM,GAAGnb,WAAW,CAACib,KAAD,EAAQ,CAAC1uB,GAAG,GAAG/B,GAAP,IAAc,CAAtB,CAA1B;;IACA,MAAM4wB,QAAQ,GAAG,CAACzc,KAAD,EAAQzS,GAAR,KAAgBgvB,WAAW,IAAIvc,KAAK,KAAK,CAAzB,GAA6B,CAA7B,GAAiCA,KAAK,GAAGzS,GAA1E;;IACA,OAAO;MACL1B,GAAG,EAAE4wB,QAAQ,CAAC5wB,GAAD,EAAM,CAACD,IAAI,CAACge,GAAL,CAAS4S,MAAT,CAAP,CADR;MAEL5uB,GAAG,EAAE6uB,QAAQ,CAAC7uB,GAAD,EAAM4uB,MAAN;IAFR,CAAP;EAID;;EACD,SAASE,aAAT,CAAuBC,aAAvB,EAAsCxX,OAAtC,EAA+C;IAC7C,OAAOnI,MAAM,CAACgB,MAAP,CAAchB,MAAM,CAACmF,MAAP,CAAcwa,aAAd,CAAd,EAA4CxX,OAA5C,CAAP;EACD;;EAED,MAAMyX,gBAAgB,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,QAAzB,CAAzB;;EACA,SAASC,gBAAT,CAA0B7S,KAA1B,EAAiCiP,QAAjC,EAA2C;IACzC,OAAOjP,KAAK,CAAC8S,MAAN,CAAaztB,CAAC,IAAIA,CAAC,CAACwU,GAAF,KAAUoV,QAA5B,CAAP;EACD;;EACD,SAAS8D,2BAAT,CAAqC/S,KAArC,EAA4CuO,IAA5C,EAAkD;IAChD,OAAOvO,KAAK,CAAC8S,MAAN,CAAaztB,CAAC,IAAIutB,gBAAgB,CAACra,OAAjB,CAAyBlT,CAAC,CAACwU,GAA3B,MAAoC,CAAC,CAArC,IAA0CxU,CAAC,CAACmmB,GAAF,CAAM+C,IAAN,KAAeA,IAA3E,CAAP;EACD;;EACD,SAASyE,YAAT,CAAsBhT,KAAtB,EAA6BxI,OAA7B,EAAsC;IACpC,OAAOwI,KAAK,CAACT,IAAN,CAAW,CAAC7a,CAAD,EAAIC,CAAJ,KAAU;MAC1B,MAAMkT,EAAE,GAAGL,OAAO,GAAG7S,CAAH,GAAOD,CAAzB;MACA,MAAMoT,EAAE,GAAGN,OAAO,GAAG9S,CAAH,GAAOC,CAAzB;MACA,OAAOkT,EAAE,CAACjD,MAAH,KAAckD,EAAE,CAAClD,MAAjB,GACLiD,EAAE,CAACG,KAAH,GAAWF,EAAE,CAACE,KADT,GAELH,EAAE,CAACjD,MAAH,GAAYkD,EAAE,CAAClD,MAFjB;IAGD,CANM,CAAP;EAOD;;EACD,SAASqe,SAAT,CAAmBC,KAAnB,EAA0B;IACxB,MAAMC,WAAW,GAAG,EAApB;IACA,IAAI7wB,CAAJ,EAAOsV,IAAP,EAAa4T,GAAb,EAAkB3R,GAAlB,EAAuBuZ,KAAvB,EAA8BC,WAA9B;;IACA,KAAK/wB,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG,CAACsb,KAAK,IAAI,EAAV,EAAc7wB,MAAjC,EAAyCC,CAAC,GAAGsV,IAA7C,EAAmD,EAAEtV,CAArD,EAAwD;MACtDkpB,GAAG,GAAG0H,KAAK,CAAC5wB,CAAD,CAAX;MACA,CAAC;QAAC2sB,QAAQ,EAAEpV,GAAX;QAAgBpB,OAAO,EAAE;UAAC2a,KAAD;UAAQC,WAAW,GAAG;QAAtB;MAAzB,IAAqD7H,GAAtD;MACA2H,WAAW,CAAC7vB,IAAZ,CAAiB;QACf0U,KAAK,EAAE1V,CADQ;QAEfkpB,GAFe;QAGf3R,GAHe;QAIfyZ,UAAU,EAAE9H,GAAG,CAAC+H,YAAJ,EAJG;QAKf3e,MAAM,EAAE4W,GAAG,CAAC5W,MALG;QAMfwe,KAAK,EAAEA,KAAK,IAAKvZ,GAAG,GAAGuZ,KANR;QAOfC;MAPe,CAAjB;IASD;;IACD,OAAOF,WAAP;EACD;;EACD,SAASK,WAAT,CAAqBC,OAArB,EAA8B;IAC5B,MAAMC,MAAM,GAAG,EAAf;;IACA,KAAK,MAAMC,IAAX,IAAmBF,OAAnB,EAA4B;MAC1B,MAAM;QAACL,KAAD;QAAQvZ,GAAR;QAAawZ;MAAb,IAA4BM,IAAlC;;MACA,IAAI,CAACP,KAAD,IAAU,CAACR,gBAAgB,CAACgB,QAAjB,CAA0B/Z,GAA1B,CAAf,EAA+C;QAC7C;MACD;;MACD,MAAMga,MAAM,GAAGH,MAAM,CAACN,KAAD,CAAN,KAAkBM,MAAM,CAACN,KAAD,CAAN,GAAgB;QAACU,KAAK,EAAE,CAAR;QAAWC,MAAM,EAAE,CAAnB;QAAsBnf,MAAM,EAAE,CAA9B;QAAiCuF,IAAI,EAAE;MAAvC,CAAlC,CAAf;;MACA0Z,MAAM,CAACC,KAAP;MACAD,MAAM,CAACjf,MAAP,IAAiBye,WAAjB;IACD;;IACD,OAAOK,MAAP;EACD;;EACD,SAASM,aAAT,CAAuBP,OAAvB,EAAgCQ,MAAhC,EAAwC;IACtC,MAAMP,MAAM,GAAGF,WAAW,CAACC,OAAD,CAA1B;IACA,MAAM;MAACS,YAAD;MAAeC;IAAf,IAAgCF,MAAtC;IACA,IAAI3xB,CAAJ,EAAOsV,IAAP,EAAawc,MAAb;;IACA,KAAK9xB,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG6b,OAAO,CAACpxB,MAA3B,EAAmCC,CAAC,GAAGsV,IAAvC,EAA6C,EAAEtV,CAA/C,EAAkD;MAChD8xB,MAAM,GAAGX,OAAO,CAACnxB,CAAD,CAAhB;MACA,MAAM;QAAC+xB;MAAD,IAAaD,MAAM,CAAC5I,GAA1B;MACA,MAAM4H,KAAK,GAAGM,MAAM,CAACU,MAAM,CAAChB,KAAR,CAApB;MACA,MAAMkB,MAAM,GAAGlB,KAAK,IAAIgB,MAAM,CAACf,WAAP,GAAqBD,KAAK,CAACxe,MAAnD;;MACA,IAAIwf,MAAM,CAACd,UAAX,EAAuB;QACrBc,MAAM,CAAC9R,KAAP,GAAegS,MAAM,GAAGA,MAAM,GAAGJ,YAAZ,GAA2BG,QAAQ,IAAIJ,MAAM,CAACM,cAAnE;QACAH,MAAM,CAACzQ,MAAP,GAAgBwQ,aAAhB;MACD,CAHD,MAGO;QACLC,MAAM,CAAC9R,KAAP,GAAe4R,YAAf;QACAE,MAAM,CAACzQ,MAAP,GAAgB2Q,MAAM,GAAGA,MAAM,GAAGH,aAAZ,GAA4BE,QAAQ,IAAIJ,MAAM,CAACO,eAArE;MACD;IACF;;IACD,OAAOd,MAAP;EACD;;EACD,SAASe,gBAAT,CAA0BvB,KAA1B,EAAiC;IAC/B,MAAMC,WAAW,GAAGF,SAAS,CAACC,KAAD,CAA7B;IACA,MAAMmB,QAAQ,GAAGrB,YAAY,CAACG,WAAW,CAACL,MAAZ,CAAmBa,IAAI,IAAIA,IAAI,CAACnI,GAAL,CAAS6I,QAApC,CAAD,EAAgD,IAAhD,CAA7B;IACA,MAAMj0B,IAAI,GAAG4yB,YAAY,CAACH,gBAAgB,CAACM,WAAD,EAAc,MAAd,CAAjB,EAAwC,IAAxC,CAAzB;IACA,MAAM9yB,KAAK,GAAG2yB,YAAY,CAACH,gBAAgB,CAACM,WAAD,EAAc,OAAd,CAAjB,CAA1B;IACA,MAAM7N,GAAG,GAAG0N,YAAY,CAACH,gBAAgB,CAACM,WAAD,EAAc,KAAd,CAAjB,EAAuC,IAAvC,CAAxB;IACA,MAAM5N,MAAM,GAAGyN,YAAY,CAACH,gBAAgB,CAACM,WAAD,EAAc,QAAd,CAAjB,CAA3B;IACA,MAAMuB,gBAAgB,GAAG3B,2BAA2B,CAACI,WAAD,EAAc,GAAd,CAApD;IACA,MAAMwB,cAAc,GAAG5B,2BAA2B,CAACI,WAAD,EAAc,GAAd,CAAlD;IACA,OAAO;MACLkB,QADK;MAELO,UAAU,EAAEx0B,IAAI,CAACy0B,MAAL,CAAYvP,GAAZ,CAFP;MAGLwP,cAAc,EAAEz0B,KAAK,CAACw0B,MAAN,CAAaF,cAAb,EAA6BE,MAA7B,CAAoCtP,MAApC,EAA4CsP,MAA5C,CAAmDH,gBAAnD,CAHX;MAILjF,SAAS,EAAEoD,gBAAgB,CAACM,WAAD,EAAc,WAAd,CAJtB;MAKL4B,QAAQ,EAAE30B,IAAI,CAACy0B,MAAL,CAAYx0B,KAAZ,EAAmBw0B,MAAnB,CAA0BF,cAA1B,CALL;MAMLrB,UAAU,EAAEhO,GAAG,CAACuP,MAAJ,CAAWtP,MAAX,EAAmBsP,MAAnB,CAA0BH,gBAA1B;IANP,CAAP;EAQD;;EACD,SAASM,cAAT,CAAwBC,UAAxB,EAAoCxF,SAApC,EAA+C/qB,CAA/C,EAAkDC,CAAlD,EAAqD;IACnD,OAAO/C,IAAI,CAACgC,GAAL,CAASqxB,UAAU,CAACvwB,CAAD,CAAnB,EAAwB+qB,SAAS,CAAC/qB,CAAD,CAAjC,IAAwC9C,IAAI,CAACgC,GAAL,CAASqxB,UAAU,CAACtwB,CAAD,CAAnB,EAAwB8qB,SAAS,CAAC9qB,CAAD,CAAjC,CAA/C;EACD;;EACD,SAASuwB,gBAAT,CAA0BD,UAA1B,EAAsCE,UAAtC,EAAkD;IAChDF,UAAU,CAAC3P,GAAX,GAAiB1jB,IAAI,CAACgC,GAAL,CAASqxB,UAAU,CAAC3P,GAApB,EAAyB6P,UAAU,CAAC7P,GAApC,CAAjB;IACA2P,UAAU,CAAC70B,IAAX,GAAkBwB,IAAI,CAACgC,GAAL,CAASqxB,UAAU,CAAC70B,IAApB,EAA0B+0B,UAAU,CAAC/0B,IAArC,CAAlB;IACA60B,UAAU,CAAC1P,MAAX,GAAoB3jB,IAAI,CAACgC,GAAL,CAASqxB,UAAU,CAAC1P,MAApB,EAA4B4P,UAAU,CAAC5P,MAAvC,CAApB;IACA0P,UAAU,CAAC50B,KAAX,GAAmBuB,IAAI,CAACgC,GAAL,CAASqxB,UAAU,CAAC50B,KAApB,EAA2B80B,UAAU,CAAC90B,KAAtC,CAAnB;EACD;;EACD,SAAS+0B,UAAT,CAAoB3F,SAApB,EAA+BwE,MAA/B,EAAuCG,MAAvC,EAA+CV,MAA/C,EAAuD;IACrD,MAAM;MAAC7Z,GAAD;MAAM2R;IAAN,IAAa4I,MAAnB;IACA,MAAMa,UAAU,GAAGxF,SAAS,CAACwF,UAA7B;;IACA,IAAI,CAACve,QAAQ,CAACmD,GAAD,CAAb,EAAoB;MAClB,IAAIua,MAAM,CAACja,IAAX,EAAiB;QACfsV,SAAS,CAAC5V,GAAD,CAAT,IAAkBua,MAAM,CAACja,IAAzB;MACD;;MACD,MAAMiZ,KAAK,GAAGM,MAAM,CAACU,MAAM,CAAChB,KAAR,CAAN,IAAwB;QAACjZ,IAAI,EAAE,CAAP;QAAU2Z,KAAK,EAAE;MAAjB,CAAtC;MACAV,KAAK,CAACjZ,IAAN,GAAavY,IAAI,CAACgC,GAAL,CAASwvB,KAAK,CAACjZ,IAAf,EAAqBia,MAAM,CAACd,UAAP,GAAoB9H,GAAG,CAAC7H,MAAxB,GAAiC6H,GAAG,CAAClJ,KAA1D,CAAb;MACA8R,MAAM,CAACja,IAAP,GAAciZ,KAAK,CAACjZ,IAAN,GAAaiZ,KAAK,CAACU,KAAjC;MACArE,SAAS,CAAC5V,GAAD,CAAT,IAAkBua,MAAM,CAACja,IAAzB;IACD;;IACD,IAAIqR,GAAG,CAAC6J,UAAR,EAAoB;MAClBH,gBAAgB,CAACD,UAAD,EAAazJ,GAAG,CAAC6J,UAAJ,EAAb,CAAhB;IACD;;IACD,MAAMC,QAAQ,GAAG1zB,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAYqwB,MAAM,CAACsB,UAAP,GAAoBP,cAAc,CAACC,UAAD,EAAaxF,SAAb,EAAwB,MAAxB,EAAgC,OAAhC,CAA9C,CAAjB;IACA,MAAM+F,SAAS,GAAG5zB,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAYqwB,MAAM,CAACwB,WAAP,GAAqBT,cAAc,CAACC,UAAD,EAAaxF,SAAb,EAAwB,KAAxB,EAA+B,QAA/B,CAA/C,CAAlB;IACA,MAAMiG,YAAY,GAAGJ,QAAQ,KAAK7F,SAAS,CAACxoB,CAA5C;IACA,MAAM0uB,aAAa,GAAGH,SAAS,KAAK/F,SAAS,CAACzpB,CAA9C;IACAypB,SAAS,CAACxoB,CAAV,GAAcquB,QAAd;IACA7F,SAAS,CAACzpB,CAAV,GAAcwvB,SAAd;IACA,OAAOpB,MAAM,CAACd,UAAP,GACH;MAACsC,IAAI,EAAEF,YAAP;MAAqBG,KAAK,EAAEF;IAA5B,CADG,GAEH;MAACC,IAAI,EAAED,aAAP;MAAsBE,KAAK,EAAEH;IAA7B,CAFJ;EAGD;;EACD,SAASI,gBAAT,CAA0BrG,SAA1B,EAAqC;IACnC,MAAMwF,UAAU,GAAGxF,SAAS,CAACwF,UAA7B;;IACA,SAASc,SAAT,CAAmBlc,GAAnB,EAAwB;MACtB,MAAM2Y,MAAM,GAAG5wB,IAAI,CAACgC,GAAL,CAASqxB,UAAU,CAACpb,GAAD,CAAV,GAAkB4V,SAAS,CAAC5V,GAAD,CAApC,EAA2C,CAA3C,CAAf;MACA4V,SAAS,CAAC5V,GAAD,CAAT,IAAkB2Y,MAAlB;MACA,OAAOA,MAAP;IACD;;IACD/C,SAAS,CAAC/P,CAAV,IAAeqW,SAAS,CAAC,KAAD,CAAxB;IACAtG,SAAS,CAACtnB,CAAV,IAAe4tB,SAAS,CAAC,MAAD,CAAxB;IACAA,SAAS,CAAC,OAAD,CAAT;IACAA,SAAS,CAAC,QAAD,CAAT;EACD;;EACD,SAASC,UAAT,CAAoB1C,UAApB,EAAgC7D,SAAhC,EAA2C;IACzC,MAAMwF,UAAU,GAAGxF,SAAS,CAACwF,UAA7B;;IACA,SAASgB,kBAAT,CAA4BrL,SAA5B,EAAuC;MACrC,MAAMvF,MAAM,GAAG;QAACjlB,IAAI,EAAE,CAAP;QAAUklB,GAAG,EAAE,CAAf;QAAkBjlB,KAAK,EAAE,CAAzB;QAA4BklB,MAAM,EAAE;MAApC,CAAf;MACAqF,SAAS,CAACnpB,OAAV,CAAmBoY,GAAD,IAAS;QACzBwL,MAAM,CAACxL,GAAD,CAAN,GAAcjY,IAAI,CAACgC,GAAL,CAAS6rB,SAAS,CAAC5V,GAAD,CAAlB,EAAyBob,UAAU,CAACpb,GAAD,CAAnC,CAAd;MACD,CAFD;MAGA,OAAOwL,MAAP;IACD;;IACD,OAAOiO,UAAU,GACb2C,kBAAkB,CAAC,CAAC,MAAD,EAAS,OAAT,CAAD,CADL,GAEbA,kBAAkB,CAAC,CAAC,KAAD,EAAQ,QAAR,CAAD,CAFtB;EAGD;;EACD,SAASC,QAAT,CAAkBhD,KAAlB,EAAyBzD,SAAzB,EAAoCwE,MAApC,EAA4CP,MAA5C,EAAoD;IAClD,MAAMyC,UAAU,GAAG,EAAnB;IACA,IAAI7zB,CAAJ,EAAOsV,IAAP,EAAawc,MAAb,EAAqB5I,GAArB,EAA0B4K,KAA1B,EAAiCC,OAAjC;;IACA,KAAK/zB,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGsb,KAAK,CAAC7wB,MAApB,EAA4B+zB,KAAK,GAAG,CAAzC,EAA4C9zB,CAAC,GAAGsV,IAAhD,EAAsD,EAAEtV,CAAxD,EAA2D;MACzD8xB,MAAM,GAAGlB,KAAK,CAAC5wB,CAAD,CAAd;MACAkpB,GAAG,GAAG4I,MAAM,CAAC5I,GAAb;MACAA,GAAG,CAAC8K,MAAJ,CACElC,MAAM,CAAC9R,KAAP,IAAgBmN,SAAS,CAACxoB,CAD5B,EAEEmtB,MAAM,CAACzQ,MAAP,IAAiB8L,SAAS,CAACzpB,CAF7B,EAGEgwB,UAAU,CAAC5B,MAAM,CAACd,UAAR,EAAoB7D,SAApB,CAHZ;MAKA,MAAM;QAACmG,IAAD;QAAOC;MAAP,IAAgBT,UAAU,CAAC3F,SAAD,EAAYwE,MAAZ,EAAoBG,MAApB,EAA4BV,MAA5B,CAAhC;MACA0C,KAAK,IAAIR,IAAI,IAAIO,UAAU,CAAC9zB,MAA5B;MACAg0B,OAAO,GAAGA,OAAO,IAAIR,KAArB;;MACA,IAAI,CAACrK,GAAG,CAAC6I,QAAT,EAAmB;QACjB8B,UAAU,CAAC7yB,IAAX,CAAgB8wB,MAAhB;MACD;IACF;;IACD,OAAOgC,KAAK,IAAIF,QAAQ,CAACC,UAAD,EAAa1G,SAAb,EAAwBwE,MAAxB,EAAgCP,MAAhC,CAAjB,IAA4D2C,OAAnE;EACD;;EACD,SAASE,UAAT,CAAoB/K,GAApB,EAAyBprB,IAAzB,EAA+BklB,GAA/B,EAAoChD,KAApC,EAA2CqB,MAA3C,EAAmD;IACjD6H,GAAG,CAAClG,GAAJ,GAAUA,GAAV;IACAkG,GAAG,CAACprB,IAAJ,GAAWA,IAAX;IACAorB,GAAG,CAACnrB,KAAJ,GAAYD,IAAI,GAAGkiB,KAAnB;IACAkJ,GAAG,CAACjG,MAAJ,GAAaD,GAAG,GAAG3B,MAAnB;IACA6H,GAAG,CAAClJ,KAAJ,GAAYA,KAAZ;IACAkJ,GAAG,CAAC7H,MAAJ,GAAaA,MAAb;EACD;;EACD,SAAS6S,UAAT,CAAoBtD,KAApB,EAA2BzD,SAA3B,EAAsCwE,MAAtC,EAA8CP,MAA9C,EAAsD;IACpD,MAAM+C,WAAW,GAAGxC,MAAM,CAACyC,OAA3B;IACA,IAAI;MAACvuB,CAAD;MAAIuX;IAAJ,IAAS+P,SAAb;;IACA,KAAK,MAAM2E,MAAX,IAAqBlB,KAArB,EAA4B;MAC1B,MAAM1H,GAAG,GAAG4I,MAAM,CAAC5I,GAAnB;MACA,MAAM4H,KAAK,GAAGM,MAAM,CAACU,MAAM,CAAChB,KAAR,CAAN,IAAwB;QAACU,KAAK,EAAE,CAAR;QAAWC,MAAM,EAAE,CAAnB;QAAsBnf,MAAM,EAAE;MAA9B,CAAtC;MACA,MAAMA,MAAM,GAAIwf,MAAM,CAACf,WAAP,GAAqBD,KAAK,CAACxe,MAA5B,IAAuC,CAAtD;;MACA,IAAIwf,MAAM,CAACd,UAAX,EAAuB;QACrB,MAAMhR,KAAK,GAAGmN,SAAS,CAACxoB,CAAV,GAAc2N,MAA5B;QACA,MAAM+O,MAAM,GAAGyP,KAAK,CAACjZ,IAAN,IAAcqR,GAAG,CAAC7H,MAAjC;;QACA,IAAI3J,OAAO,CAACoZ,KAAK,CAACnzB,KAAP,CAAX,EAA0B;UACxByf,CAAC,GAAG0T,KAAK,CAACnzB,KAAV;QACD;;QACD,IAAIurB,GAAG,CAAC6I,QAAR,EAAkB;UAChBkC,UAAU,CAAC/K,GAAD,EAAMiL,WAAW,CAACr2B,IAAlB,EAAwBsf,CAAxB,EAA2BuU,MAAM,CAACsB,UAAP,GAAoBkB,WAAW,CAACp2B,KAAhC,GAAwCo2B,WAAW,CAACr2B,IAA/E,EAAqFujB,MAArF,CAAV;QACD,CAFD,MAEO;UACL4S,UAAU,CAAC/K,GAAD,EAAMiE,SAAS,CAACrvB,IAAV,GAAiBgzB,KAAK,CAACW,MAA7B,EAAqCrU,CAArC,EAAwC4C,KAAxC,EAA+CqB,MAA/C,CAAV;QACD;;QACDyP,KAAK,CAACnzB,KAAN,GAAcyf,CAAd;QACA0T,KAAK,CAACW,MAAN,IAAgBzR,KAAhB;QACA5C,CAAC,GAAG8L,GAAG,CAACjG,MAAR;MACD,CAdD,MAcO;QACL,MAAM5B,MAAM,GAAG8L,SAAS,CAACzpB,CAAV,GAAc4O,MAA7B;QACA,MAAM0N,KAAK,GAAG8Q,KAAK,CAACjZ,IAAN,IAAcqR,GAAG,CAAClJ,KAAhC;;QACA,IAAItI,OAAO,CAACoZ,KAAK,CAACnzB,KAAP,CAAX,EAA0B;UACxBkI,CAAC,GAAGirB,KAAK,CAACnzB,KAAV;QACD;;QACD,IAAIurB,GAAG,CAAC6I,QAAR,EAAkB;UAChBkC,UAAU,CAAC/K,GAAD,EAAMrjB,CAAN,EAASsuB,WAAW,CAACnR,GAArB,EAA0BhD,KAA1B,EAAiC2R,MAAM,CAACwB,WAAP,GAAqBgB,WAAW,CAAClR,MAAjC,GAA0CkR,WAAW,CAACnR,GAAvF,CAAV;QACD,CAFD,MAEO;UACLiR,UAAU,CAAC/K,GAAD,EAAMrjB,CAAN,EAASsnB,SAAS,CAACnK,GAAV,GAAgB8N,KAAK,CAACW,MAA/B,EAAuCzR,KAAvC,EAA8CqB,MAA9C,CAAV;QACD;;QACDyP,KAAK,CAACnzB,KAAN,GAAckI,CAAd;QACAirB,KAAK,CAACW,MAAN,IAAgBpQ,MAAhB;QACAxb,CAAC,GAAGqjB,GAAG,CAACnrB,KAAR;MACD;IACF;;IACDovB,SAAS,CAACtnB,CAAV,GAAcA,CAAd;IACAsnB,SAAS,CAAC/P,CAAV,GAAcA,CAAd;EACD;;EACD9B,QAAQ,CAAC1a,GAAT,CAAa,QAAb,EAAuB;IACrByzB,WAAW,EAAE,IADQ;IAErBD,OAAO,EAAE;MACPpR,GAAG,EAAE,CADE;MAEPjlB,KAAK,EAAE,CAFA;MAGPklB,MAAM,EAAE,CAHD;MAIPnlB,IAAI,EAAE;IAJC;EAFY,CAAvB;EASA,IAAIqzB,OAAO,GAAG;IACZmD,MAAM,CAAC31B,KAAD,EAAQuB,IAAR,EAAc;MAClB,IAAI,CAACvB,KAAK,CAACiyB,KAAX,EAAkB;QAChBjyB,KAAK,CAACiyB,KAAN,GAAc,EAAd;MACD;;MACD1wB,IAAI,CAAC6xB,QAAL,GAAgB7xB,IAAI,CAAC6xB,QAAL,IAAiB,KAAjC;MACA7xB,IAAI,CAACysB,QAAL,GAAgBzsB,IAAI,CAACysB,QAAL,IAAiB,KAAjC;MACAzsB,IAAI,CAACoS,MAAL,GAAcpS,IAAI,CAACoS,MAAL,IAAe,CAA7B;;MACApS,IAAI,CAACq0B,OAAL,GAAer0B,IAAI,CAACq0B,OAAL,IAAgB,YAAW;QACxC,OAAO,CAAC;UACNC,CAAC,EAAE,CADG;;UAENv0B,IAAI,CAACktB,SAAD,EAAY;YACdjtB,IAAI,CAACD,IAAL,CAAUktB,SAAV;UACD;;QAJK,CAAD,CAAP;MAMD,CAPD;;MAQAxuB,KAAK,CAACiyB,KAAN,CAAY5vB,IAAZ,CAAiBd,IAAjB;IACD,CAjBW;;IAkBZu0B,SAAS,CAAC91B,KAAD,EAAQ+1B,UAAR,EAAoB;MAC3B,MAAMhf,KAAK,GAAG/W,KAAK,CAACiyB,KAAN,GAAcjyB,KAAK,CAACiyB,KAAN,CAAY3a,OAAZ,CAAoBye,UAApB,CAAd,GAAgD,CAAC,CAA/D;;MACA,IAAIhf,KAAK,KAAK,CAAC,CAAf,EAAkB;QAChB/W,KAAK,CAACiyB,KAAN,CAAYjQ,MAAZ,CAAmBjL,KAAnB,EAA0B,CAA1B;MACD;IACF,CAvBW;;IAwBZif,SAAS,CAACh2B,KAAD,EAAQuB,IAAR,EAAciW,OAAd,EAAuB;MAC9BjW,IAAI,CAAC6xB,QAAL,GAAgB5b,OAAO,CAAC4b,QAAxB;MACA7xB,IAAI,CAACysB,QAAL,GAAgBxW,OAAO,CAACwW,QAAxB;MACAzsB,IAAI,CAACoS,MAAL,GAAc6D,OAAO,CAAC7D,MAAtB;IACD,CA5BW;;IA6BZ0hB,MAAM,CAACr1B,KAAD,EAAQqhB,KAAR,EAAeqB,MAAf,EAAuBuT,UAAvB,EAAmC;MACvC,IAAI,CAACj2B,KAAL,EAAY;QACV;MACD;;MACD,MAAMy1B,OAAO,GAAG7E,SAAS,CAAC5wB,KAAK,CAACwX,OAAN,CAAc2b,MAAd,CAAqBsC,OAAtB,CAAzB;MACA,MAAMnC,cAAc,GAAG3yB,IAAI,CAACgC,GAAL,CAAS0e,KAAK,GAAGoU,OAAO,CAACpU,KAAzB,EAAgC,CAAhC,CAAvB;MACA,MAAMkS,eAAe,GAAG5yB,IAAI,CAACgC,GAAL,CAAS+f,MAAM,GAAG+S,OAAO,CAAC/S,MAA1B,EAAkC,CAAlC,CAAxB;MACA,MAAMuP,KAAK,GAAGuB,gBAAgB,CAACxzB,KAAK,CAACiyB,KAAP,CAA9B;MACA,MAAMiE,aAAa,GAAGjE,KAAK,CAAC6B,QAA5B;MACA,MAAMqC,eAAe,GAAGlE,KAAK,CAACI,UAA9B;MACAhc,IAAI,CAACrW,KAAK,CAACiyB,KAAP,EAAc1H,GAAG,IAAI;QACvB,IAAI,OAAOA,GAAG,CAAC6L,YAAX,KAA4B,UAAhC,EAA4C;UAC1C7L,GAAG,CAAC6L,YAAJ;QACD;MACF,CAJG,CAAJ;MAKA,MAAMC,uBAAuB,GAAGH,aAAa,CAAC1zB,MAAd,CAAqB,CAAC8zB,KAAD,EAAQ5D,IAAR,KACnDA,IAAI,CAACnI,GAAL,CAAS/S,OAAT,IAAoBkb,IAAI,CAACnI,GAAL,CAAS/S,OAAT,CAAiB+e,OAAjB,KAA6B,KAAjD,GAAyDD,KAAzD,GAAiEA,KAAK,GAAG,CAD3C,EAC8C,CAD9C,KACoD,CADpF;MAEA,MAAMtD,MAAM,GAAGjhB,MAAM,CAACykB,MAAP,CAAc;QAC3BlC,UAAU,EAAEjT,KADe;QAE3BmT,WAAW,EAAE9R,MAFc;QAG3B+S,OAH2B;QAI3BnC,cAJ2B;QAK3BC,eAL2B;QAM3BN,YAAY,EAAEK,cAAc,GAAG,CAAjB,GAAqB+C,uBANR;QAO3BnD,aAAa,EAAEK,eAAe,GAAG;MAPN,CAAd,CAAf;MASA,MAAMS,UAAU,GAAGjiB,MAAM,CAACgB,MAAP,CAAc,EAAd,EAAkB0iB,OAAlB,CAAnB;MACAxB,gBAAgB,CAACD,UAAD,EAAapD,SAAS,CAACqF,UAAD,CAAtB,CAAhB;MACA,MAAMzH,SAAS,GAAGzc,MAAM,CAACgB,MAAP,CAAc;QAC9BihB,UAD8B;QAE9BhuB,CAAC,EAAEstB,cAF2B;QAG9BvuB,CAAC,EAAEwuB,eAH2B;QAI9BrsB,CAAC,EAAEuuB,OAAO,CAACt2B,IAJmB;QAK9Bsf,CAAC,EAAEgX,OAAO,CAACpR;MALmB,CAAd,EAMfoR,OANe,CAAlB;MAOA,MAAMhD,MAAM,GAAGM,aAAa,CAACmD,aAAa,CAACtC,MAAd,CAAqBuC,eAArB,CAAD,EAAwCnD,MAAxC,CAA5B;MACAiC,QAAQ,CAAChD,KAAK,CAACmB,QAAP,EAAiB5E,SAAjB,EAA4BwE,MAA5B,EAAoCP,MAApC,CAAR;MACAwC,QAAQ,CAACiB,aAAD,EAAgB1H,SAAhB,EAA2BwE,MAA3B,EAAmCP,MAAnC,CAAR;;MACA,IAAIwC,QAAQ,CAACkB,eAAD,EAAkB3H,SAAlB,EAA6BwE,MAA7B,EAAqCP,MAArC,CAAZ,EAA0D;QACxDwC,QAAQ,CAACiB,aAAD,EAAgB1H,SAAhB,EAA2BwE,MAA3B,EAAmCP,MAAnC,CAAR;MACD;;MACDoC,gBAAgB,CAACrG,SAAD,CAAhB;MACA+G,UAAU,CAACtD,KAAK,CAAC0B,UAAP,EAAmBnF,SAAnB,EAA8BwE,MAA9B,EAAsCP,MAAtC,CAAV;MACAjE,SAAS,CAACtnB,CAAV,IAAesnB,SAAS,CAACxoB,CAAzB;MACAwoB,SAAS,CAAC/P,CAAV,IAAe+P,SAAS,CAACzpB,CAAzB;MACAwwB,UAAU,CAACtD,KAAK,CAAC4B,cAAP,EAAuBrF,SAAvB,EAAkCwE,MAAlC,EAA0CP,MAA1C,CAAV;MACAzyB,KAAK,CAACwuB,SAAN,GAAkB;QAChBrvB,IAAI,EAAEqvB,SAAS,CAACrvB,IADA;QAEhBklB,GAAG,EAAEmK,SAAS,CAACnK,GAFC;QAGhBjlB,KAAK,EAAEovB,SAAS,CAACrvB,IAAV,GAAiBqvB,SAAS,CAACxoB,CAHlB;QAIhBse,MAAM,EAAEkK,SAAS,CAACnK,GAAV,GAAgBmK,SAAS,CAACzpB,CAJlB;QAKhB2d,MAAM,EAAE8L,SAAS,CAACzpB,CALF;QAMhBsc,KAAK,EAAEmN,SAAS,CAACxoB;MAND,CAAlB;MAQAqQ,IAAI,CAAC4b,KAAK,CAACzD,SAAP,EAAmB2E,MAAD,IAAY;QAChC,MAAM5I,GAAG,GAAG4I,MAAM,CAAC5I,GAAnB;QACAxY,MAAM,CAACgB,MAAP,CAAcwX,GAAd,EAAmBvqB,KAAK,CAACwuB,SAAzB;QACAjE,GAAG,CAAC8K,MAAJ,CAAW7G,SAAS,CAACxoB,CAArB,EAAwBwoB,SAAS,CAACzpB,CAAlC,EAAqC;UAAC5F,IAAI,EAAE,CAAP;UAAUklB,GAAG,EAAE,CAAf;UAAkBjlB,KAAK,EAAE,CAAzB;UAA4BklB,MAAM,EAAE;QAApC,CAArC;MACD,CAJG,CAAJ;IAKD;;EAxFW,CAAd;;EA2FA,SAASmS,eAAT,CAAyBC,MAAzB,EAA8G;IAAA,IAA7EC,QAA6E,uEAAlE,CAAC,EAAD,CAAkE;IAAA,IAA5DC,UAA4D,uEAA/CF,MAA+C;IAAA,IAAvC5F,QAAuC;IAAA,IAA7B+F,SAA6B,uEAAjB,MAAMH,MAAM,CAAC,CAAD,CAAK;;IAC5G,IAAI,CAAC3d,OAAO,CAAC+X,QAAD,CAAZ,EAAwB;MACtBA,QAAQ,GAAGgG,QAAQ,CAAC,WAAD,EAAcJ,MAAd,CAAnB;IACD;;IACD,MAAMlV,KAAK,GAAG;MACZ,CAACuV,MAAM,CAACC,WAAR,GAAsB,QADV;MAEZC,UAAU,EAAE,IAFA;MAGZC,OAAO,EAAER,MAHG;MAIZS,WAAW,EAAEP,UAJD;MAKZ7Z,SAAS,EAAE+T,QALC;MAMZsG,UAAU,EAAEP,SANA;MAOZ9a,QAAQ,EAAG7D,KAAD,IAAWue,eAAe,CAAC,CAACve,KAAD,EAAQ,GAAGwe,MAAX,CAAD,EAAqBC,QAArB,EAA+BC,UAA/B,EAA2C9F,QAA3C;IAPxB,CAAd;IASA,OAAO,IAAIuG,KAAJ,CAAU7V,KAAV,EAAiB;MACtB8V,cAAc,CAACrgB,MAAD,EAASwZ,IAAT,EAAe;QAC3B,OAAOxZ,MAAM,CAACwZ,IAAD,CAAb;QACA,OAAOxZ,MAAM,CAACsgB,KAAd;QACA,OAAOb,MAAM,CAAC,CAAD,CAAN,CAAUjG,IAAV,CAAP;QACA,OAAO,IAAP;MACD,CANqB;;MAOtB3uB,GAAG,CAACmV,MAAD,EAASwZ,IAAT,EAAe;QAChB,OAAO+G,OAAO,CAACvgB,MAAD,EAASwZ,IAAT,EACZ,MAAMgH,oBAAoB,CAAChH,IAAD,EAAOkG,QAAP,EAAiBD,MAAjB,EAAyBzf,MAAzB,CADd,CAAd;MAED,CAVqB;;MAWtBygB,wBAAwB,CAACzgB,MAAD,EAASwZ,IAAT,EAAe;QACrC,OAAOkH,OAAO,CAACD,wBAAR,CAAiCzgB,MAAM,CAACigB,OAAP,CAAe,CAAf,CAAjC,EAAoDzG,IAApD,CAAP;MACD,CAbqB;;MActBmH,cAAc,GAAG;QACf,OAAOD,OAAO,CAACC,cAAR,CAAuBlB,MAAM,CAAC,CAAD,CAA7B,CAAP;MACD,CAhBqB;;MAiBtBn0B,GAAG,CAAC0U,MAAD,EAASwZ,IAAT,EAAe;QAChB,OAAOoH,oBAAoB,CAAC5gB,MAAD,CAApB,CAA6B0b,QAA7B,CAAsClC,IAAtC,CAAP;MACD,CAnBqB;;MAoBtBqH,OAAO,CAAC7gB,MAAD,EAAS;QACd,OAAO4gB,oBAAoB,CAAC5gB,MAAD,CAA3B;MACD,CAtBqB;;MAuBtBhV,GAAG,CAACgV,MAAD,EAASwZ,IAAT,EAAe1b,KAAf,EAAsB;QACvB,MAAMgjB,OAAO,GAAG9gB,MAAM,CAAC+gB,QAAP,KAAoB/gB,MAAM,CAAC+gB,QAAP,GAAkBnB,SAAS,EAA/C,CAAhB;QACA5f,MAAM,CAACwZ,IAAD,CAAN,GAAesH,OAAO,CAACtH,IAAD,CAAP,GAAgB1b,KAA/B;QACA,OAAOkC,MAAM,CAACsgB,KAAd;QACA,OAAO,IAAP;MACD;;IA5BqB,CAAjB,CAAP;EA8BD;;EACD,SAASU,cAAT,CAAwBC,KAAxB,EAA+Bhe,OAA/B,EAAwCie,QAAxC,EAAkDC,kBAAlD,EAAsE;IACpE,MAAM5W,KAAK,GAAG;MACZyV,UAAU,EAAE,KADA;MAEZoB,MAAM,EAAEH,KAFI;MAGZI,QAAQ,EAAEpe,OAHE;MAIZqe,SAAS,EAAEJ,QAJC;MAKZvF,MAAM,EAAE,IAAInK,GAAJ,EALI;MAMZ7O,YAAY,EAAEA,YAAY,CAACse,KAAD,EAAQE,kBAAR,CANd;MAOZI,UAAU,EAAG3d,GAAD,IAASod,cAAc,CAACC,KAAD,EAAQrd,GAAR,EAAasd,QAAb,EAAuBC,kBAAvB,CAPvB;MAQZrc,QAAQ,EAAG7D,KAAD,IAAW+f,cAAc,CAACC,KAAK,CAACnc,QAAN,CAAe7D,KAAf,CAAD,EAAwBgC,OAAxB,EAAiCie,QAAjC,EAA2CC,kBAA3C;IARvB,CAAd;IAUA,OAAO,IAAIf,KAAJ,CAAU7V,KAAV,EAAiB;MACtB8V,cAAc,CAACrgB,MAAD,EAASwZ,IAAT,EAAe;QAC3B,OAAOxZ,MAAM,CAACwZ,IAAD,CAAb;QACA,OAAOyH,KAAK,CAACzH,IAAD,CAAZ;QACA,OAAO,IAAP;MACD,CALqB;;MAMtB3uB,GAAG,CAACmV,MAAD,EAASwZ,IAAT,EAAegI,QAAf,EAAyB;QAC1B,OAAOjB,OAAO,CAACvgB,MAAD,EAASwZ,IAAT,EACZ,MAAMiI,mBAAmB,CAACzhB,MAAD,EAASwZ,IAAT,EAAegI,QAAf,CADb,CAAd;MAED,CATqB;;MAUtBf,wBAAwB,CAACzgB,MAAD,EAASwZ,IAAT,EAAe;QACrC,OAAOxZ,MAAM,CAAC2C,YAAP,CAAoB+e,OAApB,GACHhB,OAAO,CAACp1B,GAAR,CAAY21B,KAAZ,EAAmBzH,IAAnB,IAA2B;UAAChU,UAAU,EAAE,IAAb;UAAmBwL,YAAY,EAAE;QAAjC,CAA3B,GAAoEnoB,SADjE,GAEH63B,OAAO,CAACD,wBAAR,CAAiCQ,KAAjC,EAAwCzH,IAAxC,CAFJ;MAGD,CAdqB;;MAetBmH,cAAc,GAAG;QACf,OAAOD,OAAO,CAACC,cAAR,CAAuBM,KAAvB,CAAP;MACD,CAjBqB;;MAkBtB31B,GAAG,CAAC0U,MAAD,EAASwZ,IAAT,EAAe;QAChB,OAAOkH,OAAO,CAACp1B,GAAR,CAAY21B,KAAZ,EAAmBzH,IAAnB,CAAP;MACD,CApBqB;;MAqBtBqH,OAAO,GAAG;QACR,OAAOH,OAAO,CAACG,OAAR,CAAgBI,KAAhB,CAAP;MACD,CAvBqB;;MAwBtBj2B,GAAG,CAACgV,MAAD,EAASwZ,IAAT,EAAe1b,KAAf,EAAsB;QACvBmjB,KAAK,CAACzH,IAAD,CAAL,GAAc1b,KAAd;QACA,OAAOkC,MAAM,CAACwZ,IAAD,CAAb;QACA,OAAO,IAAP;MACD;;IA5BqB,CAAjB,CAAP;EA8BD;;EACD,SAAS7W,YAAT,CAAsBse,KAAtB,EAA6E;IAAA,IAAhDvb,QAAgD,uEAArC;MAACic,UAAU,EAAE,IAAb;MAAmBC,SAAS,EAAE;IAA9B,CAAqC;IAC3E,MAAM;MAACjc,WAAW,GAAGD,QAAQ,CAACic,UAAxB;MAAoC9b,UAAU,GAAGH,QAAQ,CAACkc,SAA1D;MAAqEC,QAAQ,GAAGnc,QAAQ,CAACgc;IAAzF,IAAoGT,KAA1G;IACA,OAAO;MACLS,OAAO,EAAEG,QADJ;MAELF,UAAU,EAAEhc,WAFP;MAGLic,SAAS,EAAE/b,UAHN;MAILic,YAAY,EAAE/f,UAAU,CAAC4D,WAAD,CAAV,GAA0BA,WAA1B,GAAwC,MAAMA,WAJvD;MAKLoc,WAAW,EAAEhgB,UAAU,CAAC8D,UAAD,CAAV,GAAyBA,UAAzB,GAAsC,MAAMA;IALpD,CAAP;EAOD;;EACD,MAAMmc,OAAO,GAAG,CAACC,MAAD,EAASjd,IAAT,KAAkBid,MAAM,GAAGA,MAAM,GAAGrgB,WAAW,CAACoD,IAAD,CAAvB,GAAgCA,IAAxE;;EACA,MAAMkd,gBAAgB,GAAG,CAAC1I,IAAD,EAAO1b,KAAP,KAAiBU,QAAQ,CAACV,KAAD,CAAR,IAAmB0b,IAAI,KAAK,UAA5B,KACvC1e,MAAM,CAAC6lB,cAAP,CAAsB7iB,KAAtB,MAAiC,IAAjC,IAAyCA,KAAK,CAACvV,WAAN,KAAsBuS,MADxB,CAA1C;;EAEA,SAASylB,OAAT,CAAiBvgB,MAAjB,EAAyBwZ,IAAzB,EAA+BM,OAA/B,EAAwC;IACtC,IAAIhf,MAAM,CAAC7T,SAAP,CAAiB8Z,cAAjB,CAAgC5Z,IAAhC,CAAqC6Y,MAArC,EAA6CwZ,IAA7C,CAAJ,EAAwD;MACtD,OAAOxZ,MAAM,CAACwZ,IAAD,CAAb;IACD;;IACD,MAAM1b,KAAK,GAAGgc,OAAO,EAArB;IACA9Z,MAAM,CAACwZ,IAAD,CAAN,GAAe1b,KAAf;IACA,OAAOA,KAAP;EACD;;EACD,SAAS2jB,mBAAT,CAA6BzhB,MAA7B,EAAqCwZ,IAArC,EAA2CgI,QAA3C,EAAqD;IACnD,MAAM;MAACJ,MAAD;MAASC,QAAT;MAAmBC,SAAnB;MAA8B3e,YAAY,EAAEP;IAA5C,IAA2DpC,MAAjE;IACA,IAAIlC,KAAK,GAAGsjB,MAAM,CAAC5H,IAAD,CAAlB;;IACA,IAAIzX,UAAU,CAACjE,KAAD,CAAV,IAAqBsE,WAAW,CAAC0f,YAAZ,CAAyBtI,IAAzB,CAAzB,EAAyD;MACvD1b,KAAK,GAAGqkB,kBAAkB,CAAC3I,IAAD,EAAO1b,KAAP,EAAckC,MAAd,EAAsBwhB,QAAtB,CAA1B;IACD;;IACD,IAAIpyB,OAAO,CAAC0O,KAAD,CAAP,IAAkBA,KAAK,CAAC3T,MAA5B,EAAoC;MAClC2T,KAAK,GAAGskB,aAAa,CAAC5I,IAAD,EAAO1b,KAAP,EAAckC,MAAd,EAAsBoC,WAAW,CAAC2f,WAAlC,CAArB;IACD;;IACD,IAAIG,gBAAgB,CAAC1I,IAAD,EAAO1b,KAAP,CAApB,EAAmC;MACjCA,KAAK,GAAGkjB,cAAc,CAACljB,KAAD,EAAQujB,QAAR,EAAkBC,SAAS,IAAIA,SAAS,CAAC9H,IAAD,CAAxC,EAAgDpX,WAAhD,CAAtB;IACD;;IACD,OAAOtE,KAAP;EACD;;EACD,SAASqkB,kBAAT,CAA4B3I,IAA5B,EAAkC1b,KAAlC,EAAyCkC,MAAzC,EAAiDwhB,QAAjD,EAA2D;IACzD,MAAM;MAACJ,MAAD;MAASC,QAAT;MAAmBC,SAAnB;MAA8B3F;IAA9B,IAAwC3b,MAA9C;;IACA,IAAI2b,MAAM,CAACrwB,GAAP,CAAWkuB,IAAX,CAAJ,EAAsB;MACpB,MAAM,IAAI6I,KAAJ,CAAU,yBAAyBr7B,KAAK,CAACyqB,IAAN,CAAWkK,MAAX,EAAmB2G,IAAnB,CAAwB,IAAxB,CAAzB,GAAyD,IAAzD,GAAgE9I,IAA1E,CAAN;IACD;;IACDmC,MAAM,CAACtwB,GAAP,CAAWmuB,IAAX;;IACA1b,KAAK,GAAGA,KAAK,CAACujB,QAAD,EAAWC,SAAS,IAAIE,QAAxB,CAAb;;IACA7F,MAAM,CAAC5vB,MAAP,CAAcytB,IAAd;;IACA,IAAI0I,gBAAgB,CAAC1I,IAAD,EAAO1b,KAAP,CAApB,EAAmC;MACjCA,KAAK,GAAGykB,iBAAiB,CAACnB,MAAM,CAACnB,OAAR,EAAiBmB,MAAjB,EAAyB5H,IAAzB,EAA+B1b,KAA/B,CAAzB;IACD;;IACD,OAAOA,KAAP;EACD;;EACD,SAASskB,aAAT,CAAuB5I,IAAvB,EAA6B1b,KAA7B,EAAoCkC,MAApC,EAA4C+hB,WAA5C,EAAyD;IACvD,MAAM;MAACX,MAAD;MAASC,QAAT;MAAmBC,SAAnB;MAA8B3e,YAAY,EAAEP;IAA5C,IAA2DpC,MAAjE;;IACA,IAAI8B,OAAO,CAACuf,QAAQ,CAACvhB,KAAV,CAAP,IAA2BiiB,WAAW,CAACvI,IAAD,CAA1C,EAAkD;MAChD1b,KAAK,GAAGA,KAAK,CAACujB,QAAQ,CAACvhB,KAAT,GAAiBhC,KAAK,CAAC3T,MAAxB,CAAb;IACD,CAFD,MAEO,IAAIqU,QAAQ,CAACV,KAAK,CAAC,CAAD,CAAN,CAAZ,EAAwB;MAC7B,MAAM0kB,GAAG,GAAG1kB,KAAZ;;MACA,MAAM2hB,MAAM,GAAG2B,MAAM,CAACnB,OAAP,CAAerF,MAAf,CAAsBlsB,CAAC,IAAIA,CAAC,KAAK8zB,GAAjC,CAAf;;MACA1kB,KAAK,GAAG,EAAR;;MACA,KAAK,MAAMxT,IAAX,IAAmBk4B,GAAnB,EAAwB;QACtB,MAAMC,QAAQ,GAAGF,iBAAiB,CAAC9C,MAAD,EAAS2B,MAAT,EAAiB5H,IAAjB,EAAuBlvB,IAAvB,CAAlC;QACAwT,KAAK,CAAC1S,IAAN,CAAW41B,cAAc,CAACyB,QAAD,EAAWpB,QAAX,EAAqBC,SAAS,IAAIA,SAAS,CAAC9H,IAAD,CAA3C,EAAmDpX,WAAnD,CAAzB;MACD;IACF;;IACD,OAAOtE,KAAP;EACD;;EACD,SAAS4kB,eAAT,CAAyB7I,QAAzB,EAAmCL,IAAnC,EAAyC1b,KAAzC,EAAgD;IAC9C,OAAOiE,UAAU,CAAC8X,QAAD,CAAV,GAAuBA,QAAQ,CAACL,IAAD,EAAO1b,KAAP,CAA/B,GAA+C+b,QAAtD;EACD;;EACD,MAAM8I,QAAQ,GAAG,CAACviB,GAAD,EAAM0R,MAAN,KAAiB1R,GAAG,KAAK,IAAR,GAAe0R,MAAf,GAC9B,OAAO1R,GAAP,KAAe,QAAf,GAA0BsB,gBAAgB,CAACoQ,MAAD,EAAS1R,GAAT,CAA1C,GAA0DvX,SAD9D;;EAEA,SAAS+5B,SAAT,CAAmB53B,GAAnB,EAAwB63B,YAAxB,EAAsCziB,GAAtC,EAA2C0iB,cAA3C,EAA2DhlB,KAA3D,EAAkE;IAChE,KAAK,MAAMgU,MAAX,IAAqB+Q,YAArB,EAAmC;MACjC,MAAM5hB,KAAK,GAAG0hB,QAAQ,CAACviB,GAAD,EAAM0R,MAAN,CAAtB;;MACA,IAAI7Q,KAAJ,EAAW;QACTjW,GAAG,CAACK,GAAJ,CAAQ4V,KAAR;QACA,MAAM4Y,QAAQ,GAAG6I,eAAe,CAACzhB,KAAK,CAAC6E,SAAP,EAAkB1F,GAAlB,EAAuBtC,KAAvB,CAAhC;;QACA,IAAIgE,OAAO,CAAC+X,QAAD,CAAP,IAAqBA,QAAQ,KAAKzZ,GAAlC,IAAyCyZ,QAAQ,KAAKiJ,cAA1D,EAA0E;UACxE,OAAOjJ,QAAP;QACD;MACF,CAND,MAMO,IAAI5Y,KAAK,KAAK,KAAV,IAAmBa,OAAO,CAACghB,cAAD,CAA1B,IAA8C1iB,GAAG,KAAK0iB,cAA1D,EAA0E;QAC/E,OAAO,IAAP;MACD;IACF;;IACD,OAAO,KAAP;EACD;;EACD,SAASP,iBAAT,CAA2BM,YAA3B,EAAyCJ,QAAzC,EAAmDjJ,IAAnD,EAAyD1b,KAAzD,EAAgE;IAC9D,MAAM6hB,UAAU,GAAG8C,QAAQ,CAACvC,WAA5B;IACA,MAAMrG,QAAQ,GAAG6I,eAAe,CAACD,QAAQ,CAAC3c,SAAV,EAAqB0T,IAArB,EAA2B1b,KAA3B,CAAhC;IACA,MAAMilB,SAAS,GAAG,CAAC,GAAGF,YAAJ,EAAkB,GAAGlD,UAArB,CAAlB;IACA,MAAM30B,GAAG,GAAG,IAAIwmB,GAAJ,EAAZ;IACAxmB,GAAG,CAACK,GAAJ,CAAQyS,KAAR;IACA,IAAIsC,GAAG,GAAG4iB,gBAAgB,CAACh4B,GAAD,EAAM+3B,SAAN,EAAiBvJ,IAAjB,EAAuBK,QAAQ,IAAIL,IAAnC,EAAyC1b,KAAzC,CAA1B;;IACA,IAAIsC,GAAG,KAAK,IAAZ,EAAkB;MAChB,OAAO,KAAP;IACD;;IACD,IAAI0B,OAAO,CAAC+X,QAAD,CAAP,IAAqBA,QAAQ,KAAKL,IAAtC,EAA4C;MAC1CpZ,GAAG,GAAG4iB,gBAAgB,CAACh4B,GAAD,EAAM+3B,SAAN,EAAiBlJ,QAAjB,EAA2BzZ,GAA3B,EAAgCtC,KAAhC,CAAtB;;MACA,IAAIsC,GAAG,KAAK,IAAZ,EAAkB;QAChB,OAAO,KAAP;MACD;IACF;;IACD,OAAOof,eAAe,CAACx4B,KAAK,CAACyqB,IAAN,CAAWzmB,GAAX,CAAD,EAAkB,CAAC,EAAD,CAAlB,EAAwB20B,UAAxB,EAAoC9F,QAApC,EACpB,MAAMoJ,YAAY,CAACR,QAAD,EAAWjJ,IAAX,EAAiB1b,KAAjB,CADE,CAAtB;EAED;;EACD,SAASklB,gBAAT,CAA0Bh4B,GAA1B,EAA+B+3B,SAA/B,EAA0C3iB,GAA1C,EAA+CyZ,QAA/C,EAAyDvvB,IAAzD,EAA+D;IAC7D,OAAO8V,GAAP,EAAY;MACVA,GAAG,GAAGwiB,SAAS,CAAC53B,GAAD,EAAM+3B,SAAN,EAAiB3iB,GAAjB,EAAsByZ,QAAtB,EAAgCvvB,IAAhC,CAAf;IACD;;IACD,OAAO8V,GAAP;EACD;;EACD,SAAS6iB,YAAT,CAAsBR,QAAtB,EAAgCjJ,IAAhC,EAAsC1b,KAAtC,EAA6C;IAC3C,MAAMgU,MAAM,GAAG2Q,QAAQ,CAACtC,UAAT,EAAf;;IACA,IAAI,EAAE3G,IAAI,IAAI1H,MAAV,CAAJ,EAAuB;MACrBA,MAAM,CAAC0H,IAAD,CAAN,GAAe,EAAf;IACD;;IACD,MAAMxZ,MAAM,GAAG8R,MAAM,CAAC0H,IAAD,CAArB;;IACA,IAAIpqB,OAAO,CAAC4Q,MAAD,CAAP,IAAmBxB,QAAQ,CAACV,KAAD,CAA/B,EAAwC;MACtC,OAAOA,KAAP;IACD;;IACD,OAAOkC,MAAP;EACD;;EACD,SAASwgB,oBAAT,CAA8BhH,IAA9B,EAAoCkG,QAApC,EAA8CD,MAA9C,EAAsDwB,KAAtD,EAA6D;IAC3D,IAAInjB,KAAJ;;IACA,KAAK,MAAMmkB,MAAX,IAAqBvC,QAArB,EAA+B;MAC7B5hB,KAAK,GAAG+hB,QAAQ,CAACmC,OAAO,CAACC,MAAD,EAASzI,IAAT,CAAR,EAAwBiG,MAAxB,CAAhB;;MACA,IAAI3d,OAAO,CAAChE,KAAD,CAAX,EAAoB;QAClB,OAAOokB,gBAAgB,CAAC1I,IAAD,EAAO1b,KAAP,CAAhB,GACHykB,iBAAiB,CAAC9C,MAAD,EAASwB,KAAT,EAAgBzH,IAAhB,EAAsB1b,KAAtB,CADd,GAEHA,KAFJ;MAGD;IACF;EACF;;EACD,SAAS+hB,QAAT,CAAkBzf,GAAlB,EAAuBqf,MAAvB,EAA+B;IAC7B,KAAK,MAAMxe,KAAX,IAAoBwe,MAApB,EAA4B;MAC1B,IAAI,CAACxe,KAAL,EAAY;QACV;MACD;;MACD,MAAMnD,KAAK,GAAGmD,KAAK,CAACb,GAAD,CAAnB;;MACA,IAAI0B,OAAO,CAAChE,KAAD,CAAX,EAAoB;QAClB,OAAOA,KAAP;MACD;IACF;EACF;;EACD,SAAS8iB,oBAAT,CAA8B5gB,MAA9B,EAAsC;IACpC,IAAInF,IAAI,GAAGmF,MAAM,CAACsgB,KAAlB;;IACA,IAAI,CAACzlB,IAAL,EAAW;MACTA,IAAI,GAAGmF,MAAM,CAACsgB,KAAP,GAAe4C,wBAAwB,CAACljB,MAAM,CAACigB,OAAR,CAA9C;IACD;;IACD,OAAOplB,IAAP;EACD;;EACD,SAASqoB,wBAAT,CAAkCzD,MAAlC,EAA0C;IACxC,MAAMz0B,GAAG,GAAG,IAAIwmB,GAAJ,EAAZ;;IACA,KAAK,MAAMvQ,KAAX,IAAoBwe,MAApB,EAA4B;MAC1B,KAAK,MAAMrf,GAAX,IAAkBtF,MAAM,CAACD,IAAP,CAAYoG,KAAZ,EAAmB2Z,MAAnB,CAA0BhsB,CAAC,IAAI,CAACA,CAAC,CAACgX,UAAF,CAAa,GAAb,CAAhC,CAAlB,EAAsE;QACpE5a,GAAG,CAACK,GAAJ,CAAQ+U,GAAR;MACD;IACF;;IACD,OAAOpZ,KAAK,CAACyqB,IAAN,CAAWzmB,GAAX,CAAP;EACD;;EAED,MAAMm4B,OAAO,GAAGzkB,MAAM,CAACykB,OAAP,IAAkB,KAAlC;;EACA,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAASj5B,CAAT,KAAeA,CAAC,GAAGi5B,MAAM,CAACl5B,MAAX,IAAqB,CAACk5B,MAAM,CAACj5B,CAAD,CAAN,CAAU8rB,IAAhC,IAAwCmN,MAAM,CAACj5B,CAAD,CAA9E;;EACA,MAAMk5B,YAAY,GAAIvf,SAAD,IAAeA,SAAS,KAAK,GAAd,GAAoB,GAApB,GAA0B,GAA9D;;EACA,SAASwf,WAAT,CAAqBC,UAArB,EAAiCC,WAAjC,EAA8CC,UAA9C,EAA0DC,CAA1D,EAA6D;IAC3D,MAAMziB,QAAQ,GAAGsiB,UAAU,CAACtN,IAAX,GAAkBuN,WAAlB,GAAgCD,UAAjD;IACA,MAAMriB,OAAO,GAAGsiB,WAAhB;IACA,MAAMG,IAAI,GAAGF,UAAU,CAACxN,IAAX,GAAkBuN,WAAlB,GAAgCC,UAA7C;IACA,MAAMG,GAAG,GAAG/a,qBAAqB,CAAC3H,OAAD,EAAUD,QAAV,CAAjC;IACA,MAAM4iB,GAAG,GAAGhb,qBAAqB,CAAC8a,IAAD,EAAOziB,OAAP,CAAjC;IACA,IAAI4iB,GAAG,GAAGF,GAAG,IAAIA,GAAG,GAAGC,GAAV,CAAb;IACA,IAAIE,GAAG,GAAGF,GAAG,IAAID,GAAG,GAAGC,GAAV,CAAb;IACAC,GAAG,GAAGxc,KAAK,CAACwc,GAAD,CAAL,GAAa,CAAb,GAAiBA,GAAvB;IACAC,GAAG,GAAGzc,KAAK,CAACyc,GAAD,CAAL,GAAa,CAAb,GAAiBA,GAAvB;IACA,MAAMC,EAAE,GAAGN,CAAC,GAAGI,GAAf;IACA,MAAMG,EAAE,GAAGP,CAAC,GAAGK,GAAf;IACA,OAAO;MACL9iB,QAAQ,EAAE;QACRjR,CAAC,EAAEkR,OAAO,CAAClR,CAAR,GAAYg0B,EAAE,IAAIL,IAAI,CAAC3zB,CAAL,GAASiR,QAAQ,CAACjR,CAAtB,CADT;QAERuX,CAAC,EAAErG,OAAO,CAACqG,CAAR,GAAYyc,EAAE,IAAIL,IAAI,CAACpc,CAAL,GAAStG,QAAQ,CAACsG,CAAtB;MAFT,CADL;MAKLoc,IAAI,EAAE;QACJ3zB,CAAC,EAAEkR,OAAO,CAAClR,CAAR,GAAYi0B,EAAE,IAAIN,IAAI,CAAC3zB,CAAL,GAASiR,QAAQ,CAACjR,CAAtB,CADb;QAEJuX,CAAC,EAAErG,OAAO,CAACqG,CAAR,GAAY0c,EAAE,IAAIN,IAAI,CAACpc,CAAL,GAAStG,QAAQ,CAACsG,CAAtB;MAFb;IALD,CAAP;EAUD;;EACD,SAAS2c,cAAT,CAAwBd,MAAxB,EAAgCe,MAAhC,EAAwCC,EAAxC,EAA4C;IAC1C,MAAMC,SAAS,GAAGjB,MAAM,CAACl5B,MAAzB;IACA,IAAIo6B,MAAJ,EAAYC,KAAZ,EAAmBC,IAAnB,EAAyBC,gBAAzB,EAA2CC,YAA3C;IACA,IAAIC,UAAU,GAAGxB,QAAQ,CAACC,MAAD,EAAS,CAAT,CAAzB;;IACA,KAAK,IAAIj5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGk6B,SAAS,GAAG,CAAhC,EAAmC,EAAEl6B,CAArC,EAAwC;MACtCu6B,YAAY,GAAGC,UAAf;MACAA,UAAU,GAAGxB,QAAQ,CAACC,MAAD,EAASj5B,CAAC,GAAG,CAAb,CAArB;;MACA,IAAI,CAACu6B,YAAD,IAAiB,CAACC,UAAtB,EAAkC;QAChC;MACD;;MACD,IAAIhe,YAAY,CAACwd,MAAM,CAACh6B,CAAD,CAAP,EAAY,CAAZ,EAAe+4B,OAAf,CAAhB,EAAyC;QACvCkB,EAAE,CAACj6B,CAAD,CAAF,GAAQi6B,EAAE,CAACj6B,CAAC,GAAG,CAAL,CAAF,GAAY,CAApB;QACA;MACD;;MACDm6B,MAAM,GAAGF,EAAE,CAACj6B,CAAD,CAAF,GAAQg6B,MAAM,CAACh6B,CAAD,CAAvB;MACAo6B,KAAK,GAAGH,EAAE,CAACj6B,CAAC,GAAG,CAAL,CAAF,GAAYg6B,MAAM,CAACh6B,CAAD,CAA1B;MACAs6B,gBAAgB,GAAGh7B,IAAI,CAACod,GAAL,CAASyd,MAAT,EAAiB,CAAjB,IAAsB76B,IAAI,CAACod,GAAL,CAAS0d,KAAT,EAAgB,CAAhB,CAAzC;;MACA,IAAIE,gBAAgB,IAAI,CAAxB,EAA2B;QACzB;MACD;;MACDD,IAAI,GAAG,IAAI/6B,IAAI,CAAC0d,IAAL,CAAUsd,gBAAV,CAAX;MACAL,EAAE,CAACj6B,CAAD,CAAF,GAAQm6B,MAAM,GAAGE,IAAT,GAAgBL,MAAM,CAACh6B,CAAD,CAA9B;MACAi6B,EAAE,CAACj6B,CAAC,GAAG,CAAL,CAAF,GAAYo6B,KAAK,GAAGC,IAAR,GAAeL,MAAM,CAACh6B,CAAD,CAAjC;IACD;EACF;;EACD,SAASy6B,eAAT,CAAyBxB,MAAzB,EAAiCgB,EAAjC,EAAsD;IAAA,IAAjBtgB,SAAiB,uEAAL,GAAK;IACpD,MAAM+gB,SAAS,GAAGxB,YAAY,CAACvf,SAAD,CAA9B;IACA,MAAMugB,SAAS,GAAGjB,MAAM,CAACl5B,MAAzB;IACA,IAAI46B,KAAJ,EAAWC,WAAX,EAAwBL,YAAxB;IACA,IAAIC,UAAU,GAAGxB,QAAQ,CAACC,MAAD,EAAS,CAAT,CAAzB;;IACA,KAAK,IAAIj5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGk6B,SAApB,EAA+B,EAAEl6B,CAAjC,EAAoC;MAClC46B,WAAW,GAAGL,YAAd;MACAA,YAAY,GAAGC,UAAf;MACAA,UAAU,GAAGxB,QAAQ,CAACC,MAAD,EAASj5B,CAAC,GAAG,CAAb,CAArB;;MACA,IAAI,CAACu6B,YAAL,EAAmB;QACjB;MACD;;MACD,MAAMM,MAAM,GAAGN,YAAY,CAAC5gB,SAAD,CAA3B;MACA,MAAMmhB,MAAM,GAAGP,YAAY,CAACG,SAAD,CAA3B;;MACA,IAAIE,WAAJ,EAAiB;QACfD,KAAK,GAAG,CAACE,MAAM,GAAGD,WAAW,CAACjhB,SAAD,CAArB,IAAoC,CAA5C;QACA4gB,YAAY,CAAE,MAAK5gB,SAAU,EAAjB,CAAZ,GAAkCkhB,MAAM,GAAGF,KAA3C;QACAJ,YAAY,CAAE,MAAKG,SAAU,EAAjB,CAAZ,GAAkCI,MAAM,GAAGH,KAAK,GAAGV,EAAE,CAACj6B,CAAD,CAArD;MACD;;MACD,IAAIw6B,UAAJ,EAAgB;QACdG,KAAK,GAAG,CAACH,UAAU,CAAC7gB,SAAD,CAAV,GAAwBkhB,MAAzB,IAAmC,CAA3C;QACAN,YAAY,CAAE,MAAK5gB,SAAU,EAAjB,CAAZ,GAAkCkhB,MAAM,GAAGF,KAA3C;QACAJ,YAAY,CAAE,MAAKG,SAAU,EAAjB,CAAZ,GAAkCI,MAAM,GAAGH,KAAK,GAAGV,EAAE,CAACj6B,CAAD,CAArD;MACD;IACF;EACF;;EACD,SAAS+6B,mBAAT,CAA6B9B,MAA7B,EAAsD;IAAA,IAAjBtf,SAAiB,uEAAL,GAAK;IACpD,MAAM+gB,SAAS,GAAGxB,YAAY,CAACvf,SAAD,CAA9B;IACA,MAAMugB,SAAS,GAAGjB,MAAM,CAACl5B,MAAzB;IACA,MAAMi6B,MAAM,GAAGp9B,KAAK,CAACs9B,SAAD,CAAL,CAAiBzX,IAAjB,CAAsB,CAAtB,CAAf;IACA,MAAMwX,EAAE,GAAGr9B,KAAK,CAACs9B,SAAD,CAAhB;IACA,IAAIl6B,CAAJ,EAAO46B,WAAP,EAAoBL,YAApB;IACA,IAAIC,UAAU,GAAGxB,QAAQ,CAACC,MAAD,EAAS,CAAT,CAAzB;;IACA,KAAKj5B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGk6B,SAAhB,EAA2B,EAAEl6B,CAA7B,EAAgC;MAC9B46B,WAAW,GAAGL,YAAd;MACAA,YAAY,GAAGC,UAAf;MACAA,UAAU,GAAGxB,QAAQ,CAACC,MAAD,EAASj5B,CAAC,GAAG,CAAb,CAArB;;MACA,IAAI,CAACu6B,YAAL,EAAmB;QACjB;MACD;;MACD,IAAIC,UAAJ,EAAgB;QACd,MAAMQ,UAAU,GAAGR,UAAU,CAAC7gB,SAAD,CAAV,GAAwB4gB,YAAY,CAAC5gB,SAAD,CAAvD;QACAqgB,MAAM,CAACh6B,CAAD,CAAN,GAAYg7B,UAAU,KAAK,CAAf,GAAmB,CAACR,UAAU,CAACE,SAAD,CAAV,GAAwBH,YAAY,CAACG,SAAD,CAArC,IAAoDM,UAAvE,GAAoF,CAAhG;MACD;;MACDf,EAAE,CAACj6B,CAAD,CAAF,GAAQ,CAAC46B,WAAD,GAAeZ,MAAM,CAACh6B,CAAD,CAArB,GACJ,CAACw6B,UAAD,GAAcR,MAAM,CAACh6B,CAAC,GAAG,CAAL,CAApB,GACCqc,IAAI,CAAC2d,MAAM,CAACh6B,CAAC,GAAG,CAAL,CAAP,CAAJ,KAAwBqc,IAAI,CAAC2d,MAAM,CAACh6B,CAAD,CAAP,CAA7B,GAA4C,CAA5C,GACA,CAACg6B,MAAM,CAACh6B,CAAC,GAAG,CAAL,CAAN,GAAgBg6B,MAAM,CAACh6B,CAAD,CAAvB,IAA8B,CAHlC;IAID;;IACD+5B,cAAc,CAACd,MAAD,EAASe,MAAT,EAAiBC,EAAjB,CAAd;IACAQ,eAAe,CAACxB,MAAD,EAASgB,EAAT,EAAatgB,SAAb,CAAf;EACD;;EACD,SAASshB,eAAT,CAAyBC,EAAzB,EAA6B37B,GAA7B,EAAkC+B,GAAlC,EAAuC;IACrC,OAAOhC,IAAI,CAACgC,GAAL,CAAShC,IAAI,CAACC,GAAL,CAAS27B,EAAT,EAAa55B,GAAb,CAAT,EAA4B/B,GAA5B,CAAP;EACD;;EACD,SAAS47B,eAAT,CAAyBlC,MAAzB,EAAiCnW,IAAjC,EAAuC;IACrC,IAAI9iB,CAAJ,EAAOsV,IAAP,EAAauN,KAAb,EAAoBuY,MAApB,EAA4BC,UAA5B;;IACA,IAAIC,UAAU,GAAG1Y,cAAc,CAACqW,MAAM,CAAC,CAAD,CAAP,EAAYnW,IAAZ,CAA/B;;IACA,KAAK9iB,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG2jB,MAAM,CAACl5B,MAA1B,EAAkCC,CAAC,GAAGsV,IAAtC,EAA4C,EAAEtV,CAA9C,EAAiD;MAC/Cq7B,UAAU,GAAGD,MAAb;MACAA,MAAM,GAAGE,UAAT;MACAA,UAAU,GAAGt7B,CAAC,GAAGsV,IAAI,GAAG,CAAX,IAAgBsN,cAAc,CAACqW,MAAM,CAACj5B,CAAC,GAAG,CAAL,CAAP,EAAgB8iB,IAAhB,CAA3C;;MACA,IAAI,CAACsY,MAAL,EAAa;QACX;MACD;;MACDvY,KAAK,GAAGoW,MAAM,CAACj5B,CAAD,CAAd;;MACA,IAAIq7B,UAAJ,EAAgB;QACdxY,KAAK,CAACa,IAAN,GAAauX,eAAe,CAACpY,KAAK,CAACa,IAAP,EAAaZ,IAAI,CAAChlB,IAAlB,EAAwBglB,IAAI,CAAC/kB,KAA7B,CAA5B;QACA8kB,KAAK,CAACe,IAAN,GAAaqX,eAAe,CAACpY,KAAK,CAACe,IAAP,EAAad,IAAI,CAACE,GAAlB,EAAuBF,IAAI,CAACG,MAA5B,CAA5B;MACD;;MACD,IAAIqY,UAAJ,EAAgB;QACdzY,KAAK,CAACc,IAAN,GAAasX,eAAe,CAACpY,KAAK,CAACc,IAAP,EAAab,IAAI,CAAChlB,IAAlB,EAAwBglB,IAAI,CAAC/kB,KAA7B,CAA5B;QACA8kB,KAAK,CAACgB,IAAN,GAAaoX,eAAe,CAACpY,KAAK,CAACgB,IAAP,EAAaf,IAAI,CAACE,GAAlB,EAAuBF,IAAI,CAACG,MAA5B,CAA5B;MACD;IACF;EACF;;EACD,SAASsY,0BAAT,CAAoCtC,MAApC,EAA4C9iB,OAA5C,EAAqD2M,IAArD,EAA2D0Y,IAA3D,EAAiE7hB,SAAjE,EAA4E;IAC1E,IAAI3Z,CAAJ,EAAOsV,IAAP,EAAauN,KAAb,EAAoB4Y,aAApB;;IACA,IAAItlB,OAAO,CAACulB,QAAZ,EAAsB;MACpBzC,MAAM,GAAGA,MAAM,CAACzI,MAAP,CAAe0K,EAAD,IAAQ,CAACA,EAAE,CAACpP,IAA1B,CAAT;IACD;;IACD,IAAI3V,OAAO,CAACwlB,sBAAR,KAAmC,UAAvC,EAAmD;MACjDZ,mBAAmB,CAAC9B,MAAD,EAAStf,SAAT,CAAnB;IACD,CAFD,MAEO;MACL,IAAIiiB,IAAI,GAAGJ,IAAI,GAAGvC,MAAM,CAACA,MAAM,CAACl5B,MAAP,GAAgB,CAAjB,CAAT,GAA+Bk5B,MAAM,CAAC,CAAD,CAApD;;MACA,KAAKj5B,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG2jB,MAAM,CAACl5B,MAA1B,EAAkCC,CAAC,GAAGsV,IAAtC,EAA4C,EAAEtV,CAA9C,EAAiD;QAC/C6iB,KAAK,GAAGoW,MAAM,CAACj5B,CAAD,CAAd;QACAy7B,aAAa,GAAGtC,WAAW,CACzByC,IADyB,EAEzB/Y,KAFyB,EAGzBoW,MAAM,CAAC35B,IAAI,CAACC,GAAL,CAASS,CAAC,GAAG,CAAb,EAAgBsV,IAAI,IAAIkmB,IAAI,GAAG,CAAH,GAAO,CAAf,CAApB,IAAyClmB,IAA1C,CAHmB,EAIzBa,OAAO,CAAC0lB,OAJiB,CAA3B;QAMAhZ,KAAK,CAACa,IAAN,GAAa+X,aAAa,CAAC3kB,QAAd,CAAuBjR,CAApC;QACAgd,KAAK,CAACe,IAAN,GAAa6X,aAAa,CAAC3kB,QAAd,CAAuBsG,CAApC;QACAyF,KAAK,CAACc,IAAN,GAAa8X,aAAa,CAACjC,IAAd,CAAmB3zB,CAAhC;QACAgd,KAAK,CAACgB,IAAN,GAAa4X,aAAa,CAACjC,IAAd,CAAmBpc,CAAhC;QACAwe,IAAI,GAAG/Y,KAAP;MACD;IACF;;IACD,IAAI1M,OAAO,CAACglB,eAAZ,EAA6B;MAC3BA,eAAe,CAAClC,MAAD,EAASnW,IAAT,CAAf;IACD;EACF;;EAED,MAAMgZ,MAAM,GAAIvC,CAAD,IAAOA,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,CAAvC;;EACA,MAAMwC,SAAS,GAAG,CAACxC,CAAD,EAAIj1B,CAAJ,EAAOqO,CAAP,KAAa,EAAErT,IAAI,CAACod,GAAL,CAAS,CAAT,EAAY,MAAM6c,CAAC,IAAI,CAAX,CAAZ,IAA6Bj6B,IAAI,CAAC8iB,GAAL,CAAS,CAACmX,CAAC,GAAGj1B,CAAL,IAAUsX,GAAV,GAAgBjJ,CAAzB,CAA/B,CAA/B;;EACA,MAAMqpB,UAAU,GAAG,CAACzC,CAAD,EAAIj1B,CAAJ,EAAOqO,CAAP,KAAarT,IAAI,CAACod,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAM6c,CAAlB,IAAuBj6B,IAAI,CAAC8iB,GAAL,CAAS,CAACmX,CAAC,GAAGj1B,CAAL,IAAUsX,GAAV,GAAgBjJ,CAAzB,CAAvB,GAAqD,CAArF;;EACA,MAAMspB,OAAO,GAAG;IACdC,MAAM,EAAE3C,CAAC,IAAIA,CADC;IAEd4C,UAAU,EAAE5C,CAAC,IAAIA,CAAC,GAAGA,CAFP;IAGd6C,WAAW,EAAE7C,CAAC,IAAI,CAACA,CAAD,IAAMA,CAAC,GAAG,CAAV,CAHJ;IAId8C,aAAa,EAAE9C,CAAC,IAAK,CAACA,CAAC,IAAI,GAAN,IAAa,CAAd,GAChB,MAAMA,CAAN,GAAUA,CADM,GAEhB,CAAC,GAAD,IAAS,EAAEA,CAAH,IAASA,CAAC,GAAG,CAAb,IAAkB,CAA1B,CANU;IAOd+C,WAAW,EAAE/C,CAAC,IAAIA,CAAC,GAAGA,CAAJ,GAAQA,CAPZ;IAQdgD,YAAY,EAAEhD,CAAC,IAAI,CAACA,CAAC,IAAI,CAAN,IAAWA,CAAX,GAAeA,CAAf,GAAmB,CARxB;IASdiD,cAAc,EAAEjD,CAAC,IAAK,CAACA,CAAC,IAAI,GAAN,IAAa,CAAd,GACjB,MAAMA,CAAN,GAAUA,CAAV,GAAcA,CADG,GAEjB,OAAO,CAACA,CAAC,IAAI,CAAN,IAAWA,CAAX,GAAeA,CAAf,GAAmB,CAA1B,CAXU;IAYdkD,WAAW,EAAElD,CAAC,IAAIA,CAAC,GAAGA,CAAJ,GAAQA,CAAR,GAAYA,CAZhB;IAadmD,YAAY,EAAEnD,CAAC,IAAI,EAAE,CAACA,CAAC,IAAI,CAAN,IAAWA,CAAX,GAAeA,CAAf,GAAmBA,CAAnB,GAAuB,CAAzB,CAbL;IAcdoD,cAAc,EAAEpD,CAAC,IAAK,CAACA,CAAC,IAAI,GAAN,IAAa,CAAd,GACjB,MAAMA,CAAN,GAAUA,CAAV,GAAcA,CAAd,GAAkBA,CADD,GAEjB,CAAC,GAAD,IAAQ,CAACA,CAAC,IAAI,CAAN,IAAWA,CAAX,GAAeA,CAAf,GAAmBA,CAAnB,GAAuB,CAA/B,CAhBU;IAiBdqD,WAAW,EAAErD,CAAC,IAAIA,CAAC,GAAGA,CAAJ,GAAQA,CAAR,GAAYA,CAAZ,GAAgBA,CAjBpB;IAkBdsD,YAAY,EAAEtD,CAAC,IAAI,CAACA,CAAC,IAAI,CAAN,IAAWA,CAAX,GAAeA,CAAf,GAAmBA,CAAnB,GAAuBA,CAAvB,GAA2B,CAlBhC;IAmBduD,cAAc,EAAEvD,CAAC,IAAK,CAACA,CAAC,IAAI,GAAN,IAAa,CAAd,GACjB,MAAMA,CAAN,GAAUA,CAAV,GAAcA,CAAd,GAAkBA,CAAlB,GAAsBA,CADL,GAEjB,OAAO,CAACA,CAAC,IAAI,CAAN,IAAWA,CAAX,GAAeA,CAAf,GAAmBA,CAAnB,GAAuBA,CAAvB,GAA2B,CAAlC,CArBU;IAsBdwD,UAAU,EAAExD,CAAC,IAAI,CAACj6B,IAAI,CAAC+iB,GAAL,CAASkX,CAAC,GAAGtd,OAAb,CAAD,GAAyB,CAtB5B;IAuBd+gB,WAAW,EAAEzD,CAAC,IAAIj6B,IAAI,CAAC8iB,GAAL,CAASmX,CAAC,GAAGtd,OAAb,CAvBJ;IAwBdghB,aAAa,EAAE1D,CAAC,IAAI,CAAC,GAAD,IAAQj6B,IAAI,CAAC+iB,GAAL,CAAS1G,EAAE,GAAG4d,CAAd,IAAmB,CAA3B,CAxBN;IAyBd2D,UAAU,EAAE3D,CAAC,IAAKA,CAAC,KAAK,CAAP,GAAY,CAAZ,GAAgBj6B,IAAI,CAACod,GAAL,CAAS,CAAT,EAAY,MAAM6c,CAAC,GAAG,CAAV,CAAZ,CAzBnB;IA0Bd4D,WAAW,EAAE5D,CAAC,IAAKA,CAAC,KAAK,CAAP,GAAY,CAAZ,GAAgB,CAACj6B,IAAI,CAACod,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAM6c,CAAlB,CAAD,GAAwB,CA1B5C;IA2Bd6D,aAAa,EAAE7D,CAAC,IAAIuC,MAAM,CAACvC,CAAD,CAAN,GAAYA,CAAZ,GAAgBA,CAAC,GAAG,GAAJ,GAChC,MAAMj6B,IAAI,CAACod,GAAL,CAAS,CAAT,EAAY,MAAM6c,CAAC,GAAG,CAAJ,GAAQ,CAAd,CAAZ,CAD0B,GAEhC,OAAO,CAACj6B,IAAI,CAACod,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,IAAO6c,CAAC,GAAG,CAAJ,GAAQ,CAAf,CAAZ,CAAD,GAAkC,CAAzC,CA7BU;IA8Bd8D,UAAU,EAAE9D,CAAC,IAAKA,CAAC,IAAI,CAAN,GAAWA,CAAX,GAAe,EAAEj6B,IAAI,CAAC0d,IAAL,CAAU,IAAIuc,CAAC,GAAGA,CAAlB,IAAuB,CAAzB,CA9BlB;IA+Bd+D,WAAW,EAAE/D,CAAC,IAAIj6B,IAAI,CAAC0d,IAAL,CAAU,IAAI,CAACuc,CAAC,IAAI,CAAN,IAAWA,CAAzB,CA/BJ;IAgCdgE,aAAa,EAAEhE,CAAC,IAAK,CAACA,CAAC,IAAI,GAAN,IAAa,CAAd,GAChB,CAAC,GAAD,IAAQj6B,IAAI,CAAC0d,IAAL,CAAU,IAAIuc,CAAC,GAAGA,CAAlB,IAAuB,CAA/B,CADgB,GAEhB,OAAOj6B,IAAI,CAAC0d,IAAL,CAAU,IAAI,CAACuc,CAAC,IAAI,CAAN,IAAWA,CAAzB,IAA8B,CAArC,CAlCU;IAmCdiE,aAAa,EAAEjE,CAAC,IAAIuC,MAAM,CAACvC,CAAD,CAAN,GAAYA,CAAZ,GAAgBwC,SAAS,CAACxC,CAAD,EAAI,KAAJ,EAAW,GAAX,CAnC/B;IAoCdkE,cAAc,EAAElE,CAAC,IAAIuC,MAAM,CAACvC,CAAD,CAAN,GAAYA,CAAZ,GAAgByC,UAAU,CAACzC,CAAD,EAAI,KAAJ,EAAW,GAAX,CApCjC;;IAqCdmE,gBAAgB,CAACnE,CAAD,EAAI;MAClB,MAAMj1B,CAAC,GAAG,MAAV;MACA,MAAMqO,CAAC,GAAG,IAAV;MACA,OAAOmpB,MAAM,CAACvC,CAAD,CAAN,GAAYA,CAAZ,GACLA,CAAC,GAAG,GAAJ,GACI,MAAMwC,SAAS,CAACxC,CAAC,GAAG,CAAL,EAAQj1B,CAAR,EAAWqO,CAAX,CADnB,GAEI,MAAM,MAAMqpB,UAAU,CAACzC,CAAC,GAAG,CAAJ,GAAQ,CAAT,EAAYj1B,CAAZ,EAAeqO,CAAf,CAH5B;IAID,CA5Ca;;IA6CdgrB,UAAU,CAACpE,CAAD,EAAI;MACZ,MAAMj1B,CAAC,GAAG,OAAV;MACA,OAAOi1B,CAAC,GAAGA,CAAJ,IAAS,CAACj1B,CAAC,GAAG,CAAL,IAAUi1B,CAAV,GAAcj1B,CAAvB,CAAP;IACD,CAhDa;;IAiDds5B,WAAW,CAACrE,CAAD,EAAI;MACb,MAAMj1B,CAAC,GAAG,OAAV;MACA,OAAO,CAACi1B,CAAC,IAAI,CAAN,IAAWA,CAAX,IAAgB,CAACj1B,CAAC,GAAG,CAAL,IAAUi1B,CAAV,GAAcj1B,CAA9B,IAAmC,CAA1C;IACD,CApDa;;IAqDdu5B,aAAa,CAACtE,CAAD,EAAI;MACf,IAAIj1B,CAAC,GAAG,OAAR;;MACA,IAAI,CAACi1B,CAAC,IAAI,GAAN,IAAa,CAAjB,EAAoB;QAClB,OAAO,OAAOA,CAAC,GAAGA,CAAJ,IAAS,CAAC,CAACj1B,CAAC,IAAK,KAAP,IAAiB,CAAlB,IAAuBi1B,CAAvB,GAA2Bj1B,CAApC,CAAP,CAAP;MACD;;MACD,OAAO,OAAO,CAACi1B,CAAC,IAAI,CAAN,IAAWA,CAAX,IAAgB,CAAC,CAACj1B,CAAC,IAAK,KAAP,IAAiB,CAAlB,IAAuBi1B,CAAvB,GAA2Bj1B,CAA3C,IAAgD,CAAvD,CAAP;IACD,CA3Da;;IA4Ddw5B,YAAY,EAAEvE,CAAC,IAAI,IAAI0C,OAAO,CAAC8B,aAAR,CAAsB,IAAIxE,CAA1B,CA5DT;;IA6DdwE,aAAa,CAACxE,CAAD,EAAI;MACf,MAAMt1B,CAAC,GAAG,MAAV;MACA,MAAM1B,CAAC,GAAG,IAAV;;MACA,IAAIg3B,CAAC,GAAI,IAAIh3B,CAAb,EAAiB;QACf,OAAO0B,CAAC,GAAGs1B,CAAJ,GAAQA,CAAf;MACD;;MACD,IAAIA,CAAC,GAAI,IAAIh3B,CAAb,EAAiB;QACf,OAAO0B,CAAC,IAAIs1B,CAAC,IAAK,MAAMh3B,CAAhB,CAAD,GAAuBg3B,CAAvB,GAA2B,IAAlC;MACD;;MACD,IAAIA,CAAC,GAAI,MAAMh3B,CAAf,EAAmB;QACjB,OAAO0B,CAAC,IAAIs1B,CAAC,IAAK,OAAOh3B,CAAjB,CAAD,GAAwBg3B,CAAxB,GAA4B,MAAnC;MACD;;MACD,OAAOt1B,CAAC,IAAIs1B,CAAC,IAAK,QAAQh3B,CAAlB,CAAD,GAAyBg3B,CAAzB,GAA6B,QAApC;IACD,CA1Ea;;IA2EdyE,eAAe,EAAEzE,CAAC,IAAKA,CAAC,GAAG,GAAL,GAClB0C,OAAO,CAAC6B,YAAR,CAAqBvE,CAAC,GAAG,CAAzB,IAA8B,GADZ,GAElB0C,OAAO,CAAC8B,aAAR,CAAsBxE,CAAC,GAAG,CAAJ,GAAQ,CAA9B,IAAmC,GAAnC,GAAyC;EA7E/B,CAAhB;;EAgFA,SAAS0E,YAAT,CAAsB14B,EAAtB,EAA0BC,EAA1B,EAA8B+zB,CAA9B,EAAiC1f,IAAjC,EAAuC;IACrC,OAAO;MACLhU,CAAC,EAAEN,EAAE,CAACM,CAAH,GAAO0zB,CAAC,IAAI/zB,EAAE,CAACK,CAAH,GAAON,EAAE,CAACM,CAAd,CADN;MAELuX,CAAC,EAAE7X,EAAE,CAAC6X,CAAH,GAAOmc,CAAC,IAAI/zB,EAAE,CAAC4X,CAAH,GAAO7X,EAAE,CAAC6X,CAAd;IAFN,CAAP;EAID;;EACD,SAAS8gB,qBAAT,CAA+B34B,EAA/B,EAAmCC,EAAnC,EAAuC+zB,CAAvC,EAA0C1f,IAA1C,EAAgD;IAC9C,OAAO;MACLhU,CAAC,EAAEN,EAAE,CAACM,CAAH,GAAO0zB,CAAC,IAAI/zB,EAAE,CAACK,CAAH,GAAON,EAAE,CAACM,CAAd,CADN;MAELuX,CAAC,EAAEvD,IAAI,KAAK,QAAT,GAAoB0f,CAAC,GAAG,GAAJ,GAAUh0B,EAAE,CAAC6X,CAAb,GAAiB5X,EAAE,CAAC4X,CAAxC,GACDvD,IAAI,KAAK,OAAT,GAAmB0f,CAAC,GAAG,CAAJ,GAAQh0B,EAAE,CAAC6X,CAAX,GAAe5X,EAAE,CAAC4X,CAArC,GACAmc,CAAC,GAAG,CAAJ,GAAQ/zB,EAAE,CAAC4X,CAAX,GAAe7X,EAAE,CAAC6X;IAJf,CAAP;EAMD;;EACD,SAAS+gB,oBAAT,CAA8B54B,EAA9B,EAAkCC,EAAlC,EAAsC+zB,CAAtC,EAAyC1f,IAAzC,EAA+C;IAC7C,MAAMukB,GAAG,GAAG;MAACv4B,CAAC,EAAEN,EAAE,CAACoe,IAAP;MAAavG,CAAC,EAAE7X,EAAE,CAACse;IAAnB,CAAZ;IACA,MAAMwa,GAAG,GAAG;MAACx4B,CAAC,EAAEL,EAAE,CAACke,IAAP;MAAatG,CAAC,EAAE5X,EAAE,CAACoe;IAAnB,CAAZ;;IACA,MAAMxhB,CAAC,GAAG67B,YAAY,CAAC14B,EAAD,EAAK64B,GAAL,EAAU7E,CAAV,CAAtB;;IACA,MAAMl3B,CAAC,GAAG47B,YAAY,CAACG,GAAD,EAAMC,GAAN,EAAW9E,CAAX,CAAtB;;IACA,MAAMj3B,CAAC,GAAG27B,YAAY,CAACI,GAAD,EAAM74B,EAAN,EAAU+zB,CAAV,CAAtB;;IACA,MAAMh3B,CAAC,GAAG07B,YAAY,CAAC77B,CAAD,EAAIC,CAAJ,EAAOk3B,CAAP,CAAtB;;IACA,MAAM/2B,CAAC,GAAGy7B,YAAY,CAAC57B,CAAD,EAAIC,CAAJ,EAAOi3B,CAAP,CAAtB;;IACA,OAAO0E,YAAY,CAAC17B,CAAD,EAAIC,CAAJ,EAAO+2B,CAAP,CAAnB;EACD;;EAED,MAAM+E,SAAS,GAAG,IAAIhgC,GAAJ,EAAlB;;EACA,SAASigC,eAAT,CAAyBC,MAAzB,EAAiCroB,OAAjC,EAA0C;IACxCA,OAAO,GAAGA,OAAO,IAAI,EAArB;IACA,MAAMsoB,QAAQ,GAAGD,MAAM,GAAGE,IAAI,CAACC,SAAL,CAAexoB,OAAf,CAA1B;IACA,IAAIyoB,SAAS,GAAGN,SAAS,CAAC79B,GAAV,CAAcg+B,QAAd,CAAhB;;IACA,IAAI,CAACG,SAAL,EAAgB;MACdA,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsBN,MAAtB,EAA8BroB,OAA9B,CAAZ;MACAmoB,SAAS,CAAC19B,GAAV,CAAc69B,QAAd,EAAwBG,SAAxB;IACD;;IACD,OAAOA,SAAP;EACD;;EACD,SAASG,YAAT,CAAsBC,GAAtB,EAA2BR,MAA3B,EAAmCroB,OAAnC,EAA4C;IAC1C,OAAOooB,eAAe,CAACC,MAAD,EAASroB,OAAT,CAAf,CAAiC8oB,MAAjC,CAAwCD,GAAxC,CAAP;EACD;;EAED,MAAME,qBAAqB,GAAG,UAASC,KAAT,EAAgBnf,KAAhB,EAAuB;IACnD,OAAO;MACLna,CAAC,CAACA,CAAD,EAAI;QACH,OAAOs5B,KAAK,GAAGA,KAAR,GAAgBnf,KAAhB,GAAwBna,CAA/B;MACD,CAHI;;MAILu5B,QAAQ,CAACz6B,CAAD,EAAI;QACVqb,KAAK,GAAGrb,CAAR;MACD,CANI;;MAOLmgB,SAAS,CAACrnB,KAAD,EAAQ;QACf,IAAIA,KAAK,KAAK,QAAd,EAAwB;UACtB,OAAOA,KAAP;QACD;;QACD,OAAOA,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAApC;MACD,CAZI;;MAaL4hC,KAAK,CAACx5B,CAAD,EAAI6N,KAAJ,EAAW;QACd,OAAO7N,CAAC,GAAG6N,KAAX;MACD,CAfI;;MAgBL4rB,UAAU,CAACz5B,CAAD,EAAI05B,SAAJ,EAAe;QACvB,OAAO15B,CAAC,GAAG05B,SAAX;MACD;;IAlBI,CAAP;EAoBD,CArBD;;EAsBA,MAAMC,qBAAqB,GAAG,YAAW;IACvC,OAAO;MACL35B,CAAC,CAACA,CAAD,EAAI;QACH,OAAOA,CAAP;MACD,CAHI;;MAILu5B,QAAQ,CAACz6B,CAAD,EAAI,CACX,CALI;;MAMLmgB,SAAS,CAACrnB,KAAD,EAAQ;QACf,OAAOA,KAAP;MACD,CARI;;MASL4hC,KAAK,CAACx5B,CAAD,EAAI6N,KAAJ,EAAW;QACd,OAAO7N,CAAC,GAAG6N,KAAX;MACD,CAXI;;MAYL4rB,UAAU,CAACz5B,CAAD,EAAI45B,UAAJ,EAAgB;QACxB,OAAO55B,CAAP;MACD;;IAdI,CAAP;EAgBD,CAjBD;;EAkBA,SAAS65B,aAAT,CAAuB1hC,GAAvB,EAA4BmhC,KAA5B,EAAmCnf,KAAnC,EAA0C;IACxC,OAAOhiB,GAAG,GAAGkhC,qBAAqB,CAACC,KAAD,EAAQnf,KAAR,CAAxB,GAAyCwf,qBAAqB,EAAxE;EACD;;EACD,SAASG,qBAAT,CAA+BnmB,GAA/B,EAAoComB,SAApC,EAA+C;IAC7C,IAAIxmB,KAAJ,EAAWymB,QAAX;;IACA,IAAID,SAAS,KAAK,KAAd,IAAuBA,SAAS,KAAK,KAAzC,EAAgD;MAC9CxmB,KAAK,GAAGI,GAAG,CAACyH,MAAJ,CAAW7H,KAAnB;MACAymB,QAAQ,GAAG,CACTzmB,KAAK,CAACiP,gBAAN,CAAuB,WAAvB,CADS,EAETjP,KAAK,CAAC0mB,mBAAN,CAA0B,WAA1B,CAFS,CAAX;MAIA1mB,KAAK,CAAC2mB,WAAN,CAAkB,WAAlB,EAA+BH,SAA/B,EAA0C,WAA1C;MACApmB,GAAG,CAACwmB,iBAAJ,GAAwBH,QAAxB;IACD;EACF;;EACD,SAASI,oBAAT,CAA8BzmB,GAA9B,EAAmCqmB,QAAnC,EAA6C;IAC3C,IAAIA,QAAQ,KAAKphC,SAAjB,EAA4B;MAC1B,OAAO+a,GAAG,CAACwmB,iBAAX;MACAxmB,GAAG,CAACyH,MAAJ,CAAW7H,KAAX,CAAiB2mB,WAAjB,CAA6B,WAA7B,EAA0CF,QAAQ,CAAC,CAAD,CAAlD,EAAuDA,QAAQ,CAAC,CAAD,CAA/D;IACD;EACF;;EAED,SAASK,UAAT,CAAoBviB,QAApB,EAA8B;IAC5B,IAAIA,QAAQ,KAAK,OAAjB,EAA0B;MACxB,OAAO;QACLwiB,OAAO,EAAEphB,aADJ;QAELqhB,OAAO,EAAEvhB,UAFJ;QAGLwhB,SAAS,EAAEvhB;MAHN,CAAP;IAKD;;IACD,OAAO;MACLqhB,OAAO,EAAE5gB,UADJ;MAEL6gB,OAAO,EAAE,CAACh+B,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAFlB;MAGLg+B,SAAS,EAAEx6B,CAAC,IAAIA;IAHX,CAAP;EAKD;;EACD,SAASy6B,gBAAT,OAA4D;IAAA,IAAlC;MAAC3iC,KAAD;MAAQC,GAAR;MAAa4zB,KAAb;MAAoBgK,IAApB;MAA0BpiB;IAA1B,CAAkC;IAC1D,OAAO;MACLzb,KAAK,EAAEA,KAAK,GAAG6zB,KADV;MAEL5zB,GAAG,EAAEA,GAAG,GAAG4zB,KAFN;MAGLgK,IAAI,EAAEA,IAAI,IAAI,CAAC59B,GAAG,GAAGD,KAAN,GAAc,CAAf,IAAoB6zB,KAApB,KAA8B,CAHvC;MAILpY;IAJK,CAAP;EAMD;;EACD,SAASmnB,UAAT,CAAoBC,OAApB,EAA6BvH,MAA7B,EAAqCwH,MAArC,EAA6C;IAC3C,MAAM;MAAC9iB,QAAD;MAAWhgB,KAAK,EAAE+iC,UAAlB;MAA8B9iC,GAAG,EAAE+iC;IAAnC,IAA+CF,MAArD;IACA,MAAM;MAACN,OAAD;MAAUE;IAAV,IAAuBH,UAAU,CAACviB,QAAD,CAAvC;IACA,MAAM6T,KAAK,GAAGyH,MAAM,CAACl5B,MAArB;IACA,IAAI;MAACpC,KAAD;MAAQC,GAAR;MAAa49B;IAAb,IAAqBgF,OAAzB;IACA,IAAIxgC,CAAJ,EAAOsV,IAAP;;IACA,IAAIkmB,IAAJ,EAAU;MACR79B,KAAK,IAAI6zB,KAAT;MACA5zB,GAAG,IAAI4zB,KAAP;;MACA,KAAKxxB,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGkc,KAAnB,EAA0BxxB,CAAC,GAAGsV,IAA9B,EAAoC,EAAEtV,CAAtC,EAAyC;QACvC,IAAI,CAACmgC,OAAO,CAACE,SAAS,CAACpH,MAAM,CAACt7B,KAAK,GAAG6zB,KAAT,CAAN,CAAsB7T,QAAtB,CAAD,CAAV,EAA6C+iB,UAA7C,EAAyDC,QAAzD,CAAZ,EAAgF;UAC9E;QACD;;QACDhjC,KAAK;QACLC,GAAG;MACJ;;MACDD,KAAK,IAAI6zB,KAAT;MACA5zB,GAAG,IAAI4zB,KAAP;IACD;;IACD,IAAI5zB,GAAG,GAAGD,KAAV,EAAiB;MACfC,GAAG,IAAI4zB,KAAP;IACD;;IACD,OAAO;MAAC7zB,KAAD;MAAQC,GAAR;MAAa49B,IAAb;MAAmBpiB,KAAK,EAAEonB,OAAO,CAACpnB;IAAlC,CAAP;EACD;;EACD,SAASwnB,aAAT,CAAuBJ,OAAvB,EAAgCvH,MAAhC,EAAwCwH,MAAxC,EAAgD;IAC9C,IAAI,CAACA,MAAL,EAAa;MACX,OAAO,CAACD,OAAD,CAAP;IACD;;IACD,MAAM;MAAC7iB,QAAD;MAAWhgB,KAAK,EAAE+iC,UAAlB;MAA8B9iC,GAAG,EAAE+iC;IAAnC,IAA+CF,MAArD;IACA,MAAMjP,KAAK,GAAGyH,MAAM,CAACl5B,MAArB;IACA,MAAM;MAACqgC,OAAD;MAAUD,OAAV;MAAmBE;IAAnB,IAAgCH,UAAU,CAACviB,QAAD,CAAhD;IACA,MAAM;MAAChgB,KAAD;MAAQC,GAAR;MAAa49B,IAAb;MAAmBpiB;IAAnB,IAA4BmnB,UAAU,CAACC,OAAD,EAAUvH,MAAV,EAAkBwH,MAAlB,CAA5C;IACA,MAAM1jB,MAAM,GAAG,EAAf;IACA,IAAI8jB,MAAM,GAAG,KAAb;IACA,IAAIC,QAAQ,GAAG,IAAf;IACA,IAAIptB,KAAJ,EAAWmP,KAAX,EAAkBke,SAAlB;;IACA,MAAMC,aAAa,GAAG,MAAMb,OAAO,CAACO,UAAD,EAAaK,SAAb,EAAwBrtB,KAAxB,CAAP,IAAyC0sB,OAAO,CAACM,UAAD,EAAaK,SAAb,CAAP,KAAmC,CAAxG;;IACA,MAAME,WAAW,GAAG,MAAMb,OAAO,CAACO,QAAD,EAAWjtB,KAAX,CAAP,KAA6B,CAA7B,IAAkCysB,OAAO,CAACQ,QAAD,EAAWI,SAAX,EAAsBrtB,KAAtB,CAAnE;;IACA,MAAMwtB,WAAW,GAAG,MAAML,MAAM,IAAIG,aAAa,EAAjD;;IACA,MAAMG,UAAU,GAAG,MAAM,CAACN,MAAD,IAAWI,WAAW,EAA/C;;IACA,KAAK,IAAIjhC,CAAC,GAAGrC,KAAR,EAAei+B,IAAI,GAAGj+B,KAA3B,EAAkCqC,CAAC,IAAIpC,GAAvC,EAA4C,EAAEoC,CAA9C,EAAiD;MAC/C6iB,KAAK,GAAGoW,MAAM,CAACj5B,CAAC,GAAGwxB,KAAL,CAAd;;MACA,IAAI3O,KAAK,CAACiJ,IAAV,EAAgB;QACd;MACD;;MACDpY,KAAK,GAAG2sB,SAAS,CAACxd,KAAK,CAAClF,QAAD,CAAN,CAAjB;;MACA,IAAIjK,KAAK,KAAKqtB,SAAd,EAAyB;QACvB;MACD;;MACDF,MAAM,GAAGV,OAAO,CAACzsB,KAAD,EAAQgtB,UAAR,EAAoBC,QAApB,CAAhB;;MACA,IAAIG,QAAQ,KAAK,IAAb,IAAqBI,WAAW,EAApC,EAAwC;QACtCJ,QAAQ,GAAGV,OAAO,CAAC1sB,KAAD,EAAQgtB,UAAR,CAAP,KAA+B,CAA/B,GAAmC1gC,CAAnC,GAAuC47B,IAAlD;MACD;;MACD,IAAIkF,QAAQ,KAAK,IAAb,IAAqBK,UAAU,EAAnC,EAAuC;QACrCpkB,MAAM,CAAC/b,IAAP,CAAYs/B,gBAAgB,CAAC;UAAC3iC,KAAK,EAAEmjC,QAAR;UAAkBljC,GAAG,EAAEoC,CAAvB;UAA0Bw7B,IAA1B;UAAgChK,KAAhC;UAAuCpY;QAAvC,CAAD,CAA5B;QACA0nB,QAAQ,GAAG,IAAX;MACD;;MACDlF,IAAI,GAAG57B,CAAP;MACA+gC,SAAS,GAAGrtB,KAAZ;IACD;;IACD,IAAIotB,QAAQ,KAAK,IAAjB,EAAuB;MACrB/jB,MAAM,CAAC/b,IAAP,CAAYs/B,gBAAgB,CAAC;QAAC3iC,KAAK,EAAEmjC,QAAR;QAAkBljC,GAAlB;QAAuB49B,IAAvB;QAA6BhK,KAA7B;QAAoCpY;MAApC,CAAD,CAA5B;IACD;;IACD,OAAO2D,MAAP;EACD;;EACD,SAASqkB,cAAT,CAAwBhd,IAAxB,EAA8Bqc,MAA9B,EAAsC;IACpC,MAAM1jB,MAAM,GAAG,EAAf;IACA,MAAMskB,QAAQ,GAAGjd,IAAI,CAACid,QAAtB;;IACA,KAAK,IAAIrhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqhC,QAAQ,CAACthC,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;MACxC,MAAMshC,GAAG,GAAGV,aAAa,CAACS,QAAQ,CAACrhC,CAAD,CAAT,EAAcokB,IAAI,CAAC6U,MAAnB,EAA2BwH,MAA3B,CAAzB;;MACA,IAAIa,GAAG,CAACvhC,MAAR,EAAgB;QACdgd,MAAM,CAAC/b,IAAP,CAAY,GAAGsgC,GAAf;MACD;IACF;;IACD,OAAOvkB,MAAP;EACD;;EACD,SAASwkB,eAAT,CAAyBtI,MAAzB,EAAiCzH,KAAjC,EAAwCgK,IAAxC,EAA8CE,QAA9C,EAAwD;IACtD,IAAI/9B,KAAK,GAAG,CAAZ;IACA,IAAIC,GAAG,GAAG4zB,KAAK,GAAG,CAAlB;;IACA,IAAIgK,IAAI,IAAI,CAACE,QAAb,EAAuB;MACrB,OAAO/9B,KAAK,GAAG6zB,KAAR,IAAiB,CAACyH,MAAM,CAACt7B,KAAD,CAAN,CAAcmuB,IAAvC,EAA6C;QAC3CnuB,KAAK;MACN;IACF;;IACD,OAAOA,KAAK,GAAG6zB,KAAR,IAAiByH,MAAM,CAACt7B,KAAD,CAAN,CAAcmuB,IAAtC,EAA4C;MAC1CnuB,KAAK;IACN;;IACDA,KAAK,IAAI6zB,KAAT;;IACA,IAAIgK,IAAJ,EAAU;MACR59B,GAAG,IAAID,KAAP;IACD;;IACD,OAAOC,GAAG,GAAGD,KAAN,IAAes7B,MAAM,CAACr7B,GAAG,GAAG4zB,KAAP,CAAN,CAAoB1F,IAA1C,EAAgD;MAC9CluB,GAAG;IACJ;;IACDA,GAAG,IAAI4zB,KAAP;IACA,OAAO;MAAC7zB,KAAD;MAAQC;IAAR,CAAP;EACD;;EACD,SAAS4jC,aAAT,CAAuBvI,MAAvB,EAA+Bt7B,KAA/B,EAAsC2D,GAAtC,EAA2Ck6B,IAA3C,EAAiD;IAC/C,MAAMhK,KAAK,GAAGyH,MAAM,CAACl5B,MAArB;IACA,MAAMgd,MAAM,GAAG,EAAf;IACA,IAAI0kB,IAAI,GAAG9jC,KAAX;IACA,IAAIi+B,IAAI,GAAG3C,MAAM,CAACt7B,KAAD,CAAjB;IACA,IAAIC,GAAJ;;IACA,KAAKA,GAAG,GAAGD,KAAK,GAAG,CAAnB,EAAsBC,GAAG,IAAI0D,GAA7B,EAAkC,EAAE1D,GAApC,EAAyC;MACvC,MAAMyD,GAAG,GAAG43B,MAAM,CAACr7B,GAAG,GAAG4zB,KAAP,CAAlB;;MACA,IAAInwB,GAAG,CAACyqB,IAAJ,IAAYzqB,GAAG,CAACG,IAApB,EAA0B;QACxB,IAAI,CAACo6B,IAAI,CAAC9P,IAAV,EAAgB;UACd0P,IAAI,GAAG,KAAP;UACAze,MAAM,CAAC/b,IAAP,CAAY;YAACrD,KAAK,EAAEA,KAAK,GAAG6zB,KAAhB;YAAuB5zB,GAAG,EAAE,CAACA,GAAG,GAAG,CAAP,IAAY4zB,KAAxC;YAA+CgK;UAA/C,CAAZ;UACA79B,KAAK,GAAG8jC,IAAI,GAAGpgC,GAAG,CAACG,IAAJ,GAAW5D,GAAX,GAAiB,IAAhC;QACD;MACF,CAND,MAMO;QACL6jC,IAAI,GAAG7jC,GAAP;;QACA,IAAIg+B,IAAI,CAAC9P,IAAT,EAAe;UACbnuB,KAAK,GAAGC,GAAR;QACD;MACF;;MACDg+B,IAAI,GAAGv6B,GAAP;IACD;;IACD,IAAIogC,IAAI,KAAK,IAAb,EAAmB;MACjB1kB,MAAM,CAAC/b,IAAP,CAAY;QAACrD,KAAK,EAAEA,KAAK,GAAG6zB,KAAhB;QAAuB5zB,GAAG,EAAE6jC,IAAI,GAAGjQ,KAAnC;QAA0CgK;MAA1C,CAAZ;IACD;;IACD,OAAOze,MAAP;EACD;;EACD,SAAS2kB,gBAAT,CAA0Btd,IAA1B,EAAgCud,cAAhC,EAAgD;IAC9C,MAAM1I,MAAM,GAAG7U,IAAI,CAAC6U,MAApB;IACA,MAAMyC,QAAQ,GAAGtX,IAAI,CAACjO,OAAL,CAAaulB,QAA9B;IACA,MAAMlK,KAAK,GAAGyH,MAAM,CAACl5B,MAArB;;IACA,IAAI,CAACyxB,KAAL,EAAY;MACV,OAAO,EAAP;IACD;;IACD,MAAMgK,IAAI,GAAG,CAAC,CAACpX,IAAI,CAACwd,KAApB;IACA,MAAM;MAACjkC,KAAD;MAAQC;IAAR,IAAe2jC,eAAe,CAACtI,MAAD,EAASzH,KAAT,EAAgBgK,IAAhB,EAAsBE,QAAtB,CAApC;;IACA,IAAIA,QAAQ,KAAK,IAAjB,EAAuB;MACrB,OAAOmG,aAAa,CAACzd,IAAD,EAAO,CAAC;QAACzmB,KAAD;QAAQC,GAAR;QAAa49B;MAAb,CAAD,CAAP,EAA6BvC,MAA7B,EAAqC0I,cAArC,CAApB;IACD;;IACD,MAAMrgC,GAAG,GAAG1D,GAAG,GAAGD,KAAN,GAAcC,GAAG,GAAG4zB,KAApB,GAA4B5zB,GAAxC;IACA,MAAMkkC,YAAY,GAAG,CAAC,CAAC1d,IAAI,CAAC2d,SAAP,IAAoBpkC,KAAK,KAAK,CAA9B,IAAmCC,GAAG,KAAK4zB,KAAK,GAAG,CAAxE;IACA,OAAOqQ,aAAa,CAACzd,IAAD,EAAOod,aAAa,CAACvI,MAAD,EAASt7B,KAAT,EAAgB2D,GAAhB,EAAqBwgC,YAArB,CAApB,EAAwD7I,MAAxD,EAAgE0I,cAAhE,CAApB;EACD;;EACD,SAASE,aAAT,CAAuBzd,IAAvB,EAA6Bid,QAA7B,EAAuCpI,MAAvC,EAA+C0I,cAA/C,EAA+D;IAC7D,IAAI,CAACA,cAAD,IAAmB,CAACA,cAAc,CAACxK,UAAnC,IAAiD,CAAC8B,MAAtD,EAA8D;MAC5D,OAAOoI,QAAP;IACD;;IACD,OAAOW,eAAe,CAAC5d,IAAD,EAAOid,QAAP,EAAiBpI,MAAjB,EAAyB0I,cAAzB,CAAtB;EACD;;EACD,SAASK,eAAT,CAAyB5d,IAAzB,EAA+Bid,QAA/B,EAAyCpI,MAAzC,EAAiD0I,cAAjD,EAAiE;IAC/D,MAAMM,YAAY,GAAG7d,IAAI,CAAC8d,MAAL,CAAYhhB,UAAZ,EAArB;;IACA,MAAMihB,SAAS,GAAGC,SAAS,CAAChe,IAAI,CAACjO,OAAN,CAA3B;IACA,MAAM;MAACksB,aAAa,EAAE5sB,YAAhB;MAA8BU,OAAO,EAAE;QAACulB;MAAD;IAAvC,IAAqDtX,IAA3D;IACA,MAAMoN,KAAK,GAAGyH,MAAM,CAACl5B,MAArB;IACA,MAAMgd,MAAM,GAAG,EAAf;IACA,IAAIulB,SAAS,GAAGH,SAAhB;IACA,IAAIxkC,KAAK,GAAG0jC,QAAQ,CAAC,CAAD,CAAR,CAAY1jC,KAAxB;IACA,IAAIqC,CAAC,GAAGrC,KAAR;;IACA,SAAS4kC,QAAT,CAAkBj+B,CAAlB,EAAqB9B,CAArB,EAAwBiB,CAAxB,EAA2B++B,EAA3B,EAA+B;MAC7B,MAAMC,GAAG,GAAG/G,QAAQ,GAAG,CAAC,CAAJ,GAAQ,CAA5B;;MACA,IAAIp3B,CAAC,KAAK9B,CAAV,EAAa;QACX;MACD;;MACD8B,CAAC,IAAIktB,KAAL;;MACA,OAAOyH,MAAM,CAAC30B,CAAC,GAAGktB,KAAL,CAAN,CAAkB1F,IAAzB,EAA+B;QAC7BxnB,CAAC,IAAIm+B,GAAL;MACD;;MACD,OAAOxJ,MAAM,CAACz2B,CAAC,GAAGgvB,KAAL,CAAN,CAAkB1F,IAAzB,EAA+B;QAC7BtpB,CAAC,IAAIigC,GAAL;MACD;;MACD,IAAIn+B,CAAC,GAAGktB,KAAJ,KAAchvB,CAAC,GAAGgvB,KAAtB,EAA6B;QAC3BzU,MAAM,CAAC/b,IAAP,CAAY;UAACrD,KAAK,EAAE2G,CAAC,GAAGktB,KAAZ;UAAmB5zB,GAAG,EAAE4E,CAAC,GAAGgvB,KAA5B;UAAmCgK,IAAI,EAAE/3B,CAAzC;UAA4C2V,KAAK,EAAEopB;QAAnD,CAAZ;QACAF,SAAS,GAAGE,EAAZ;QACA7kC,KAAK,GAAG6E,CAAC,GAAGgvB,KAAZ;MACD;IACF;;IACD,KAAK,MAAMgP,OAAX,IAAsBa,QAAtB,EAAgC;MAC9B1jC,KAAK,GAAG+9B,QAAQ,GAAG/9B,KAAH,GAAW6iC,OAAO,CAAC7iC,KAAnC;MACA,IAAIi+B,IAAI,GAAG3C,MAAM,CAACt7B,KAAK,GAAG6zB,KAAT,CAAjB;MACA,IAAIpY,KAAJ;;MACA,KAAKpZ,CAAC,GAAGrC,KAAK,GAAG,CAAjB,EAAoBqC,CAAC,IAAIwgC,OAAO,CAAC5iC,GAAjC,EAAsCoC,CAAC,EAAvC,EAA2C;QACzC,MAAMk7B,EAAE,GAAGjC,MAAM,CAACj5B,CAAC,GAAGwxB,KAAL,CAAjB;QACApY,KAAK,GAAGgpB,SAAS,CAACT,cAAc,CAACxK,UAAf,CAA0B/G,aAAa,CAAC6R,YAAD,EAAe;UACtEnjC,IAAI,EAAE,SADgE;UAEtE4jC,EAAE,EAAE9G,IAFkE;UAGtEr2B,EAAE,EAAE21B,EAHkE;UAItEyH,WAAW,EAAE,CAAC3iC,CAAC,GAAG,CAAL,IAAUwxB,KAJ+C;UAKtEoR,WAAW,EAAE5iC,CAAC,GAAGwxB,KALqD;UAMtE/b;QANsE,CAAf,CAAvC,CAAD,CAAjB;;QAQA,IAAIotB,YAAY,CAACzpB,KAAD,EAAQkpB,SAAR,CAAhB,EAAoC;UAClCC,QAAQ,CAAC5kC,KAAD,EAAQqC,CAAC,GAAG,CAAZ,EAAewgC,OAAO,CAAChF,IAAvB,EAA6B8G,SAA7B,CAAR;QACD;;QACD1G,IAAI,GAAGV,EAAP;QACAoH,SAAS,GAAGlpB,KAAZ;MACD;;MACD,IAAIzb,KAAK,GAAGqC,CAAC,GAAG,CAAhB,EAAmB;QACjBuiC,QAAQ,CAAC5kC,KAAD,EAAQqC,CAAC,GAAG,CAAZ,EAAewgC,OAAO,CAAChF,IAAvB,EAA6B8G,SAA7B,CAAR;MACD;IACF;;IACD,OAAOvlB,MAAP;EACD;;EACD,SAASqlB,SAAT,CAAmBjsB,OAAnB,EAA4B;IAC1B,OAAO;MACLsC,eAAe,EAAEtC,OAAO,CAACsC,eADpB;MAELqqB,cAAc,EAAE3sB,OAAO,CAAC2sB,cAFnB;MAGLC,UAAU,EAAE5sB,OAAO,CAAC4sB,UAHf;MAILC,gBAAgB,EAAE7sB,OAAO,CAAC6sB,gBAJrB;MAKLC,eAAe,EAAE9sB,OAAO,CAAC8sB,eALpB;MAMLvgB,WAAW,EAAEvM,OAAO,CAACuM,WANhB;MAOLhK,WAAW,EAAEvC,OAAO,CAACuC;IAPhB,CAAP;EASD;;EACD,SAASmqB,YAAT,CAAsBzpB,KAAtB,EAA6BkpB,SAA7B,EAAwC;IACtC,OAAOA,SAAS,IAAI5D,IAAI,CAACC,SAAL,CAAevlB,KAAf,MAA0BslB,IAAI,CAACC,SAAL,CAAe2D,SAAf,CAA9C;EACD;;EAED,IAAIY,OAAO,GAAG,aAAaxyB,MAAM,CAACykB,MAAP,CAAc;IACzCgO,SAAS,EAAE,IAD8B;IAEzCC,aAAa,EAAEnH,OAF0B;IAGzC5pB,KAAK,EAAEA,KAHkC;IAIzCwB,aAAa,EAAEA,aAJ0B;IAKzCC,IAAI,EAAEA,IALmC;IAMzCC,GAAG,EAAEA,GANoC;IAOzCE,aAAa,EAAEA,aAP0B;IAQzCjP,OAAO,EAAEA,OARgC;IASzCoP,QAAQ,EAAEA,QAT+B;IAUzCG,QAAQ,EAAEF,cAV+B;IAWzCG,eAAe,EAAEA,eAXwB;IAYzCE,cAAc,EAAEA,cAZyB;IAazCC,YAAY,EAAEA,YAb2B;IAczCI,WAAW,EAAEA,WAd4B;IAezC3Y,QAAQ,EAAEA,QAf+B;IAgBzC4Y,IAAI,EAAEA,IAhBmC;IAiBzCG,cAAc,EAAEA,cAjByB;IAkBzCtC,KAAK,EAAEA,KAlBkC;IAmBzCqD,OAAO,EAAEA,OAnBgC;IAoBzCI,KAAK,EAAEA,KApBkC;IAqBzCG,OAAO,EAAEA,OArBgC;IAsBzCC,SAAS,EAAEA,SAtB8B;IAuBzCE,WAAW,EAAEA,WAvB4B;IAwBzCU,gBAAgB,EAAEA,gBAxBuB;IAyBzCE,WAAW,EAAEA,WAzB4B;IA0BzCE,OAAO,EAAEA,OA1BgC;IA2BzCC,UAAU,EAAEA,UA3B6B;IA4BzCC,SAAS,EAAEA,SA5B8B;IA6BzCE,aAAa,EAAEA,aA7B0B;IA8BzC0H,YAAY,EAAEA,YA9B2B;IA+BzCC,YAAY,EAAEA,YA/B2B;IAgCzCQ,YAAY,EAAEA,YAhC2B;IAiCzCW,WAAW,EAAEA,WAjC4B;IAkCzCI,WAAW,EAAEA,WAlC4B;IAmCzCM,SAAS,EAAEA,SAnC8B;IAoCzCsB,cAAc,EAAEA,cApCyB;IAqCzCM,QAAQ,EAAEA,QArC+B;IAsCzCE,UAAU,EAAEA,UAtC6B;IAuCzCC,cAAc,EAAEA,cAvCyB;IAwCzCG,cAAc,EAAEA,cAxCyB;IAyCzCM,UAAU,EAAEA,UAzC6B;IA0CzC2B,kBAAkB,EAAEA,kBA1CqB;IA2CzCK,OAAO,EAAEA,OA3CgC;IA4CzCM,YAAY,EAAEA,YA5C2B;IA6CzCC,aAAa,EAAEA,aA7C0B;IA8CzCC,cAAc,EAAEA,cA9CyB;IA+CzCE,iBAAiB,EAAEA,iBA/CsB;IAgDzCS,mBAAmB,EAAEA,mBAhDoB;IAiDzCE,YAAY,EAAEA,YAjD2B;IAkDzCiO,eAAe,EAAEA,eAlDwB;IAmDzCwB,cAAc,EAAEA,cAnDyB;IAoDzCre,YAAY,EAAEA,YApD2B;IAqDzC4gB,WAAW,EAAEA,WArD4B;IAsDzC4B,mBAAmB,EAAEA,mBAtDoB;IAuDzCQ,0BAA0B,EAAEA,0BAvDa;IAwDzCjU,eAAe,EAAEA,eAxDwB;IAyDzCE,cAAc,EAAEA,cAzDyB;IA0DzCW,QAAQ,EAAEA,QA1D+B;IA2DzCsD,mBAAmB,EAAEnC,qBA3DoB;IA4DzCc,cAAc,EAAEA,cA5DyB;IA6DzCM,WAAW,EAAEA,WA7D4B;IA8DzCO,4BAA4B,EAAEA,4BA9DW;IA+DzCK,YAAY,EAAEA,YA/D2B;IAgEzCxvB,UAAU,EAAEA,UAhE6B;IAiEzCI,gBAAgB,EAAEA,gBAjEuB;IAkEzCI,SAAS,EAAEA,SAlE8B;IAmEzCa,QAAQ,EAAEA,QAnE+B;IAoEzCK,kBAAkB,EAAEA,kBApEqB;IAqEzCE,cAAc,EAAEA,cArEyB;IAsEzCG,MAAM,EAAEA,MAtEiC;IAuEzCogC,YAAY,EAAEA,YAvE2B;IAwEzCC,qBAAqB,EAAEA,qBAxEkB;IAyEzCC,oBAAoB,EAAEA,oBAzEmB;IA0EzCY,YAAY,EAAEA,YA1E2B;IA2EzCjQ,YAAY,EAAEA,YA3E2B;IA4EzCE,iBAAiB,EAAEA,iBA5EsB;IA6EzCK,MAAM,EAAEA,MA7EiC;IA8EzCC,aAAa,EAAEA,aA9E0B;IA+EzCC,SAAS,EAAEA,SA/E8B;IAgFzCC,MAAM,EAAEA,MAhFiC;IAiFzCE,OAAO,EAAEA,OAjFgC;IAkFzCI,SAAS,EAAEA,SAlF8B;IAmFzCM,aAAa,EAAEA,aAnF0B;IAoFzCzU,EAAE,EAAEA,EApFqC;IAqFzCC,GAAG,EAAEA,GArFoC;IAsFzCC,KAAK,EAAEA,KAtFkC;IAuFzCC,QAAQ,EAAEA,QAvF+B;IAwFzCE,WAAW,EAAEA,WAxF4B;IAyFzCC,OAAO,EAAEA,OAzFgC;IA0FzCC,UAAU,EAAEA,UA1F6B;IA2FzCC,aAAa,EAAEA,aA3F0B;IA4FzCC,KAAK,EAAEA,KA5FkC;IA6FzCC,IAAI,EAAEA,IA7FmC;IA8FzCC,OAAO,EAAEA,OA9FgC;IA+FzCQ,UAAU,EAAEA,UA/F6B;IAgGzCI,QAAQ,EAAEA,QAhG+B;IAiGzCV,YAAY,EAAEA,YAjG2B;IAkGzCe,WAAW,EAAEA,WAlG4B;IAmGzCE,kBAAkB,EAAEA,kBAnGqB;IAoGzCG,SAAS,EAAEA,SApG8B;IAqGzCE,SAAS,EAAEA,SArG8B;IAsGzCE,cAAc,EAAEA,cAtGyB;IAuGzCC,iBAAiB,EAAEA,iBAvGsB;IAwGzCS,qBAAqB,EAAEA,qBAxGkB;IAyGzCG,UAAU,EAAEA,UAzG6B;IA0GzCC,eAAe,EAAEA,eA1GwB;IA2GzCC,aAAa,EAAEA,aA3G0B;IA4GzCM,WAAW,EAAEA,WA5G4B;IA6GzCC,WAAW,EAAEA,WA7G4B;IA8GzCC,UAAU,EAAEA,UA9G6B;IA+GzCmgB,aAAa,EAAEA,aA/G0B;IAgHzCC,qBAAqB,EAAEA,qBAhHkB;IAiHzCM,oBAAoB,EAAEA,oBAjHmB;IAkHzCW,aAAa,EAAEA,aAlH0B;IAmHzCQ,cAAc,EAAEA,cAnHyB;IAoHzCM,gBAAgB,EAAEA;EApHuB,CAAd,CAA3B;;EAuHA,MAAM2B,YAAN,CAAmB;IACjBC,cAAc,CAACriB,MAAD,EAASsJ,WAAT,EAAsB,CAAE;;IACtCgZ,cAAc,CAAC1qB,OAAD,EAAU;MACtB,OAAO,KAAP;IACD;;IACDuS,gBAAgB,CAACzsB,KAAD,EAAQG,IAAR,EAAc2nB,QAAd,EAAwB,CAAE;;IAC1C4E,mBAAmB,CAAC1sB,KAAD,EAAQG,IAAR,EAAc2nB,QAAd,EAAwB,CAAE;;IAC7C1N,mBAAmB,GAAG;MACpB,OAAO,CAAP;IACD;;IACDqR,cAAc,CAAClC,OAAD,EAAUlI,KAAV,EAAiBqB,MAAjB,EAAyBkJ,WAAzB,EAAsC;MAClDvK,KAAK,GAAG1gB,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAY0e,KAAK,IAAIkI,OAAO,CAAClI,KAA7B,CAAR;MACAqB,MAAM,GAAGA,MAAM,IAAI6G,OAAO,CAAC7G,MAA3B;MACA,OAAO;QACLrB,KADK;QAELqB,MAAM,EAAE/hB,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAYipB,WAAW,GAAGjrB,IAAI,CAACqd,KAAL,CAAWqD,KAAK,GAAGuK,WAAnB,CAAH,GAAqClJ,MAA5D;MAFH,CAAP;IAID;;IACDmiB,UAAU,CAACviB,MAAD,EAAS;MACjB,OAAO,IAAP;IACD;;IACDwiB,YAAY,CAACC,MAAD,EAAS,CACpB;;EAtBgB;;EAyBnB,MAAMC,aAAN,SAA4BN,YAA5B,CAAyC;IACvCC,cAAc,CAACpjC,IAAD,EAAO;MACnB,OAAOA,IAAI,IAAIA,IAAI,CAACghB,UAAb,IAA2BhhB,IAAI,CAACghB,UAAL,CAAgB,IAAhB,CAA3B,IAAoD,IAA3D;IACD;;IACDuiB,YAAY,CAACC,MAAD,EAAS;MACnBA,MAAM,CAACvtB,OAAP,CAAeqC,SAAf,GAA2B,KAA3B;IACD;;EANsC;;EASzC,MAAMorB,WAAW,GAAG,UAApB;EACA,MAAMC,WAAW,GAAG;IAClBC,UAAU,EAAE,WADM;IAElBC,SAAS,EAAE,WAFO;IAGlBC,QAAQ,EAAE,SAHQ;IAIlBC,YAAY,EAAE,YAJI;IAKlBC,WAAW,EAAE,WALK;IAMlBC,WAAW,EAAE,WANK;IAOlBC,SAAS,EAAE,SAPO;IAQlBC,YAAY,EAAE,UARI;IASlBC,UAAU,EAAE;EATM,CAApB;;EAWA,MAAMC,aAAa,GAAG7wB,KAAK,IAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAA3D;;EACA,SAAS8wB,UAAT,CAAoBvjB,MAApB,EAA4BsJ,WAA5B,EAAyC;IACvC,MAAMnR,KAAK,GAAG6H,MAAM,CAAC7H,KAArB;IACA,MAAMqrB,YAAY,GAAGxjB,MAAM,CAACyjB,YAAP,CAAoB,QAApB,CAArB;IACA,MAAMC,WAAW,GAAG1jB,MAAM,CAACyjB,YAAP,CAAoB,OAApB,CAApB;IACAzjB,MAAM,CAAC2iB,WAAD,CAAN,GAAsB;MACpBxkC,OAAO,EAAE;QACPiiB,MAAM,EAAEojB,YADD;QAEPzkB,KAAK,EAAE2kB,WAFA;QAGPvrB,KAAK,EAAE;UACL8b,OAAO,EAAE9b,KAAK,CAAC8b,OADV;UAEL7T,MAAM,EAAEjI,KAAK,CAACiI,MAFT;UAGLrB,KAAK,EAAE5G,KAAK,CAAC4G;QAHR;MAHA;IADW,CAAtB;IAWA5G,KAAK,CAAC8b,OAAN,GAAgB9b,KAAK,CAAC8b,OAAN,IAAiB,OAAjC;IACA9b,KAAK,CAACoQ,SAAN,GAAkBpQ,KAAK,CAACoQ,SAAN,IAAmB,YAArC;;IACA,IAAI+a,aAAa,CAACI,WAAD,CAAjB,EAAgC;MAC9B,MAAMC,YAAY,GAAGtZ,YAAY,CAACrK,MAAD,EAAS,OAAT,CAAjC;;MACA,IAAI2jB,YAAY,KAAKnmC,SAArB,EAAgC;QAC9BwiB,MAAM,CAACjB,KAAP,GAAe4kB,YAAf;MACD;IACF;;IACD,IAAIL,aAAa,CAACE,YAAD,CAAjB,EAAiC;MAC/B,IAAIxjB,MAAM,CAAC7H,KAAP,CAAaiI,MAAb,KAAwB,EAA5B,EAAgC;QAC9BJ,MAAM,CAACI,MAAP,GAAgBJ,MAAM,CAACjB,KAAP,IAAgBuK,WAAW,IAAI,CAA/B,CAAhB;MACD,CAFD,MAEO;QACL,MAAMsa,aAAa,GAAGvZ,YAAY,CAACrK,MAAD,EAAS,QAAT,CAAlC;;QACA,IAAI4jB,aAAa,KAAKpmC,SAAtB,EAAiC;UAC/BwiB,MAAM,CAACI,MAAP,GAAgBwjB,aAAhB;QACD;MACF;IACF;;IACD,OAAO5jB,MAAP;EACD;;EACD,MAAM6jB,oBAAoB,GAAG7Z,4BAA4B,GAAG;IAACE,OAAO,EAAE;EAAV,CAAH,GAAqB,KAA9E;;EACA,SAAS4Z,WAAT,CAAqB7sB,IAArB,EAA2BpZ,IAA3B,EAAiC2nB,QAAjC,EAA2C;IACzCvO,IAAI,CAACkT,gBAAL,CAAsBtsB,IAAtB,EAA4B2nB,QAA5B,EAAsCqe,oBAAtC;EACD;;EACD,SAASE,cAAT,CAAwBrmC,KAAxB,EAA+BG,IAA/B,EAAqC2nB,QAArC,EAA+C;IAC7C9nB,KAAK,CAACsiB,MAAN,CAAaoK,mBAAb,CAAiCvsB,IAAjC,EAAuC2nB,QAAvC,EAAiDqe,oBAAjD;EACD;;EACD,SAASG,eAAT,CAAyBnkC,KAAzB,EAAgCnC,KAAhC,EAAuC;IACrC,MAAMG,IAAI,GAAG+kC,WAAW,CAAC/iC,KAAK,CAAChC,IAAP,CAAX,IAA2BgC,KAAK,CAAChC,IAA9C;IACA,MAAM;MAAC+G,CAAD;MAAIuX;IAAJ,IAASkM,qBAAqB,CAACxoB,KAAD,EAAQnC,KAAR,CAApC;IACA,OAAO;MACLG,IADK;MAELH,KAFK;MAGLmqB,MAAM,EAAEhoB,KAHH;MAIL+E,CAAC,EAAEA,CAAC,KAAKpH,SAAN,GAAkBoH,CAAlB,GAAsB,IAJpB;MAKLuX,CAAC,EAAEA,CAAC,KAAK3e,SAAN,GAAkB2e,CAAlB,GAAsB;IALpB,CAAP;EAOD;;EACD,SAAS8nB,gBAAT,CAA0BC,QAA1B,EAAoClkB,MAApC,EAA4C;IAC1C,KAAK,MAAM/I,IAAX,IAAmBitB,QAAnB,EAA6B;MAC3B,IAAIjtB,IAAI,KAAK+I,MAAT,IAAmB/I,IAAI,CAACktB,QAAL,CAAcnkB,MAAd,CAAvB,EAA8C;QAC5C,OAAO,IAAP;MACD;IACF;EACF;;EACD,SAASokB,oBAAT,CAA8B1mC,KAA9B,EAAqCG,IAArC,EAA2C2nB,QAA3C,EAAqD;IACnD,MAAMxF,MAAM,GAAGtiB,KAAK,CAACsiB,MAArB;IACA,MAAMqkB,QAAQ,GAAG,IAAIC,gBAAJ,CAAqBC,OAAO,IAAI;MAC/C,IAAIC,OAAO,GAAG,KAAd;;MACA,KAAK,MAAMC,KAAX,IAAoBF,OAApB,EAA6B;QAC3BC,OAAO,GAAGA,OAAO,IAAIP,gBAAgB,CAACQ,KAAK,CAACC,UAAP,EAAmB1kB,MAAnB,CAArC;QACAwkB,OAAO,GAAGA,OAAO,IAAI,CAACP,gBAAgB,CAACQ,KAAK,CAACE,YAAP,EAAqB3kB,MAArB,CAAtC;MACD;;MACD,IAAIwkB,OAAJ,EAAa;QACXhf,QAAQ;MACT;IACF,CATgB,CAAjB;IAUA6e,QAAQ,CAACO,OAAT,CAAiBte,QAAjB,EAA2B;MAACue,SAAS,EAAE,IAAZ;MAAkBC,OAAO,EAAE;IAA3B,CAA3B;IACA,OAAOT,QAAP;EACD;;EACD,SAASU,oBAAT,CAA8BrnC,KAA9B,EAAqCG,IAArC,EAA2C2nB,QAA3C,EAAqD;IACnD,MAAMxF,MAAM,GAAGtiB,KAAK,CAACsiB,MAArB;IACA,MAAMqkB,QAAQ,GAAG,IAAIC,gBAAJ,CAAqBC,OAAO,IAAI;MAC/C,IAAIC,OAAO,GAAG,KAAd;;MACA,KAAK,MAAMC,KAAX,IAAoBF,OAApB,EAA6B;QAC3BC,OAAO,GAAGA,OAAO,IAAIP,gBAAgB,CAACQ,KAAK,CAACE,YAAP,EAAqB3kB,MAArB,CAArC;QACAwkB,OAAO,GAAGA,OAAO,IAAI,CAACP,gBAAgB,CAACQ,KAAK,CAACC,UAAP,EAAmB1kB,MAAnB,CAAtC;MACD;;MACD,IAAIwkB,OAAJ,EAAa;QACXhf,QAAQ;MACT;IACF,CATgB,CAAjB;IAUA6e,QAAQ,CAACO,OAAT,CAAiBte,QAAjB,EAA2B;MAACue,SAAS,EAAE,IAAZ;MAAkBC,OAAO,EAAE;IAA3B,CAA3B;IACA,OAAOT,QAAP;EACD;;EACD,MAAMW,kBAAkB,GAAG,IAAI3nC,GAAJ,EAA3B;EACA,IAAI4nC,mBAAmB,GAAG,CAA1B;;EACA,SAASC,cAAT,GAA0B;IACxB,MAAMC,GAAG,GAAGjqC,MAAM,CAACyc,gBAAnB;;IACA,IAAIwtB,GAAG,KAAKF,mBAAZ,EAAiC;MAC/B;IACD;;IACDA,mBAAmB,GAAGE,GAAtB;IACAH,kBAAkB,CAAC9mC,OAAnB,CAA2B,CAACknC,MAAD,EAAS1nC,KAAT,KAAmB;MAC5C,IAAIA,KAAK,CAACmiB,uBAAN,KAAkCslB,GAAtC,EAA2C;QACzCC,MAAM;MACP;IACF,CAJD;EAKD;;EACD,SAASC,6BAAT,CAAuC3nC,KAAvC,EAA8C0nC,MAA9C,EAAsD;IACpD,IAAI,CAACJ,kBAAkB,CAACpuB,IAAxB,EAA8B;MAC5B1b,MAAM,CAACivB,gBAAP,CAAwB,QAAxB,EAAkC+a,cAAlC;IACD;;IACDF,kBAAkB,CAACrlC,GAAnB,CAAuBjC,KAAvB,EAA8B0nC,MAA9B;EACD;;EACD,SAASE,+BAAT,CAAyC5nC,KAAzC,EAAgD;IAC9CsnC,kBAAkB,CAACtkC,MAAnB,CAA0BhD,KAA1B;;IACA,IAAI,CAACsnC,kBAAkB,CAACpuB,IAAxB,EAA8B;MAC5B1b,MAAM,CAACkvB,mBAAP,CAA2B,QAA3B,EAAqC8a,cAArC;IACD;EACF;;EACD,SAASK,oBAAT,CAA8B7nC,KAA9B,EAAqCG,IAArC,EAA2C2nB,QAA3C,EAAqD;IACnD,MAAMxF,MAAM,GAAGtiB,KAAK,CAACsiB,MAArB;;IACA,MAAM4I,SAAS,GAAG5I,MAAM,IAAIuG,cAAc,CAACvG,MAAD,CAA1C;;IACA,IAAI,CAAC4I,SAAL,EAAgB;MACd;IACD;;IACD,MAAMwc,MAAM,GAAG/pC,SAAS,CAAC,CAAC0jB,KAAD,EAAQqB,MAAR,KAAmB;MAC1C,MAAM1c,CAAC,GAAGklB,SAAS,CAACC,WAApB;MACArD,QAAQ,CAACzG,KAAD,EAAQqB,MAAR,CAAR;;MACA,IAAI1c,CAAC,GAAGklB,SAAS,CAACC,WAAlB,EAA+B;QAC7BrD,QAAQ;MACT;IACF,CANuB,EAMrBtqB,MANqB,CAAxB;IAOA,MAAMmpC,QAAQ,GAAG,IAAImB,cAAJ,CAAmBjB,OAAO,IAAI;MAC7C,MAAME,KAAK,GAAGF,OAAO,CAAC,CAAD,CAArB;MACA,MAAMxlB,KAAK,GAAG0lB,KAAK,CAACgB,WAAN,CAAkB1mB,KAAhC;MACA,MAAMqB,MAAM,GAAGqkB,KAAK,CAACgB,WAAN,CAAkBrlB,MAAjC;;MACA,IAAIrB,KAAK,KAAK,CAAV,IAAeqB,MAAM,KAAK,CAA9B,EAAiC;QAC/B;MACD;;MACDglB,MAAM,CAACrmB,KAAD,EAAQqB,MAAR,CAAN;IACD,CARgB,CAAjB;IASAikB,QAAQ,CAACO,OAAT,CAAiBhc,SAAjB;IACAyc,6BAA6B,CAAC3nC,KAAD,EAAQ0nC,MAAR,CAA7B;IACA,OAAOf,QAAP;EACD;;EACD,SAASqB,eAAT,CAAyBhoC,KAAzB,EAAgCG,IAAhC,EAAsCwmC,QAAtC,EAAgD;IAC9C,IAAIA,QAAJ,EAAc;MACZA,QAAQ,CAACsB,UAAT;IACD;;IACD,IAAI9nC,IAAI,KAAK,QAAb,EAAuB;MACrBynC,+BAA+B,CAAC5nC,KAAD,CAA/B;IACD;EACF;;EACD,SAASkoC,oBAAT,CAA8BloC,KAA9B,EAAqCG,IAArC,EAA2C2nB,QAA3C,EAAqD;IACnD,MAAMxF,MAAM,GAAGtiB,KAAK,CAACsiB,MAArB;IACA,MAAM4V,KAAK,GAAGv6B,SAAS,CAAEwE,KAAD,IAAW;MACjC,IAAInC,KAAK,CAAC6a,GAAN,KAAc,IAAlB,EAAwB;QACtBiN,QAAQ,CAACwe,eAAe,CAACnkC,KAAD,EAAQnC,KAAR,CAAhB,CAAR;MACD;IACF,CAJsB,EAIpBA,KAJoB,EAIZhC,IAAD,IAAU;MAClB,MAAMmE,KAAK,GAAGnE,IAAI,CAAC,CAAD,CAAlB;MACA,OAAO,CAACmE,KAAD,EAAQA,KAAK,CAACkoB,OAAd,EAAuBloB,KAAK,CAACmoB,OAA7B,CAAP;IACD,CAPsB,CAAvB;IAQA8b,WAAW,CAAC9jB,MAAD,EAASniB,IAAT,EAAe+3B,KAAf,CAAX;IACA,OAAOA,KAAP;EACD;;EACD,MAAMiQ,WAAN,SAA0BzD,YAA1B,CAAuC;IACrCC,cAAc,CAACriB,MAAD,EAASsJ,WAAT,EAAsB;MAClC,MAAM1R,OAAO,GAAGoI,MAAM,IAAIA,MAAM,CAACC,UAAjB,IAA+BD,MAAM,CAACC,UAAP,CAAkB,IAAlB,CAA/C;;MACA,IAAIrI,OAAO,IAAIA,OAAO,CAACoI,MAAR,KAAmBA,MAAlC,EAA0C;QACxCujB,UAAU,CAACvjB,MAAD,EAASsJ,WAAT,CAAV;QACA,OAAO1R,OAAP;MACD;;MACD,OAAO,IAAP;IACD;;IACD0qB,cAAc,CAAC1qB,OAAD,EAAU;MACtB,MAAMoI,MAAM,GAAGpI,OAAO,CAACoI,MAAvB;;MACA,IAAI,CAACA,MAAM,CAAC2iB,WAAD,CAAX,EAA0B;QACxB,OAAO,KAAP;MACD;;MACD,MAAMxkC,OAAO,GAAG6hB,MAAM,CAAC2iB,WAAD,CAAN,CAAoBxkC,OAApC;MACA,CAAC,QAAD,EAAW,OAAX,EAAoBD,OAApB,CAA6BiwB,IAAD,IAAU;QACpC,MAAM1b,KAAK,GAAGtU,OAAO,CAACgwB,IAAD,CAArB;;QACA,IAAInb,aAAa,CAACP,KAAD,CAAjB,EAA0B;UACxBuN,MAAM,CAAC8lB,eAAP,CAAuB3X,IAAvB;QACD,CAFD,MAEO;UACLnO,MAAM,CAAC+lB,YAAP,CAAoB5X,IAApB,EAA0B1b,KAA1B;QACD;MACF,CAPD;MAQA,MAAM0F,KAAK,GAAGha,OAAO,CAACga,KAAR,IAAiB,EAA/B;MACA1I,MAAM,CAACD,IAAP,CAAY2I,KAAZ,EAAmBja,OAAnB,CAA4B6W,GAAD,IAAS;QAClCiL,MAAM,CAAC7H,KAAP,CAAapD,GAAb,IAAoBoD,KAAK,CAACpD,GAAD,CAAzB;MACD,CAFD;MAGAiL,MAAM,CAACjB,KAAP,GAAeiB,MAAM,CAACjB,KAAtB;MACA,OAAOiB,MAAM,CAAC2iB,WAAD,CAAb;MACA,OAAO,IAAP;IACD;;IACDxY,gBAAgB,CAACzsB,KAAD,EAAQG,IAAR,EAAc2nB,QAAd,EAAwB;MACtC,KAAK4E,mBAAL,CAAyB1sB,KAAzB,EAAgCG,IAAhC;MACA,MAAMmoC,OAAO,GAAGtoC,KAAK,CAACuoC,QAAN,KAAmBvoC,KAAK,CAACuoC,QAAN,GAAiB,EAApC,CAAhB;MACA,MAAMC,QAAQ,GAAG;QACfC,MAAM,EAAE/B,oBADO;QAEfgC,MAAM,EAAErB,oBAFO;QAGfK,MAAM,EAAEG;MAHO,CAAjB;MAKA,MAAM7a,OAAO,GAAGwb,QAAQ,CAACroC,IAAD,CAAR,IAAkB+nC,oBAAlC;MACAI,OAAO,CAACnoC,IAAD,CAAP,GAAgB6sB,OAAO,CAAChtB,KAAD,EAAQG,IAAR,EAAc2nB,QAAd,CAAvB;IACD;;IACD4E,mBAAmB,CAAC1sB,KAAD,EAAQG,IAAR,EAAc;MAC/B,MAAMmoC,OAAO,GAAGtoC,KAAK,CAACuoC,QAAN,KAAmBvoC,KAAK,CAACuoC,QAAN,GAAiB,EAApC,CAAhB;MACA,MAAMrQ,KAAK,GAAGoQ,OAAO,CAACnoC,IAAD,CAArB;;MACA,IAAI,CAAC+3B,KAAL,EAAY;QACV;MACD;;MACD,MAAMsQ,QAAQ,GAAG;QACfC,MAAM,EAAET,eADO;QAEfU,MAAM,EAAEV,eAFO;QAGfN,MAAM,EAAEM;MAHO,CAAjB;MAKA,MAAMhb,OAAO,GAAGwb,QAAQ,CAACroC,IAAD,CAAR,IAAkBkmC,cAAlC;MACArZ,OAAO,CAAChtB,KAAD,EAAQG,IAAR,EAAc+3B,KAAd,CAAP;MACAoQ,OAAO,CAACnoC,IAAD,CAAP,GAAgBL,SAAhB;IACD;;IACDsa,mBAAmB,GAAG;MACpB,OAAO5c,MAAM,CAACyc,gBAAd;IACD;;IACDwR,cAAc,CAACnJ,MAAD,EAASjB,KAAT,EAAgBqB,MAAhB,EAAwBkJ,WAAxB,EAAqC;MACjD,OAAOH,cAAc,CAACnJ,MAAD,EAASjB,KAAT,EAAgBqB,MAAhB,EAAwBkJ,WAAxB,CAArB;IACD;;IACDiZ,UAAU,CAACviB,MAAD,EAAS;MACjB,MAAM4I,SAAS,GAAGrC,cAAc,CAACvG,MAAD,CAAhC;;MACA,OAAO,CAAC,EAAE4I,SAAS,IAAIA,SAAS,CAACyd,WAAzB,CAAR;IACD;;EAlEoC;;EAqEvC,SAASC,eAAT,CAAyBtmB,MAAzB,EAAiC;IAC/B,IAAI,CAACqG,eAAe,EAAhB,IAAuB,OAAOkgB,eAAP,KAA2B,WAA3B,IAA0CvmB,MAAM,YAAYumB,eAAvF,EAAyG;MACvG,OAAO7D,aAAP;IACD;;IACD,OAAOmD,WAAP;EACD;;EAED,IAAIW,SAAS,GAAG,aAAa/2B,MAAM,CAACykB,MAAP,CAAc;IAC3CgO,SAAS,EAAE,IADgC;IAE3CoE,eAAe,EAAEA,eAF0B;IAG3ClE,YAAY,EAAEA,YAH6B;IAI3CM,aAAa,EAAEA,aAJ4B;IAK3CmD,WAAW,EAAEA;EAL8B,CAAd,CAA7B;EAQA,MAAM31B,WAAW,GAAG,aAApB;EACA,MAAMu2B,aAAa,GAAG;IACpBC,OAAO,CAACtgB,IAAD,EAAOugB,EAAP,EAAW5V,MAAX,EAAmB;MACxB,OAAOA,MAAM,GAAG,GAAT,GAAe4V,EAAf,GAAoBvgB,IAA3B;IACD,CAHmB;;IAIpBhV,KAAK,CAACgV,IAAD,EAAOugB,EAAP,EAAW5V,MAAX,EAAmB;MACtB,MAAM6V,EAAE,GAAGx1B,KAAK,CAACgV,IAAI,IAAIlW,WAAT,CAAhB;MACA,MAAMqB,EAAE,GAAGq1B,EAAE,CAAC31B,KAAH,IAAYG,KAAK,CAACu1B,EAAE,IAAIz2B,WAAP,CAA5B;MACA,OAAOqB,EAAE,IAAIA,EAAE,CAACN,KAAT,GACHM,EAAE,CAACJ,GAAH,CAAOy1B,EAAP,EAAW7V,MAAX,EAAmB1uB,SAAnB,EADG,GAEHskC,EAFJ;IAGD,CAVmB;;IAWpBE,MAAM,CAACzgB,IAAD,EAAOugB,EAAP,EAAW5V,MAAX,EAAmB;MACvB,OAAO3K,IAAI,GAAG,CAACugB,EAAE,GAAGvgB,IAAN,IAAc2K,MAA5B;IACD;;EAbmB,CAAtB;;EAeA,MAAM+V,SAAN,CAAgB;IACd5pC,WAAW,CAAC6pC,GAAD,EAAMpyB,MAAN,EAAcwZ,IAAd,EAAoBwY,EAApB,EAAwB;MACjC,MAAMK,YAAY,GAAGryB,MAAM,CAACwZ,IAAD,CAA3B;MACAwY,EAAE,GAAGlY,OAAO,CAAC,CAACsY,GAAG,CAACJ,EAAL,EAASA,EAAT,EAAaK,YAAb,EAA2BD,GAAG,CAAC3gB,IAA/B,CAAD,CAAZ;MACA,MAAMA,IAAI,GAAGqI,OAAO,CAAC,CAACsY,GAAG,CAAC3gB,IAAL,EAAW4gB,YAAX,EAAyBL,EAAzB,CAAD,CAApB;MACA,KAAKznC,OAAL,GAAe,IAAf;MACA,KAAK+nC,GAAL,GAAWF,GAAG,CAACzrC,EAAJ,IAAUmrC,aAAa,CAACM,GAAG,CAAClpC,IAAJ,IAAY,OAAOuoB,IAApB,CAAlC;MACA,KAAK8gB,OAAL,GAAelM,OAAO,CAAC+L,GAAG,CAACI,MAAL,CAAP,IAAuBnM,OAAO,CAACC,MAA9C;MACA,KAAKmM,MAAL,GAAc/oC,IAAI,CAACqd,KAAL,CAAWjd,IAAI,CAACC,GAAL,MAAcqoC,GAAG,CAAC5qC,KAAJ,IAAa,CAA3B,CAAX,CAAd;MACA,KAAKmE,SAAL,GAAiB,KAAKnB,MAAL,GAAcd,IAAI,CAACqd,KAAL,CAAWqrB,GAAG,CAAC9oC,QAAf,CAA/B;MACA,KAAK0iC,KAAL,GAAa,CAAC,CAACoG,GAAG,CAACxM,IAAnB;MACA,KAAK8M,OAAL,GAAe1yB,MAAf;MACA,KAAK2yB,KAAL,GAAanZ,IAAb;MACA,KAAKoZ,KAAL,GAAanhB,IAAb;MACA,KAAKohB,GAAL,GAAWb,EAAX;MACA,KAAKc,SAAL,GAAiBjqC,SAAjB;IACD;;IACDkqC,MAAM,GAAG;MACP,OAAO,KAAKxoC,OAAZ;IACD;;IACD6zB,MAAM,CAACgU,GAAD,EAAMJ,EAAN,EAAU/oC,IAAV,EAAgB;MACpB,IAAI,KAAKsB,OAAT,EAAkB;QAChB,KAAKzB,OAAL,CAAa,KAAb;;QACA,MAAMupC,YAAY,GAAG,KAAKK,OAAL,CAAa,KAAKC,KAAlB,CAArB;QACA,MAAMK,OAAO,GAAG/pC,IAAI,GAAG,KAAKwpC,MAA5B;QACA,MAAMQ,MAAM,GAAG,KAAKtnC,SAAL,GAAiBqnC,OAAhC;QACA,KAAKP,MAAL,GAAcxpC,IAAd;QACA,KAAK0C,SAAL,GAAiBjC,IAAI,CAACqd,KAAL,CAAWrd,IAAI,CAACgC,GAAL,CAASunC,MAAT,EAAiBb,GAAG,CAAC9oC,QAArB,CAAX,CAAjB;QACA,KAAKkB,MAAL,IAAewoC,OAAf;QACA,KAAKhH,KAAL,GAAa,CAAC,CAACoG,GAAG,CAACxM,IAAnB;QACA,KAAKiN,GAAL,GAAW/Y,OAAO,CAAC,CAACsY,GAAG,CAACJ,EAAL,EAASA,EAAT,EAAaK,YAAb,EAA2BD,GAAG,CAAC3gB,IAA/B,CAAD,CAAlB;QACA,KAAKmhB,KAAL,GAAa9Y,OAAO,CAAC,CAACsY,GAAG,CAAC3gB,IAAL,EAAW4gB,YAAX,EAAyBL,EAAzB,CAAD,CAApB;MACD;IACF;;IACDnmC,MAAM,GAAG;MACP,IAAI,KAAKtB,OAAT,EAAkB;QAChB,KAAKE,IAAL,CAAUX,IAAI,CAACC,GAAL,EAAV;QACA,KAAKQ,OAAL,GAAe,KAAf;;QACA,KAAKzB,OAAL,CAAa,KAAb;MACD;IACF;;IACD2B,IAAI,CAACxB,IAAD,EAAO;MACT,MAAM+pC,OAAO,GAAG/pC,IAAI,GAAG,KAAKwpC,MAA5B;MACA,MAAMnpC,QAAQ,GAAG,KAAKqC,SAAtB;MACA,MAAM6tB,IAAI,GAAG,KAAKmZ,KAAlB;MACA,MAAMlhB,IAAI,GAAG,KAAKmhB,KAAlB;MACA,MAAMhN,IAAI,GAAG,KAAKoG,KAAlB;MACA,MAAMgG,EAAE,GAAG,KAAKa,GAAhB;MACA,IAAIzW,MAAJ;MACA,KAAK7xB,OAAL,GAAeknB,IAAI,KAAKugB,EAAT,KAAgBpM,IAAI,IAAKoN,OAAO,GAAG1pC,QAAnC,CAAf;;MACA,IAAI,CAAC,KAAKiB,OAAV,EAAmB;QACjB,KAAKmoC,OAAL,CAAalZ,IAAb,IAAqBwY,EAArB;;QACA,KAAKlpC,OAAL,CAAa,IAAb;;QACA;MACD;;MACD,IAAIkqC,OAAO,GAAG,CAAd,EAAiB;QACf,KAAKN,OAAL,CAAalZ,IAAb,IAAqB/H,IAArB;QACA;MACD;;MACD2K,MAAM,GAAI4W,OAAO,GAAG1pC,QAAX,GAAuB,CAAhC;MACA8yB,MAAM,GAAGwJ,IAAI,IAAIxJ,MAAM,GAAG,CAAjB,GAAqB,IAAIA,MAAzB,GAAkCA,MAA3C;MACAA,MAAM,GAAG,KAAKmW,OAAL,CAAa7oC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAY0wB,MAAZ,CAAZ,CAAb,CAAT;MACA,KAAKsW,OAAL,CAAalZ,IAAb,IAAqB,KAAK8Y,GAAL,CAAS7gB,IAAT,EAAeugB,EAAf,EAAmB5V,MAAnB,CAArB;IACD;;IACD8W,IAAI,GAAG;MACL,MAAMC,QAAQ,GAAG,KAAKL,SAAL,KAAmB,KAAKA,SAAL,GAAiB,EAApC,CAAjB;MACA,OAAO,IAAIM,OAAJ,CAAY,CAACjiB,GAAD,EAAMkiB,GAAN,KAAc;QAC/BF,QAAQ,CAAC/nC,IAAT,CAAc;UAAC+lB,GAAD;UAAMkiB;QAAN,CAAd;MACD,CAFM,CAAP;IAGD;;IACDvqC,OAAO,CAACwqC,QAAD,EAAW;MAChB,MAAMriB,MAAM,GAAGqiB,QAAQ,GAAG,KAAH,GAAW,KAAlC;MACA,MAAMH,QAAQ,GAAG,KAAKL,SAAL,IAAkB,EAAnC;;MACA,KAAK,IAAI1oC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+oC,QAAQ,CAAChpC,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;QACxC+oC,QAAQ,CAAC/oC,CAAD,CAAR,CAAY6mB,MAAZ;MACD;IACF;;EA5Ea;;EA+EhB,MAAMsiB,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,aAAX,EAA0B,QAA1B,EAAoC,SAApC,CAAhB;EACA,MAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,aAAV,EAAyB,iBAAzB,CAAf;EACA9tB,QAAQ,CAAC1a,GAAT,CAAa,WAAb,EAA0B;IACxBxD,KAAK,EAAEqB,SADiB;IAExBS,QAAQ,EAAE,IAFc;IAGxBkpC,MAAM,EAAE,cAHgB;IAIxB7rC,EAAE,EAAEkC,SAJoB;IAKxB4oB,IAAI,EAAE5oB,SALkB;IAMxB+8B,IAAI,EAAE/8B,SANkB;IAOxBmpC,EAAE,EAAEnpC,SAPoB;IAQxBK,IAAI,EAAEL;EARkB,CAA1B;EAUA,MAAM4qC,gBAAgB,GAAG34B,MAAM,CAACD,IAAP,CAAY6K,QAAQ,CAAC9C,SAArB,CAAzB;EACA8C,QAAQ,CAACb,QAAT,CAAkB,WAAlB,EAA+B;IAC7BiB,SAAS,EAAE,KADkB;IAE7BD,UAAU,EAAE,KAFiB;IAG7BF,WAAW,EAAGX,IAAD,IAAUA,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK,YAAlC,IAAkDA,IAAI,KAAK;EAHrD,CAA/B;EAKAU,QAAQ,CAAC1a,GAAT,CAAa,YAAb,EAA2B;IACzBwoC,MAAM,EAAE;MACNtqC,IAAI,EAAE,OADA;MAENwqC,UAAU,EAAEF;IAFN,CADiB;IAKzBD,OAAO,EAAE;MACPrqC,IAAI,EAAE,QADC;MAEPwqC,UAAU,EAAEH;IAFL;EALgB,CAA3B;EAUA7tB,QAAQ,CAACb,QAAT,CAAkB,YAAlB,EAAgC;IAC9BiB,SAAS,EAAE;EADmB,CAAhC;EAGAJ,QAAQ,CAAC1a,GAAT,CAAa,aAAb,EAA4B;IAC1B+nC,MAAM,EAAE;MACNnwB,SAAS,EAAE;QACTtZ,QAAQ,EAAE;MADD;IADL,CADkB;IAM1BmnC,MAAM,EAAE;MACN7tB,SAAS,EAAE;QACTtZ,QAAQ,EAAE;MADD;IADL,CANkB;IAW1BqqC,IAAI,EAAE;MACJC,UAAU,EAAE;QACVJ,MAAM,EAAE;UACN/hB,IAAI,EAAE;QADA,CADE;QAIVoiB,OAAO,EAAE;UACP3qC,IAAI,EAAE,SADC;UAEPI,QAAQ,EAAE;QAFH;MAJC;IADR,CAXoB;IAsB1BwqC,IAAI,EAAE;MACJF,UAAU,EAAE;QACVJ,MAAM,EAAE;UACNxB,EAAE,EAAE;QADE,CADE;QAIV6B,OAAO,EAAE;UACP3qC,IAAI,EAAE,SADC;UAEPspC,MAAM,EAAE,QAFD;UAGP7rC,EAAE,EAAEwG,CAAC,IAAIA,CAAC,GAAG;QAHN;MAJC;IADR;EAtBoB,CAA5B;;EAmCA,MAAM4mC,UAAN,CAAiB;IACfxrC,WAAW,CAACQ,KAAD,EAAQ+kC,MAAR,EAAgB;MACzB,KAAKxB,MAAL,GAAcvjC,KAAd;MACA,KAAKirC,WAAL,GAAmB,IAAItrC,GAAJ,EAAnB;MACA,KAAKq2B,SAAL,CAAe+O,MAAf;IACD;;IACD/O,SAAS,CAAC+O,MAAD,EAAS;MAChB,IAAI,CAACtvB,QAAQ,CAACsvB,MAAD,CAAb,EAAuB;QACrB;MACD;;MACD,MAAMmG,aAAa,GAAG,KAAKD,WAA3B;MACAl5B,MAAM,CAACo5B,mBAAP,CAA2BpG,MAA3B,EAAmCvkC,OAAnC,CAA2C6W,GAAG,IAAI;QAChD,MAAMgyB,GAAG,GAAGtE,MAAM,CAAC1tB,GAAD,CAAlB;;QACA,IAAI,CAAC5B,QAAQ,CAAC4zB,GAAD,CAAb,EAAoB;UAClB;QACD;;QACD,MAAMkB,QAAQ,GAAG,EAAjB;;QACA,KAAK,MAAMa,MAAX,IAAqBV,gBAArB,EAAuC;UACrCH,QAAQ,CAACa,MAAD,CAAR,GAAmB/B,GAAG,CAAC+B,MAAD,CAAtB;QACD;;QACD,CAAC/kC,OAAO,CAACgjC,GAAG,CAACsB,UAAL,CAAP,IAA2BtB,GAAG,CAACsB,UAA/B,IAA6C,CAACtzB,GAAD,CAA9C,EAAqD7W,OAArD,CAA8DiwB,IAAD,IAAU;UACrE,IAAIA,IAAI,KAAKpZ,GAAT,IAAgB,CAAC6zB,aAAa,CAAC3oC,GAAd,CAAkBkuB,IAAlB,CAArB,EAA8C;YAC5Cya,aAAa,CAACjpC,GAAd,CAAkBwuB,IAAlB,EAAwB8Z,QAAxB;UACD;QACF,CAJD;MAKD,CAdD;IAeD;;IACDc,eAAe,CAACp0B,MAAD,EAASyC,MAAT,EAAiB;MAC9B,MAAM4xB,UAAU,GAAG5xB,MAAM,CAAClC,OAA1B;MACA,MAAMA,OAAO,GAAG+zB,oBAAoB,CAACt0B,MAAD,EAASq0B,UAAT,CAApC;;MACA,IAAI,CAAC9zB,OAAL,EAAc;QACZ,OAAO,EAAP;MACD;;MACD,MAAMqzB,UAAU,GAAG,KAAKW,iBAAL,CAAuBh0B,OAAvB,EAAgC8zB,UAAhC,CAAnB;;MACA,IAAIA,UAAU,CAACG,OAAf,EAAwB;QACtBC,QAAQ,CAACz0B,MAAM,CAACO,OAAP,CAAem0B,WAAhB,EAA6BL,UAA7B,CAAR,CAAiDM,IAAjD,CAAsD,MAAM;UAC1D30B,MAAM,CAACO,OAAP,GAAiB8zB,UAAjB;QACD,CAFD,EAEG,MAAM,CACR,CAHD;MAID;;MACD,OAAOT,UAAP;IACD;;IACDW,iBAAiB,CAACv0B,MAAD,EAASyC,MAAT,EAAiB;MAChC,MAAMwxB,aAAa,GAAG,KAAKD,WAA3B;MACA,MAAMJ,UAAU,GAAG,EAAnB;MACA,MAAM3pC,OAAO,GAAG+V,MAAM,CAAC00B,WAAP,KAAuB10B,MAAM,CAAC00B,WAAP,GAAqB,EAA5C,CAAhB;MACA,MAAMrb,KAAK,GAAGve,MAAM,CAACD,IAAP,CAAY4H,MAAZ,CAAd;MACA,MAAMxZ,IAAI,GAAGa,IAAI,CAACC,GAAL,EAAb;MACA,IAAIK,CAAJ;;MACA,KAAKA,CAAC,GAAGivB,KAAK,CAAClvB,MAAN,GAAe,CAAxB,EAA2BC,CAAC,IAAI,CAAhC,EAAmC,EAAEA,CAArC,EAAwC;QACtC,MAAMovB,IAAI,GAAGH,KAAK,CAACjvB,CAAD,CAAlB;;QACA,IAAIovB,IAAI,CAACtd,MAAL,CAAY,CAAZ,MAAmB,GAAvB,EAA4B;UAC1B;QACD;;QACD,IAAIsd,IAAI,KAAK,SAAb,EAAwB;UACtBoa,UAAU,CAACxoC,IAAX,CAAgB,GAAG,KAAKgpC,eAAL,CAAqBp0B,MAArB,EAA6ByC,MAA7B,CAAnB;UACA;QACD;;QACD,MAAM3E,KAAK,GAAG2E,MAAM,CAAC+W,IAAD,CAApB;QACA,IAAI5W,SAAS,GAAG3Y,OAAO,CAACuvB,IAAD,CAAvB;QACA,MAAM4Y,GAAG,GAAG6B,aAAa,CAACppC,GAAd,CAAkB2uB,IAAlB,CAAZ;;QACA,IAAI5W,SAAJ,EAAe;UACb,IAAIwvB,GAAG,IAAIxvB,SAAS,CAACmwB,MAAV,EAAX,EAA+B;YAC7BnwB,SAAS,CAACwb,MAAV,CAAiBgU,GAAjB,EAAsBt0B,KAAtB,EAA6B7U,IAA7B;YACA;UACD,CAHD,MAGO;YACL2Z,SAAS,CAAC/W,MAAV;UACD;QACF;;QACD,IAAI,CAACumC,GAAD,IAAQ,CAACA,GAAG,CAAC9oC,QAAjB,EAA2B;UACzB0W,MAAM,CAACwZ,IAAD,CAAN,GAAe1b,KAAf;UACA;QACD;;QACD7T,OAAO,CAACuvB,IAAD,CAAP,GAAgB5W,SAAS,GAAG,IAAIuvB,SAAJ,CAAcC,GAAd,EAAmBpyB,MAAnB,EAA2BwZ,IAA3B,EAAiC1b,KAAjC,CAA5B;QACA81B,UAAU,CAACxoC,IAAX,CAAgBwX,SAAhB;MACD;;MACD,OAAOgxB,UAAP;IACD;;IACDxV,MAAM,CAACpe,MAAD,EAASyC,MAAT,EAAiB;MACrB,IAAI,KAAKuxB,WAAL,CAAiB/xB,IAAjB,KAA0B,CAA9B,EAAiC;QAC/BnH,MAAM,CAACgB,MAAP,CAAckE,MAAd,EAAsByC,MAAtB;QACA;MACD;;MACD,MAAMmxB,UAAU,GAAG,KAAKW,iBAAL,CAAuBv0B,MAAvB,EAA+ByC,MAA/B,CAAnB;;MACA,IAAImxB,UAAU,CAACzpC,MAAf,EAAuB;QACrB6B,QAAQ,CAACX,GAAT,CAAa,KAAKihC,MAAlB,EAA0BsH,UAA1B;QACA,OAAO,IAAP;MACD;IACF;;EAxFc;;EA0FjB,SAASa,QAAT,CAAkBb,UAAlB,EAA8BF,UAA9B,EAA0C;IACxC,MAAMzpC,OAAO,GAAG,EAAhB;IACA,MAAM4Q,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY64B,UAAZ,CAAb;;IACA,KAAK,IAAItpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyQ,IAAI,CAAC1Q,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;MACpC,MAAMwqC,IAAI,GAAGhB,UAAU,CAAC/4B,IAAI,CAACzQ,CAAD,CAAL,CAAvB;;MACA,IAAIwqC,IAAI,IAAIA,IAAI,CAAC7B,MAAL,EAAZ,EAA2B;QACzB9oC,OAAO,CAACmB,IAAR,CAAawpC,IAAI,CAAC1B,IAAL,EAAb;MACD;IACF;;IACD,OAAOE,OAAO,CAACyB,GAAR,CAAY5qC,OAAZ,CAAP;EACD;;EACD,SAASqqC,oBAAT,CAA8Bt0B,MAA9B,EAAsCq0B,UAAtC,EAAkD;IAChD,IAAI,CAACA,UAAL,EAAiB;MACf;IACD;;IACD,IAAI9zB,OAAO,GAAGP,MAAM,CAACO,OAArB;;IACA,IAAI,CAACA,OAAL,EAAc;MACZP,MAAM,CAACO,OAAP,GAAiB8zB,UAAjB;MACA;IACD;;IACD,IAAI9zB,OAAO,CAACi0B,OAAZ,EAAqB;MACnBx0B,MAAM,CAACO,OAAP,GAAiBA,OAAO,GAAGzF,MAAM,CAACgB,MAAP,CAAc,EAAd,EAAkByE,OAAlB,EAA2B;QAACi0B,OAAO,EAAE,KAAV;QAAiBE,WAAW,EAAE;MAA9B,CAA3B,CAA3B;IACD;;IACD,OAAOn0B,OAAP;EACD;;EAED,SAASu0B,SAAT,CAAmBrwB,KAAnB,EAA0BswB,eAA1B,EAA2C;IACzC,MAAM3mB,IAAI,GAAG3J,KAAK,IAAIA,KAAK,CAAClE,OAAf,IAA0B,EAAvC;IACA,MAAMjB,OAAO,GAAG8O,IAAI,CAAC9O,OAArB;IACA,MAAM3V,GAAG,GAAGykB,IAAI,CAACzkB,GAAL,KAAad,SAAb,GAAyBksC,eAAzB,GAA2C,CAAvD;IACA,MAAMrpC,GAAG,GAAG0iB,IAAI,CAAC1iB,GAAL,KAAa7C,SAAb,GAAyBksC,eAAzB,GAA2C,CAAvD;IACA,OAAO;MACLhtC,KAAK,EAAEuX,OAAO,GAAG5T,GAAH,GAAS/B,GADlB;MAEL3B,GAAG,EAAEsX,OAAO,GAAG3V,GAAH,GAAS+B;IAFhB,CAAP;EAID;;EACD,SAASspC,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqCH,eAArC,EAAsD;IACpD,IAAIA,eAAe,KAAK,KAAxB,EAA+B;MAC7B,OAAO,KAAP;IACD;;IACD,MAAM9kC,CAAC,GAAG6kC,SAAS,CAACG,MAAD,EAASF,eAAT,CAAnB;IACA,MAAMvtB,CAAC,GAAGstB,SAAS,CAACI,MAAD,EAASH,eAAT,CAAnB;IACA,OAAO;MACL3nB,GAAG,EAAE5F,CAAC,CAACxf,GADF;MAELG,KAAK,EAAE8H,CAAC,CAACjI,GAFJ;MAGLqlB,MAAM,EAAE7F,CAAC,CAACzf,KAHL;MAILG,IAAI,EAAE+H,CAAC,CAAClI;IAJH,CAAP;EAMD;;EACD,SAASotC,MAAT,CAAgBr3B,KAAhB,EAAuB;IACrB,IAAI6lB,CAAJ,EAAOv2B,CAAP,EAAUX,CAAV,EAAaoB,CAAb;;IACA,IAAI2Q,QAAQ,CAACV,KAAD,CAAZ,EAAqB;MACnB6lB,CAAC,GAAG7lB,KAAK,CAACsP,GAAV;MACAhgB,CAAC,GAAG0Q,KAAK,CAAC3V,KAAV;MACAsE,CAAC,GAAGqR,KAAK,CAACuP,MAAV;MACAxf,CAAC,GAAGiQ,KAAK,CAAC5V,IAAV;IACD,CALD,MAKO;MACLy7B,CAAC,GAAGv2B,CAAC,GAAGX,CAAC,GAAGoB,CAAC,GAAGiQ,KAAhB;IACD;;IACD,OAAO;MACLsP,GAAG,EAAEuW,CADA;MAELx7B,KAAK,EAAEiF,CAFF;MAGLigB,MAAM,EAAE5gB,CAHH;MAILvE,IAAI,EAAE2F,CAJD;MAKLunC,QAAQ,EAAEt3B,KAAK,KAAK;IALf,CAAP;EAOD;;EACD,SAASu3B,uBAAT,CAAiCtsC,KAAjC,EAAwCusC,aAAxC,EAAuD;IACrD,MAAMz6B,IAAI,GAAG,EAAb;;IACA,MAAMmb,QAAQ,GAAGjtB,KAAK,CAACwsC,sBAAN,CAA6BD,aAA7B,CAAjB;;IACA,IAAIlrC,CAAJ,EAAOsV,IAAP;;IACA,KAAKtV,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGsW,QAAQ,CAAC7rB,MAA5B,EAAoCC,CAAC,GAAGsV,IAAxC,EAA8C,EAAEtV,CAAhD,EAAmD;MACjDyQ,IAAI,CAACzP,IAAL,CAAU4qB,QAAQ,CAAC5rB,CAAD,CAAR,CAAY0V,KAAtB;IACD;;IACD,OAAOjF,IAAP;EACD;;EACD,SAAS26B,UAAT,CAAoBta,KAApB,EAA2Bpd,KAA3B,EAAkC23B,OAAlC,EAAyD;IAAA,IAAdl1B,OAAc,uEAAJ,EAAI;IACvD,MAAM1F,IAAI,GAAGqgB,KAAK,CAACrgB,IAAnB;IACA,MAAM66B,UAAU,GAAGn1B,OAAO,CAAC0D,IAAR,KAAiB,QAApC;IACA,IAAI7Z,CAAJ,EAAOsV,IAAP,EAAaG,YAAb,EAA2B81B,UAA3B;;IACA,IAAI73B,KAAK,KAAK,IAAd,EAAoB;MAClB;IACD;;IACD,KAAK1T,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG7E,IAAI,CAAC1Q,MAAxB,EAAgCC,CAAC,GAAGsV,IAApC,EAA0C,EAAEtV,CAA5C,EAA+C;MAC7CyV,YAAY,GAAG,CAAChF,IAAI,CAACzQ,CAAD,CAApB;;MACA,IAAIyV,YAAY,KAAK41B,OAArB,EAA8B;QAC5B,IAAIl1B,OAAO,CAACs0B,GAAZ,EAAiB;UACf;QACD;;QACD;MACD;;MACDc,UAAU,GAAGza,KAAK,CAACzY,MAAN,CAAa5C,YAAb,CAAb;;MACA,IAAIpB,cAAc,CAACk3B,UAAD,CAAd,KAA+BD,UAAU,IAAK53B,KAAK,KAAK,CAAV,IAAe2I,IAAI,CAAC3I,KAAD,CAAJ,KAAgB2I,IAAI,CAACkvB,UAAD,CAAjF,CAAJ,EAAqG;QACnG73B,KAAK,IAAI63B,UAAT;MACD;IACF;;IACD,OAAO73B,KAAP;EACD;;EACD,SAAS83B,wBAAT,CAAkC9rB,IAAlC,EAAwC;IACtC,MAAMjP,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYiP,IAAZ,CAAb;IACA,MAAM+rB,KAAK,GAAG,IAAI7uC,KAAJ,CAAU6T,IAAI,CAAC1Q,MAAf,CAAd;IACA,IAAIC,CAAJ,EAAOsV,IAAP,EAAaU,GAAb;;IACA,KAAKhW,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG7E,IAAI,CAAC1Q,MAAxB,EAAgCC,CAAC,GAAGsV,IAApC,EAA0C,EAAEtV,CAA5C,EAA+C;MAC7CgW,GAAG,GAAGvF,IAAI,CAACzQ,CAAD,CAAV;MACAyrC,KAAK,CAACzrC,CAAD,CAAL,GAAW;QACT6F,CAAC,EAAEmQ,GADM;QAEToH,CAAC,EAAEsC,IAAI,CAAC1J,GAAD;MAFE,CAAX;IAID;;IACD,OAAOy1B,KAAP;EACD;;EACD,SAASC,SAAT,CAAmBrxB,KAAnB,EAA0BkU,IAA1B,EAAgC;IAC9B,MAAMod,OAAO,GAAGtxB,KAAK,IAAIA,KAAK,CAAClE,OAAN,CAAcw1B,OAAvC;IACA,OAAOA,OAAO,IAAKA,OAAO,KAAKltC,SAAZ,IAAyB8vB,IAAI,CAACuC,KAAL,KAAeryB,SAA3D;EACD;;EACD,SAASmtC,WAAT,CAAqBC,UAArB,EAAiCC,UAAjC,EAA6Cvd,IAA7C,EAAmD;IACjD,OAAQ,GAAEsd,UAAU,CAAC73B,EAAG,IAAG83B,UAAU,CAAC93B,EAAG,IAAGua,IAAI,CAACuC,KAAL,IAAcvC,IAAI,CAACzvB,IAAK,EAApE;EACD;;EACD,SAASitC,aAAT,CAAuB1xB,KAAvB,EAA8B;IAC5B,MAAM;MAAC9a,GAAD;MAAM+B,GAAN;MAAW0qC,UAAX;MAAuBC;IAAvB,IAAqC5xB,KAAK,CAAC0xB,aAAN,EAA3C;IACA,OAAO;MACLxsC,GAAG,EAAEysC,UAAU,GAAGzsC,GAAH,GAAS+U,MAAM,CAAC43B,iBAD1B;MAEL5qC,GAAG,EAAE2qC,UAAU,GAAG3qC,GAAH,GAASgT,MAAM,CAACyH;IAF1B,CAAP;EAID;;EACD,SAASowB,gBAAT,CAA0B/a,MAA1B,EAAkCgb,QAAlC,EAA4CC,UAA5C,EAAwD;IACtD,MAAMC,QAAQ,GAAGlb,MAAM,CAACgb,QAAD,CAAN,KAAqBhb,MAAM,CAACgb,QAAD,CAAN,GAAmB,EAAxC,CAAjB;IACA,OAAOE,QAAQ,CAACD,UAAD,CAAR,KAAyBC,QAAQ,CAACD,UAAD,CAAR,GAAuB,EAAhD,CAAP;EACD;;EACD,SAASE,mBAAT,CAA6Bzb,KAA7B,EAAoC0b,MAApC,EAA4CC,QAA5C,EAAsD3tC,IAAtD,EAA4D;IAC1D,KAAK,MAAMyvB,IAAX,IAAmBie,MAAM,CAACE,uBAAP,CAA+B5tC,IAA/B,EAAqCoW,OAArC,EAAnB,EAAmE;MACjE,MAAMxB,KAAK,GAAGod,KAAK,CAACvC,IAAI,CAAC7Y,KAAN,CAAnB;;MACA,IAAK+2B,QAAQ,IAAI/4B,KAAK,GAAG,CAArB,IAA4B,CAAC+4B,QAAD,IAAa/4B,KAAK,GAAG,CAArD,EAAyD;QACvD,OAAO6a,IAAI,CAAC7Y,KAAZ;MACD;IACF;;IACD,OAAO,IAAP;EACD;;EACD,SAASi3B,YAAT,CAAsBzgB,UAAtB,EAAkC0gB,MAAlC,EAA0C;IACxC,MAAM;MAACjuC,KAAD;MAAQ0tB,WAAW,EAAEkC;IAArB,IAA6BrC,UAAnC;IACA,MAAMkF,MAAM,GAAGzyB,KAAK,CAACkuC,OAAN,KAAkBluC,KAAK,CAACkuC,OAAN,GAAgB,EAAlC,CAAf;IACA,MAAM;MAACzgB,MAAD;MAASogB,MAAT;MAAiB92B,KAAK,EAAED;IAAxB,IAAwC8Y,IAA9C;IACA,MAAMue,KAAK,GAAG1gB,MAAM,CAACH,IAArB;IACA,MAAM8gB,KAAK,GAAGP,MAAM,CAACvgB,IAArB;IACA,MAAMjW,GAAG,GAAG41B,WAAW,CAACxf,MAAD,EAASogB,MAAT,EAAiBje,IAAjB,CAAvB;IACA,MAAMjZ,IAAI,GAAGs3B,MAAM,CAAC7sC,MAApB;IACA,IAAI+wB,KAAJ;;IACA,KAAK,IAAI9wB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsV,IAApB,EAA0B,EAAEtV,CAA5B,EAA+B;MAC7B,MAAME,IAAI,GAAG0sC,MAAM,CAAC5sC,CAAD,CAAnB;MACA,MAAM;QAAC,CAAC8sC,KAAD,GAASp3B,KAAV;QAAiB,CAACq3B,KAAD,GAASr5B;MAA1B,IAAmCxT,IAAzC;MACA,MAAM8sC,UAAU,GAAG9sC,IAAI,CAAC2sC,OAAL,KAAiB3sC,IAAI,CAAC2sC,OAAL,GAAe,EAAhC,CAAnB;MACA/b,KAAK,GAAGkc,UAAU,CAACD,KAAD,CAAV,GAAoBZ,gBAAgB,CAAC/a,MAAD,EAASpb,GAAT,EAAcN,KAAd,CAA5C;MACAob,KAAK,CAACrb,YAAD,CAAL,GAAsB/B,KAAtB;MACAod,KAAK,CAACmc,IAAN,GAAaV,mBAAmB,CAACzb,KAAD,EAAQ0b,MAAR,EAAgB,IAAhB,EAAsBje,IAAI,CAACzvB,IAA3B,CAAhC;MACAgyB,KAAK,CAACoc,OAAN,GAAgBX,mBAAmB,CAACzb,KAAD,EAAQ0b,MAAR,EAAgB,KAAhB,EAAuBje,IAAI,CAACzvB,IAA5B,CAAnC;IACD;EACF;;EACD,SAASquC,eAAT,CAAyBxuC,KAAzB,EAAgCstB,IAAhC,EAAsC;IACpC,MAAM3R,MAAM,GAAG3b,KAAK,CAAC2b,MAArB;IACA,OAAO5J,MAAM,CAACD,IAAP,CAAY6J,MAAZ,EAAoBkW,MAApB,CAA2Bxa,GAAG,IAAIsE,MAAM,CAACtE,GAAD,CAAN,CAAYiW,IAAZ,KAAqBA,IAAvD,EAA6DmhB,KAA7D,EAAP;EACD;;EACD,SAASC,oBAAT,CAA8B3lB,MAA9B,EAAsChS,KAAtC,EAA6C;IAC3C,OAAO0a,aAAa,CAAC1I,MAAD,EAClB;MACEihB,MAAM,EAAE,KADV;MAEEna,OAAO,EAAE/vB,SAFX;MAGEgX,YAAY,EAAEC,KAHhB;MAIEA,KAJF;MAKEmE,IAAI,EAAE,SALR;MAME/a,IAAI,EAAE;IANR,CADkB,CAApB;EAUD;;EACD,SAASwuC,iBAAT,CAA2B5lB,MAA3B,EAAmChS,KAAnC,EAA0CwS,OAA1C,EAAmD;IACjD,OAAOkI,aAAa,CAAC1I,MAAD,EAAS;MAC3BihB,MAAM,EAAE,KADmB;MAE3B4E,SAAS,EAAE73B,KAFgB;MAG3Bk3B,MAAM,EAAEnuC,SAHmB;MAI3B+uC,GAAG,EAAE/uC,SAJsB;MAK3BypB,OAL2B;MAM3BxS,KAN2B;MAO3BmE,IAAI,EAAE,SAPqB;MAQ3B/a,IAAI,EAAE;IARqB,CAAT,CAApB;EAUD;;EACD,SAAS2uC,WAAT,CAAqBlf,IAArB,EAA2BzuB,KAA3B,EAAkC;IAChC,MAAM2V,YAAY,GAAG8Y,IAAI,CAACrC,UAAL,CAAgBxW,KAArC;IACA,MAAMuW,IAAI,GAAGsC,IAAI,CAACie,MAAL,IAAeje,IAAI,CAACie,MAAL,CAAYvgB,IAAxC;;IACA,IAAI,CAACA,IAAL,EAAW;MACT;IACD;;IACDnsB,KAAK,GAAGA,KAAK,IAAIyuB,IAAI,CAACmf,OAAtB;;IACA,KAAK,MAAMd,MAAX,IAAqB9sC,KAArB,EAA4B;MAC1B,MAAMsxB,MAAM,GAAGwb,MAAM,CAACC,OAAtB;;MACA,IAAI,CAACzb,MAAD,IAAWA,MAAM,CAACnF,IAAD,CAAN,KAAiBxtB,SAA5B,IAAyC2yB,MAAM,CAACnF,IAAD,CAAN,CAAaxW,YAAb,MAA+BhX,SAA5E,EAAuF;QACrF;MACD;;MACD,OAAO2yB,MAAM,CAACnF,IAAD,CAAN,CAAaxW,YAAb,CAAP;IACD;EACF;;EACD,MAAMk4B,kBAAkB,GAAI9zB,IAAD,IAAUA,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,MAAlE;;EACA,MAAM+zB,gBAAgB,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoBA,MAAM,GAAGD,MAAH,GAAYn9B,MAAM,CAACgB,MAAP,CAAc,EAAd,EAAkBm8B,MAAlB,CAA/D;;EACA,MAAME,WAAW,GAAG,CAACC,QAAD,EAAWzf,IAAX,EAAiB5vB,KAAjB,KAA2BqvC,QAAQ,IAAI,CAACzf,IAAI,CAAC0f,MAAlB,IAA4B1f,IAAI,CAAC2f,QAAjC,IAC1C;IAACz9B,IAAI,EAAEw6B,uBAAuB,CAACtsC,KAAD,EAAQ,IAAR,CAA9B;IAA6C0Z,MAAM,EAAE;EAArD,CADL;;EAEA,MAAM81B,iBAAN,CAAwB;IACtBhwC,WAAW,CAACQ,KAAD,EAAQ8W,YAAR,EAAsB;MAC/B,KAAK9W,KAAL,GAAaA,KAAb;MACA,KAAKyvC,IAAL,GAAYzvC,KAAK,CAAC6a,GAAlB;MACA,KAAK9D,KAAL,GAAaD,YAAb;MACA,KAAK44B,eAAL,GAAuB,EAAvB;MACA,KAAKhiB,WAAL,GAAmB,KAAKiiB,OAAL,EAAnB;MACA,KAAKC,KAAL,GAAa,KAAKliB,WAAL,CAAiBvtB,IAA9B;MACA,KAAKqX,OAAL,GAAe1X,SAAf;MACA,KAAK+vC,QAAL,GAAgB,KAAhB;MACA,KAAKC,KAAL,GAAahwC,SAAb;MACA,KAAKiwC,WAAL,GAAmBjwC,SAAnB;MACA,KAAK+tB,cAAL,GAAsB/tB,SAAtB;MACA,KAAKkwC,UAAL,GAAkBlwC,SAAlB;MACA,KAAKmwC,UAAL,GAAkBnwC,SAAlB;MACA,KAAKowC,mBAAL,GAA2B,KAA3B;MACA,KAAKC,QAAL,GAAgBrwC,SAAhB;MACA,KAAKswC,SAAL,GAAiB,EAAjB;MACA,KAAKC,UAAL;IACD;;IACDA,UAAU,GAAG;MACX,MAAMzgB,IAAI,GAAG,KAAKlC,WAAlB;MACA,KAAKsI,SAAL;MACA,KAAKsa,UAAL;MACA1gB,IAAI,CAAC2f,QAAL,GAAgBxC,SAAS,CAACnd,IAAI,CAACie,MAAN,EAAcje,IAAd,CAAzB;MACA,KAAK2gB,WAAL;IACD;;IACDC,WAAW,CAAC15B,YAAD,EAAe;MACxB,IAAI,KAAKC,KAAL,KAAeD,YAAnB,EAAiC;QAC/Bg4B,WAAW,CAAC,KAAKphB,WAAN,CAAX;MACD;;MACD,KAAK3W,KAAL,GAAaD,YAAb;IACD;;IACDw5B,UAAU,GAAG;MACX,MAAMtwC,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAM4vB,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAMmC,OAAO,GAAG,KAAK4gB,UAAL,EAAhB;;MACA,MAAMC,QAAQ,GAAG,CAACpjB,IAAD,EAAOpmB,CAAP,EAAUuX,CAAV,EAAapa,CAAb,KAAmBipB,IAAI,KAAK,GAAT,GAAepmB,CAAf,GAAmBomB,IAAI,KAAK,GAAT,GAAejpB,CAAf,GAAmBoa,CAA1E;;MACA,MAAMkyB,GAAG,GAAG/gB,IAAI,CAACghB,OAAL,GAAe76B,cAAc,CAAC8Z,OAAO,CAAC+gB,OAAT,EAAkBpC,eAAe,CAACxuC,KAAD,EAAQ,GAAR,CAAjC,CAAzC;MACA,MAAM6wC,GAAG,GAAGjhB,IAAI,CAACkhB,OAAL,GAAe/6B,cAAc,CAAC8Z,OAAO,CAACihB,OAAT,EAAkBtC,eAAe,CAACxuC,KAAD,EAAQ,GAAR,CAAjC,CAAzC;MACA,MAAM+wC,GAAG,GAAGnhB,IAAI,CAACohB,OAAL,GAAej7B,cAAc,CAAC8Z,OAAO,CAACmhB,OAAT,EAAkBxC,eAAe,CAACxuC,KAAD,EAAQ,GAAR,CAAjC,CAAzC;MACA,MAAMgb,SAAS,GAAG4U,IAAI,CAAC5U,SAAvB;MACA,MAAMi2B,GAAG,GAAGrhB,IAAI,CAACshB,OAAL,GAAeR,QAAQ,CAAC11B,SAAD,EAAY21B,GAAZ,EAAiBE,GAAjB,EAAsBE,GAAtB,CAAnC;MACA,MAAMI,GAAG,GAAGvhB,IAAI,CAACwhB,OAAL,GAAeV,QAAQ,CAAC11B,SAAD,EAAY61B,GAAZ,EAAiBF,GAAjB,EAAsBI,GAAtB,CAAnC;MACAnhB,IAAI,CAACsc,MAAL,GAAc,KAAKmF,aAAL,CAAmBV,GAAnB,CAAd;MACA/gB,IAAI,CAACuc,MAAL,GAAc,KAAKkF,aAAL,CAAmBR,GAAnB,CAAd;MACAjhB,IAAI,CAAC0hB,MAAL,GAAc,KAAKD,aAAL,CAAmBN,GAAnB,CAAd;MACAnhB,IAAI,CAACnC,MAAL,GAAc,KAAK4jB,aAAL,CAAmBJ,GAAnB,CAAd;MACArhB,IAAI,CAACie,MAAL,GAAc,KAAKwD,aAAL,CAAmBF,GAAnB,CAAd;IACD;;IACDV,UAAU,GAAG;MACX,OAAO,KAAKzwC,KAAL,CAAW+gB,IAAX,CAAgB/G,QAAhB,CAAyB,KAAKjD,KAA9B,CAAP;IACD;;IACD44B,OAAO,GAAG;MACR,OAAO,KAAK3vC,KAAL,CAAW8vB,cAAX,CAA0B,KAAK/Y,KAA/B,CAAP;IACD;;IACDs6B,aAAa,CAACE,OAAD,EAAU;MACrB,OAAO,KAAKvxC,KAAL,CAAW2b,MAAX,CAAkB41B,OAAlB,CAAP;IACD;;IACDC,cAAc,CAAC91B,KAAD,EAAQ;MACpB,MAAMkU,IAAI,GAAG,KAAKlC,WAAlB;MACA,OAAOhS,KAAK,KAAKkU,IAAI,CAACnC,MAAf,GACHmC,IAAI,CAACie,MADF,GAEHje,IAAI,CAACnC,MAFT;IAGD;;IACDgkB,KAAK,GAAG;MACN,KAAK3wC,OAAL,CAAa,OAAb;IACD;;IACD4wC,QAAQ,GAAG;MACT,MAAM9hB,IAAI,GAAG,KAAKlC,WAAlB;;MACA,IAAI,KAAKoiB,KAAT,EAAgB;QACdxnB,mBAAmB,CAAC,KAAKwnB,KAAN,EAAa,IAAb,CAAnB;MACD;;MACD,IAAIlgB,IAAI,CAAC2f,QAAT,EAAmB;QACjBT,WAAW,CAAClf,IAAD,CAAX;MACD;IACF;;IACD+hB,UAAU,GAAG;MACX,MAAM9hB,OAAO,GAAG,KAAK4gB,UAAL,EAAhB;MACA,MAAM1vB,IAAI,GAAG8O,OAAO,CAAC9O,IAAR,KAAiB8O,OAAO,CAAC9O,IAAR,GAAe,EAAhC,CAAb;MACA,MAAM+uB,KAAK,GAAG,KAAKA,KAAnB;;MACA,IAAIr6B,QAAQ,CAACsL,IAAD,CAAZ,EAAoB;QAClB,KAAK+uB,KAAL,GAAajD,wBAAwB,CAAC9rB,IAAD,CAArC;MACD,CAFD,MAEO,IAAI+uB,KAAK,KAAK/uB,IAAd,EAAoB;QACzB,IAAI+uB,KAAJ,EAAW;UACTxnB,mBAAmB,CAACwnB,KAAD,EAAQ,IAAR,CAAnB;UACA,MAAMlgB,IAAI,GAAG,KAAKlC,WAAlB;UACAohB,WAAW,CAAClf,IAAD,CAAX;UACAA,IAAI,CAACmf,OAAL,GAAe,EAAf;QACD;;QACD,IAAIhuB,IAAI,IAAIhP,MAAM,CAAC6/B,YAAP,CAAoB7wB,IAApB,CAAZ,EAAuC;UACrC8G,iBAAiB,CAAC9G,IAAD,EAAO,IAAP,CAAjB;QACD;;QACD,KAAKqvB,SAAL,GAAiB,EAAjB;QACA,KAAKN,KAAL,GAAa/uB,IAAb;MACD;IACF;;IACDwvB,WAAW,GAAG;MACZ,MAAM3gB,IAAI,GAAG,KAAKlC,WAAlB;;MACA,KAAKikB,UAAL;;MACA,IAAI,KAAKE,kBAAT,EAA6B;QAC3BjiB,IAAI,CAACC,OAAL,GAAe,IAAI,KAAKgiB,kBAAT,EAAf;MACD;IACF;;IACDC,qBAAqB,CAACC,gBAAD,EAAmB;MACtC,MAAMniB,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAMmC,OAAO,GAAG,KAAK4gB,UAAL,EAAhB;MACA,IAAIuB,YAAY,GAAG,KAAnB;;MACA,KAAKL,UAAL;;MACA,MAAMM,UAAU,GAAGriB,IAAI,CAAC2f,QAAxB;MACA3f,IAAI,CAAC2f,QAAL,GAAgBxC,SAAS,CAACnd,IAAI,CAACie,MAAN,EAAcje,IAAd,CAAzB;;MACA,IAAIA,IAAI,CAACuC,KAAL,KAAetC,OAAO,CAACsC,KAA3B,EAAkC;QAChC6f,YAAY,GAAG,IAAf;QACAlD,WAAW,CAAClf,IAAD,CAAX;QACAA,IAAI,CAACuC,KAAL,GAAatC,OAAO,CAACsC,KAArB;MACD;;MACD,KAAK+f,eAAL,CAAqBH,gBAArB;;MACA,IAAIC,YAAY,IAAIC,UAAU,KAAKriB,IAAI,CAAC2f,QAAxC,EAAkD;QAChDvB,YAAY,CAAC,IAAD,EAAOpe,IAAI,CAACmf,OAAZ,CAAZ;MACD;IACF;;IACD/Y,SAAS,GAAG;MACV,MAAM+O,MAAM,GAAG,KAAK/kC,KAAL,CAAW+kC,MAA1B;MACA,MAAMoN,SAAS,GAAGpN,MAAM,CAACqN,gBAAP,CAAwB,KAAKxC,KAA7B,CAAlB;MACA,MAAMlZ,MAAM,GAAGqO,MAAM,CAACsN,eAAP,CAAuB,KAAK5B,UAAL,EAAvB,EAA0C0B,SAA1C,EAAqD,IAArD,CAAf;MACA,KAAK36B,OAAL,GAAeutB,MAAM,CAACuN,cAAP,CAAsB5b,MAAtB,EAA8B,KAAKnU,UAAL,EAA9B,CAAf;MACA,KAAKstB,QAAL,GAAgB,KAAKr4B,OAAL,CAAa+D,OAA7B;MACA,KAAKm0B,eAAL,GAAuB,EAAvB;IACD;;IACD6C,KAAK,CAACvzC,KAAD,EAAQ6zB,KAAR,EAAe;MAClB,MAAM;QAACnF,WAAW,EAAEkC,IAAd;QAAoBkgB,KAAK,EAAE/uB;MAA3B,IAAmC,IAAzC;MACA,MAAM;QAAC0M,MAAD;QAAS8hB;MAAT,IAAqB3f,IAA3B;MACA,MAAMue,KAAK,GAAG1gB,MAAM,CAACH,IAArB;MACA,IAAIklB,MAAM,GAAGxzC,KAAK,KAAK,CAAV,IAAe6zB,KAAK,KAAK9R,IAAI,CAAC3f,MAA9B,GAAuC,IAAvC,GAA8CwuB,IAAI,CAACpC,OAAhE;MACA,IAAIyP,IAAI,GAAGj+B,KAAK,GAAG,CAAR,IAAa4wB,IAAI,CAACmf,OAAL,CAAa/vC,KAAK,GAAG,CAArB,CAAxB;MACA,IAAIqC,CAAJ,EAAOqB,GAAP,EAAYurC,MAAZ;;MACA,IAAI,KAAK4B,QAAL,KAAkB,KAAtB,EAA6B;QAC3BjgB,IAAI,CAACmf,OAAL,GAAehuB,IAAf;QACA6O,IAAI,CAACpC,OAAL,GAAe,IAAf;QACAygB,MAAM,GAAGltB,IAAT;MACD,CAJD,MAIO;QACL,IAAI1a,OAAO,CAAC0a,IAAI,CAAC/hB,KAAD,CAAL,CAAX,EAA0B;UACxBivC,MAAM,GAAG,KAAKwE,cAAL,CAAoB7iB,IAApB,EAA0B7O,IAA1B,EAAgC/hB,KAAhC,EAAuC6zB,KAAvC,CAAT;QACD,CAFD,MAEO,IAAIpd,QAAQ,CAACsL,IAAI,CAAC/hB,KAAD,CAAL,CAAZ,EAA2B;UAChCivC,MAAM,GAAG,KAAKyE,eAAL,CAAqB9iB,IAArB,EAA2B7O,IAA3B,EAAiC/hB,KAAjC,EAAwC6zB,KAAxC,CAAT;QACD,CAFM,MAEA;UACLob,MAAM,GAAG,KAAK0E,kBAAL,CAAwB/iB,IAAxB,EAA8B7O,IAA9B,EAAoC/hB,KAApC,EAA2C6zB,KAA3C,CAAT;QACD;;QACD,MAAM+f,0BAA0B,GAAG,MAAMlwC,GAAG,CAACyrC,KAAD,CAAH,KAAe,IAAf,IAAwBlR,IAAI,IAAIv6B,GAAG,CAACyrC,KAAD,CAAH,GAAalR,IAAI,CAACkR,KAAD,CAA1F;;QACA,KAAK9sC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwxB,KAAhB,EAAuB,EAAExxB,CAAzB,EAA4B;UAC1BuuB,IAAI,CAACmf,OAAL,CAAa1tC,CAAC,GAAGrC,KAAjB,IAA0B0D,GAAG,GAAGurC,MAAM,CAAC5sC,CAAD,CAAtC;;UACA,IAAImxC,MAAJ,EAAY;YACV,IAAII,0BAA0B,EAA9B,EAAkC;cAChCJ,MAAM,GAAG,KAAT;YACD;;YACDvV,IAAI,GAAGv6B,GAAP;UACD;QACF;;QACDktB,IAAI,CAACpC,OAAL,GAAeglB,MAAf;MACD;;MACD,IAAIjD,QAAJ,EAAc;QACZvB,YAAY,CAAC,IAAD,EAAOC,MAAP,CAAZ;MACD;IACF;;IACD0E,kBAAkB,CAAC/iB,IAAD,EAAO7O,IAAP,EAAa/hB,KAAb,EAAoB6zB,KAApB,EAA2B;MAC3C,MAAM;QAACpF,MAAD;QAASogB;MAAT,IAAmBje,IAAzB;MACA,MAAMue,KAAK,GAAG1gB,MAAM,CAACH,IAArB;MACA,MAAM8gB,KAAK,GAAGP,MAAM,CAACvgB,IAArB;MACA,MAAMulB,MAAM,GAAGplB,MAAM,CAACqlB,SAAP,EAAf;MACA,MAAMC,WAAW,GAAGtlB,MAAM,KAAKogB,MAA/B;MACA,MAAMI,MAAM,GAAG,IAAIhwC,KAAJ,CAAU40B,KAAV,CAAf;MACA,IAAIxxB,CAAJ,EAAOsV,IAAP,EAAaI,KAAb;;MACA,KAAK1V,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGkc,KAAnB,EAA0BxxB,CAAC,GAAGsV,IAA9B,EAAoC,EAAEtV,CAAtC,EAAyC;QACvC0V,KAAK,GAAG1V,CAAC,GAAGrC,KAAZ;QACAivC,MAAM,CAAC5sC,CAAD,CAAN,GAAY;UACV,CAAC8sC,KAAD,GAAS4E,WAAW,IAAItlB,MAAM,CAAC8kB,KAAP,CAAaM,MAAM,CAAC97B,KAAD,CAAnB,EAA4BA,KAA5B,CADd;UAEV,CAACq3B,KAAD,GAASP,MAAM,CAAC0E,KAAP,CAAaxxB,IAAI,CAAChK,KAAD,CAAjB,EAA0BA,KAA1B;QAFC,CAAZ;MAID;;MACD,OAAOk3B,MAAP;IACD;;IACDwE,cAAc,CAAC7iB,IAAD,EAAO7O,IAAP,EAAa/hB,KAAb,EAAoB6zB,KAApB,EAA2B;MACvC,MAAM;QAACqZ,MAAD;QAASC;MAAT,IAAmBvc,IAAzB;MACA,MAAMqe,MAAM,GAAG,IAAIhwC,KAAJ,CAAU40B,KAAV,CAAf;MACA,IAAIxxB,CAAJ,EAAOsV,IAAP,EAAaI,KAAb,EAAoBxV,IAApB;;MACA,KAAKF,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGkc,KAAnB,EAA0BxxB,CAAC,GAAGsV,IAA9B,EAAoC,EAAEtV,CAAtC,EAAyC;QACvC0V,KAAK,GAAG1V,CAAC,GAAGrC,KAAZ;QACAuC,IAAI,GAAGwf,IAAI,CAAChK,KAAD,CAAX;QACAk3B,MAAM,CAAC5sC,CAAD,CAAN,GAAY;UACV6F,CAAC,EAAEglC,MAAM,CAACqG,KAAP,CAAahxC,IAAI,CAAC,CAAD,CAAjB,EAAsBwV,KAAtB,CADO;UAEV0H,CAAC,EAAE0tB,MAAM,CAACoG,KAAP,CAAahxC,IAAI,CAAC,CAAD,CAAjB,EAAsBwV,KAAtB;QAFO,CAAZ;MAID;;MACD,OAAOk3B,MAAP;IACD;;IACDyE,eAAe,CAAC9iB,IAAD,EAAO7O,IAAP,EAAa/hB,KAAb,EAAoB6zB,KAApB,EAA2B;MACxC,MAAM;QAACqZ,MAAD;QAASC;MAAT,IAAmBvc,IAAzB;MACA,MAAM;QAACojB,QAAQ,GAAG,GAAZ;QAAiBC,QAAQ,GAAG;MAA5B,IAAmC,KAAKpD,QAA9C;MACA,MAAM5B,MAAM,GAAG,IAAIhwC,KAAJ,CAAU40B,KAAV,CAAf;MACA,IAAIxxB,CAAJ,EAAOsV,IAAP,EAAaI,KAAb,EAAoBxV,IAApB;;MACA,KAAKF,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGkc,KAAnB,EAA0BxxB,CAAC,GAAGsV,IAA9B,EAAoC,EAAEtV,CAAtC,EAAyC;QACvC0V,KAAK,GAAG1V,CAAC,GAAGrC,KAAZ;QACAuC,IAAI,GAAGwf,IAAI,CAAChK,KAAD,CAAX;QACAk3B,MAAM,CAAC5sC,CAAD,CAAN,GAAY;UACV6F,CAAC,EAAEglC,MAAM,CAACqG,KAAP,CAAa55B,gBAAgB,CAACpX,IAAD,EAAOyxC,QAAP,CAA7B,EAA+Cj8B,KAA/C,CADO;UAEV0H,CAAC,EAAE0tB,MAAM,CAACoG,KAAP,CAAa55B,gBAAgB,CAACpX,IAAD,EAAO0xC,QAAP,CAA7B,EAA+Cl8B,KAA/C;QAFO,CAAZ;MAID;;MACD,OAAOk3B,MAAP;IACD;;IACDiF,SAAS,CAACn8B,KAAD,EAAQ;MACf,OAAO,KAAK2W,WAAL,CAAiBqhB,OAAjB,CAAyBh4B,KAAzB,CAAP;IACD;;IACDo8B,cAAc,CAACp8B,KAAD,EAAQ;MACpB,OAAO,KAAK2W,WAAL,CAAiB3M,IAAjB,CAAsBhK,KAAtB,CAAP;IACD;;IACD01B,UAAU,CAAC/wB,KAAD,EAAQuyB,MAAR,EAAgB/yB,IAAhB,EAAsB;MAC9B,MAAMlb,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAM4vB,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAM3Y,KAAK,GAAGk5B,MAAM,CAACvyB,KAAK,CAAC4R,IAAP,CAApB;MACA,MAAM6E,KAAK,GAAG;QACZrgB,IAAI,EAAEw6B,uBAAuB,CAACtsC,KAAD,EAAQ,IAAR,CADjB;QAEZ0Z,MAAM,EAAEu0B,MAAM,CAACC,OAAP,CAAexyB,KAAK,CAAC4R,IAArB;MAFI,CAAd;MAIA,OAAOmf,UAAU,CAACta,KAAD,EAAQpd,KAAR,EAAe6a,IAAI,CAAC7Y,KAApB,EAA2B;QAACmE;MAAD,CAA3B,CAAjB;IACD;;IACDk4B,qBAAqB,CAACjtC,KAAD,EAAQuV,KAAR,EAAeuyB,MAAf,EAAuB9b,KAAvB,EAA8B;MACjD,MAAMkhB,WAAW,GAAGpF,MAAM,CAACvyB,KAAK,CAAC4R,IAAP,CAA1B;MACA,IAAIvY,KAAK,GAAGs+B,WAAW,KAAK,IAAhB,GAAuBC,GAAvB,GAA6BD,WAAzC;MACA,MAAM35B,MAAM,GAAGyY,KAAK,IAAI8b,MAAM,CAACC,OAAP,CAAexyB,KAAK,CAAC4R,IAArB,CAAxB;;MACA,IAAI6E,KAAK,IAAIzY,MAAb,EAAqB;QACnByY,KAAK,CAACzY,MAAN,GAAeA,MAAf;QACA3E,KAAK,GAAG03B,UAAU,CAACta,KAAD,EAAQkhB,WAAR,EAAqB,KAAK3lB,WAAL,CAAiB3W,KAAtC,CAAlB;MACD;;MACD5Q,KAAK,CAACvF,GAAN,GAAYD,IAAI,CAACC,GAAL,CAASuF,KAAK,CAACvF,GAAf,EAAoBmU,KAApB,CAAZ;MACA5O,KAAK,CAACxD,GAAN,GAAYhC,IAAI,CAACgC,GAAL,CAASwD,KAAK,CAACxD,GAAf,EAAoBoS,KAApB,CAAZ;IACD;;IACDw+B,SAAS,CAAC73B,KAAD,EAAQ2zB,QAAR,EAAkB;MACzB,MAAMzf,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAMqhB,OAAO,GAAGnf,IAAI,CAACmf,OAArB;MACA,MAAMyD,MAAM,GAAG5iB,IAAI,CAACpC,OAAL,IAAgB9R,KAAK,KAAKkU,IAAI,CAACnC,MAA9C;MACA,MAAM9W,IAAI,GAAGo4B,OAAO,CAAC3tC,MAArB;;MACA,MAAMoyC,UAAU,GAAG,KAAKhC,cAAL,CAAoB91B,KAApB,CAAnB;;MACA,MAAMyW,KAAK,GAAGid,WAAW,CAACC,QAAD,EAAWzf,IAAX,EAAiB,KAAK5vB,KAAtB,CAAzB;MACA,MAAMmG,KAAK,GAAG;QAACvF,GAAG,EAAE+U,MAAM,CAACyH,iBAAb;QAAgCza,GAAG,EAAEgT,MAAM,CAAC43B;MAA5C,CAAd;MACA,MAAM;QAAC3sC,GAAG,EAAE6yC,QAAN;QAAgB9wC,GAAG,EAAE+wC;MAArB,IAAiCtG,aAAa,CAACoG,UAAD,CAApD;MACA,IAAInyC,CAAJ,EAAO4sC,MAAP;;MACA,SAAS0F,KAAT,GAAiB;QACf1F,MAAM,GAAGc,OAAO,CAAC1tC,CAAD,CAAhB;QACA,MAAMurC,UAAU,GAAGqB,MAAM,CAACuF,UAAU,CAAClmB,IAAZ,CAAzB;QACA,OAAO,CAAC5X,cAAc,CAACu4B,MAAM,CAACvyB,KAAK,CAAC4R,IAAP,CAAP,CAAf,IAAuCmmB,QAAQ,GAAG7G,UAAlD,IAAgE8G,QAAQ,GAAG9G,UAAlF;MACD;;MACD,KAAKvrC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsV,IAAhB,EAAsB,EAAEtV,CAAxB,EAA2B;QACzB,IAAIsyC,KAAK,EAAT,EAAa;UACX;QACD;;QACD,KAAKP,qBAAL,CAA2BjtC,KAA3B,EAAkCuV,KAAlC,EAAyCuyB,MAAzC,EAAiD9b,KAAjD;;QACA,IAAIqgB,MAAJ,EAAY;UACV;QACD;MACF;;MACD,IAAIA,MAAJ,EAAY;QACV,KAAKnxC,CAAC,GAAGsV,IAAI,GAAG,CAAhB,EAAmBtV,CAAC,IAAI,CAAxB,EAA2B,EAAEA,CAA7B,EAAgC;UAC9B,IAAIsyC,KAAK,EAAT,EAAa;YACX;UACD;;UACD,KAAKP,qBAAL,CAA2BjtC,KAA3B,EAAkCuV,KAAlC,EAAyCuyB,MAAzC,EAAiD9b,KAAjD;UACA;QACD;MACF;;MACD,OAAOhsB,KAAP;IACD;;IACDytC,kBAAkB,CAACl4B,KAAD,EAAQ;MACxB,MAAMuyB,MAAM,GAAG,KAAKvgB,WAAL,CAAiBqhB,OAAhC;MACA,MAAMr1B,MAAM,GAAG,EAAf;MACA,IAAIrY,CAAJ,EAAOsV,IAAP,EAAa5B,KAAb;;MACA,KAAK1T,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGs3B,MAAM,CAAC7sC,MAA1B,EAAkCC,CAAC,GAAGsV,IAAtC,EAA4C,EAAEtV,CAA9C,EAAiD;QAC/C0T,KAAK,GAAGk5B,MAAM,CAAC5sC,CAAD,CAAN,CAAUqa,KAAK,CAAC4R,IAAhB,CAAR;;QACA,IAAI5X,cAAc,CAACX,KAAD,CAAlB,EAA2B;UACzB2E,MAAM,CAACrX,IAAP,CAAY0S,KAAZ;QACD;MACF;;MACD,OAAO2E,MAAP;IACD;;IACDm6B,cAAc,GAAG;MACf,OAAO,KAAP;IACD;;IACDC,gBAAgB,CAAC/8B,KAAD,EAAQ;MACtB,MAAM6Y,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAMD,MAAM,GAAGmC,IAAI,CAACnC,MAApB;MACA,MAAMogB,MAAM,GAAGje,IAAI,CAACie,MAApB;MACA,MAAMI,MAAM,GAAG,KAAKiF,SAAL,CAAen8B,KAAf,CAAf;MACA,OAAO;QACLg9B,KAAK,EAAEtmB,MAAM,GAAG,KAAKA,MAAM,CAACumB,gBAAP,CAAwB/F,MAAM,CAACxgB,MAAM,CAACH,IAAR,CAA9B,CAAR,GAAuD,EAD/D;QAELvY,KAAK,EAAE84B,MAAM,GAAG,KAAKA,MAAM,CAACmG,gBAAP,CAAwB/F,MAAM,CAACJ,MAAM,CAACvgB,IAAR,CAA9B,CAAR,GAAuD;MAF/D,CAAP;IAID;;IACDxsB,OAAO,CAACoa,IAAD,EAAO;MACZ,MAAM0U,IAAI,GAAG,KAAKlC,WAAlB;MACA,KAAK2H,MAAL,CAAYna,IAAI,IAAI,SAApB;MACA0U,IAAI,CAACqkB,KAAL,GAAa7H,MAAM,CAACr2B,cAAc,CAAC,KAAKyB,OAAL,CAAagN,IAAd,EAAoBynB,WAAW,CAACrc,IAAI,CAACsc,MAAN,EAActc,IAAI,CAACuc,MAAnB,EAA2B,KAAK0H,cAAL,EAA3B,CAA/B,CAAf,CAAnB;IACD;;IACDxe,MAAM,CAACna,IAAD,EAAO,CAAE;;IACf5Z,IAAI,GAAG;MACL,MAAMuZ,GAAG,GAAG,KAAK40B,IAAjB;MACA,MAAMzvC,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAM4vB,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAMrT,QAAQ,GAAGuV,IAAI,CAAC7O,IAAL,IAAa,EAA9B;MACA,MAAMoD,IAAI,GAAGnkB,KAAK,CAACwuB,SAAnB;MACA,MAAMwb,MAAM,GAAG,EAAf;MACA,MAAMhrC,KAAK,GAAG,KAAKgxC,UAAL,IAAmB,CAAjC;MACA,MAAMnd,KAAK,GAAG,KAAKod,UAAL,IAAoB51B,QAAQ,CAACjZ,MAAT,GAAkBpC,KAApD;MACA,MAAM6c,uBAAuB,GAAG,KAAKrE,OAAL,CAAaqE,uBAA7C;MACA,IAAIxa,CAAJ;;MACA,IAAIuuB,IAAI,CAACC,OAAT,EAAkB;QAChBD,IAAI,CAACC,OAAL,CAAavuB,IAAb,CAAkBuZ,GAAlB,EAAuBsJ,IAAvB,EAA6BnlB,KAA7B,EAAoC6zB,KAApC;MACD;;MACD,KAAKxxB,CAAC,GAAGrC,KAAT,EAAgBqC,CAAC,GAAGrC,KAAK,GAAG6zB,KAA5B,EAAmC,EAAExxB,CAArC,EAAwC;QACtC,MAAMkoB,OAAO,GAAGlP,QAAQ,CAAChZ,CAAD,CAAxB;;QACA,IAAIkoB,OAAO,CAAC+lB,MAAZ,EAAoB;UAClB;QACD;;QACD,IAAI/lB,OAAO,CAACygB,MAAR,IAAkBnuB,uBAAtB,EAA+C;UAC7CmuB,MAAM,CAAC3nC,IAAP,CAAYknB,OAAZ;QACD,CAFD,MAEO;UACLA,OAAO,CAACjoB,IAAR,CAAauZ,GAAb,EAAkBsJ,IAAlB;QACD;MACF;;MACD,KAAK9iB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG2oC,MAAM,CAAC5oC,MAAvB,EAA+B,EAAEC,CAAjC,EAAoC;QAClC2oC,MAAM,CAAC3oC,CAAD,CAAN,CAAUC,IAAV,CAAeuZ,GAAf,EAAoBsJ,IAApB;MACD;IACF;;IACDqF,QAAQ,CAACzS,KAAD,EAAQizB,MAAR,EAAgB;MACtB,MAAM9uB,IAAI,GAAG8uB,MAAM,GAAG,QAAH,GAAc,SAAjC;MACA,OAAOjzB,KAAK,KAAKjX,SAAV,IAAuB,KAAK4tB,WAAL,CAAiBmC,OAAxC,GACH,KAAKqkB,4BAAL,CAAkCh5B,IAAlC,CADG,GAEH,KAAKi5B,yBAAL,CAA+Bp9B,KAAK,IAAI,CAAxC,EAA2CmE,IAA3C,CAFJ;IAGD;;IACDqH,UAAU,CAACxL,KAAD,EAAQizB,MAAR,EAAgB9uB,IAAhB,EAAsB;MAC9B,MAAM2U,OAAO,GAAG,KAAK4gB,UAAL,EAAhB;MACA,IAAIv2B,OAAJ;;MACA,IAAInD,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAK2W,WAAL,CAAiB3M,IAAjB,CAAsB3f,MAAhD,EAAwD;QACtD,MAAMmoB,OAAO,GAAG,KAAKmE,WAAL,CAAiB3M,IAAjB,CAAsBhK,KAAtB,CAAhB;QACAmD,OAAO,GAAGqP,OAAO,CAAC4mB,QAAR,KACP5mB,OAAO,CAAC4mB,QAAR,GAAmBxB,iBAAiB,CAAC,KAAKpsB,UAAL,EAAD,EAAoBxL,KAApB,EAA2BwS,OAA3B,CAD7B,CAAV;QAEArP,OAAO,CAAC+zB,MAAR,GAAiB,KAAKiF,SAAL,CAAen8B,KAAf,CAAjB;QACAmD,OAAO,CAAC20B,GAAR,GAAchf,OAAO,CAAC9O,IAAR,CAAahK,KAAb,CAAd;QACAmD,OAAO,CAACnD,KAAR,GAAgBmD,OAAO,CAAC00B,SAAR,GAAoB73B,KAApC;MACD,CAPD,MAOO;QACLmD,OAAO,GAAG,KAAKi2B,QAAL,KACP,KAAKA,QAAL,GAAgBzB,oBAAoB,CAAC,KAAK1uC,KAAL,CAAWuiB,UAAX,EAAD,EAA0B,KAAKxL,KAA/B,CAD7B,CAAV;QAEAmD,OAAO,CAAC2V,OAAR,GAAkBA,OAAlB;QACA3V,OAAO,CAACnD,KAAR,GAAgBmD,OAAO,CAACpD,YAAR,GAAuB,KAAKC,KAA5C;MACD;;MACDmD,OAAO,CAAC8vB,MAAR,GAAiB,CAAC,CAACA,MAAnB;MACA9vB,OAAO,CAACgB,IAAR,GAAeA,IAAf;MACA,OAAOhB,OAAP;IACD;;IACDg6B,4BAA4B,CAACh5B,IAAD,EAAO;MACjC,OAAO,KAAKk5B,sBAAL,CAA4B,KAAKvC,kBAAL,CAAwBx8B,EAApD,EAAwD6F,IAAxD,CAAP;IACD;;IACDi5B,yBAAyB,CAACp9B,KAAD,EAAQmE,IAAR,EAAc;MACrC,OAAO,KAAKk5B,sBAAL,CAA4B,KAAKC,eAAL,CAAqBh/B,EAAjD,EAAqD6F,IAArD,EAA2DnE,KAA3D,CAAP;IACD;;IACDq9B,sBAAsB,CAACE,WAAD,EAAuC;MAAA,IAAzBp5B,IAAyB,uEAAlB,SAAkB;MAAA,IAAPnE,KAAO;MAC3D,MAAMizB,MAAM,GAAG9uB,IAAI,KAAK,QAAxB;MACA,MAAMsG,KAAK,GAAG,KAAKkuB,eAAnB;MACA,MAAM5P,QAAQ,GAAGwU,WAAW,GAAG,GAAd,GAAoBp5B,IAArC;MACA,MAAMg0B,MAAM,GAAG1tB,KAAK,CAACse,QAAD,CAApB;MACA,MAAMyU,OAAO,GAAG,KAAKrE,mBAAL,IAA4Bn3B,OAAO,CAAChC,KAAD,CAAnD;;MACA,IAAIm4B,MAAJ,EAAY;QACV,OAAOD,gBAAgB,CAACC,MAAD,EAASqF,OAAT,CAAvB;MACD;;MACD,MAAMxP,MAAM,GAAG,KAAK/kC,KAAL,CAAW+kC,MAA1B;MACA,MAAMoN,SAAS,GAAGpN,MAAM,CAACyP,uBAAP,CAA+B,KAAK5E,KAApC,EAA2C0E,WAA3C,CAAlB;MACA,MAAM3d,QAAQ,GAAGqT,MAAM,GAAG,CAAE,GAAEsK,WAAY,OAAhB,EAAwB,OAAxB,EAAiCA,WAAjC,EAA8C,EAA9C,CAAH,GAAuD,CAACA,WAAD,EAAc,EAAd,CAA9E;MACA,MAAM5d,MAAM,GAAGqO,MAAM,CAACsN,eAAP,CAAuB,KAAK5B,UAAL,EAAvB,EAA0C0B,SAA1C,CAAf;MACA,MAAM5pC,KAAK,GAAGwJ,MAAM,CAACD,IAAP,CAAY6K,QAAQ,CAACtC,QAAT,CAAkBi6B,WAAlB,CAAZ,CAAd;;MACA,MAAMp6B,OAAO,GAAG,MAAM,KAAKqI,UAAL,CAAgBxL,KAAhB,EAAuBizB,MAAvB,CAAtB;;MACA,MAAMtwB,MAAM,GAAGqrB,MAAM,CAAC0P,mBAAP,CAA2B/d,MAA3B,EAAmCnuB,KAAnC,EAA0C2R,OAA1C,EAAmDyc,QAAnD,CAAf;;MACA,IAAIjd,MAAM,CAAC+xB,OAAX,EAAoB;QAClB/xB,MAAM,CAAC+xB,OAAP,GAAiB8I,OAAjB;QACA/yB,KAAK,CAACse,QAAD,CAAL,GAAkB/tB,MAAM,CAACykB,MAAP,CAAcyY,gBAAgB,CAACv1B,MAAD,EAAS66B,OAAT,CAA9B,CAAlB;MACD;;MACD,OAAO76B,MAAP;IACD;;IACDg7B,kBAAkB,CAAC39B,KAAD,EAAQ49B,UAAR,EAAoB3K,MAApB,EAA4B;MAC5C,MAAMhqC,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAMwhB,KAAK,GAAG,KAAKkuB,eAAnB;MACA,MAAM5P,QAAQ,GAAI,aAAY6U,UAAW,EAAzC;MACA,MAAMzF,MAAM,GAAG1tB,KAAK,CAACse,QAAD,CAApB;;MACA,IAAIoP,MAAJ,EAAY;QACV,OAAOA,MAAP;MACD;;MACD,IAAI13B,OAAJ;;MACA,IAAIxX,KAAK,CAACwX,OAAN,CAAcqC,SAAd,KAA4B,KAAhC,EAAuC;QACrC,MAAMkrB,MAAM,GAAG,KAAK/kC,KAAL,CAAW+kC,MAA1B;QACA,MAAMoN,SAAS,GAAGpN,MAAM,CAAC6P,yBAAP,CAAiC,KAAKhF,KAAtC,EAA6C+E,UAA7C,CAAlB;QACA,MAAMje,MAAM,GAAGqO,MAAM,CAACsN,eAAP,CAAuB,KAAK5B,UAAL,EAAvB,EAA0C0B,SAA1C,CAAf;QACA36B,OAAO,GAAGutB,MAAM,CAACuN,cAAP,CAAsB5b,MAAtB,EAA8B,KAAKnU,UAAL,CAAgBxL,KAAhB,EAAuBizB,MAAvB,EAA+B2K,UAA/B,CAA9B,CAAV;MACD;;MACD,MAAM9J,UAAU,GAAG,IAAIG,UAAJ,CAAehrC,KAAf,EAAsBwX,OAAO,IAAIA,OAAO,CAACqzB,UAAzC,CAAnB;;MACA,IAAIrzB,OAAO,IAAIA,OAAO,CAACyf,UAAvB,EAAmC;QACjCzV,KAAK,CAACse,QAAD,CAAL,GAAkB/tB,MAAM,CAACykB,MAAP,CAAcqU,UAAd,CAAlB;MACD;;MACD,OAAOA,UAAP;IACD;;IACDgK,gBAAgB,CAACr9B,OAAD,EAAU;MACxB,IAAI,CAACA,OAAO,CAACi0B,OAAb,EAAsB;QACpB;MACD;;MACD,OAAO,KAAK5d,cAAL,KAAwB,KAAKA,cAAL,GAAsB9b,MAAM,CAACgB,MAAP,CAAc,EAAd,EAAkByE,OAAlB,CAA9C,CAAP;IACD;;IACDs9B,cAAc,CAAC55B,IAAD,EAAO65B,aAAP,EAAsB;MAClC,OAAO,CAACA,aAAD,IAAkB/F,kBAAkB,CAAC9zB,IAAD,CAApC,IAA8C,KAAKlb,KAAL,CAAWg1C,mBAAhE;IACD;;IACDC,aAAa,CAAC1rB,OAAD,EAAUxS,KAAV,EAAiB4zB,UAAjB,EAA6BzvB,IAA7B,EAAmC;MAC9C,IAAI8zB,kBAAkB,CAAC9zB,IAAD,CAAtB,EAA8B;QAC5BnJ,MAAM,CAACgB,MAAP,CAAcwW,OAAd,EAAuBohB,UAAvB;MACD,CAFD,MAEO;QACL,KAAK+J,kBAAL,CAAwB39B,KAAxB,EAA+BmE,IAA/B,EAAqCma,MAArC,CAA4C9L,OAA5C,EAAqDohB,UAArD;MACD;IACF;;IACDuK,mBAAmB,CAACH,aAAD,EAAgB75B,IAAhB,EAAsBowB,UAAtB,EAAkC;MACnD,IAAIyJ,aAAa,IAAI,CAAC/F,kBAAkB,CAAC9zB,IAAD,CAAxC,EAAgD;QAC9C,KAAKw5B,kBAAL,CAAwB50C,SAAxB,EAAmCob,IAAnC,EAAyCma,MAAzC,CAAgD0f,aAAhD,EAA+DzJ,UAA/D;MACD;IACF;;IACD6J,SAAS,CAAC5rB,OAAD,EAAUxS,KAAV,EAAiBmE,IAAjB,EAAuB8uB,MAAvB,EAA+B;MACtCzgB,OAAO,CAACygB,MAAR,GAAiBA,MAAjB;MACA,MAAMxyB,OAAO,GAAG,KAAKgS,QAAL,CAAczS,KAAd,EAAqBizB,MAArB,CAAhB;;MACA,KAAK0K,kBAAL,CAAwB39B,KAAxB,EAA+BmE,IAA/B,EAAqC8uB,MAArC,EAA6C3U,MAA7C,CAAoD9L,OAApD,EAA6D;QAC3D/R,OAAO,EAAG,CAACwyB,MAAD,IAAW,KAAK6K,gBAAL,CAAsBr9B,OAAtB,CAAZ,IAA+CA;MADG,CAA7D;IAGD;;IACD49B,gBAAgB,CAAC7rB,OAAD,EAAUzS,YAAV,EAAwBC,KAAxB,EAA+B;MAC7C,KAAKo+B,SAAL,CAAe5rB,OAAf,EAAwBxS,KAAxB,EAA+B,QAA/B,EAAyC,KAAzC;IACD;;IACDs+B,aAAa,CAAC9rB,OAAD,EAAUzS,YAAV,EAAwBC,KAAxB,EAA+B;MAC1C,KAAKo+B,SAAL,CAAe5rB,OAAf,EAAwBxS,KAAxB,EAA+B,QAA/B,EAAyC,IAAzC;IACD;;IACDu+B,wBAAwB,GAAG;MACzB,MAAM/rB,OAAO,GAAG,KAAKmE,WAAL,CAAiBmC,OAAjC;;MACA,IAAItG,OAAJ,EAAa;QACX,KAAK4rB,SAAL,CAAe5rB,OAAf,EAAwBzpB,SAAxB,EAAmC,QAAnC,EAA6C,KAA7C;MACD;IACF;;IACDy1C,qBAAqB,GAAG;MACtB,MAAMhsB,OAAO,GAAG,KAAKmE,WAAL,CAAiBmC,OAAjC;;MACA,IAAItG,OAAJ,EAAa;QACX,KAAK4rB,SAAL,CAAe5rB,OAAf,EAAwBzpB,SAAxB,EAAmC,QAAnC,EAA6C,IAA7C;MACD;IACF;;IACDoyC,eAAe,CAACH,gBAAD,EAAmB;MAChC,MAAMhxB,IAAI,GAAG,KAAK+uB,KAAlB;MACA,MAAMz1B,QAAQ,GAAG,KAAKqT,WAAL,CAAiB3M,IAAlC;;MACA,KAAK,MAAM,CAACmH,MAAD,EAASstB,IAAT,EAAeC,IAAf,CAAX,IAAmC,KAAKrF,SAAxC,EAAmD;QACjD,KAAKloB,MAAL,EAAastB,IAAb,EAAmBC,IAAnB;MACD;;MACD,KAAKrF,SAAL,GAAiB,EAAjB;MACA,MAAMsF,OAAO,GAAGr7B,QAAQ,CAACjZ,MAAzB;MACA,MAAMu0C,OAAO,GAAG50B,IAAI,CAAC3f,MAArB;MACA,MAAMyxB,KAAK,GAAGlyB,IAAI,CAACC,GAAL,CAAS+0C,OAAT,EAAkBD,OAAlB,CAAd;;MACA,IAAI7iB,KAAJ,EAAW;QACT,KAAK0f,KAAL,CAAW,CAAX,EAAc1f,KAAd;MACD;;MACD,IAAI8iB,OAAO,GAAGD,OAAd,EAAuB;QACrB,KAAKE,eAAL,CAAqBF,OAArB,EAA8BC,OAAO,GAAGD,OAAxC,EAAiD3D,gBAAjD;MACD,CAFD,MAEO,IAAI4D,OAAO,GAAGD,OAAd,EAAuB;QAC5B,KAAKG,eAAL,CAAqBF,OAArB,EAA8BD,OAAO,GAAGC,OAAxC;MACD;IACF;;IACDC,eAAe,CAAC52C,KAAD,EAAQ6zB,KAAR,EAAwC;MAAA,IAAzBkf,gBAAyB,uEAAN,IAAM;MACrD,MAAMniB,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAM3M,IAAI,GAAG6O,IAAI,CAAC7O,IAAlB;MACA,MAAM9hB,GAAG,GAAGD,KAAK,GAAG6zB,KAApB;MACA,IAAIxxB,CAAJ;;MACA,MAAMy0C,IAAI,GAAIrc,GAAD,IAAS;QACpBA,GAAG,CAACr4B,MAAJ,IAAcyxB,KAAd;;QACA,KAAKxxB,CAAC,GAAGo4B,GAAG,CAACr4B,MAAJ,GAAa,CAAtB,EAAyBC,CAAC,IAAIpC,GAA9B,EAAmCoC,CAAC,EAApC,EAAwC;UACtCo4B,GAAG,CAACp4B,CAAD,CAAH,GAASo4B,GAAG,CAACp4B,CAAC,GAAGwxB,KAAL,CAAZ;QACD;MACF,CALD;;MAMAijB,IAAI,CAAC/0B,IAAD,CAAJ;;MACA,KAAK1f,CAAC,GAAGrC,KAAT,EAAgBqC,CAAC,GAAGpC,GAApB,EAAyB,EAAEoC,CAA3B,EAA8B;QAC5B0f,IAAI,CAAC1f,CAAD,CAAJ,GAAU,IAAI,KAAKgzC,eAAT,EAAV;MACD;;MACD,IAAI,KAAKxE,QAAT,EAAmB;QACjBiG,IAAI,CAAClmB,IAAI,CAACmf,OAAN,CAAJ;MACD;;MACD,KAAKwD,KAAL,CAAWvzC,KAAX,EAAkB6zB,KAAlB;;MACA,IAAIkf,gBAAJ,EAAsB;QACpB,KAAKgE,cAAL,CAAoBh1B,IAApB,EAA0B/hB,KAA1B,EAAiC6zB,KAAjC,EAAwC,OAAxC;MACD;IACF;;IACDkjB,cAAc,CAACxsB,OAAD,EAAUvqB,KAAV,EAAiB6zB,KAAjB,EAAwB3X,IAAxB,EAA8B,CAAE;;IAC9C26B,eAAe,CAAC72C,KAAD,EAAQ6zB,KAAR,EAAe;MAC5B,MAAMjD,IAAI,GAAG,KAAKlC,WAAlB;;MACA,IAAI,KAAKmiB,QAAT,EAAmB;QACjB,MAAMmG,OAAO,GAAGpmB,IAAI,CAACmf,OAAL,CAAa/sB,MAAb,CAAoBhjB,KAApB,EAA2B6zB,KAA3B,CAAhB;;QACA,IAAIjD,IAAI,CAAC2f,QAAT,EAAmB;UACjBT,WAAW,CAAClf,IAAD,EAAOomB,OAAP,CAAX;QACD;MACF;;MACDpmB,IAAI,CAAC7O,IAAL,CAAUiB,MAAV,CAAiBhjB,KAAjB,EAAwB6zB,KAAxB;IACD;;IACDojB,KAAK,CAACj4C,IAAD,EAAO;MACV,IAAI,KAAK6xC,QAAT,EAAmB;QACjB,KAAKO,SAAL,CAAe/tC,IAAf,CAAoBrE,IAApB;MACD,CAFD,MAEO;QACL,MAAM,CAACkqB,MAAD,EAASstB,IAAT,EAAeC,IAAf,IAAuBz3C,IAA7B;QACA,KAAKkqB,MAAL,EAAastB,IAAb,EAAmBC,IAAnB;MACD;;MACD,KAAKz1C,KAAL,CAAWk2C,YAAX,CAAwB7zC,IAAxB,CAA6B,CAAC,KAAK0U,KAAN,EAAa,GAAG/Y,IAAhB,CAA7B;IACD;;IACDm4C,WAAW,GAAG;MACZ,MAAMtjB,KAAK,GAAGujB,SAAS,CAACh1C,MAAxB;;MACA,KAAK60C,KAAL,CAAW,CAAC,iBAAD,EAAoB,KAAKxF,UAAL,GAAkB1vB,IAAlB,CAAuB3f,MAAvB,GAAgCyxB,KAApD,EAA2DA,KAA3D,CAAX;IACD;;IACDwjB,UAAU,GAAG;MACX,KAAKJ,KAAL,CAAW,CAAC,iBAAD,EAAoB,KAAKvoB,WAAL,CAAiB3M,IAAjB,CAAsB3f,MAAtB,GAA+B,CAAnD,EAAsD,CAAtD,CAAX;IACD;;IACDk1C,YAAY,GAAG;MACb,KAAKL,KAAL,CAAW,CAAC,iBAAD,EAAoB,CAApB,EAAuB,CAAvB,CAAX;IACD;;IACDM,aAAa,CAACv3C,KAAD,EAAQ6zB,KAAR,EAAe;MAC1B,IAAIA,KAAJ,EAAW;QACT,KAAKojB,KAAL,CAAW,CAAC,iBAAD,EAAoBj3C,KAApB,EAA2B6zB,KAA3B,CAAX;MACD;;MACD,MAAM2jB,QAAQ,GAAGJ,SAAS,CAACh1C,MAAV,GAAmB,CAApC;;MACA,IAAIo1C,QAAJ,EAAc;QACZ,KAAKP,KAAL,CAAW,CAAC,iBAAD,EAAoBj3C,KAApB,EAA2Bw3C,QAA3B,CAAX;MACD;IACF;;IACDC,cAAc,GAAG;MACf,KAAKR,KAAL,CAAW,CAAC,iBAAD,EAAoB,CAApB,EAAuBG,SAAS,CAACh1C,MAAjC,CAAX;IACD;;EAxhBqB;;EA0hBxBouC,iBAAiB,CAAC7yB,QAAlB,GAA6B,EAA7B;EACA6yB,iBAAiB,CAACtxC,SAAlB,CAA4B2zC,kBAA5B,GAAiD,IAAjD;EACArC,iBAAiB,CAACtxC,SAAlB,CAA4Bm2C,eAA5B,GAA8C,IAA9C;;EAEA,MAAMqC,OAAN,CAAc;IACZl3C,WAAW,GAAG;MACZ,KAAK0H,CAAL,GAASpH,SAAT;MACA,KAAK2e,CAAL,GAAS3e,SAAT;MACA,KAAKkqC,MAAL,GAAc,KAAd;MACA,KAAKxyB,OAAL,GAAe1X,SAAf;MACA,KAAK6rC,WAAL,GAAmB7rC,SAAnB;IACD;;IACD62C,eAAe,CAACpoB,gBAAD,EAAmB;MAChC,MAAM;QAACrnB,CAAD;QAAIuX;MAAJ,IAAS,KAAKsQ,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,CAAd,EAA0BR,gBAA1B,CAAf;MACA,OAAO;QAACrnB,CAAD;QAAIuX;MAAJ,CAAP;IACD;;IACDm4B,QAAQ,GAAG;MACT,OAAOr4B,QAAQ,CAAC,KAAKrX,CAAN,CAAR,IAAoBqX,QAAQ,CAAC,KAAKE,CAAN,CAAnC;IACD;;IACDsQ,QAAQ,CAACuB,KAAD,EAAQumB,KAAR,EAAe;MACrB,MAAM52C,KAAK,GAAG,KAAK0rC,WAAnB;;MACA,IAAI,CAACkL,KAAD,IAAU,CAAC52C,KAAf,EAAsB;QACpB,OAAO,IAAP;MACD;;MACD,MAAMyE,GAAG,GAAG,EAAZ;MACA4rB,KAAK,CAAC9vB,OAAN,CAAciwB,IAAI,IAAI;QACpB/rB,GAAG,CAAC+rB,IAAD,CAAH,GAAYxwB,KAAK,CAACwwB,IAAD,CAAL,IAAexwB,KAAK,CAACwwB,IAAD,CAAL,CAAYuZ,MAAZ,EAAf,GAAsC/pC,KAAK,CAACwwB,IAAD,CAAL,CAAYqZ,GAAlD,GAAwD,KAAKrZ,IAAL,CAApE;MACD,CAFD;MAGA,OAAO/rB,GAAP;IACD;;EAzBW;;EA2BdgyC,OAAO,CAAC/5B,QAAR,GAAmB,EAAnB;EACA+5B,OAAO,CAACI,aAAR,GAAwBh3C,SAAxB;EAEA,MAAMi3C,UAAU,GAAG;IACjBr9B,MAAM,CAAC3E,KAAD,EAAQ;MACZ,OAAO1O,OAAO,CAAC0O,KAAD,CAAP,GAAiBA,KAAjB,GAAyB,KAAKA,KAArC;IACD,CAHgB;;IAIjBiiC,OAAO,CAACC,SAAD,EAAYlgC,KAAZ,EAAmBmgC,KAAnB,EAA0B;MAC/B,IAAID,SAAS,KAAK,CAAlB,EAAqB;QACnB,OAAO,GAAP;MACD;;MACD,MAAMpX,MAAM,GAAG,KAAK7/B,KAAL,CAAWwX,OAAX,CAAmBqoB,MAAlC;MACA,IAAIsX,QAAJ;MACA,IAAInb,KAAK,GAAGib,SAAZ;;MACA,IAAIC,KAAK,CAAC91C,MAAN,GAAe,CAAnB,EAAsB;QACpB,MAAMg2C,OAAO,GAAGz2C,IAAI,CAACgC,GAAL,CAAShC,IAAI,CAACge,GAAL,CAASu4B,KAAK,CAAC,CAAD,CAAL,CAASniC,KAAlB,CAAT,EAAmCpU,IAAI,CAACge,GAAL,CAASu4B,KAAK,CAACA,KAAK,CAAC91C,MAAN,GAAe,CAAhB,CAAL,CAAwB2T,KAAjC,CAAnC,CAAhB;;QACA,IAAIqiC,OAAO,GAAG,IAAV,IAAkBA,OAAO,GAAG,KAAhC,EAAuC;UACrCD,QAAQ,GAAG,YAAX;QACD;;QACDnb,KAAK,GAAGqb,cAAc,CAACJ,SAAD,EAAYC,KAAZ,CAAtB;MACD;;MACD,MAAMI,QAAQ,GAAG75B,KAAK,CAAC9c,IAAI,CAACge,GAAL,CAASqd,KAAT,CAAD,CAAtB;MACA,MAAMub,UAAU,GAAG52C,IAAI,CAACgC,GAAL,CAAShC,IAAI,CAACC,GAAL,CAAS,CAAC,CAAD,GAAKD,IAAI,CAACqd,KAAL,CAAWs5B,QAAX,CAAd,EAAoC,EAApC,CAAT,EAAkD,CAAlD,CAAnB;MACA,MAAM9/B,OAAO,GAAG;QAAC2/B,QAAD;QAAWK,qBAAqB,EAAED,UAAlC;QAA8CE,qBAAqB,EAAEF;MAArE,CAAhB;MACAxlC,MAAM,CAACgB,MAAP,CAAcyE,OAAd,EAAuB,KAAKA,OAAL,CAAa0/B,KAAb,CAAmB5W,MAA1C;MACA,OAAOF,YAAY,CAAC6W,SAAD,EAAYpX,MAAZ,EAAoBroB,OAApB,CAAnB;IACD,CAvBgB;;IAwBjBkgC,WAAW,CAACT,SAAD,EAAYlgC,KAAZ,EAAmBmgC,KAAnB,EAA0B;MACnC,IAAID,SAAS,KAAK,CAAlB,EAAqB;QACnB,OAAO,GAAP;MACD;;MACD,MAAM/M,MAAM,GAAG+M,SAAS,GAAIt2C,IAAI,CAACod,GAAL,CAAS,EAAT,EAAapd,IAAI,CAACqd,KAAL,CAAWP,KAAK,CAACw5B,SAAD,CAAhB,CAAb,CAA5B;;MACA,IAAI/M,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,CAA3B,IAAgCA,MAAM,KAAK,CAA/C,EAAkD;QAChD,OAAO6M,UAAU,CAACC,OAAX,CAAmB54C,IAAnB,CAAwB,IAAxB,EAA8B64C,SAA9B,EAAyClgC,KAAzC,EAAgDmgC,KAAhD,CAAP;MACD;;MACD,OAAO,EAAP;IACD;;EAjCgB,CAAnB;;EAmCA,SAASG,cAAT,CAAwBJ,SAAxB,EAAmCC,KAAnC,EAA0C;IACxC,IAAIlb,KAAK,GAAGkb,KAAK,CAAC91C,MAAN,GAAe,CAAf,GAAmB81C,KAAK,CAAC,CAAD,CAAL,CAASniC,KAAT,GAAiBmiC,KAAK,CAAC,CAAD,CAAL,CAASniC,KAA7C,GAAqDmiC,KAAK,CAAC,CAAD,CAAL,CAASniC,KAAT,GAAiBmiC,KAAK,CAAC,CAAD,CAAL,CAASniC,KAA3F;;IACA,IAAIpU,IAAI,CAACge,GAAL,CAASqd,KAAT,KAAmB,CAAnB,IAAwBib,SAAS,KAAKt2C,IAAI,CAACqd,KAAL,CAAWi5B,SAAX,CAA1C,EAAiE;MAC/Djb,KAAK,GAAGib,SAAS,GAAGt2C,IAAI,CAACqd,KAAL,CAAWi5B,SAAX,CAApB;IACD;;IACD,OAAOjb,KAAP;EACD;;EACD,IAAI2b,KAAK,GAAG;IAACZ;EAAD,CAAZ;EAEAp6B,QAAQ,CAAC1a,GAAT,CAAa,OAAb,EAAsB;IACpBs0B,OAAO,EAAE,IADW;IAEpBqhB,MAAM,EAAE,KAFY;IAGpBrhC,OAAO,EAAE,KAHW;IAIpB+a,WAAW,EAAE,KAJO;IAKpBwQ,MAAM,EAAE,OALY;IAMpBzQ,KAAK,EAAE,CANa;IAOpBwmB,IAAI,EAAE;MACJthB,OAAO,EAAE,IADL;MAEJ3Q,SAAS,EAAE,CAFP;MAGJkyB,UAAU,EAAE,IAHR;MAIJC,eAAe,EAAE,IAJb;MAKJC,SAAS,EAAE,IALP;MAMJC,UAAU,EAAE,CANR;MAOJC,SAAS,EAAE,CAACzI,IAAD,EAAOj4B,OAAP,KAAmBA,OAAO,CAACoO,SAPlC;MAQJuyB,SAAS,EAAE,CAAC1I,IAAD,EAAOj4B,OAAP,KAAmBA,OAAO,CAAC9D,KARlC;MASJkkC,MAAM,EAAE,KATJ;MAUJxT,UAAU,EAAE,EAVR;MAWJC,gBAAgB,EAAE,GAXd;MAYJtgB,WAAW,EAAE;IAZT,CAPc;IAqBpBq0B,KAAK,EAAE;MACL7hB,OAAO,EAAE,KADJ;MAELnR,IAAI,EAAE,EAFD;MAGLqQ,OAAO,EAAE;QACPpR,GAAG,EAAE,CADE;QAEPC,MAAM,EAAE;MAFD;IAHJ,CArBa;IA6BpB4yB,KAAK,EAAE;MACLmB,WAAW,EAAE,CADR;MAELC,WAAW,EAAE,EAFR;MAGLC,MAAM,EAAE,KAHH;MAILC,eAAe,EAAE,CAJZ;MAKLC,eAAe,EAAE,EALZ;MAMLhjB,OAAO,EAAE,CANJ;MAOLc,OAAO,EAAE,IAPJ;MAQLmiB,QAAQ,EAAE,IARL;MASLC,eAAe,EAAE,CATZ;MAULC,WAAW,EAAE,CAVR;MAWLn7C,QAAQ,EAAEk6C,KAAK,CAACZ,UAAN,CAAiBr9B,MAXtB;MAYLm/B,KAAK,EAAE,EAZF;MAaLC,KAAK,EAAE,EAbF;MAcLh6C,KAAK,EAAE,QAdF;MAeLi6C,UAAU,EAAE,MAfP;MAgBLC,iBAAiB,EAAE,KAhBd;MAiBLC,aAAa,EAAE,2BAjBV;MAkBLC,eAAe,EAAE;IAlBZ;EA7Ba,CAAtB;EAkDAv8B,QAAQ,CAACX,KAAT,CAAe,aAAf,EAA8B,OAA9B,EAAuC,EAAvC,EAA2C,OAA3C;EACAW,QAAQ,CAACX,KAAT,CAAe,YAAf,EAA6B,OAA7B,EAAsC,EAAtC,EAA0C,aAA1C;EACAW,QAAQ,CAACX,KAAT,CAAe,YAAf,EAA6B,aAA7B,EAA4C,EAA5C,EAAgD,aAAhD;EACAW,QAAQ,CAACX,KAAT,CAAe,aAAf,EAA8B,OAA9B,EAAuC,EAAvC,EAA2C,OAA3C;EACAW,QAAQ,CAACb,QAAT,CAAkB,OAAlB,EAA2B;IACzBiB,SAAS,EAAE,KADc;IAEzBH,WAAW,EAAGX,IAAD,IAAU,CAACA,IAAI,CAACY,UAAL,CAAgB,QAAhB,CAAD,IAA8B,CAACZ,IAAI,CAACY,UAAL,CAAgB,OAAhB,CAA/B,IAA2DZ,IAAI,KAAK,UAApE,IAAkFA,IAAI,KAAK,QAFzF;IAGzBa,UAAU,EAAGb,IAAD,IAAUA,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK;EAH/B,CAA3B;EAKAU,QAAQ,CAACb,QAAT,CAAkB,QAAlB,EAA4B;IAC1BiB,SAAS,EAAE;EADe,CAA5B;EAGAJ,QAAQ,CAACb,QAAT,CAAkB,aAAlB,EAAiC;IAC/Bc,WAAW,EAAGX,IAAD,IAAUA,IAAI,KAAK,iBAAT,IAA8BA,IAAI,KAAK,UAD/B;IAE/Ba,UAAU,EAAGb,IAAD,IAAUA,IAAI,KAAK;EAFA,CAAjC;;EAKA,SAASy8B,QAAT,CAAkBh9B,KAAlB,EAAyBw7B,KAAzB,EAAgC;IAC9B,MAAMiC,QAAQ,GAAGz9B,KAAK,CAAClE,OAAN,CAAc0/B,KAA/B;IACA,MAAMkC,UAAU,GAAGD,QAAQ,CAACE,aAAT,IAA0BC,iBAAiB,CAAC59B,KAAD,CAA9D;IACA,MAAM69B,YAAY,GAAGJ,QAAQ,CAACL,KAAT,CAAeU,OAAf,GAAyBC,eAAe,CAACvC,KAAD,CAAxC,GAAkD,EAAvE;IACA,MAAMwC,eAAe,GAAGH,YAAY,CAACn4C,MAArC;IACA,MAAMu4C,KAAK,GAAGJ,YAAY,CAAC,CAAD,CAA1B;IACA,MAAMzW,IAAI,GAAGyW,YAAY,CAACG,eAAe,GAAG,CAAnB,CAAzB;IACA,MAAME,QAAQ,GAAG,EAAjB;;IACA,IAAIF,eAAe,GAAGN,UAAtB,EAAkC;MAChCS,UAAU,CAAC3C,KAAD,EAAQ0C,QAAR,EAAkBL,YAAlB,EAAgCG,eAAe,GAAGN,UAAlD,CAAV;MACA,OAAOQ,QAAP;IACD;;IACD,MAAME,OAAO,GAAGC,gBAAgB,CAACR,YAAD,EAAerC,KAAf,EAAsBkC,UAAtB,CAAhC;;IACA,IAAIM,eAAe,GAAG,CAAtB,EAAyB;MACvB,IAAIr4C,CAAJ,EAAOsV,IAAP;MACA,MAAMqjC,eAAe,GAAGN,eAAe,GAAG,CAAlB,GAAsB/4C,IAAI,CAACiE,KAAL,CAAW,CAACk+B,IAAI,GAAG6W,KAAR,KAAkBD,eAAe,GAAG,CAApC,CAAX,CAAtB,GAA2E,IAAnG;MACAvsB,IAAI,CAAC+pB,KAAD,EAAQ0C,QAAR,EAAkBE,OAAlB,EAA2BxkC,aAAa,CAAC0kC,eAAD,CAAb,GAAiC,CAAjC,GAAqCL,KAAK,GAAGK,eAAxE,EAAyFL,KAAzF,CAAJ;;MACA,KAAKt4C,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG+iC,eAAe,GAAG,CAArC,EAAwCr4C,CAAC,GAAGsV,IAA5C,EAAkDtV,CAAC,EAAnD,EAAuD;QACrD8rB,IAAI,CAAC+pB,KAAD,EAAQ0C,QAAR,EAAkBE,OAAlB,EAA2BP,YAAY,CAACl4C,CAAD,CAAvC,EAA4Ck4C,YAAY,CAACl4C,CAAC,GAAG,CAAL,CAAxD,CAAJ;MACD;;MACD8rB,IAAI,CAAC+pB,KAAD,EAAQ0C,QAAR,EAAkBE,OAAlB,EAA2BhX,IAA3B,EAAiCxtB,aAAa,CAAC0kC,eAAD,CAAb,GAAiC9C,KAAK,CAAC91C,MAAvC,GAAgD0hC,IAAI,GAAGkX,eAAxF,CAAJ;MACA,OAAOJ,QAAP;IACD;;IACDzsB,IAAI,CAAC+pB,KAAD,EAAQ0C,QAAR,EAAkBE,OAAlB,CAAJ;IACA,OAAOF,QAAP;EACD;;EACD,SAASN,iBAAT,CAA2B59B,KAA3B,EAAkC;IAChC,MAAMk8B,MAAM,GAAGl8B,KAAK,CAAClE,OAAN,CAAcogC,MAA7B;;IACA,MAAMK,UAAU,GAAGv8B,KAAK,CAACu+B,SAAN,EAAnB;;IACA,MAAMC,QAAQ,GAAGx+B,KAAK,CAACy+B,OAAN,GAAgBlC,UAAhB,IAA8BL,MAAM,GAAG,CAAH,GAAO,CAA3C,CAAjB;IACA,MAAMwC,QAAQ,GAAG1+B,KAAK,CAAC2+B,UAAN,GAAmBpC,UAApC;IACA,OAAOt3C,IAAI,CAACqd,KAAL,CAAWrd,IAAI,CAACC,GAAL,CAASs5C,QAAT,EAAmBE,QAAnB,CAAX,CAAP;EACD;;EACD,SAASL,gBAAT,CAA0BR,YAA1B,EAAwCrC,KAAxC,EAA+CkC,UAA/C,EAA2D;IACzD,MAAMkB,gBAAgB,GAAGC,cAAc,CAAChB,YAAD,CAAvC;IACA,MAAMO,OAAO,GAAG5C,KAAK,CAAC91C,MAAN,GAAeg4C,UAA/B;;IACA,IAAI,CAACkB,gBAAL,EAAuB;MACrB,OAAO35C,IAAI,CAACgC,GAAL,CAASm3C,OAAT,EAAkB,CAAlB,CAAP;IACD;;IACD,MAAMU,OAAO,GAAGr8B,UAAU,CAACm8B,gBAAD,CAA1B;;IACA,KAAK,IAAIj5C,CAAC,GAAG,CAAR,EAAWsV,IAAI,GAAG6jC,OAAO,CAACp5C,MAAR,GAAiB,CAAxC,EAA2CC,CAAC,GAAGsV,IAA/C,EAAqDtV,CAAC,EAAtD,EAA0D;MACxD,MAAMgyB,MAAM,GAAGmnB,OAAO,CAACn5C,CAAD,CAAtB;;MACA,IAAIgyB,MAAM,GAAGymB,OAAb,EAAsB;QACpB,OAAOzmB,MAAP;MACD;IACF;;IACD,OAAO1yB,IAAI,CAACgC,GAAL,CAASm3C,OAAT,EAAkB,CAAlB,CAAP;EACD;;EACD,SAASL,eAAT,CAAyBvC,KAAzB,EAAgC;IAC9B,MAAM94B,MAAM,GAAG,EAAf;IACA,IAAI/c,CAAJ,EAAOsV,IAAP;;IACA,KAAKtV,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGugC,KAAK,CAAC91C,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2CtV,CAAC,EAA5C,EAAgD;MAC9C,IAAI61C,KAAK,CAAC71C,CAAD,CAAL,CAASy3C,KAAb,EAAoB;QAClB16B,MAAM,CAAC/b,IAAP,CAAYhB,CAAZ;MACD;IACF;;IACD,OAAO+c,MAAP;EACD;;EACD,SAASy7B,UAAT,CAAoB3C,KAApB,EAA2B0C,QAA3B,EAAqCL,YAArC,EAAmDO,OAAnD,EAA4D;IAC1D,IAAIjnB,KAAK,GAAG,CAAZ;IACA,IAAIgI,IAAI,GAAG0e,YAAY,CAAC,CAAD,CAAvB;IACA,IAAIl4C,CAAJ;IACAy4C,OAAO,GAAGn5C,IAAI,CAAC85C,IAAL,CAAUX,OAAV,CAAV;;IACA,KAAKz4C,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG61C,KAAK,CAAC91C,MAAtB,EAA8BC,CAAC,EAA/B,EAAmC;MACjC,IAAIA,CAAC,KAAKw5B,IAAV,EAAgB;QACd+e,QAAQ,CAACv3C,IAAT,CAAc60C,KAAK,CAAC71C,CAAD,CAAnB;QACAwxB,KAAK;QACLgI,IAAI,GAAG0e,YAAY,CAAC1mB,KAAK,GAAGinB,OAAT,CAAnB;MACD;IACF;EACF;;EACD,SAAS3sB,IAAT,CAAc+pB,KAAd,EAAqB0C,QAArB,EAA+BE,OAA/B,EAAwCY,UAAxC,EAAoDC,QAApD,EAA8D;IAC5D,MAAM37C,KAAK,GAAG+W,cAAc,CAAC2kC,UAAD,EAAa,CAAb,CAA5B;IACA,MAAMz7C,GAAG,GAAG0B,IAAI,CAACC,GAAL,CAASmV,cAAc,CAAC4kC,QAAD,EAAWzD,KAAK,CAAC91C,MAAjB,CAAvB,EAAiD81C,KAAK,CAAC91C,MAAvD,CAAZ;IACA,IAAIyxB,KAAK,GAAG,CAAZ;IACA,IAAIzxB,MAAJ,EAAYC,CAAZ,EAAew5B,IAAf;IACAif,OAAO,GAAGn5C,IAAI,CAAC85C,IAAL,CAAUX,OAAV,CAAV;;IACA,IAAIa,QAAJ,EAAc;MACZv5C,MAAM,GAAGu5C,QAAQ,GAAGD,UAApB;MACAZ,OAAO,GAAG14C,MAAM,GAAGT,IAAI,CAACqd,KAAL,CAAW5c,MAAM,GAAG04C,OAApB,CAAnB;IACD;;IACDjf,IAAI,GAAG77B,KAAP;;IACA,OAAO67B,IAAI,GAAG,CAAd,EAAiB;MACfhI,KAAK;MACLgI,IAAI,GAAGl6B,IAAI,CAACiE,KAAL,CAAW5F,KAAK,GAAG6zB,KAAK,GAAGinB,OAA3B,CAAP;IACD;;IACD,KAAKz4C,CAAC,GAAGV,IAAI,CAACgC,GAAL,CAAS3D,KAAT,EAAgB,CAAhB,CAAT,EAA6BqC,CAAC,GAAGpC,GAAjC,EAAsCoC,CAAC,EAAvC,EAA2C;MACzC,IAAIA,CAAC,KAAKw5B,IAAV,EAAgB;QACd+e,QAAQ,CAACv3C,IAAT,CAAc60C,KAAK,CAAC71C,CAAD,CAAnB;QACAwxB,KAAK;QACLgI,IAAI,GAAGl6B,IAAI,CAACiE,KAAL,CAAW5F,KAAK,GAAG6zB,KAAK,GAAGinB,OAA3B,CAAP;MACD;IACF;EACF;;EACD,SAASS,cAAT,CAAwB9gB,GAAxB,EAA6B;IAC3B,MAAMh1B,GAAG,GAAGg1B,GAAG,CAACr4B,MAAhB;IACA,IAAIC,CAAJ,EAAOu5C,IAAP;;IACA,IAAIn2C,GAAG,GAAG,CAAV,EAAa;MACX,OAAO,KAAP;IACD;;IACD,KAAKm2C,IAAI,GAAGnhB,GAAG,CAAC,CAAD,CAAV,EAAep4B,CAAC,GAAG,CAAxB,EAA2BA,CAAC,GAAGoD,GAA/B,EAAoC,EAAEpD,CAAtC,EAAyC;MACvC,IAAIo4B,GAAG,CAACp4B,CAAD,CAAH,GAASo4B,GAAG,CAACp4B,CAAC,GAAG,CAAL,CAAZ,KAAwBu5C,IAA5B,EAAkC;QAChC,OAAO,KAAP;MACD;IACF;;IACD,OAAOA,IAAP;EACD;;EAED,MAAMC,YAAY,GAAI/7C,KAAD,IAAWA,KAAK,KAAK,MAAV,GAAmB,OAAnB,GAA6BA,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6BA,KAA1F;;EACA,MAAMg8C,cAAc,GAAG,CAACp/B,KAAD,EAAQq/B,IAAR,EAAcnD,MAAd,KAAyBmD,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,MAA3B,GAAoCr/B,KAAK,CAACq/B,IAAD,CAAL,GAAcnD,MAAlD,GAA2Dl8B,KAAK,CAACq/B,IAAD,CAAL,GAAcnD,MAAzH;;EACA,SAASoD,MAAT,CAAgBvhB,GAAhB,EAAqBwhB,QAArB,EAA+B;IAC7B,MAAM78B,MAAM,GAAG,EAAf;IACA,MAAM88B,SAAS,GAAGzhB,GAAG,CAACr4B,MAAJ,GAAa65C,QAA/B;IACA,MAAMx2C,GAAG,GAAGg1B,GAAG,CAACr4B,MAAhB;IACA,IAAIC,CAAC,GAAG,CAAR;;IACA,OAAOA,CAAC,GAAGoD,GAAX,EAAgBpD,CAAC,IAAI65C,SAArB,EAAgC;MAC9B98B,MAAM,CAAC/b,IAAP,CAAYo3B,GAAG,CAAC94B,IAAI,CAACqd,KAAL,CAAW3c,CAAX,CAAD,CAAf;IACD;;IACD,OAAO+c,MAAP;EACD;;EACD,SAAS+8B,mBAAT,CAA6Bz/B,KAA7B,EAAoC3E,KAApC,EAA2CqkC,eAA3C,EAA4D;IAC1D,MAAMh6C,MAAM,GAAGsa,KAAK,CAACw7B,KAAN,CAAY91C,MAA3B;IACA,MAAMi6C,UAAU,GAAG16C,IAAI,CAACC,GAAL,CAASmW,KAAT,EAAgB3V,MAAM,GAAG,CAAzB,CAAnB;IACA,MAAMpC,KAAK,GAAG0c,KAAK,CAAC4/B,WAApB;IACA,MAAMr8C,GAAG,GAAGyc,KAAK,CAAC6/B,SAAlB;IACA,MAAM78B,OAAO,GAAG,IAAhB;IACA,IAAI88B,SAAS,GAAG9/B,KAAK,CAAC+/B,eAAN,CAAsBJ,UAAtB,CAAhB;IACA,IAAIzD,MAAJ;;IACA,IAAIwD,eAAJ,EAAqB;MACnB,IAAIh6C,MAAM,KAAK,CAAf,EAAkB;QAChBw2C,MAAM,GAAGj3C,IAAI,CAACgC,GAAL,CAAS64C,SAAS,GAAGx8C,KAArB,EAA4BC,GAAG,GAAGu8C,SAAlC,CAAT;MACD,CAFD,MAEO,IAAIzkC,KAAK,KAAK,CAAd,EAAiB;QACtB6gC,MAAM,GAAG,CAACl8B,KAAK,CAAC+/B,eAAN,CAAsB,CAAtB,IAA2BD,SAA5B,IAAyC,CAAlD;MACD,CAFM,MAEA;QACL5D,MAAM,GAAG,CAAC4D,SAAS,GAAG9/B,KAAK,CAAC+/B,eAAN,CAAsBJ,UAAU,GAAG,CAAnC,CAAb,IAAsD,CAA/D;MACD;;MACDG,SAAS,IAAIH,UAAU,GAAGtkC,KAAb,GAAqB6gC,MAArB,GAA8B,CAACA,MAA5C;;MACA,IAAI4D,SAAS,GAAGx8C,KAAK,GAAG0f,OAApB,IAA+B88B,SAAS,GAAGv8C,GAAG,GAAGyf,OAArD,EAA8D;QAC5D;MACD;IACF;;IACD,OAAO88B,SAAP;EACD;;EACD,SAAS/5B,cAAT,CAAwBi6B,MAAxB,EAAgCt6C,MAAhC,EAAwC;IACtCiV,IAAI,CAACqlC,MAAD,EAAUl6B,KAAD,IAAW;MACtB,MAAMR,EAAE,GAAGQ,KAAK,CAACR,EAAjB;MACA,MAAMe,KAAK,GAAGf,EAAE,CAAC5f,MAAH,GAAY,CAA1B;MACA,IAAIC,CAAJ;;MACA,IAAI0gB,KAAK,GAAG3gB,MAAZ,EAAoB;QAClB,KAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0gB,KAAhB,EAAuB,EAAE1gB,CAAzB,EAA4B;UAC1B,OAAOmgB,KAAK,CAACT,IAAN,CAAWC,EAAE,CAAC3f,CAAD,CAAb,CAAP;QACD;;QACD2f,EAAE,CAACgB,MAAH,CAAU,CAAV,EAAaD,KAAb;MACD;IACF,CAVG,CAAJ;EAWD;;EACD,SAAS45B,iBAAT,CAA2BnkC,OAA3B,EAAoC;IAClC,OAAOA,OAAO,CAACwgC,SAAR,GAAoBxgC,OAAO,CAACygC,UAA5B,GAAyC,CAAhD;EACD;;EACD,SAAS2D,cAAT,CAAwBpkC,OAAxB,EAAiCsZ,QAAjC,EAA2C;IACzC,IAAI,CAACtZ,OAAO,CAAC+e,OAAb,EAAsB;MACpB,OAAO,CAAP;IACD;;IACD,MAAMhc,IAAI,GAAGsW,MAAM,CAACrZ,OAAO,CAAC+C,IAAT,EAAeuW,QAAf,CAAnB;IACA,MAAM2E,OAAO,GAAG7E,SAAS,CAACpZ,OAAO,CAACie,OAAT,CAAzB;IACA,MAAMnQ,KAAK,GAAGjf,OAAO,CAACmR,OAAO,CAAC4N,IAAT,CAAP,GAAwB5N,OAAO,CAAC4N,IAAR,CAAahkB,MAArC,GAA8C,CAA5D;IACA,OAAQkkB,KAAK,GAAG/K,IAAI,CAACG,UAAd,GAA4B+a,OAAO,CAAC/S,MAA3C;EACD;;EACD,SAASm5B,kBAAT,CAA4B9yB,MAA5B,EAAoCrN,KAApC,EAA2C;IACzC,OAAO+V,aAAa,CAAC1I,MAAD,EAAS;MAC3BrN,KAD2B;MAE3Bvb,IAAI,EAAE;IAFqB,CAAT,CAApB;EAID;;EACD,SAAS27C,iBAAT,CAA2B/yB,MAA3B,EAAmChS,KAAnC,EAA0CrV,IAA1C,EAAgD;IAC9C,OAAO+vB,aAAa,CAAC1I,MAAD,EAAS;MAC3BrnB,IAD2B;MAE3BqV,KAF2B;MAG3B5W,IAAI,EAAE;IAHqB,CAAT,CAApB;EAKD;;EACD,SAAS47C,UAAT,CAAoBj9C,KAApB,EAA2BkvB,QAA3B,EAAqCzX,OAArC,EAA8C;IAC5C,IAAI7R,GAAG,GAAG7F,kBAAkB,CAACC,KAAD,CAA5B;;IACA,IAAKyX,OAAO,IAAIyX,QAAQ,KAAK,OAAzB,IAAsC,CAACzX,OAAD,IAAYyX,QAAQ,KAAK,OAAnE,EAA6E;MAC3EtpB,GAAG,GAAGm2C,YAAY,CAACn2C,GAAD,CAAlB;IACD;;IACD,OAAOA,GAAP;EACD;;EACD,SAASs3C,SAAT,CAAmBtgC,KAAnB,EAA0Bk8B,MAA1B,EAAkC5pB,QAAlC,EAA4ClvB,KAA5C,EAAmD;IACjD,MAAM;MAACulB,GAAD;MAAMllB,IAAN;MAAYmlB,MAAZ;MAAoBllB,KAApB;MAA2BY;IAA3B,IAAoC0b,KAA1C;IACA,MAAM;MAAC8S,SAAD;MAAY7S;IAAZ,IAAsB3b,KAA5B;IACA,IAAIgjB,QAAQ,GAAG,CAAf;IACA,IAAI8C,QAAJ,EAAcm2B,MAAd,EAAsBC,MAAtB;IACA,MAAMx5B,MAAM,GAAG4B,MAAM,GAAGD,GAAxB;IACA,MAAMhD,KAAK,GAAGjiB,KAAK,GAAGD,IAAtB;;IACA,IAAIuc,KAAK,CAAC4W,YAAN,EAAJ,EAA0B;MACxB2pB,MAAM,GAAGl9C,cAAc,CAACD,KAAD,EAAQK,IAAR,EAAcC,KAAd,CAAvB;;MACA,IAAIqW,QAAQ,CAACuY,QAAD,CAAZ,EAAwB;QACtB,MAAMmuB,cAAc,GAAGpqC,MAAM,CAACD,IAAP,CAAYkc,QAAZ,EAAsB,CAAtB,CAAvB;QACA,MAAMjZ,KAAK,GAAGiZ,QAAQ,CAACmuB,cAAD,CAAtB;QACAD,MAAM,GAAGvgC,MAAM,CAACwgC,cAAD,CAAN,CAAuBC,gBAAvB,CAAwCrnC,KAAxC,IAAiD2N,MAAjD,GAA0Dk1B,MAAnE;MACD,CAJD,MAIO,IAAI5pB,QAAQ,KAAK,QAAjB,EAA2B;QAChCkuB,MAAM,GAAG,CAAC1tB,SAAS,CAAClK,MAAV,GAAmBkK,SAAS,CAACnK,GAA9B,IAAqC,CAArC,GAAyC3B,MAAzC,GAAkDk1B,MAA3D;MACD,CAFM,MAEA;QACLsE,MAAM,GAAGpB,cAAc,CAACp/B,KAAD,EAAQsS,QAAR,EAAkB4pB,MAAlB,CAAvB;MACD;;MACD9xB,QAAQ,GAAG1mB,KAAK,GAAGD,IAAnB;IACD,CAZD,MAYO;MACL,IAAIsW,QAAQ,CAACuY,QAAD,CAAZ,EAAwB;QACtB,MAAMmuB,cAAc,GAAGpqC,MAAM,CAACD,IAAP,CAAYkc,QAAZ,EAAsB,CAAtB,CAAvB;QACA,MAAMjZ,KAAK,GAAGiZ,QAAQ,CAACmuB,cAAD,CAAtB;QACAF,MAAM,GAAGtgC,MAAM,CAACwgC,cAAD,CAAN,CAAuBC,gBAAvB,CAAwCrnC,KAAxC,IAAiDsM,KAAjD,GAAyDu2B,MAAlE;MACD,CAJD,MAIO,IAAI5pB,QAAQ,KAAK,QAAjB,EAA2B;QAChCiuB,MAAM,GAAG,CAACztB,SAAS,CAACrvB,IAAV,GAAiBqvB,SAAS,CAACpvB,KAA5B,IAAqC,CAArC,GAAyCiiB,KAAzC,GAAiDu2B,MAA1D;MACD,CAFM,MAEA;QACLqE,MAAM,GAAGnB,cAAc,CAACp/B,KAAD,EAAQsS,QAAR,EAAkB4pB,MAAlB,CAAvB;MACD;;MACDsE,MAAM,GAAGn9C,cAAc,CAACD,KAAD,EAAQwlB,MAAR,EAAgBD,GAAhB,CAAvB;MACArB,QAAQ,GAAGgL,QAAQ,KAAK,MAAb,GAAsB,CAAC1Q,OAAvB,GAAiCA,OAA5C;IACD;;IACD,OAAO;MAAC2+B,MAAD;MAASC,MAAT;MAAiBp2B,QAAjB;MAA2B9C;IAA3B,CAAP;EACD;;EACD,MAAMq5B,KAAN,SAAoB3F,OAApB,CAA4B;IAC1Bl3C,WAAW,CAAC6pC,GAAD,EAAM;MACf;MACA,KAAKh0B,EAAL,GAAUg0B,GAAG,CAACh0B,EAAd;MACA,KAAKlV,IAAL,GAAYkpC,GAAG,CAAClpC,IAAhB;MACA,KAAKqX,OAAL,GAAe1X,SAAf;MACA,KAAK+a,GAAL,GAAWwuB,GAAG,CAACxuB,GAAf;MACA,KAAK7a,KAAL,GAAaqpC,GAAG,CAACrpC,KAAjB;MACA,KAAKqkB,GAAL,GAAWvkB,SAAX;MACA,KAAKwkB,MAAL,GAAcxkB,SAAd;MACA,KAAKX,IAAL,GAAYW,SAAZ;MACA,KAAKV,KAAL,GAAaU,SAAb;MACA,KAAKuhB,KAAL,GAAavhB,SAAb;MACA,KAAK4iB,MAAL,GAAc5iB,SAAd;MACA,KAAKw8C,QAAL,GAAgB;QACdn9C,IAAI,EAAE,CADQ;QAEdC,KAAK,EAAE,CAFO;QAGdilB,GAAG,EAAE,CAHS;QAIdC,MAAM,EAAE;MAJM,CAAhB;MAMA,KAAKwB,QAAL,GAAgBhmB,SAAhB;MACA,KAAKmrB,SAAL,GAAiBnrB,SAAjB;MACA,KAAKy8C,UAAL,GAAkBz8C,SAAlB;MACA,KAAK08C,aAAL,GAAqB18C,SAArB;MACA,KAAK28C,WAAL,GAAmB38C,SAAnB;MACA,KAAK48C,YAAL,GAAoB58C,SAApB;MACA,KAAKwtB,IAAL,GAAYxtB,SAAZ;MACA,KAAK68C,aAAL,GAAqB78C,SAArB;MACA,KAAKc,GAAL,GAAWd,SAAX;MACA,KAAK6C,GAAL,GAAW7C,SAAX;MACA,KAAK88C,MAAL,GAAc98C,SAAd;MACA,KAAKo3C,KAAL,GAAa,EAAb;MACA,KAAK2F,cAAL,GAAsB,IAAtB;MACA,KAAKC,WAAL,GAAmB,IAAnB;MACA,KAAKC,WAAL,GAAmB,IAAnB;MACA,KAAK5C,OAAL,GAAe,CAAf;MACA,KAAKE,UAAL,GAAkB,CAAlB;MACA,KAAK2C,iBAAL,GAAyB,EAAzB;MACA,KAAK1B,WAAL,GAAmBx7C,SAAnB;MACA,KAAKy7C,SAAL,GAAiBz7C,SAAjB;MACA,KAAK8tB,cAAL,GAAsB,KAAtB;MACA,KAAKqvB,QAAL,GAAgBn9C,SAAhB;MACA,KAAKo9C,QAAL,GAAgBp9C,SAAhB;MACA,KAAKq9C,aAAL,GAAqBr9C,SAArB;MACA,KAAKs9C,aAAL,GAAqBt9C,SAArB;MACA,KAAKu9C,YAAL,GAAoB,CAApB;MACA,KAAKC,YAAL,GAAoB,CAApB;MACA,KAAKC,MAAL,GAAc,EAAd;MACA,KAAKC,iBAAL,GAAyB,KAAzB;MACA,KAAKrN,QAAL,GAAgBrwC,SAAhB;IACD;;IACD29C,IAAI,CAACjmC,OAAD,EAAU;MACZ,KAAKA,OAAL,GAAeA,OAAO,CAACghB,UAAR,CAAmB,KAAKjW,UAAL,EAAnB,CAAf;MACA,KAAK+K,IAAL,GAAY9V,OAAO,CAAC8V,IAApB;MACA,KAAK4vB,QAAL,GAAgB,KAAK3K,KAAL,CAAW/6B,OAAO,CAAC5W,GAAnB,CAAhB;MACA,KAAKq8C,QAAL,GAAgB,KAAK1K,KAAL,CAAW/6B,OAAO,CAAC7U,GAAnB,CAAhB;MACA,KAAKy6C,aAAL,GAAqB,KAAK7K,KAAL,CAAW/6B,OAAO,CAACkmC,YAAnB,CAArB;MACA,KAAKP,aAAL,GAAqB,KAAK5K,KAAL,CAAW/6B,OAAO,CAACmmC,YAAnB,CAArB;IACD;;IACDpL,KAAK,CAAC1D,GAAD,EAAM93B,KAAN,EAAa;MAChB,OAAO83B,GAAP;IACD;;IACDzB,aAAa,GAAG;MACd,IAAI;QAAC8P,QAAD;QAAWD,QAAX;QAAqBG,aAArB;QAAoCD;MAApC,IAAqD,IAAzD;MACAD,QAAQ,GAAGrnC,eAAe,CAACqnC,QAAD,EAAWvnC,MAAM,CAACyH,iBAAlB,CAA1B;MACA6/B,QAAQ,GAAGpnC,eAAe,CAAConC,QAAD,EAAWtnC,MAAM,CAAC43B,iBAAlB,CAA1B;MACA6P,aAAa,GAAGvnC,eAAe,CAACunC,aAAD,EAAgBznC,MAAM,CAACyH,iBAAvB,CAA/B;MACA+/B,aAAa,GAAGtnC,eAAe,CAACsnC,aAAD,EAAgBxnC,MAAM,CAAC43B,iBAAvB,CAA/B;MACA,OAAO;QACL3sC,GAAG,EAAEiV,eAAe,CAACqnC,QAAD,EAAWE,aAAX,CADf;QAELz6C,GAAG,EAAEkT,eAAe,CAAConC,QAAD,EAAWE,aAAX,CAFf;QAGL9P,UAAU,EAAE33B,cAAc,CAACwnC,QAAD,CAHrB;QAIL5P,UAAU,EAAE53B,cAAc,CAACunC,QAAD;MAJrB,CAAP;IAMD;;IACD1J,SAAS,CAAClE,QAAD,EAAW;MAClB,IAAI;QAACzuC,GAAD;QAAM+B,GAAN;QAAW0qC,UAAX;QAAuBC;MAAvB,IAAqC,KAAKF,aAAL,EAAzC;MACA,IAAIjnC,KAAJ;;MACA,IAAIknC,UAAU,IAAIC,UAAlB,EAA8B;QAC5B,OAAO;UAAC1sC,GAAD;UAAM+B;QAAN,CAAP;MACD;;MACD,MAAMi7C,KAAK,GAAG,KAAK7P,uBAAL,EAAd;;MACA,KAAK,IAAI1sC,CAAC,GAAG,CAAR,EAAWsV,IAAI,GAAGinC,KAAK,CAACx8C,MAA7B,EAAqCC,CAAC,GAAGsV,IAAzC,EAA+C,EAAEtV,CAAjD,EAAoD;QAClD8E,KAAK,GAAGy3C,KAAK,CAACv8C,CAAD,CAAL,CAASksB,UAAT,CAAoBgmB,SAApB,CAA8B,IAA9B,EAAoClE,QAApC,CAAR;;QACA,IAAI,CAAChC,UAAL,EAAiB;UACfzsC,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAcuF,KAAK,CAACvF,GAApB,CAAN;QACD;;QACD,IAAI,CAAC0sC,UAAL,EAAiB;UACf3qC,GAAG,GAAGhC,IAAI,CAACgC,GAAL,CAASA,GAAT,EAAcwD,KAAK,CAACxD,GAApB,CAAN;QACD;MACF;;MACD/B,GAAG,GAAG0sC,UAAU,IAAI1sC,GAAG,GAAG+B,GAApB,GAA0BA,GAA1B,GAAgC/B,GAAtC;MACA+B,GAAG,GAAG0qC,UAAU,IAAIzsC,GAAG,GAAG+B,GAApB,GAA0B/B,GAA1B,GAAgC+B,GAAtC;MACA,OAAO;QACL/B,GAAG,EAAEiV,eAAe,CAACjV,GAAD,EAAMiV,eAAe,CAAClT,GAAD,EAAM/B,GAAN,CAArB,CADf;QAEL+B,GAAG,EAAEkT,eAAe,CAAClT,GAAD,EAAMkT,eAAe,CAACjV,GAAD,EAAM+B,GAAN,CAArB;MAFf,CAAP;IAID;;IACDyxB,UAAU,GAAG;MACX,OAAO;QACLj1B,IAAI,EAAE,KAAKs9C,WAAL,IAAoB,CADrB;QAELp4B,GAAG,EAAE,KAAKk4B,UAAL,IAAmB,CAFnB;QAGLn9C,KAAK,EAAE,KAAKs9C,YAAL,IAAqB,CAHvB;QAILp4B,MAAM,EAAE,KAAKk4B,aAAL,IAAsB;MAJzB,CAAP;IAMD;;IACDqB,QAAQ,GAAG;MACT,OAAO,KAAK3G,KAAZ;IACD;;IACDpE,SAAS,GAAG;MACV,MAAM/xB,IAAI,GAAG,KAAK/gB,KAAL,CAAW+gB,IAAxB;MACA,OAAO,KAAKvJ,OAAL,CAAaq7B,MAAb,KAAwB,KAAKvgB,YAAL,KAAsBvR,IAAI,CAAC+8B,OAA3B,GAAqC/8B,IAAI,CAACg9B,OAAlE,KAA8Eh9B,IAAI,CAAC8xB,MAAnF,IAA6F,EAApG;IACD;;IACDzc,YAAY,GAAG;MACb,KAAKmnB,MAAL,GAAc,EAAd;MACA,KAAKC,iBAAL,GAAyB,KAAzB;IACD;;IACDQ,YAAY,GAAG;MACbvgD,QAAQ,CAAC,KAAK+Z,OAAL,CAAawmC,YAAd,EAA4B,CAAC,IAAD,CAA5B,CAAR;IACD;;IACD3oB,MAAM,CAACvP,QAAD,EAAWmF,SAAX,EAAsBY,OAAtB,EAA+B;MACnC,MAAM;QAACyF,WAAD;QAAcD,KAAd;QAAqB6lB,KAAK,EAAEiC;MAA5B,IAAwC,KAAK3hC,OAAnD;MACA,MAAMymC,UAAU,GAAG9E,QAAQ,CAAC8E,UAA5B;MACA,KAAKD,YAAL;MACA,KAAKl4B,QAAL,GAAgBA,QAAhB;MACA,KAAKmF,SAAL,GAAiBA,SAAjB;MACA,KAAKqxB,QAAL,GAAgBzwB,OAAO,GAAG9Z,MAAM,CAACgB,MAAP,CAAc;QACtC5T,IAAI,EAAE,CADgC;QAEtCC,KAAK,EAAE,CAF+B;QAGtCilB,GAAG,EAAE,CAHiC;QAItCC,MAAM,EAAE;MAJ8B,CAAd,EAKvBuH,OALuB,CAA1B;MAMA,KAAKqrB,KAAL,GAAa,IAAb;MACA,KAAK6F,WAAL,GAAmB,IAAnB;MACA,KAAKF,cAAL,GAAsB,IAAtB;MACA,KAAKC,WAAL,GAAmB,IAAnB;MACA,KAAKoB,mBAAL;MACA,KAAKC,aAAL;MACA,KAAKC,kBAAL;MACA,KAAK/D,UAAL,GAAkB,KAAK/nB,YAAL,KACd,KAAKjR,KAAL,GAAawK,OAAO,CAAC1sB,IAArB,GAA4B0sB,OAAO,CAACzsB,KADtB,GAEd,KAAKsjB,MAAL,GAAcmJ,OAAO,CAACxH,GAAtB,GAA4BwH,OAAO,CAACvH,MAFxC;;MAGA,IAAI,CAAC,KAAKk5B,iBAAV,EAA6B;QAC3B,KAAKa,gBAAL;QACA,KAAKC,mBAAL;QACA,KAAKC,eAAL;QACA,KAAK3B,MAAL,GAAczrB,SAAS,CAAC,IAAD,EAAOE,KAAP,EAAcC,WAAd,CAAvB;QACA,KAAKksB,iBAAL,GAAyB,IAAzB;MACD;;MACD,KAAKgB,gBAAL;MACA,KAAKtH,KAAL,GAAa,KAAKuH,UAAL,MAAqB,EAAlC;MACA,KAAKC,eAAL;MACA,MAAMC,eAAe,GAAGV,UAAU,GAAG,KAAK/G,KAAL,CAAW91C,MAAhD;;MACA,KAAKw9C,qBAAL,CAA2BD,eAAe,GAAG3D,MAAM,CAAC,KAAK9D,KAAN,EAAa+G,UAAb,CAAT,GAAoC,KAAK/G,KAAnF;;MACA,KAAKlhB,SAAL;MACA,KAAK6oB,4BAAL;MACA,KAAKC,sBAAL;MACA,KAAKC,2BAAL;;MACA,IAAI5F,QAAQ,CAAC5iB,OAAT,KAAqB4iB,QAAQ,CAACT,QAAT,IAAqBS,QAAQ,CAACniC,MAAT,KAAoB,MAA9D,CAAJ,EAA2E;QACzE,KAAKkgC,KAAL,GAAawB,QAAQ,CAAC,IAAD,EAAO,KAAKxB,KAAZ,CAArB;QACA,KAAK6F,WAAL,GAAmB,IAAnB;MACD;;MACD,IAAI4B,eAAJ,EAAqB;QACnB,KAAKC,qBAAL,CAA2B,KAAK1H,KAAhC;MACD;;MACD,KAAK8H,SAAL;MACA,KAAKC,GAAL;MACA,KAAKC,QAAL;MACA,KAAKC,WAAL;IACD;;IACDnpB,SAAS,GAAG;MACV,IAAIopB,aAAa,GAAG,KAAK5nC,OAAL,CAAajB,OAAjC;MACA,IAAI8oC,UAAJ,EAAgBC,QAAhB;;MACA,IAAI,KAAKhtB,YAAL,EAAJ,EAAyB;QACvB+sB,UAAU,GAAG,KAAKlgD,IAAlB;QACAmgD,QAAQ,GAAG,KAAKlgD,KAAhB;MACD,CAHD,MAGO;QACLigD,UAAU,GAAG,KAAKh7B,GAAlB;QACAi7B,QAAQ,GAAG,KAAKh7B,MAAhB;QACA86B,aAAa,GAAG,CAACA,aAAjB;MACD;;MACD,KAAK9D,WAAL,GAAmB+D,UAAnB;MACA,KAAK9D,SAAL,GAAiB+D,QAAjB;MACA,KAAK1xB,cAAL,GAAsBwxB,aAAtB;MACA,KAAKjF,OAAL,GAAemF,QAAQ,GAAGD,UAA1B;MACA,KAAKE,cAAL,GAAsB,KAAK/nC,OAAL,CAAagoC,aAAnC;IACD;;IACDL,WAAW,GAAG;MACZ1hD,QAAQ,CAAC,KAAK+Z,OAAL,CAAa2nC,WAAd,EAA2B,CAAC,IAAD,CAA3B,CAAR;IACD;;IACDjB,mBAAmB,GAAG;MACpBzgD,QAAQ,CAAC,KAAK+Z,OAAL,CAAa0mC,mBAAd,EAAmC,CAAC,IAAD,CAAnC,CAAR;IACD;;IACDC,aAAa,GAAG;MACd,IAAI,KAAK7rB,YAAL,EAAJ,EAAyB;QACvB,KAAKjR,KAAL,GAAa,KAAKyE,QAAlB;QACA,KAAK3mB,IAAL,GAAY,CAAZ;QACA,KAAKC,KAAL,GAAa,KAAKiiB,KAAlB;MACD,CAJD,MAIO;QACL,KAAKqB,MAAL,GAAc,KAAKuI,SAAnB;QACA,KAAK5G,GAAL,GAAW,CAAX;QACA,KAAKC,MAAL,GAAc,KAAK5B,MAAnB;MACD;;MACD,KAAK+5B,WAAL,GAAmB,CAAnB;MACA,KAAKF,UAAL,GAAkB,CAAlB;MACA,KAAKG,YAAL,GAAoB,CAApB;MACA,KAAKF,aAAL,GAAqB,CAArB;IACD;;IACD4B,kBAAkB,GAAG;MACnB3gD,QAAQ,CAAC,KAAK+Z,OAAL,CAAa4mC,kBAAd,EAAkC,CAAC,IAAD,CAAlC,CAAR;IACD;;IACDqB,UAAU,CAACxjC,IAAD,EAAO;MACf,KAAKjc,KAAL,CAAW0/C,aAAX,CAAyBzjC,IAAzB,EAA+B,KAAKsG,UAAL,EAA/B;MACA9kB,QAAQ,CAAC,KAAK+Z,OAAL,CAAayE,IAAb,CAAD,EAAqB,CAAC,IAAD,CAArB,CAAR;IACD;;IACDoiC,gBAAgB,GAAG;MACjB,KAAKoB,UAAL,CAAgB,kBAAhB;IACD;;IACDnB,mBAAmB,GAAG,CAAE;;IACxBC,eAAe,GAAG;MAChB,KAAKkB,UAAL,CAAgB,iBAAhB;IACD;;IACDjB,gBAAgB,GAAG;MACjB,KAAKiB,UAAL,CAAgB,kBAAhB;IACD;;IACDhB,UAAU,GAAG;MACX,OAAO,EAAP;IACD;;IACDC,eAAe,GAAG;MAChB,KAAKe,UAAL,CAAgB,iBAAhB;IACD;;IACDE,2BAA2B,GAAG;MAC5BliD,QAAQ,CAAC,KAAK+Z,OAAL,CAAamoC,2BAAd,EAA2C,CAAC,IAAD,CAA3C,CAAR;IACD;;IACDC,kBAAkB,CAAC1I,KAAD,EAAQ;MACxB,MAAMiC,QAAQ,GAAG,KAAK3hC,OAAL,CAAa0/B,KAA9B;MACA,IAAI71C,CAAJ,EAAOsV,IAAP,EAAajV,IAAb;;MACA,KAAKL,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGugC,KAAK,CAAC91C,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2CtV,CAAC,EAA5C,EAAgD;QAC9CK,IAAI,GAAGw1C,KAAK,CAAC71C,CAAD,CAAZ;QACAK,IAAI,CAACqyC,KAAL,GAAat2C,QAAQ,CAAC07C,QAAQ,CAAC17C,QAAV,EAAoB,CAACiE,IAAI,CAACqT,KAAN,EAAa1T,CAAb,EAAgB61C,KAAhB,CAApB,EAA4C,IAA5C,CAArB;MACD;IACF;;IACD2I,0BAA0B,GAAG;MAC3BpiD,QAAQ,CAAC,KAAK+Z,OAAL,CAAaqoC,0BAAd,EAA0C,CAAC,IAAD,CAA1C,CAAR;IACD;;IACDhB,4BAA4B,GAAG;MAC7BphD,QAAQ,CAAC,KAAK+Z,OAAL,CAAaqnC,4BAAd,EAA4C,CAAC,IAAD,CAA5C,CAAR;IACD;;IACDC,sBAAsB,GAAG;MACvB,MAAMtnC,OAAO,GAAG,KAAKA,OAArB;MACA,MAAM2hC,QAAQ,GAAG3hC,OAAO,CAAC0/B,KAAzB;MACA,MAAM4I,QAAQ,GAAG,KAAK5I,KAAL,CAAW91C,MAA5B;MACA,MAAMi3C,WAAW,GAAGc,QAAQ,CAACd,WAAT,IAAwB,CAA5C;MACA,MAAMC,WAAW,GAAGa,QAAQ,CAACb,WAA7B;MACA,IAAIqE,aAAa,GAAGtE,WAApB;MACA,IAAIH,SAAJ,EAAejtB,SAAf,EAA0B80B,gBAA1B;;MACA,IAAI,CAAC,KAAKC,UAAL,EAAD,IAAsB,CAAC7G,QAAQ,CAAC5iB,OAAhC,IAA2C8hB,WAAW,IAAIC,WAA1D,IAAyEwH,QAAQ,IAAI,CAArF,IAA0F,CAAC,KAAKxtB,YAAL,EAA/F,EAAoH;QAClH,KAAKqqB,aAAL,GAAqBtE,WAArB;QACA;MACD;;MACD,MAAM4H,UAAU,GAAG,KAAKC,cAAL,EAAnB;;MACA,MAAMC,aAAa,GAAGF,UAAU,CAACG,MAAX,CAAkB/+B,KAAxC;MACA,MAAMg/B,cAAc,GAAGJ,UAAU,CAACK,OAAX,CAAmB59B,MAA1C;;MACA,MAAMoD,QAAQ,GAAGpF,WAAW,CAAC,KAAK1gB,KAAL,CAAWqhB,KAAX,GAAmB8+B,aAApB,EAAmC,CAAnC,EAAsC,KAAKr6B,QAA3C,CAA5B;;MACAoyB,SAAS,GAAG1gC,OAAO,CAACogC,MAAR,GAAiB,KAAK9xB,QAAL,GAAgBg6B,QAAjC,GAA4Ch6B,QAAQ,IAAIg6B,QAAQ,GAAG,CAAf,CAAhE;;MACA,IAAIK,aAAa,GAAG,CAAhB,GAAoBjI,SAAxB,EAAmC;QACjCA,SAAS,GAAGpyB,QAAQ,IAAIg6B,QAAQ,IAAItoC,OAAO,CAACogC,MAAR,GAAiB,GAAjB,GAAuB,CAA3B,CAAZ,CAApB;QACA3sB,SAAS,GAAG,KAAKA,SAAL,GAAiB0wB,iBAAiB,CAACnkC,OAAO,CAACqgC,IAAT,CAAlC,GACZsB,QAAQ,CAAC1jB,OADG,GACOmmB,cAAc,CAACpkC,OAAO,CAAC4gC,KAAT,EAAgB,KAAKp4C,KAAL,CAAWwX,OAAX,CAAmB+C,IAAnC,CADjC;QAEAwlC,gBAAgB,GAAGp/C,IAAI,CAAC0d,IAAL,CAAU8hC,aAAa,GAAGA,aAAhB,GAAgCE,cAAc,GAAGA,cAA3D,CAAnB;QACA1D,aAAa,GAAGx9B,SAAS,CAACxe,IAAI,CAACC,GAAL,CACxBD,IAAI,CAAC4/C,IAAL,CAAU7/B,WAAW,CAAC,CAACu/B,UAAU,CAACK,OAAX,CAAmB59B,MAAnB,GAA4B,CAA7B,IAAkCw1B,SAAnC,EAA8C,CAAC,CAA/C,EAAkD,CAAlD,CAArB,CADwB,EAExBv3C,IAAI,CAAC4/C,IAAL,CAAU7/B,WAAW,CAACuK,SAAS,GAAG80B,gBAAb,EAA+B,CAAC,CAAhC,EAAmC,CAAnC,CAArB,IAA8Dp/C,IAAI,CAAC4/C,IAAL,CAAU7/B,WAAW,CAAC2/B,cAAc,GAAGN,gBAAlB,EAAoC,CAAC,CAArC,EAAwC,CAAxC,CAArB,CAFtC,CAAD,CAAzB;QAIApD,aAAa,GAAGh8C,IAAI,CAACgC,GAAL,CAAS01C,WAAT,EAAsB13C,IAAI,CAACC,GAAL,CAAS03C,WAAT,EAAsBqE,aAAtB,CAAtB,CAAhB;MACD;;MACD,KAAKA,aAAL,GAAqBA,aAArB;IACD;;IACDoC,2BAA2B,GAAG;MAC5BthD,QAAQ,CAAC,KAAK+Z,OAAL,CAAaunC,2BAAd,EAA2C,CAAC,IAAD,CAA3C,CAAR;IACD;;IACDC,SAAS,GAAG;MACVvhD,QAAQ,CAAC,KAAK+Z,OAAL,CAAawnC,SAAd,EAAyB,CAAC,IAAD,CAAzB,CAAR;IACD;;IACDC,GAAG,GAAG;MACJ,MAAMuB,OAAO,GAAG;QACdn/B,KAAK,EAAE,CADO;QAEdqB,MAAM,EAAE;MAFM,CAAhB;MAIA,MAAM;QAAC1iB,KAAD;QAAQwX,OAAO,EAAE;UAAC0/B,KAAK,EAAEiC,QAAR;UAAkBf,KAAK,EAAEqI,SAAzB;UAAoC5I,IAAI,EAAE6I;QAA1C;MAAjB,IAAwE,IAA9E;;MACA,MAAMnqB,OAAO,GAAG,KAAKypB,UAAL,EAAhB;;MACA,MAAM1tB,YAAY,GAAG,KAAKA,YAAL,EAArB;;MACA,IAAIiE,OAAJ,EAAa;QACX,MAAMoqB,WAAW,GAAG/E,cAAc,CAAC6E,SAAD,EAAYzgD,KAAK,CAACwX,OAAN,CAAc+C,IAA1B,CAAlC;;QACA,IAAI+X,YAAJ,EAAkB;UAChBkuB,OAAO,CAACn/B,KAAR,GAAgB,KAAKyE,QAArB;UACA06B,OAAO,CAAC99B,MAAR,GAAiBi5B,iBAAiB,CAAC+E,QAAD,CAAjB,GAA8BC,WAA/C;QACD,CAHD,MAGO;UACLH,OAAO,CAAC99B,MAAR,GAAiB,KAAKuI,SAAtB;UACAu1B,OAAO,CAACn/B,KAAR,GAAgBs6B,iBAAiB,CAAC+E,QAAD,CAAjB,GAA8BC,WAA9C;QACD;;QACD,IAAIxH,QAAQ,CAAC5iB,OAAT,IAAoB,KAAK2gB,KAAL,CAAW91C,MAAnC,EAA2C;UACzC,MAAM;YAACu4C,KAAD;YAAQ7W,IAAR;YAAcsd,MAAd;YAAsBE;UAAtB,IAAiC,KAAKJ,cAAL,EAAvC;;UACA,MAAMU,WAAW,GAAGzH,QAAQ,CAAC1jB,OAAT,GAAmB,CAAvC;UACA,MAAMorB,YAAY,GAAG5hC,SAAS,CAAC,KAAK09B,aAAN,CAA9B;UACA,MAAMj5B,GAAG,GAAG/iB,IAAI,CAAC+iB,GAAL,CAASm9B,YAAT,CAAZ;UACA,MAAMp9B,GAAG,GAAG9iB,IAAI,CAAC8iB,GAAL,CAASo9B,YAAT,CAAZ;;UACA,IAAIvuB,YAAJ,EAAkB;YAChB,MAAMwuB,WAAW,GAAG3H,QAAQ,CAACZ,MAAT,GAAkB,CAAlB,GAAsB90B,GAAG,GAAG28B,MAAM,CAAC/+B,KAAb,GAAqBqC,GAAG,GAAG48B,OAAO,CAAC59B,MAA7E;YACA89B,OAAO,CAAC99B,MAAR,GAAiB/hB,IAAI,CAACC,GAAL,CAAS,KAAKqqB,SAAd,EAAyBu1B,OAAO,CAAC99B,MAAR,GAAiBo+B,WAAjB,GAA+BF,WAAxD,CAAjB;UACD,CAHD,MAGO;YACL,MAAMG,UAAU,GAAG5H,QAAQ,CAACZ,MAAT,GAAkB,CAAlB,GAAsB70B,GAAG,GAAG08B,MAAM,CAAC/+B,KAAb,GAAqBoC,GAAG,GAAG68B,OAAO,CAAC59B,MAA5E;YACA89B,OAAO,CAACn/B,KAAR,GAAgB1gB,IAAI,CAACC,GAAL,CAAS,KAAKklB,QAAd,EAAwB06B,OAAO,CAACn/B,KAAR,GAAgB0/B,UAAhB,GAA6BH,WAArD,CAAhB;UACD;;UACD,KAAKI,iBAAL,CAAuBrH,KAAvB,EAA8B7W,IAA9B,EAAoCrf,GAApC,EAAyCC,GAAzC;QACD;MACF;;MACD,KAAKu9B,cAAL;;MACA,IAAI3uB,YAAJ,EAAkB;QAChB,KAAKjR,KAAL,GAAa,KAAK84B,OAAL,GAAen6C,KAAK,CAACqhB,KAAN,GAAc,KAAKi7B,QAAL,CAAcn9C,IAA5B,GAAmC,KAAKm9C,QAAL,CAAcl9C,KAA7E;QACA,KAAKsjB,MAAL,GAAc89B,OAAO,CAAC99B,MAAtB;MACD,CAHD,MAGO;QACL,KAAKrB,KAAL,GAAam/B,OAAO,CAACn/B,KAArB;QACA,KAAKqB,MAAL,GAAc,KAAKy3B,OAAL,GAAen6C,KAAK,CAAC0iB,MAAN,GAAe,KAAK45B,QAAL,CAAcj4B,GAA7B,GAAmC,KAAKi4B,QAAL,CAAch4B,MAA9E;MACD;IACF;;IACD08B,iBAAiB,CAACrH,KAAD,EAAQ7W,IAAR,EAAcrf,GAAd,EAAmBC,GAAnB,EAAwB;MACvC,MAAM;QAACwzB,KAAK,EAAE;UAACp4C,KAAD;UAAQ22B;QAAR,CAAR;QAA0BzH;MAA1B,IAAsC,KAAKxW,OAAjD;MACA,MAAM0pC,SAAS,GAAG,KAAKvE,aAAL,KAAuB,CAAzC;MACA,MAAMwE,gBAAgB,GAAGnzB,QAAQ,KAAK,KAAb,IAAsB,KAAKV,IAAL,KAAc,GAA7D;;MACA,IAAI,KAAKgF,YAAL,EAAJ,EAAyB;QACvB,MAAM8uB,UAAU,GAAG,KAAK3F,eAAL,CAAqB,CAArB,IAA0B,KAAKt8C,IAAlD;QACA,MAAMkiD,WAAW,GAAG,KAAKjiD,KAAL,GAAa,KAAKq8C,eAAL,CAAqB,KAAKvE,KAAL,CAAW91C,MAAX,GAAoB,CAAzC,CAAjC;QACA,IAAIq7C,WAAW,GAAG,CAAlB;QACA,IAAIC,YAAY,GAAG,CAAnB;;QACA,IAAIwE,SAAJ,EAAe;UACb,IAAIC,gBAAJ,EAAsB;YACpB1E,WAAW,GAAG/4B,GAAG,GAAGi2B,KAAK,CAACt4B,KAA1B;YACAq7B,YAAY,GAAGj5B,GAAG,GAAGqf,IAAI,CAACpgB,MAA1B;UACD,CAHD,MAGO;YACL+5B,WAAW,GAAGh5B,GAAG,GAAGk2B,KAAK,CAACj3B,MAA1B;YACAg6B,YAAY,GAAGh5B,GAAG,GAAGof,IAAI,CAACzhB,KAA1B;UACD;QACF,CARD,MAQO,IAAIviB,KAAK,KAAK,OAAd,EAAuB;UAC5B49C,YAAY,GAAG5Z,IAAI,CAACzhB,KAApB;QACD,CAFM,MAEA,IAAIviB,KAAK,KAAK,KAAd,EAAqB;UAC1B29C,WAAW,GAAG9C,KAAK,CAACt4B,KAApB;QACD,CAFM,MAEA;UACLo7B,WAAW,GAAG9C,KAAK,CAACt4B,KAAN,GAAc,CAA5B;UACAq7B,YAAY,GAAG5Z,IAAI,CAACzhB,KAAL,GAAa,CAA5B;QACD;;QACD,KAAKo7B,WAAL,GAAmB97C,IAAI,CAACgC,GAAL,CAAS,CAAC85C,WAAW,GAAG2E,UAAd,GAA2B3rB,OAA5B,IAAuC,KAAKpU,KAA5C,IAAqD,KAAKA,KAAL,GAAa+/B,UAAlE,CAAT,EAAwF,CAAxF,CAAnB;QACA,KAAK1E,YAAL,GAAoB/7C,IAAI,CAACgC,GAAL,CAAS,CAAC+5C,YAAY,GAAG2E,WAAf,GAA6B5rB,OAA9B,IAAyC,KAAKpU,KAA9C,IAAuD,KAAKA,KAAL,GAAaggC,WAApE,CAAT,EAA2F,CAA3F,CAApB;MACD,CAvBD,MAuBO;QACL,IAAI9E,UAAU,GAAGzZ,IAAI,CAACpgB,MAAL,GAAc,CAA/B;QACA,IAAI85B,aAAa,GAAG7C,KAAK,CAACj3B,MAAN,GAAe,CAAnC;;QACA,IAAI5jB,KAAK,KAAK,OAAd,EAAuB;UACrBy9C,UAAU,GAAG,CAAb;UACAC,aAAa,GAAG7C,KAAK,CAACj3B,MAAtB;QACD,CAHD,MAGO,IAAI5jB,KAAK,KAAK,KAAd,EAAqB;UAC1By9C,UAAU,GAAGzZ,IAAI,CAACpgB,MAAlB;UACA85B,aAAa,GAAG,CAAhB;QACD;;QACD,KAAKD,UAAL,GAAkBA,UAAU,GAAG9mB,OAA/B;QACA,KAAK+mB,aAAL,GAAqBA,aAAa,GAAG/mB,OAArC;MACD;IACF;;IACDwrB,cAAc,GAAG;MACf,IAAI,KAAK3E,QAAT,EAAmB;QACjB,KAAKA,QAAL,CAAcn9C,IAAd,GAAqBwB,IAAI,CAACgC,GAAL,CAAS,KAAK85C,WAAd,EAA2B,KAAKH,QAAL,CAAcn9C,IAAzC,CAArB;QACA,KAAKm9C,QAAL,CAAcj4B,GAAd,GAAoB1jB,IAAI,CAACgC,GAAL,CAAS,KAAK45C,UAAd,EAA0B,KAAKD,QAAL,CAAcj4B,GAAxC,CAApB;QACA,KAAKi4B,QAAL,CAAcl9C,KAAd,GAAsBuB,IAAI,CAACgC,GAAL,CAAS,KAAK+5C,YAAd,EAA4B,KAAKJ,QAAL,CAAcl9C,KAA1C,CAAtB;QACA,KAAKk9C,QAAL,CAAch4B,MAAd,GAAuB3jB,IAAI,CAACgC,GAAL,CAAS,KAAK65C,aAAd,EAA6B,KAAKF,QAAL,CAAch4B,MAA3C,CAAvB;MACD;IACF;;IACD46B,QAAQ,GAAG;MACTzhD,QAAQ,CAAC,KAAK+Z,OAAL,CAAa0nC,QAAd,EAAwB,CAAC,IAAD,CAAxB,CAAR;IACD;;IACD5sB,YAAY,GAAG;MACb,MAAM;QAAChF,IAAD;QAAOU;MAAP,IAAmB,KAAKxW,OAA9B;MACA,OAAOwW,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAAnC,IAA+CV,IAAI,KAAK,GAA/D;IACD;;IACDg0B,UAAU,GAAG;MACX,OAAO,KAAK9pC,OAAL,CAAa4b,QAApB;IACD;;IACDwrB,qBAAqB,CAAC1H,KAAD,EAAQ;MAC3B,KAAKyI,2BAAL;MACA,KAAKC,kBAAL,CAAwB1I,KAAxB;MACA,IAAI71C,CAAJ,EAAOsV,IAAP;;MACA,KAAKtV,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGugC,KAAK,CAAC91C,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2CtV,CAAC,EAA5C,EAAgD;QAC9C,IAAIiU,aAAa,CAAC4hC,KAAK,CAAC71C,CAAD,CAAL,CAAS0yC,KAAV,CAAjB,EAAmC;UACjCmD,KAAK,CAACl1B,MAAN,CAAa3gB,CAAb,EAAgB,CAAhB;UACAsV,IAAI;UACJtV,CAAC;QACF;MACF;;MACD,KAAKw+C,0BAAL;IACD;;IACDK,cAAc,GAAG;MACf,IAAID,UAAU,GAAG,KAAKlD,WAAtB;;MACA,IAAI,CAACkD,UAAL,EAAiB;QACf,MAAMhC,UAAU,GAAG,KAAKzmC,OAAL,CAAa0/B,KAAb,CAAmB+G,UAAtC;QACA,IAAI/G,KAAK,GAAG,KAAKA,KAAjB;;QACA,IAAI+G,UAAU,GAAG/G,KAAK,CAAC91C,MAAvB,EAA+B;UAC7B81C,KAAK,GAAG8D,MAAM,CAAC9D,KAAD,EAAQ+G,UAAR,CAAd;QACD;;QACD,KAAKlB,WAAL,GAAmBkD,UAAU,GAAG,KAAKsB,kBAAL,CAAwBrK,KAAxB,EAA+BA,KAAK,CAAC91C,MAArC,CAAhC;MACD;;MACD,OAAO6+C,UAAP;IACD;;IACDsB,kBAAkB,CAACrK,KAAD,EAAQ91C,MAAR,EAAgB;MAChC,MAAM;QAACyZ,GAAD;QAAMmiC,iBAAiB,EAAEtB;MAAzB,IAAmC,IAAzC;MACA,MAAM8F,MAAM,GAAG,EAAf;MACA,MAAMC,OAAO,GAAG,EAAhB;MACA,IAAIC,eAAe,GAAG,CAAtB;MACA,IAAIC,gBAAgB,GAAG,CAAvB;MACA,IAAItgD,CAAJ,EAAO4Q,CAAP,EAAU0P,IAAV,EAAgBoyB,KAAhB,EAAuB6N,QAAvB,EAAiCzkD,UAAjC,EAA6CqkB,KAA7C,EAAoD9G,UAApD,EAAgE2G,KAAhE,EAAuEqB,MAAvE,EAA+Em/B,WAA/E;;MACA,KAAKxgD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,MAAhB,EAAwB,EAAEC,CAA1B,EAA6B;QAC3B0yC,KAAK,GAAGmD,KAAK,CAAC71C,CAAD,CAAL,CAAS0yC,KAAjB;QACA6N,QAAQ,GAAG,KAAKE,uBAAL,CAA6BzgD,CAA7B,CAAX;QACAwZ,GAAG,CAACN,IAAJ,GAAWpd,UAAU,GAAGykD,QAAQ,CAAC1gC,MAAjC;QACAM,KAAK,GAAGk6B,MAAM,CAACv+C,UAAD,CAAN,GAAqBu+C,MAAM,CAACv+C,UAAD,CAAN,IAAsB;UAAC4jB,IAAI,EAAE,EAAP;UAAWC,EAAE,EAAE;QAAf,CAAnD;QACAtG,UAAU,GAAGknC,QAAQ,CAAClnC,UAAtB;QACA2G,KAAK,GAAGqB,MAAM,GAAG,CAAjB;;QACA,IAAI,CAACpN,aAAa,CAACy+B,KAAD,CAAd,IAAyB,CAAC1tC,OAAO,CAAC0tC,KAAD,CAArC,EAA8C;UAC5C1yB,KAAK,GAAGP,YAAY,CAACjG,GAAD,EAAM2G,KAAK,CAACT,IAAZ,EAAkBS,KAAK,CAACR,EAAxB,EAA4BK,KAA5B,EAAmC0yB,KAAnC,CAApB;UACArxB,MAAM,GAAGhI,UAAT;QACD,CAHD,MAGO,IAAIrU,OAAO,CAAC0tC,KAAD,CAAX,EAAoB;UACzB,KAAK9hC,CAAC,GAAG,CAAJ,EAAO0P,IAAI,GAAGoyB,KAAK,CAAC3yC,MAAzB,EAAiC6Q,CAAC,GAAG0P,IAArC,EAA2C,EAAE1P,CAA7C,EAAgD;YAC9C4vC,WAAW,GAAG9N,KAAK,CAAC9hC,CAAD,CAAnB;;YACA,IAAI,CAACqD,aAAa,CAACusC,WAAD,CAAd,IAA+B,CAACx7C,OAAO,CAACw7C,WAAD,CAA3C,EAA0D;cACxDxgC,KAAK,GAAGP,YAAY,CAACjG,GAAD,EAAM2G,KAAK,CAACT,IAAZ,EAAkBS,KAAK,CAACR,EAAxB,EAA4BK,KAA5B,EAAmCwgC,WAAnC,CAApB;cACAn/B,MAAM,IAAIhI,UAAV;YACD;UACF;QACF;;QACD8mC,MAAM,CAACn/C,IAAP,CAAYgf,KAAZ;QACAogC,OAAO,CAACp/C,IAAR,CAAaqgB,MAAb;QACAg/B,eAAe,GAAG/gD,IAAI,CAACgC,GAAL,CAAS0e,KAAT,EAAgBqgC,eAAhB,CAAlB;QACAC,gBAAgB,GAAGhhD,IAAI,CAACgC,GAAL,CAAS+f,MAAT,EAAiBi/B,gBAAjB,CAAnB;MACD;;MACDlgC,cAAc,CAACi6B,MAAD,EAASt6C,MAAT,CAAd;MACA,MAAMg/C,MAAM,GAAGoB,MAAM,CAAClqC,OAAP,CAAeoqC,eAAf,CAAf;MACA,MAAMpB,OAAO,GAAGmB,OAAO,CAACnqC,OAAR,CAAgBqqC,gBAAhB,CAAhB;;MACA,MAAMI,OAAO,GAAIrpC,GAAD,KAAU;QAAC2I,KAAK,EAAEmgC,MAAM,CAAC9oC,GAAD,CAAN,IAAe,CAAvB;QAA0BgK,MAAM,EAAE++B,OAAO,CAAC/oC,GAAD,CAAP,IAAgB;MAAlD,CAAV,CAAhB;;MACA,OAAO;QACLihC,KAAK,EAAEoI,OAAO,CAAC,CAAD,CADT;QAELjf,IAAI,EAAEif,OAAO,CAAC3gD,MAAM,GAAG,CAAV,CAFR;QAGLg/C,MAAM,EAAE2B,OAAO,CAAC3B,MAAD,CAHV;QAILE,OAAO,EAAEyB,OAAO,CAACzB,OAAD,CAJX;QAKLkB,MALK;QAMLC;MANK,CAAP;IAQD;;IACDzN,gBAAgB,CAACj/B,KAAD,EAAQ;MACtB,OAAOA,KAAP;IACD;;IACDqnC,gBAAgB,CAACrnC,KAAD,EAAQgC,KAAR,EAAe;MAC7B,OAAOu8B,GAAP;IACD;;IACD0O,gBAAgB,CAAC9/B,KAAD,EAAQ,CAAE;;IAC1Bu5B,eAAe,CAAC1kC,KAAD,EAAQ;MACrB,MAAMmgC,KAAK,GAAG,KAAKA,KAAnB;;MACA,IAAIngC,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGmgC,KAAK,CAAC91C,MAAN,GAAe,CAAxC,EAA2C;QACzC,OAAO,IAAP;MACD;;MACD,OAAO,KAAKg7C,gBAAL,CAAsBlF,KAAK,CAACngC,KAAD,CAAL,CAAahC,KAAnC,CAAP;IACD;;IACDktC,kBAAkB,CAACC,OAAD,EAAU;MAC1B,IAAI,KAAKt0B,cAAT,EAAyB;QACvBs0B,OAAO,GAAG,IAAIA,OAAd;MACD;;MACD,MAAMhgC,KAAK,GAAG,KAAKo5B,WAAL,GAAmB4G,OAAO,GAAG,KAAK/H,OAAhD;MACA,OAAOx5B,WAAW,CAAC,KAAK4+B,cAAL,GAAsBt9B,WAAW,CAAC,KAAKjiB,KAAN,EAAakiB,KAAb,EAAoB,CAApB,CAAjC,GAA0DA,KAA3D,CAAlB;IACD;;IACDigC,kBAAkB,CAACjgC,KAAD,EAAQ;MACxB,MAAMggC,OAAO,GAAG,CAAChgC,KAAK,GAAG,KAAKo5B,WAAd,IAA6B,KAAKnB,OAAlD;MACA,OAAO,KAAKvsB,cAAL,GAAsB,IAAIs0B,OAA1B,GAAoCA,OAA3C;IACD;;IACDE,YAAY,GAAG;MACb,OAAO,KAAKhG,gBAAL,CAAsB,KAAKiG,YAAL,EAAtB,CAAP;IACD;;IACDA,YAAY,GAAG;MACb,MAAM;QAACzhD,GAAD;QAAM+B;MAAN,IAAa,IAAnB;MACA,OAAO/B,GAAG,GAAG,CAAN,IAAW+B,GAAG,GAAG,CAAjB,GAAqBA,GAArB,GACL/B,GAAG,GAAG,CAAN,IAAW+B,GAAG,GAAG,CAAjB,GAAqB/B,GAArB,GACA,CAFF;IAGD;;IACD2hB,UAAU,CAACxL,KAAD,EAAQ;MAChB,MAAMmgC,KAAK,GAAG,KAAKA,KAAL,IAAc,EAA5B;;MACA,IAAIngC,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGmgC,KAAK,CAAC91C,MAAhC,EAAwC;QACtC,MAAMM,IAAI,GAAGw1C,KAAK,CAACngC,KAAD,CAAlB;QACA,OAAOrV,IAAI,CAACyuC,QAAL,KACRzuC,IAAI,CAACyuC,QAAL,GAAgB2L,iBAAiB,CAAC,KAAKv5B,UAAL,EAAD,EAAoBxL,KAApB,EAA2BrV,IAA3B,CADzB,CAAP;MAED;;MACD,OAAO,KAAKyuC,QAAL,KACP,KAAKA,QAAL,GAAgB0L,kBAAkB,CAAC,KAAK77C,KAAL,CAAWuiB,UAAX,EAAD,EAA0B,IAA1B,CAD3B,CAAP;IAED;;IACD03B,SAAS,GAAG;MACV,MAAMqI,WAAW,GAAG,KAAK9qC,OAAL,CAAa0/B,KAAjC;MACA,MAAMqL,GAAG,GAAGtjC,SAAS,CAAC,KAAK09B,aAAN,CAArB;MACA,MAAMj5B,GAAG,GAAG/iB,IAAI,CAACge,GAAL,CAAShe,IAAI,CAAC+iB,GAAL,CAAS6+B,GAAT,CAAT,CAAZ;MACA,MAAM9+B,GAAG,GAAG9iB,IAAI,CAACge,GAAL,CAAShe,IAAI,CAAC8iB,GAAL,CAAS8+B,GAAT,CAAT,CAAZ;;MACA,MAAMtC,UAAU,GAAG,KAAKC,cAAL,EAAnB;;MACA,MAAMzqB,OAAO,GAAG6sB,WAAW,CAAC3J,eAAZ,IAA+B,CAA/C;MACA,MAAM3yC,CAAC,GAAGi6C,UAAU,GAAGA,UAAU,CAACG,MAAX,CAAkB/+B,KAAlB,GAA0BoU,OAA7B,GAAuC,CAA3D;MACA,MAAM1wB,CAAC,GAAGk7C,UAAU,GAAGA,UAAU,CAACK,OAAX,CAAmB59B,MAAnB,GAA4B+S,OAA/B,GAAyC,CAA7D;MACA,OAAO,KAAKnD,YAAL,KACHvtB,CAAC,GAAG2e,GAAJ,GAAU1d,CAAC,GAAGyd,GAAd,GAAoBzd,CAAC,GAAG0d,GAAxB,GAA8B3e,CAAC,GAAG0e,GAD/B,GAEH1e,CAAC,GAAG0e,GAAJ,GAAUzd,CAAC,GAAG0d,GAAd,GAAoB3e,CAAC,GAAG2e,GAAxB,GAA8B1d,CAAC,GAAGyd,GAFtC;IAGD;;IACDu8B,UAAU,GAAG;MACX,MAAMzpB,OAAO,GAAG,KAAK/e,OAAL,CAAa+e,OAA7B;;MACA,IAAIA,OAAO,KAAK,MAAhB,EAAwB;QACtB,OAAO,CAAC,CAACA,OAAT;MACD;;MACD,OAAO,KAAKwX,uBAAL,GAA+B3sC,MAA/B,GAAwC,CAA/C;IACD;;IACDohD,qBAAqB,CAACh0B,SAAD,EAAY;MAC/B,MAAMlB,IAAI,GAAG,KAAKA,IAAlB;MACA,MAAMttB,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAMwX,OAAO,GAAG,KAAKA,OAArB;MACA,MAAM;QAACqgC,IAAD;QAAO7pB;MAAP,IAAmBxW,OAAzB;MACA,MAAMogC,MAAM,GAAGC,IAAI,CAACD,MAApB;MACA,MAAMtlB,YAAY,GAAG,KAAKA,YAAL,EAArB;MACA,MAAM4kB,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAMuL,WAAW,GAAGvL,KAAK,CAAC91C,MAAN,IAAgBw2C,MAAM,GAAG,CAAH,GAAO,CAA7B,CAApB;MACA,MAAM8K,EAAE,GAAG/G,iBAAiB,CAAC9D,IAAD,CAA5B;MACA,MAAM12C,KAAK,GAAG,EAAd;MACA,MAAMwhD,UAAU,GAAG9K,IAAI,CAACrf,UAAL,CAAgB,KAAKjW,UAAL,EAAhB,CAAnB;MACA,MAAMqgC,SAAS,GAAGD,UAAU,CAAC7K,UAAX,GAAwB6K,UAAU,CAAC5+B,WAAnC,GAAiD,CAAnE;MACA,MAAM8+B,aAAa,GAAGD,SAAS,GAAG,CAAlC;;MACA,MAAME,gBAAgB,GAAG,UAAS5gC,KAAT,EAAgB;QACvC,OAAOD,WAAW,CAACjiB,KAAD,EAAQkiB,KAAR,EAAe0gC,SAAf,CAAlB;MACD,CAFD;;MAGA,IAAIG,WAAJ,EAAiB1hD,CAAjB,EAAoBm6C,SAApB,EAA+BwH,gBAA/B;MACA,IAAIC,GAAJ,EAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC;;MACA,IAAIx1B,QAAQ,KAAK,KAAjB,EAAwB;QACtB+0B,WAAW,GAAGD,gBAAgB,CAAC,KAAKx+B,MAAN,CAA9B;QACA4+B,GAAG,GAAG,KAAK5+B,MAAL,GAAco+B,EAApB;QACAU,GAAG,GAAGL,WAAW,GAAGF,aAApB;QACAS,EAAE,GAAGR,gBAAgB,CAACt0B,SAAS,CAACnK,GAAX,CAAhB,GAAkCw+B,aAAvC;QACAW,EAAE,GAAGh1B,SAAS,CAAClK,MAAf;MACD,CAND,MAMO,IAAI0J,QAAQ,KAAK,QAAjB,EAA2B;QAChC+0B,WAAW,GAAGD,gBAAgB,CAAC,KAAKz+B,GAAN,CAA9B;QACAi/B,EAAE,GAAG90B,SAAS,CAACnK,GAAf;QACAm/B,EAAE,GAAGV,gBAAgB,CAACt0B,SAAS,CAAClK,MAAX,CAAhB,GAAqCu+B,aAA1C;QACAK,GAAG,GAAGH,WAAW,GAAGF,aAApB;QACAO,GAAG,GAAG,KAAK/+B,GAAL,GAAWq+B,EAAjB;MACD,CANM,MAMA,IAAI10B,QAAQ,KAAK,MAAjB,EAAyB;QAC9B+0B,WAAW,GAAGD,gBAAgB,CAAC,KAAK1jD,KAAN,CAA9B;QACA6jD,GAAG,GAAG,KAAK7jD,KAAL,GAAasjD,EAAnB;QACAS,GAAG,GAAGJ,WAAW,GAAGF,aAApB;QACAQ,EAAE,GAAGP,gBAAgB,CAACt0B,SAAS,CAACrvB,IAAX,CAAhB,GAAmC0jD,aAAxC;QACAU,EAAE,GAAG/0B,SAAS,CAACpvB,KAAf;MACD,CANM,MAMA,IAAI4uB,QAAQ,KAAK,OAAjB,EAA0B;QAC/B+0B,WAAW,GAAGD,gBAAgB,CAAC,KAAK3jD,IAAN,CAA9B;QACAkkD,EAAE,GAAG70B,SAAS,CAACrvB,IAAf;QACAokD,EAAE,GAAGT,gBAAgB,CAACt0B,SAAS,CAACpvB,KAAX,CAAhB,GAAoCyjD,aAAzC;QACAI,GAAG,GAAGF,WAAW,GAAGF,aAApB;QACAM,GAAG,GAAG,KAAKhkD,IAAL,GAAYujD,EAAlB;MACD,CANM,MAMA,IAAIp1B,IAAI,KAAK,GAAb,EAAkB;QACvB,IAAIU,QAAQ,KAAK,QAAjB,EAA2B;UACzB+0B,WAAW,GAAGD,gBAAgB,CAAC,CAACt0B,SAAS,CAACnK,GAAV,GAAgBmK,SAAS,CAAClK,MAA3B,IAAqC,CAArC,GAAyC,GAA1C,CAA9B;QACD,CAFD,MAEO,IAAI7O,QAAQ,CAACuY,QAAD,CAAZ,EAAwB;UAC7B,MAAMmuB,cAAc,GAAGpqC,MAAM,CAACD,IAAP,CAAYkc,QAAZ,EAAsB,CAAtB,CAAvB;UACA,MAAMjZ,KAAK,GAAGiZ,QAAQ,CAACmuB,cAAD,CAAtB;UACA4G,WAAW,GAAGD,gBAAgB,CAAC,KAAK9iD,KAAL,CAAW2b,MAAX,CAAkBwgC,cAAlB,EAAkCC,gBAAlC,CAAmDrnC,KAAnD,CAAD,CAA9B;QACD;;QACDuuC,EAAE,GAAG90B,SAAS,CAACnK,GAAf;QACAm/B,EAAE,GAAGh1B,SAAS,CAAClK,MAAf;QACA4+B,GAAG,GAAGH,WAAW,GAAGF,aAApB;QACAO,GAAG,GAAGF,GAAG,GAAGR,EAAZ;MACD,CAZM,MAYA,IAAIp1B,IAAI,KAAK,GAAb,EAAkB;QACvB,IAAIU,QAAQ,KAAK,QAAjB,EAA2B;UACzB+0B,WAAW,GAAGD,gBAAgB,CAAC,CAACt0B,SAAS,CAACrvB,IAAV,GAAiBqvB,SAAS,CAACpvB,KAA5B,IAAqC,CAAtC,CAA9B;QACD,CAFD,MAEO,IAAIqW,QAAQ,CAACuY,QAAD,CAAZ,EAAwB;UAC7B,MAAMmuB,cAAc,GAAGpqC,MAAM,CAACD,IAAP,CAAYkc,QAAZ,EAAsB,CAAtB,CAAvB;UACA,MAAMjZ,KAAK,GAAGiZ,QAAQ,CAACmuB,cAAD,CAAtB;UACA4G,WAAW,GAAGD,gBAAgB,CAAC,KAAK9iD,KAAL,CAAW2b,MAAX,CAAkBwgC,cAAlB,EAAkCC,gBAAlC,CAAmDrnC,KAAnD,CAAD,CAA9B;QACD;;QACDkuC,GAAG,GAAGF,WAAW,GAAGF,aAApB;QACAM,GAAG,GAAGF,GAAG,GAAGP,EAAZ;QACAW,EAAE,GAAG70B,SAAS,CAACrvB,IAAf;QACAokD,EAAE,GAAG/0B,SAAS,CAACpvB,KAAf;MACD;;MACD,MAAMqkD,KAAK,GAAG1tC,cAAc,CAACyB,OAAO,CAAC0/B,KAAR,CAAcmC,aAAf,EAA8BoJ,WAA9B,CAA5B;MACA,MAAMiB,IAAI,GAAG/iD,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAYhC,IAAI,CAAC85C,IAAL,CAAUgI,WAAW,GAAGgB,KAAxB,CAAZ,CAAb;;MACA,KAAKpiD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGohD,WAAhB,EAA6BphD,CAAC,IAAIqiD,IAAlC,EAAwC;QACtC,MAAMC,WAAW,GAAG9L,IAAI,CAACrf,UAAL,CAAgB,KAAKjW,UAAL,CAAgBlhB,CAAhB,CAAhB,CAApB;QACA,MAAMukB,SAAS,GAAG+9B,WAAW,CAAC/9B,SAA9B;QACA,MAAMg+B,SAAS,GAAGD,WAAW,CAACjwC,KAA9B;QACA,MAAM0wB,UAAU,GAAGyT,IAAI,CAACzT,UAAL,IAAmB,EAAtC;QACA,MAAMC,gBAAgB,GAAGsf,WAAW,CAACtf,gBAArC;QACA,MAAM6T,SAAS,GAAGyL,WAAW,CAACzL,SAA9B;QACA,MAAMC,SAAS,GAAGwL,WAAW,CAACxL,SAA9B;QACA,MAAM0L,cAAc,GAAGF,WAAW,CAACE,cAAZ,IAA8B,EAArD;QACA,MAAMC,oBAAoB,GAAGH,WAAW,CAACG,oBAAzC;QACAtI,SAAS,GAAGL,mBAAmB,CAAC,IAAD,EAAO95C,CAAP,EAAUu2C,MAAV,CAA/B;;QACA,IAAI4D,SAAS,KAAK17C,SAAlB,EAA6B;UAC3B;QACD;;QACDkjD,gBAAgB,GAAG/gC,WAAW,CAACjiB,KAAD,EAAQw7C,SAAR,EAAmB51B,SAAnB,CAA9B;;QACA,IAAI0M,YAAJ,EAAkB;UAChB2wB,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGP,gBAAtB;QACD,CAFD,MAEO;UACLE,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGR,gBAAtB;QACD;;QACD7hD,KAAK,CAACkB,IAAN,CAAW;UACT4gD,GADS;UAETC,GAFS;UAGTC,GAHS;UAITC,GAJS;UAKTC,EALS;UAMTC,EANS;UAOTC,EAPS;UAQTC,EARS;UASTniC,KAAK,EAAEuE,SATE;UAUTlS,KAAK,EAAEkwC,SAVE;UAWTxf,UAXS;UAYTC,gBAZS;UAaT6T,SAbS;UAcTC,SAdS;UAeT0L,cAfS;UAgBTC;QAhBS,CAAX;MAkBD;;MACD,KAAKzG,YAAL,GAAoBoF,WAApB;MACA,KAAKnF,YAAL,GAAoByF,WAApB;MACA,OAAO5hD,KAAP;IACD;;IACD4iD,kBAAkB,CAACv1B,SAAD,EAAY;MAC5B,MAAMlB,IAAI,GAAG,KAAKA,IAAlB;MACA,MAAM9V,OAAO,GAAG,KAAKA,OAArB;MACA,MAAM;QAACwW,QAAD;QAAWkpB,KAAK,EAAEoL;MAAlB,IAAiC9qC,OAAvC;MACA,MAAM8a,YAAY,GAAG,KAAKA,YAAL,EAArB;MACA,MAAM4kB,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAM;QAACp4C,KAAD;QAAQi6C,UAAR;QAAoBtjB,OAApB;QAA6B8iB;MAA7B,IAAuC+J,WAA7C;MACA,MAAMI,EAAE,GAAG/G,iBAAiB,CAACnkC,OAAO,CAACqgC,IAAT,CAA5B;MACA,MAAMmM,cAAc,GAAGtB,EAAE,GAAGjtB,OAA5B;MACA,MAAMwuB,eAAe,GAAG1L,MAAM,GAAG,CAAC9iB,OAAJ,GAAcuuB,cAA5C;MACA,MAAMhhC,QAAQ,GAAG,CAAC/D,SAAS,CAAC,KAAK09B,aAAN,CAA3B;MACA,MAAMx7C,KAAK,GAAG,EAAd;MACA,IAAIE,CAAJ,EAAOsV,IAAP,EAAajV,IAAb,EAAmBqyC,KAAnB,EAA0B7sC,CAA1B,EAA6BuX,CAA7B,EAAgC0H,SAAhC,EAA2CjE,KAA3C,EAAkD3H,IAAlD,EAAwDG,UAAxD,EAAoEwpC,SAApE,EAA+EC,UAA/E;MACA,IAAI/9B,YAAY,GAAG,QAAnB;;MACA,IAAI4H,QAAQ,KAAK,KAAjB,EAAwB;QACtBvP,CAAC,GAAG,KAAK6F,MAAL,GAAc2/B,eAAlB;QACA99B,SAAS,GAAG,KAAKi+B,uBAAL,EAAZ;MACD,CAHD,MAGO,IAAIp2B,QAAQ,KAAK,QAAjB,EAA2B;QAChCvP,CAAC,GAAG,KAAK4F,GAAL,GAAW4/B,eAAf;QACA99B,SAAS,GAAG,KAAKi+B,uBAAL,EAAZ;MACD,CAHM,MAGA,IAAIp2B,QAAQ,KAAK,MAAjB,EAAyB;QAC9B,MAAMtpB,GAAG,GAAG,KAAK2/C,uBAAL,CAA6B3B,EAA7B,CAAZ;;QACAv8B,SAAS,GAAGzhB,GAAG,CAACyhB,SAAhB;QACAjf,CAAC,GAAGxC,GAAG,CAACwC,CAAR;MACD,CAJM,MAIA,IAAI8mB,QAAQ,KAAK,OAAjB,EAA0B;QAC/B,MAAMtpB,GAAG,GAAG,KAAK2/C,uBAAL,CAA6B3B,EAA7B,CAAZ;;QACAv8B,SAAS,GAAGzhB,GAAG,CAACyhB,SAAhB;QACAjf,CAAC,GAAGxC,GAAG,CAACwC,CAAR;MACD,CAJM,MAIA,IAAIomB,IAAI,KAAK,GAAb,EAAkB;QACvB,IAAIU,QAAQ,KAAK,QAAjB,EAA2B;UACzBvP,CAAC,GAAI,CAAC+P,SAAS,CAACnK,GAAV,GAAgBmK,SAAS,CAAClK,MAA3B,IAAqC,CAAtC,GAA2C0/B,cAA/C;QACD,CAFD,MAEO,IAAIvuC,QAAQ,CAACuY,QAAD,CAAZ,EAAwB;UAC7B,MAAMmuB,cAAc,GAAGpqC,MAAM,CAACD,IAAP,CAAYkc,QAAZ,EAAsB,CAAtB,CAAvB;UACA,MAAMjZ,KAAK,GAAGiZ,QAAQ,CAACmuB,cAAD,CAAtB;UACA19B,CAAC,GAAG,KAAKze,KAAL,CAAW2b,MAAX,CAAkBwgC,cAAlB,EAAkCC,gBAAlC,CAAmDrnC,KAAnD,IAA4DivC,cAAhE;QACD;;QACD79B,SAAS,GAAG,KAAKi+B,uBAAL,EAAZ;MACD,CATM,MASA,IAAI92B,IAAI,KAAK,GAAb,EAAkB;QACvB,IAAIU,QAAQ,KAAK,QAAjB,EAA2B;UACzB9mB,CAAC,GAAI,CAACsnB,SAAS,CAACrvB,IAAV,GAAiBqvB,SAAS,CAACpvB,KAA5B,IAAqC,CAAtC,GAA2C4kD,cAA/C;QACD,CAFD,MAEO,IAAIvuC,QAAQ,CAACuY,QAAD,CAAZ,EAAwB;UAC7B,MAAMmuB,cAAc,GAAGpqC,MAAM,CAACD,IAAP,CAAYkc,QAAZ,EAAsB,CAAtB,CAAvB;UACA,MAAMjZ,KAAK,GAAGiZ,QAAQ,CAACmuB,cAAD,CAAtB;UACAj1C,CAAC,GAAG,KAAKlH,KAAL,CAAW2b,MAAX,CAAkBwgC,cAAlB,EAAkCC,gBAAlC,CAAmDrnC,KAAnD,CAAJ;QACD;;QACDoR,SAAS,GAAG,KAAKk+B,uBAAL,CAA6B3B,EAA7B,EAAiCv8B,SAA7C;MACD;;MACD,IAAImH,IAAI,KAAK,GAAb,EAAkB;QAChB,IAAIxuB,KAAK,KAAK,OAAd,EAAuB;UACrBsnB,YAAY,GAAG,KAAf;QACD,CAFD,MAEO,IAAItnB,KAAK,KAAK,KAAd,EAAqB;UAC1BsnB,YAAY,GAAG,QAAf;QACD;MACF;;MACD,MAAM65B,UAAU,GAAG,KAAKC,cAAL,EAAnB;;MACA,KAAK7+C,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGugC,KAAK,CAAC91C,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2C,EAAEtV,CAA7C,EAAgD;QAC9CK,IAAI,GAAGw1C,KAAK,CAAC71C,CAAD,CAAZ;QACA0yC,KAAK,GAAGryC,IAAI,CAACqyC,KAAb;QACA,MAAM4P,WAAW,GAAGrB,WAAW,CAAC9pB,UAAZ,CAAuB,KAAKjW,UAAL,CAAgBlhB,CAAhB,CAAvB,CAApB;QACA6gB,KAAK,GAAG,KAAKu5B,eAAL,CAAqBp6C,CAArB,IAA0BihD,WAAW,CAAC1J,WAA9C;QACAr+B,IAAI,GAAG,KAAKunC,uBAAL,CAA6BzgD,CAA7B,CAAP;QACAqZ,UAAU,GAAGH,IAAI,CAACG,UAAlB;QACAwpC,SAAS,GAAG79C,OAAO,CAAC0tC,KAAD,CAAP,GAAiBA,KAAK,CAAC3yC,MAAvB,GAAgC,CAA5C;QACA,MAAMkjD,SAAS,GAAGJ,SAAS,GAAG,CAA9B;QACA,MAAMxwC,KAAK,GAAGiwC,WAAW,CAACjwC,KAA1B;QACA,MAAM8R,WAAW,GAAGm+B,WAAW,CAAClL,eAAhC;QACA,MAAMlzB,WAAW,GAAGo+B,WAAW,CAACnL,eAAhC;;QACA,IAAIlmB,YAAJ,EAAkB;UAChBprB,CAAC,GAAGgb,KAAJ;;UACA,IAAI8L,QAAQ,KAAK,KAAjB,EAAwB;YACtB,IAAI+qB,UAAU,KAAK,MAAf,IAAyB/1B,QAAQ,KAAK,CAA1C,EAA6C;cAC3CmhC,UAAU,GAAG,CAACD,SAAD,GAAaxpC,UAAb,GAA0BA,UAAU,GAAG,CAApD;YACD,CAFD,MAEO,IAAIq+B,UAAU,KAAK,QAAnB,EAA6B;cAClCoL,UAAU,GAAG,CAAClE,UAAU,CAACK,OAAX,CAAmB59B,MAApB,GAA6B,CAA7B,GAAiC4hC,SAAS,GAAG5pC,UAA7C,GAA0DA,UAAvE;YACD,CAFM,MAEA;cACLypC,UAAU,GAAG,CAAClE,UAAU,CAACK,OAAX,CAAmB59B,MAApB,GAA6BhI,UAAU,GAAG,CAAvD;YACD;UACF,CARD,MAQO;YACL,IAAIq+B,UAAU,KAAK,MAAf,IAAyB/1B,QAAQ,KAAK,CAA1C,EAA6C;cAC3CmhC,UAAU,GAAGzpC,UAAU,GAAG,CAA1B;YACD,CAFD,MAEO,IAAIq+B,UAAU,KAAK,QAAnB,EAA6B;cAClCoL,UAAU,GAAGlE,UAAU,CAACK,OAAX,CAAmB59B,MAAnB,GAA4B,CAA5B,GAAgC4hC,SAAS,GAAG5pC,UAAzD;YACD,CAFM,MAEA;cACLypC,UAAU,GAAGlE,UAAU,CAACK,OAAX,CAAmB59B,MAAnB,GAA4BwhC,SAAS,GAAGxpC,UAArD;YACD;UACF;;UACD,IAAI69B,MAAJ,EAAY;YACV4L,UAAU,IAAI,CAAC,CAAf;UACD;QACF,CAtBD,MAsBO;UACL1lC,CAAC,GAAGyD,KAAJ;UACAiiC,UAAU,GAAG,CAAC,IAAID,SAAL,IAAkBxpC,UAAlB,GAA+B,CAA5C;QACD;;QACD,IAAI6pC,QAAJ;;QACA,IAAIZ,WAAW,CAAC3K,iBAAhB,EAAmC;UACjC,MAAMwL,YAAY,GAAG5zB,SAAS,CAAC+yB,WAAW,CAACzK,eAAb,CAA9B;UACA,MAAMx2B,MAAM,GAAGu9B,UAAU,CAACwB,OAAX,CAAmBpgD,CAAnB,CAAf;UACA,MAAMggB,KAAK,GAAG4+B,UAAU,CAACuB,MAAX,CAAkBngD,CAAlB,CAAd;UACA,IAAIgjB,GAAG,GAAG5F,CAAC,GAAG0lC,UAAJ,GAAiBK,YAAY,CAACngC,GAAxC;UACA,IAAIllB,IAAI,GAAG+H,CAAC,GAAGs9C,YAAY,CAACrlD,IAA5B;;UACA,QAAQinB,YAAR;YACA,KAAK,QAAL;cACE/B,GAAG,IAAI3B,MAAM,GAAG,CAAhB;cACA;;YACF,KAAK,QAAL;cACE2B,GAAG,IAAI3B,MAAP;cACA;UANF;;UAQA,QAAQyD,SAAR;YACA,KAAK,QAAL;cACEhnB,IAAI,IAAIkiB,KAAK,GAAG,CAAhB;cACA;;YACF,KAAK,OAAL;cACEliB,IAAI,IAAIkiB,KAAR;cACA;UANF;;UAQAkjC,QAAQ,GAAG;YACTplD,IADS;YAETklB,GAFS;YAGThD,KAAK,EAAEA,KAAK,GAAGmjC,YAAY,CAACnjC,KAHnB;YAITqB,MAAM,EAAEA,MAAM,GAAG8hC,YAAY,CAAC9hC,MAJrB;YAKThP,KAAK,EAAEiwC,WAAW,CAAC1K;UALV,CAAX;QAOD;;QACD93C,KAAK,CAACkB,IAAN,CAAW;UACT2gB,QADS;UAET+wB,KAFS;UAGTx5B,IAHS;UAIT7G,KAJS;UAKT8R,WALS;UAMTD,WANS;UAOT4+B,UAPS;UAQTh+B,SARS;UASTC,YATS;UAUTH,WAAW,EAAE,CAAC/e,CAAD,EAAIuX,CAAJ,CAVJ;UAWT8lC;QAXS,CAAX;MAaD;;MACD,OAAOpjD,KAAP;IACD;;IACDijD,uBAAuB,GAAG;MACxB,MAAM;QAACp2B,QAAD;QAAWkpB;MAAX,IAAoB,KAAK1/B,OAA/B;MACA,MAAMwL,QAAQ,GAAG,CAAC/D,SAAS,CAAC,KAAK09B,aAAN,CAA3B;;MACA,IAAI35B,QAAJ,EAAc;QACZ,OAAOgL,QAAQ,KAAK,KAAb,GAAqB,MAArB,GAA8B,OAArC;MACD;;MACD,IAAIlvB,KAAK,GAAG,QAAZ;;MACA,IAAIo4C,KAAK,CAACp4C,KAAN,KAAgB,OAApB,EAA6B;QAC3BA,KAAK,GAAG,MAAR;MACD,CAFD,MAEO,IAAIo4C,KAAK,CAACp4C,KAAN,KAAgB,KAApB,EAA2B;QAChCA,KAAK,GAAG,OAAR;MACD;;MACD,OAAOA,KAAP;IACD;;IACDulD,uBAAuB,CAAC3B,EAAD,EAAK;MAC1B,MAAM;QAAC10B,QAAD;QAAWkpB,KAAK,EAAE;UAAC6B,UAAD;UAAaR,MAAb;UAAqB9iB;QAArB;MAAlB,IAAmD,KAAKje,OAA9D;;MACA,MAAMyoC,UAAU,GAAG,KAAKC,cAAL,EAAnB;;MACA,MAAM8D,cAAc,GAAGtB,EAAE,GAAGjtB,OAA5B;MACA,MAAM2qB,MAAM,GAAGH,UAAU,CAACG,MAAX,CAAkB/+B,KAAjC;MACA,IAAI8E,SAAJ;MACA,IAAIjf,CAAJ;;MACA,IAAI8mB,QAAQ,KAAK,MAAjB,EAAyB;QACvB,IAAIuqB,MAAJ,EAAY;UACVrxC,CAAC,GAAG,KAAK9H,KAAL,GAAaq2B,OAAjB;;UACA,IAAIsjB,UAAU,KAAK,MAAnB,EAA2B;YACzB5yB,SAAS,GAAG,MAAZ;UACD,CAFD,MAEO,IAAI4yB,UAAU,KAAK,QAAnB,EAA6B;YAClC5yB,SAAS,GAAG,QAAZ;YACAjf,CAAC,IAAKk5C,MAAM,GAAG,CAAf;UACD,CAHM,MAGA;YACLj6B,SAAS,GAAG,OAAZ;YACAjf,CAAC,IAAIk5C,MAAL;UACD;QACF,CAXD,MAWO;UACLl5C,CAAC,GAAG,KAAK9H,KAAL,GAAa4kD,cAAjB;;UACA,IAAIjL,UAAU,KAAK,MAAnB,EAA2B;YACzB5yB,SAAS,GAAG,OAAZ;UACD,CAFD,MAEO,IAAI4yB,UAAU,KAAK,QAAnB,EAA6B;YAClC5yB,SAAS,GAAG,QAAZ;YACAjf,CAAC,IAAKk5C,MAAM,GAAG,CAAf;UACD,CAHM,MAGA;YACLj6B,SAAS,GAAG,MAAZ;YACAjf,CAAC,GAAG,KAAK/H,IAAT;UACD;QACF;MACF,CAxBD,MAwBO,IAAI6uB,QAAQ,KAAK,OAAjB,EAA0B;QAC/B,IAAIuqB,MAAJ,EAAY;UACVrxC,CAAC,GAAG,KAAK/H,IAAL,GAAYs2B,OAAhB;;UACA,IAAIsjB,UAAU,KAAK,MAAnB,EAA2B;YACzB5yB,SAAS,GAAG,OAAZ;UACD,CAFD,MAEO,IAAI4yB,UAAU,KAAK,QAAnB,EAA6B;YAClC5yB,SAAS,GAAG,QAAZ;YACAjf,CAAC,IAAKk5C,MAAM,GAAG,CAAf;UACD,CAHM,MAGA;YACLj6B,SAAS,GAAG,MAAZ;YACAjf,CAAC,IAAIk5C,MAAL;UACD;QACF,CAXD,MAWO;UACLl5C,CAAC,GAAG,KAAK/H,IAAL,GAAY6kD,cAAhB;;UACA,IAAIjL,UAAU,KAAK,MAAnB,EAA2B;YACzB5yB,SAAS,GAAG,MAAZ;UACD,CAFD,MAEO,IAAI4yB,UAAU,KAAK,QAAnB,EAA6B;YAClC5yB,SAAS,GAAG,QAAZ;YACAjf,CAAC,IAAIk5C,MAAM,GAAG,CAAd;UACD,CAHM,MAGA;YACLj6B,SAAS,GAAG,OAAZ;YACAjf,CAAC,GAAG,KAAK9H,KAAT;UACD;QACF;MACF,CAxBM,MAwBA;QACL+mB,SAAS,GAAG,OAAZ;MACD;;MACD,OAAO;QAACA,SAAD;QAAYjf;MAAZ,CAAP;IACD;;IACDu9C,iBAAiB,GAAG;MAClB,IAAI,KAAKjtC,OAAL,CAAa0/B,KAAb,CAAmBqB,MAAvB,EAA+B;QAC7B;MACD;;MACD,MAAMv4C,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAMguB,QAAQ,GAAG,KAAKxW,OAAL,CAAawW,QAA9B;;MACA,IAAIA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAAxC,EAAiD;QAC/C,OAAO;UAAC3J,GAAG,EAAE,CAAN;UAASllB,IAAI,EAAE,KAAKA,IAApB;UAA0BmlB,MAAM,EAAEtkB,KAAK,CAAC0iB,MAAxC;UAAgDtjB,KAAK,EAAE,KAAKA;QAA5D,CAAP;MACD;;MAAC,IAAI4uB,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAAvC,EAAiD;QACjD,OAAO;UAAC3J,GAAG,EAAE,KAAKA,GAAX;UAAgBllB,IAAI,EAAE,CAAtB;UAAyBmlB,MAAM,EAAE,KAAKA,MAAtC;UAA8CllB,KAAK,EAAEY,KAAK,CAACqhB;QAA3D,CAAP;MACD;IACF;;IACDqjC,cAAc,GAAG;MACf,MAAM;QAAC7pC,GAAD;QAAMrD,OAAO,EAAE;UAACsC;QAAD,CAAf;QAAkC3a,IAAlC;QAAwCklB,GAAxC;QAA6ChD,KAA7C;QAAoDqB;MAApD,IAA8D,IAApE;;MACA,IAAI5I,eAAJ,EAAqB;QACnBe,GAAG,CAAC6G,IAAJ;QACA7G,GAAG,CAACqL,SAAJ,GAAgBpM,eAAhB;QACAe,GAAG,CAAC8pC,QAAJ,CAAaxlD,IAAb,EAAmBklB,GAAnB,EAAwBhD,KAAxB,EAA+BqB,MAA/B;QACA7H,GAAG,CAACiH,OAAJ;MACD;IACF;;IACD8iC,oBAAoB,CAAC7vC,KAAD,EAAQ;MAC1B,MAAM8iC,IAAI,GAAG,KAAKrgC,OAAL,CAAaqgC,IAA1B;;MACA,IAAI,CAAC,KAAKmI,UAAL,EAAD,IAAsB,CAACnI,IAAI,CAACthB,OAAhC,EAAyC;QACvC,OAAO,CAAP;MACD;;MACD,MAAM2gB,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAMngC,KAAK,GAAGmgC,KAAK,CAAC2N,SAAN,CAAgBjqB,CAAC,IAAIA,CAAC,CAAC7lB,KAAF,KAAYA,KAAjC,CAAd;;MACA,IAAIgC,KAAK,IAAI,CAAb,EAAgB;QACd,MAAMsO,IAAI,GAAGwyB,IAAI,CAACrf,UAAL,CAAgB,KAAKjW,UAAL,CAAgBxL,KAAhB,CAAhB,CAAb;QACA,OAAOsO,IAAI,CAACO,SAAZ;MACD;;MACD,OAAO,CAAP;IACD;;IACDk/B,QAAQ,CAACt2B,SAAD,EAAY;MAClB,MAAMqpB,IAAI,GAAG,KAAKrgC,OAAL,CAAaqgC,IAA1B;MACA,MAAMh9B,GAAG,GAAG,KAAKA,GAAjB;;MACA,MAAM1Z,KAAK,GAAG,KAAK07C,cAAL,KAAwB,KAAKA,cAAL,GAAsB,KAAK2F,qBAAL,CAA2Bh0B,SAA3B,CAA9C,CAAd;;MACA,IAAIntB,CAAJ,EAAOsV,IAAP;;MACA,MAAMouC,QAAQ,GAAG,CAACn+C,EAAD,EAAKC,EAAL,EAAS4T,KAAT,KAAmB;QAClC,IAAI,CAACA,KAAK,CAAC4G,KAAP,IAAgB,CAAC5G,KAAK,CAAC/G,KAA3B,EAAkC;UAChC;QACD;;QACDmH,GAAG,CAAC6G,IAAJ;QACA7G,GAAG,CAAC+K,SAAJ,GAAgBnL,KAAK,CAAC4G,KAAtB;QACAxG,GAAG,CAAC8K,WAAJ,GAAkBlL,KAAK,CAAC/G,KAAxB;QACAmH,GAAG,CAACmqC,WAAJ,CAAgBvqC,KAAK,CAAC2pB,UAAN,IAAoB,EAApC;QACAvpB,GAAG,CAACoqC,cAAJ,GAAqBxqC,KAAK,CAAC4pB,gBAA3B;QACAxpB,GAAG,CAACwI,SAAJ;QACAxI,GAAG,CAAC2I,MAAJ,CAAW5c,EAAE,CAACM,CAAd,EAAiBN,EAAE,CAAC6X,CAApB;QACA5D,GAAG,CAAC8I,MAAJ,CAAW9c,EAAE,CAACK,CAAd,EAAiBL,EAAE,CAAC4X,CAApB;QACA5D,GAAG,CAACmJ,MAAJ;QACAnJ,GAAG,CAACiH,OAAJ;MACD,CAdD;;MAeA,IAAI+1B,IAAI,CAACthB,OAAT,EAAkB;QAChB,KAAKl1B,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGxV,KAAK,CAACC,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2C,EAAEtV,CAA7C,EAAgD;UAC9C,MAAME,IAAI,GAAGJ,KAAK,CAACE,CAAD,CAAlB;;UACA,IAAIw2C,IAAI,CAACE,eAAT,EAA0B;YACxBgN,QAAQ,CACN;cAAC79C,CAAC,EAAE3F,IAAI,CAAC8hD,EAAT;cAAa5kC,CAAC,EAAEld,IAAI,CAAC+hD;YAArB,CADM,EAEN;cAACp8C,CAAC,EAAE3F,IAAI,CAACgiD,EAAT;cAAa9kC,CAAC,EAAEld,IAAI,CAACiiD;YAArB,CAFM,EAGNjiD,IAHM,CAAR;UAKD;;UACD,IAAIs2C,IAAI,CAACG,SAAT,EAAoB;YAClB+M,QAAQ,CACN;cAAC79C,CAAC,EAAE3F,IAAI,CAAC0hD,GAAT;cAAcxkC,CAAC,EAAEld,IAAI,CAAC2hD;YAAtB,CADM,EAEN;cAACh8C,CAAC,EAAE3F,IAAI,CAAC4hD,GAAT;cAAc1kC,CAAC,EAAEld,IAAI,CAAC6hD;YAAtB,CAFM,EAGN;cACE1vC,KAAK,EAAEnS,IAAI,CAAC42C,SADd;cAEE92B,KAAK,EAAE9f,IAAI,CAAC22C,SAFd;cAGE9T,UAAU,EAAE7iC,IAAI,CAACsiD,cAHnB;cAIExf,gBAAgB,EAAE9iC,IAAI,CAACuiD;YAJzB,CAHM,CAAR;UAUD;QACF;MACF;IACF;;IACDhM,UAAU,GAAG;MACX,MAAM;QAAC93C,KAAD;QAAQ6a,GAAR;QAAarD,OAAO,EAAE;UAACqgC;QAAD;MAAtB,IAAgC,IAAtC;MACA,MAAM8K,UAAU,GAAG9K,IAAI,CAACrf,UAAL,CAAgB,KAAKjW,UAAL,EAAhB,CAAnB;MACA,MAAMqgC,SAAS,GAAG/K,IAAI,CAACC,UAAL,GAAkB6K,UAAU,CAAC5+B,WAA7B,GAA2C,CAA7D;;MACA,IAAI,CAAC6+B,SAAL,EAAgB;QACd;MACD;;MACD,MAAMsC,aAAa,GAAGrN,IAAI,CAACrf,UAAL,CAAgB,KAAKjW,UAAL,CAAgB,CAAhB,CAAhB,EAAoCqD,SAA1D;MACA,MAAMm9B,WAAW,GAAG,KAAKzF,YAAzB;MACA,IAAI+F,EAAJ,EAAQE,EAAR,EAAYD,EAAZ,EAAgBE,EAAhB;;MACA,IAAI,KAAKlxB,YAAL,EAAJ,EAAyB;QACvB+wB,EAAE,GAAGphC,WAAW,CAACjiB,KAAD,EAAQ,KAAKb,IAAb,EAAmByjD,SAAnB,CAAX,GAA2CA,SAAS,GAAG,CAA5D;QACAW,EAAE,GAAGthC,WAAW,CAACjiB,KAAD,EAAQ,KAAKZ,KAAb,EAAoB8lD,aAApB,CAAX,GAAgDA,aAAa,GAAG,CAArE;QACA5B,EAAE,GAAGE,EAAE,GAAGT,WAAV;MACD,CAJD,MAIO;QACLO,EAAE,GAAGrhC,WAAW,CAACjiB,KAAD,EAAQ,KAAKqkB,GAAb,EAAkBu+B,SAAlB,CAAX,GAA0CA,SAAS,GAAG,CAA3D;QACAY,EAAE,GAAGvhC,WAAW,CAACjiB,KAAD,EAAQ,KAAKskB,MAAb,EAAqB4gC,aAArB,CAAX,GAAiDA,aAAa,GAAG,CAAtE;QACA7B,EAAE,GAAGE,EAAE,GAAGR,WAAV;MACD;;MACDloC,GAAG,CAAC6G,IAAJ;MACA7G,GAAG,CAAC+K,SAAJ,GAAgB+8B,UAAU,CAAC5+B,WAA3B;MACAlJ,GAAG,CAAC8K,WAAJ,GAAkBg9B,UAAU,CAAC5oC,WAA7B;MACAc,GAAG,CAACwI,SAAJ;MACAxI,GAAG,CAAC2I,MAAJ,CAAW6/B,EAAX,EAAeC,EAAf;MACAzoC,GAAG,CAAC8I,MAAJ,CAAW4/B,EAAX,EAAeC,EAAf;MACA3oC,GAAG,CAACmJ,MAAJ;MACAnJ,GAAG,CAACiH,OAAJ;IACD;;IACDqjC,UAAU,CAAC32B,SAAD,EAAY;MACpB,MAAM8zB,WAAW,GAAG,KAAK9qC,OAAL,CAAa0/B,KAAjC;;MACA,IAAI,CAACoL,WAAW,CAAC/rB,OAAjB,EAA0B;QACxB;MACD;;MACD,MAAM1b,GAAG,GAAG,KAAKA,GAAjB;;MACA,MAAMsJ,IAAI,GAAG,KAAKsgC,iBAAL,EAAb;;MACA,IAAItgC,IAAJ,EAAU;QACRI,QAAQ,CAAC1J,GAAD,EAAMsJ,IAAN,CAAR;MACD;;MACD,MAAMhjB,KAAK,GAAG,KAAK27C,WAAL,KAAqB,KAAKA,WAAL,GAAmB,KAAKiH,kBAAL,CAAwBv1B,SAAxB,CAAxC,CAAd;;MACA,IAAIntB,CAAJ,EAAOsV,IAAP;;MACA,KAAKtV,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGxV,KAAK,CAACC,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2C,EAAEtV,CAA7C,EAAgD;QAC9C,MAAME,IAAI,GAAGJ,KAAK,CAACE,CAAD,CAAlB;QACA,MAAMugD,QAAQ,GAAGrgD,IAAI,CAACgZ,IAAtB;QACA,MAAMw5B,KAAK,GAAGxyC,IAAI,CAACwyC,KAAnB;;QACA,IAAIxyC,IAAI,CAACgjD,QAAT,EAAmB;UACjB1pC,GAAG,CAACqL,SAAJ,GAAgB3kB,IAAI,CAACgjD,QAAL,CAAc7wC,KAA9B;UACAmH,GAAG,CAAC8pC,QAAJ,CAAapjD,IAAI,CAACgjD,QAAL,CAAcplD,IAA3B,EAAiCoC,IAAI,CAACgjD,QAAL,CAAclgC,GAA/C,EAAoD9iB,IAAI,CAACgjD,QAAL,CAAcljC,KAAlE,EAAyE9f,IAAI,CAACgjD,QAAL,CAAc7hC,MAAvF;QACD;;QACD,IAAIjE,CAAC,GAAGld,IAAI,CAAC4iD,UAAb;QACAh/B,UAAU,CAACtK,GAAD,EAAMk5B,KAAN,EAAa,CAAb,EAAgBt1B,CAAhB,EAAmBmjC,QAAnB,EAA6BrgD,IAA7B,CAAV;MACD;;MACD,IAAI4iB,IAAJ,EAAU;QACRM,UAAU,CAAC5J,GAAD,CAAV;MACD;IACF;;IACDuqC,SAAS,GAAG;MACV,MAAM;QAACvqC,GAAD;QAAMrD,OAAO,EAAE;UAACwW,QAAD;UAAWoqB,KAAX;UAAkB7hC;QAAlB;MAAf,IAA6C,IAAnD;;MACA,IAAI,CAAC6hC,KAAK,CAAC7hB,OAAX,EAAoB;QAClB;MACD;;MACD,MAAMhc,IAAI,GAAGsW,MAAM,CAACunB,KAAK,CAAC79B,IAAP,CAAnB;MACA,MAAMkb,OAAO,GAAG7E,SAAS,CAACwnB,KAAK,CAAC3iB,OAAP,CAAzB;MACA,MAAM32B,KAAK,GAAGs5C,KAAK,CAACt5C,KAApB;MACA,IAAI84C,MAAM,GAAGr9B,IAAI,CAACG,UAAL,GAAkB,CAA/B;;MACA,IAAIsT,QAAQ,KAAK,QAAb,IAAyBA,QAAQ,KAAK,QAAtC,IAAkDvY,QAAQ,CAACuY,QAAD,CAA9D,EAA0E;QACxE4pB,MAAM,IAAIniB,OAAO,CAACnR,MAAlB;;QACA,IAAIje,OAAO,CAAC+xC,KAAK,CAAChzB,IAAP,CAAX,EAAyB;UACvBwyB,MAAM,IAAIr9B,IAAI,CAACG,UAAL,IAAmB09B,KAAK,CAAChzB,IAAN,CAAWhkB,MAAX,GAAoB,CAAvC,CAAV;QACD;MACF,CALD,MAKO;QACLw2C,MAAM,IAAIniB,OAAO,CAACpR,GAAlB;MACD;;MACD,MAAM;QAAC43B,MAAD;QAASC,MAAT;QAAiBp2B,QAAjB;QAA2B9C;MAA3B,IAAuCg5B,SAAS,CAAC,IAAD,EAAOpE,MAAP,EAAe5pB,QAAf,EAAyBlvB,KAAzB,CAAtD;MACAqmB,UAAU,CAACtK,GAAD,EAAMu9B,KAAK,CAAChzB,IAAZ,EAAkB,CAAlB,EAAqB,CAArB,EAAwB7K,IAAxB,EAA8B;QACtC7G,KAAK,EAAE0kC,KAAK,CAAC1kC,KADyB;QAEtCoS,QAFsC;QAGtC9C,QAHsC;QAItCmD,SAAS,EAAE41B,UAAU,CAACj9C,KAAD,EAAQkvB,QAAR,EAAkBzX,OAAlB,CAJiB;QAKtC6P,YAAY,EAAE,QALwB;QAMtCH,WAAW,EAAE,CAACg2B,MAAD,EAASC,MAAT;MANyB,CAA9B,CAAV;IAQD;;IACD56C,IAAI,CAACktB,SAAD,EAAY;MACd,IAAI,CAAC,KAAKwxB,UAAL,EAAL,EAAwB;QACtB;MACD;;MACD,KAAK0E,cAAL;MACA,KAAKI,QAAL,CAAct2B,SAAd;MACA,KAAKspB,UAAL;MACA,KAAKsN,SAAL;MACA,KAAKD,UAAL,CAAgB32B,SAAhB;IACD;;IACDoH,OAAO,GAAG;MACR,MAAMvQ,IAAI,GAAG,KAAK7N,OAAlB;MACA,MAAM6tC,EAAE,GAAGhgC,IAAI,CAAC6xB,KAAL,IAAc7xB,IAAI,CAAC6xB,KAAL,CAAWrhB,CAAzB,IAA8B,CAAzC;MACA,MAAMyvB,EAAE,GAAGvvC,cAAc,CAACsP,IAAI,CAACwyB,IAAL,IAAaxyB,IAAI,CAACwyB,IAAL,CAAUhiB,CAAxB,EAA2B,CAAC,CAA5B,CAAzB;;MACA,IAAI,CAAC,KAAKmqB,UAAL,EAAD,IAAsB,KAAK1+C,IAAL,KAAc+6C,KAAK,CAACn+C,SAAN,CAAgBoD,IAAxD,EAA8D;QAC5D,OAAO,CAAC;UACNu0B,CAAC,EAAEwvB,EADG;UAEN/jD,IAAI,EAAGktB,SAAD,IAAe;YACnB,KAAKltB,IAAL,CAAUktB,SAAV;UACD;QAJK,CAAD,CAAP;MAMD;;MACD,OAAO,CAAC;QACNqH,CAAC,EAAEyvB,EADG;QAENhkD,IAAI,EAAGktB,SAAD,IAAe;UACnB,KAAKk2B,cAAL;UACA,KAAKI,QAAL,CAAct2B,SAAd;UACA,KAAK42B,SAAL;QACD;MANK,CAAD,EAOJ;QACDvvB,CAAC,EAAEyvB,EAAE,GAAG,CADP;QAEDhkD,IAAI,EAAE,MAAM;UACV,KAAKw2C,UAAL;QACD;MAJA,CAPI,EAYJ;QACDjiB,CAAC,EAAEwvB,EADF;QAED/jD,IAAI,EAAGktB,SAAD,IAAe;UACnB,KAAK22B,UAAL,CAAgB32B,SAAhB;QACD;MAJA,CAZI,CAAP;IAkBD;;IACDuf,uBAAuB,CAAC5tC,IAAD,EAAO;MAC5B,MAAMy9C,KAAK,GAAG,KAAK59C,KAAL,CAAWktB,4BAAX,EAAd;MACA,MAAMq4B,MAAM,GAAG,KAAKj4B,IAAL,GAAY,QAA3B;MACA,MAAMlP,MAAM,GAAG,EAAf;MACA,IAAI/c,CAAJ,EAAOsV,IAAP;;MACA,KAAKtV,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGinC,KAAK,CAACx8C,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2C,EAAEtV,CAA7C,EAAgD;QAC9C,MAAMuuB,IAAI,GAAGguB,KAAK,CAACv8C,CAAD,CAAlB;;QACA,IAAIuuB,IAAI,CAAC21B,MAAD,CAAJ,KAAiB,KAAKlwC,EAAtB,KAA6B,CAAClV,IAAD,IAASyvB,IAAI,CAACzvB,IAAL,KAAcA,IAApD,CAAJ,EAA+D;UAC7Die,MAAM,CAAC/b,IAAP,CAAYutB,IAAZ;QACD;MACF;;MACD,OAAOxR,MAAP;IACD;;IACD0jC,uBAAuB,CAAC/qC,KAAD,EAAQ;MAC7B,MAAMsO,IAAI,GAAG,KAAK7N,OAAL,CAAa0/B,KAAb,CAAmB1e,UAAnB,CAA8B,KAAKjW,UAAL,CAAgBxL,KAAhB,CAA9B,CAAb;MACA,OAAO8Z,MAAM,CAACxL,IAAI,CAAC9K,IAAN,CAAb;IACD;;IACDirC,UAAU,GAAG;MACX,MAAMC,QAAQ,GAAG,KAAK3D,uBAAL,CAA6B,CAA7B,EAAgCpnC,UAAjD;;MACA,OAAO,CAAC,KAAK4X,YAAL,KAAsB,KAAKjR,KAA3B,GAAmC,KAAKqB,MAAzC,IAAmD+iC,QAA1D;IACD;;EA3iCyB;;EA8iC5B,MAAMC,aAAN,CAAoB;IAClBlmD,WAAW,CAACW,IAAD,EAAO+X,KAAP,EAAc6D,QAAd,EAAwB;MACjC,KAAK5b,IAAL,GAAYA,IAAZ;MACA,KAAK+X,KAAL,GAAaA,KAAb;MACA,KAAK6D,QAAL,GAAgBA,QAAhB;MACA,KAAK5a,KAAL,GAAa4Q,MAAM,CAACmF,MAAP,CAAc,IAAd,CAAb;IACD;;IACDyuC,SAAS,CAACxlD,IAAD,EAAO;MACd,OAAO4R,MAAM,CAAC7T,SAAP,CAAiB0nD,aAAjB,CAA+BxnD,IAA/B,CAAoC,KAAK+B,IAAL,CAAUjC,SAA9C,EAAyDiC,IAAI,CAACjC,SAA9D,CAAP;IACD;;IACD2nD,QAAQ,CAACtkD,IAAD,EAAO;MACb,MAAMuR,KAAK,GAAGf,MAAM,CAAC6lB,cAAP,CAAsBr2B,IAAtB,CAAd;MACA,IAAIukD,WAAJ;;MACA,IAAIC,iBAAiB,CAACjzC,KAAD,CAArB,EAA8B;QAC5BgzC,WAAW,GAAG,KAAKD,QAAL,CAAc/yC,KAAd,CAAd;MACD;;MACD,MAAM3R,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAMkU,EAAE,GAAG9T,IAAI,CAAC8T,EAAhB;MACA,MAAM6C,KAAK,GAAG,KAAKA,KAAL,GAAa,GAAb,GAAmB7C,EAAjC;;MACA,IAAI,CAACA,EAAL,EAAS;QACP,MAAM,IAAIikB,KAAJ,CAAU,6BAA6B/3B,IAAvC,CAAN;MACD;;MACD,IAAI8T,EAAE,IAAIlU,KAAV,EAAiB;QACf,OAAO+W,KAAP;MACD;;MACD/W,KAAK,CAACkU,EAAD,CAAL,GAAY9T,IAAZ;MACAykD,gBAAgB,CAACzkD,IAAD,EAAO2W,KAAP,EAAc4tC,WAAd,CAAhB;;MACA,IAAI,KAAK/pC,QAAT,EAAmB;QACjBY,QAAQ,CAACZ,QAAT,CAAkBxa,IAAI,CAAC8T,EAAvB,EAA2B9T,IAAI,CAAC6X,SAAhC;MACD;;MACD,OAAOlB,KAAP;IACD;;IACDpW,GAAG,CAACuT,EAAD,EAAK;MACN,OAAO,KAAKlU,KAAL,CAAWkU,EAAX,CAAP;IACD;;IACD4wC,UAAU,CAAC1kD,IAAD,EAAO;MACf,MAAMJ,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAMkU,EAAE,GAAG9T,IAAI,CAAC8T,EAAhB;MACA,MAAM6C,KAAK,GAAG,KAAKA,KAAnB;;MACA,IAAI7C,EAAE,IAAIlU,KAAV,EAAiB;QACf,OAAOA,KAAK,CAACkU,EAAD,CAAZ;MACD;;MACD,IAAI6C,KAAK,IAAI7C,EAAE,IAAIsH,QAAQ,CAACzE,KAAD,CAA3B,EAAoC;QAClC,OAAOyE,QAAQ,CAACzE,KAAD,CAAR,CAAgB7C,EAAhB,CAAP;;QACA,IAAI,KAAK0G,QAAT,EAAmB;UACjB,OAAO3C,SAAS,CAAC/D,EAAD,CAAhB;QACD;MACF;IACF;;EAhDiB;;EAkDpB,SAAS2wC,gBAAT,CAA0BzkD,IAA1B,EAAgC2W,KAAhC,EAAuC4tC,WAAvC,EAAoD;IAClD,MAAMI,YAAY,GAAGvuC,KAAK,CAAC5F,MAAM,CAACmF,MAAP,CAAc,IAAd,CAAD,EAAsB,CAC9C4uC,WAAW,GAAGnpC,QAAQ,CAAC7a,GAAT,CAAagkD,WAAb,CAAH,GAA+B,EADI,EAE9CnpC,QAAQ,CAAC7a,GAAT,CAAaoW,KAAb,CAF8C,EAG9C3W,IAAI,CAACob,QAHyC,CAAtB,CAA1B;IAKAA,QAAQ,CAAC1a,GAAT,CAAaiW,KAAb,EAAoBguC,YAApB;;IACA,IAAI3kD,IAAI,CAACu1C,aAAT,EAAwB;MACtBqP,aAAa,CAACjuC,KAAD,EAAQ3W,IAAI,CAACu1C,aAAb,CAAb;IACD;;IACD,IAAIv1C,IAAI,CAAC8X,WAAT,EAAsB;MACpBsD,QAAQ,CAACb,QAAT,CAAkB5D,KAAlB,EAAyB3W,IAAI,CAAC8X,WAA9B;IACD;EACF;;EACD,SAAS8sC,aAAT,CAAuBjuC,KAAvB,EAA8BkuC,MAA9B,EAAsC;IACpCr0C,MAAM,CAACD,IAAP,CAAYs0C,MAAZ,EAAoB5lD,OAApB,CAA4Bwe,QAAQ,IAAI;MACtC,MAAMqnC,aAAa,GAAGrnC,QAAQ,CAACxF,KAAT,CAAe,GAAf,CAAtB;MACA,MAAM8sC,UAAU,GAAGD,aAAa,CAAC1kD,GAAd,EAAnB;MACA,MAAM4kD,WAAW,GAAG,CAACruC,KAAD,EAAQ0b,MAAR,CAAeyyB,aAAf,EAA8B9sB,IAA9B,CAAmC,GAAnC,CAApB;MACA,MAAMitB,KAAK,GAAGJ,MAAM,CAACpnC,QAAD,CAAN,CAAiBxF,KAAjB,CAAuB,GAAvB,CAAd;MACA,MAAM2C,UAAU,GAAGqqC,KAAK,CAAC7kD,GAAN,EAAnB;MACA,MAAMua,WAAW,GAAGsqC,KAAK,CAACjtB,IAAN,CAAW,GAAX,CAApB;MACA5c,QAAQ,CAACX,KAAT,CAAeuqC,WAAf,EAA4BD,UAA5B,EAAwCpqC,WAAxC,EAAqDC,UAArD;IACD,CARD;EASD;;EACD,SAAS4pC,iBAAT,CAA2BjzC,KAA3B,EAAkC;IAChC,OAAO,QAAQA,KAAR,IAAiB,cAAcA,KAAtC;EACD;;EAED,MAAM2zC,QAAN,CAAe;IACbjnD,WAAW,GAAG;MACZ,KAAKknD,WAAL,GAAmB,IAAIhB,aAAJ,CAAkBlW,iBAAlB,EAAqC,UAArC,EAAiD,IAAjD,CAAnB;MACA,KAAKn1B,QAAL,GAAgB,IAAIqrC,aAAJ,CAAkBhP,OAAlB,EAA2B,UAA3B,CAAhB;MACA,KAAKl7B,OAAL,GAAe,IAAIkqC,aAAJ,CAAkB3zC,MAAlB,EAA0B,SAA1B,CAAf;MACA,KAAK4J,MAAL,GAAc,IAAI+pC,aAAJ,CAAkBrJ,KAAlB,EAAyB,QAAzB,CAAd;MACA,KAAKsK,gBAAL,GAAwB,CAAC,KAAKD,WAAN,EAAmB,KAAK/qC,MAAxB,EAAgC,KAAKtB,QAArC,CAAxB;IACD;;IACD/X,GAAG,GAAU;MAAA,mCAANtE,IAAM;QAANA,IAAM;MAAA;;MACX,KAAK4oD,KAAL,CAAW,UAAX,EAAuB5oD,IAAvB;IACD;;IACD+E,MAAM,GAAU;MAAA,mCAAN/E,IAAM;QAANA,IAAM;MAAA;;MACd,KAAK4oD,KAAL,CAAW,YAAX,EAAyB5oD,IAAzB;IACD;;IACD6oD,cAAc,GAAU;MAAA,mCAAN7oD,IAAM;QAANA,IAAM;MAAA;;MACtB,KAAK4oD,KAAL,CAAW,UAAX,EAAuB5oD,IAAvB,EAA6B,KAAK0oD,WAAlC;IACD;;IACDnW,WAAW,GAAU;MAAA,mCAANvyC,IAAM;QAANA,IAAM;MAAA;;MACnB,KAAK4oD,KAAL,CAAW,UAAX,EAAuB5oD,IAAvB,EAA6B,KAAKqc,QAAlC;IACD;;IACDysC,UAAU,GAAU;MAAA,mCAAN9oD,IAAM;QAANA,IAAM;MAAA;;MAClB,KAAK4oD,KAAL,CAAW,UAAX,EAAuB5oD,IAAvB,EAA6B,KAAKwd,OAAlC;IACD;;IACDurC,SAAS,GAAU;MAAA,mCAAN/oD,IAAM;QAANA,IAAM;MAAA;;MACjB,KAAK4oD,KAAL,CAAW,UAAX,EAAuB5oD,IAAvB,EAA6B,KAAK2d,MAAlC;IACD;;IACDqrC,aAAa,CAAC3xC,EAAD,EAAK;MAChB,OAAO,KAAK4xC,IAAL,CAAU5xC,EAAV,EAAc,KAAKqxC,WAAnB,EAAgC,YAAhC,CAAP;IACD;;IACDQ,UAAU,CAAC7xC,EAAD,EAAK;MACb,OAAO,KAAK4xC,IAAL,CAAU5xC,EAAV,EAAc,KAAKgF,QAAnB,EAA6B,SAA7B,CAAP;IACD;;IACD8sC,SAAS,CAAC9xC,EAAD,EAAK;MACZ,OAAO,KAAK4xC,IAAL,CAAU5xC,EAAV,EAAc,KAAKmG,OAAnB,EAA4B,QAA5B,CAAP;IACD;;IACD4rC,QAAQ,CAAC/xC,EAAD,EAAK;MACX,OAAO,KAAK4xC,IAAL,CAAU5xC,EAAV,EAAc,KAAKsG,MAAnB,EAA2B,OAA3B,CAAP;IACD;;IACD0rC,iBAAiB,GAAU;MAAA,oCAANrpD,IAAM;QAANA,IAAM;MAAA;;MACzB,KAAK4oD,KAAL,CAAW,YAAX,EAAyB5oD,IAAzB,EAA+B,KAAK0oD,WAApC;IACD;;IACDY,cAAc,GAAU;MAAA,oCAANtpD,IAAM;QAANA,IAAM;MAAA;;MACtB,KAAK4oD,KAAL,CAAW,YAAX,EAAyB5oD,IAAzB,EAA+B,KAAKqc,QAApC;IACD;;IACDktC,aAAa,GAAU;MAAA,oCAANvpD,IAAM;QAANA,IAAM;MAAA;;MACrB,KAAK4oD,KAAL,CAAW,YAAX,EAAyB5oD,IAAzB,EAA+B,KAAKwd,OAApC;IACD;;IACDgsC,YAAY,GAAU;MAAA,oCAANxpD,IAAM;QAANA,IAAM;MAAA;;MACpB,KAAK4oD,KAAL,CAAW,YAAX,EAAyB5oD,IAAzB,EAA+B,KAAK2d,MAApC;IACD;;IACDirC,KAAK,CAAC1+B,MAAD,EAASlqB,IAAT,EAAeypD,aAAf,EAA8B;MACjC,CAAC,GAAGzpD,IAAJ,EAAUwC,OAAV,CAAkBknD,GAAG,IAAI;QACvB,MAAMC,GAAG,GAAGF,aAAa,IAAI,KAAKG,mBAAL,CAAyBF,GAAzB,CAA7B;;QACA,IAAID,aAAa,IAAIE,GAAG,CAAChC,SAAJ,CAAc+B,GAAd,CAAjB,IAAwCC,GAAG,KAAK,KAAKnsC,OAAb,IAAwBksC,GAAG,CAACryC,EAAxE,EAA6E;UAC3E,KAAKwyC,KAAL,CAAW3/B,MAAX,EAAmBy/B,GAAnB,EAAwBD,GAAxB;QACD,CAFD,MAEO;UACLrxC,IAAI,CAACqxC,GAAD,EAAMnmD,IAAI,IAAI;YAChB,MAAMumD,OAAO,GAAGL,aAAa,IAAI,KAAKG,mBAAL,CAAyBrmD,IAAzB,CAAjC;;YACA,KAAKsmD,KAAL,CAAW3/B,MAAX,EAAmB4/B,OAAnB,EAA4BvmD,IAA5B;UACD,CAHG,CAAJ;QAID;MACF,CAVD;IAWD;;IACDsmD,KAAK,CAAC3/B,MAAD,EAAS6/B,QAAT,EAAmBC,SAAnB,EAA8B;MACjC,MAAMC,WAAW,GAAGpvC,WAAW,CAACqP,MAAD,CAA/B;;MACAzqB,QAAQ,CAACuqD,SAAS,CAAC,WAAWC,WAAZ,CAAV,EAAoC,EAApC,EAAwCD,SAAxC,CAAR;MACAD,QAAQ,CAAC7/B,MAAD,CAAR,CAAiB8/B,SAAjB;MACAvqD,QAAQ,CAACuqD,SAAS,CAAC,UAAUC,WAAX,CAAV,EAAmC,EAAnC,EAAuCD,SAAvC,CAAR;IACD;;IACDJ,mBAAmB,CAACznD,IAAD,EAAO;MACxB,KAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKslD,gBAAL,CAAsBvlD,MAA1C,EAAkDC,CAAC,EAAnD,EAAuD;QACrD,MAAMsmD,GAAG,GAAG,KAAKhB,gBAAL,CAAsBtlD,CAAtB,CAAZ;;QACA,IAAIsmD,GAAG,CAAChC,SAAJ,CAAcxlD,IAAd,CAAJ,EAAyB;UACvB,OAAOwnD,GAAP;QACD;MACF;;MACD,OAAO,KAAKnsC,OAAZ;IACD;;IACDyrC,IAAI,CAAC5xC,EAAD,EAAKoyC,aAAL,EAAoBtnD,IAApB,EAA0B;MAC5B,MAAMoB,IAAI,GAAGkmD,aAAa,CAAC3lD,GAAd,CAAkBuT,EAAlB,CAAb;;MACA,IAAI9T,IAAI,KAAKzB,SAAb,EAAwB;QACtB,MAAM,IAAIw5B,KAAJ,CAAU,MAAMjkB,EAAN,GAAW,wBAAX,GAAsClV,IAAtC,GAA6C,GAAvD,CAAN;MACD;;MACD,OAAOoB,IAAP;IACD;;EApFY;;EAsFf,IAAIwmD,QAAQ,GAAG,IAAItB,QAAJ,EAAf;;EAEA,MAAMyB,aAAN,CAAoB;IAClB1oD,WAAW,GAAG;MACZ,KAAK2oD,KAAL,GAAa,EAAb;IACD;;IACDC,MAAM,CAACpoD,KAAD,EAAQqoD,IAAR,EAAcrqD,IAAd,EAAoB6zB,MAApB,EAA4B;MAChC,IAAIw2B,IAAI,KAAK,YAAb,EAA2B;QACzB,KAAKF,KAAL,GAAa,KAAKG,kBAAL,CAAwBtoD,KAAxB,EAA+B,IAA/B,CAAb;;QACA,KAAKD,OAAL,CAAa,KAAKooD,KAAlB,EAAyBnoD,KAAzB,EAAgC,SAAhC;MACD;;MACD,MAAMqZ,WAAW,GAAGwY,MAAM,GAAG,KAAKjY,YAAL,CAAkB5Z,KAAlB,EAAyB6xB,MAAzB,CAAgCA,MAAhC,CAAH,GAA6C,KAAKjY,YAAL,CAAkB5Z,KAAlB,CAAvE;;MACA,MAAMoe,MAAM,GAAG,KAAKre,OAAL,CAAasZ,WAAb,EAA0BrZ,KAA1B,EAAiCqoD,IAAjC,EAAuCrqD,IAAvC,CAAf;;MACA,IAAIqqD,IAAI,KAAK,cAAb,EAA6B;QAC3B,KAAKtoD,OAAL,CAAasZ,WAAb,EAA0BrZ,KAA1B,EAAiC,MAAjC;;QACA,KAAKD,OAAL,CAAa,KAAKooD,KAAlB,EAAyBnoD,KAAzB,EAAgC,WAAhC;MACD;;MACD,OAAOoe,MAAP;IACD;;IACDre,OAAO,CAACsZ,WAAD,EAAcrZ,KAAd,EAAqBqoD,IAArB,EAA2BrqD,IAA3B,EAAiC;MACtCA,IAAI,GAAGA,IAAI,IAAI,EAAf;;MACA,KAAK,MAAMuqD,UAAX,IAAyBlvC,WAAzB,EAAsC;QACpC,MAAMmvC,MAAM,GAAGD,UAAU,CAACC,MAA1B;QACA,MAAMtgC,MAAM,GAAGsgC,MAAM,CAACH,IAAD,CAArB;QACA,MAAMr1B,MAAM,GAAG,CAAChzB,KAAD,EAAQhC,IAAR,EAAcuqD,UAAU,CAAC/wC,OAAzB,CAAf;;QACA,IAAI/Z,QAAQ,CAACyqB,MAAD,EAAS8K,MAAT,EAAiBw1B,MAAjB,CAAR,KAAqC,KAArC,IAA8CxqD,IAAI,CAACyqD,UAAvD,EAAmE;UACjE,OAAO,KAAP;QACD;MACF;;MACD,OAAO,IAAP;IACD;;IACDC,UAAU,GAAG;MACX,IAAI,CAACpzC,aAAa,CAAC,KAAKioC,MAAN,CAAlB,EAAiC;QAC/B,KAAKoL,SAAL,GAAiB,KAAKpL,MAAtB;QACA,KAAKA,MAAL,GAAcz9C,SAAd;MACD;IACF;;IACD8Z,YAAY,CAAC5Z,KAAD,EAAQ;MAClB,IAAI,KAAKu9C,MAAT,EAAiB;QACf,OAAO,KAAKA,MAAZ;MACD;;MACD,MAAMlkC,WAAW,GAAG,KAAKkkC,MAAL,GAAc,KAAK+K,kBAAL,CAAwBtoD,KAAxB,CAAlC;;MACA,KAAK4oD,mBAAL,CAAyB5oD,KAAzB;;MACA,OAAOqZ,WAAP;IACD;;IACDivC,kBAAkB,CAACtoD,KAAD,EAAQ8rC,GAAR,EAAa;MAC7B,MAAM/G,MAAM,GAAG/kC,KAAK,IAAIA,KAAK,CAAC+kC,MAA9B;MACA,MAAMvtB,OAAO,GAAGzB,cAAc,CAACgvB,MAAM,CAACvtB,OAAP,IAAkButB,MAAM,CAACvtB,OAAP,CAAegE,OAAlC,EAA2C,EAA3C,CAA9B;MACA,MAAMA,OAAO,GAAGqtC,UAAU,CAAC9jB,MAAD,CAA1B;MACA,OAAOvtB,OAAO,KAAK,KAAZ,IAAqB,CAACs0B,GAAtB,GAA4B,EAA5B,GAAiCgd,iBAAiB,CAAC9oD,KAAD,EAAQwb,OAAR,EAAiBhE,OAAjB,EAA0Bs0B,GAA1B,CAAzD;IACD;;IACD8c,mBAAmB,CAAC5oD,KAAD,EAAQ;MACzB,MAAM+oD,mBAAmB,GAAG,KAAKJ,SAAL,IAAkB,EAA9C;MACA,MAAMtvC,WAAW,GAAG,KAAKkkC,MAAzB;;MACA,MAAM3C,IAAI,GAAG,CAACn3C,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACouB,MAAF,CAAS3qB,CAAC,IAAI,CAACxD,CAAC,CAACslD,IAAF,CAAOvqC,CAAC,IAAIvX,CAAC,CAACshD,MAAF,CAASnzC,EAAT,KAAgBoJ,CAAC,CAAC+pC,MAAF,CAASnzC,EAArC,CAAf,CAAvB;;MACA,KAAKtV,OAAL,CAAa66C,IAAI,CAACmO,mBAAD,EAAsB1vC,WAAtB,CAAjB,EAAqDrZ,KAArD,EAA4D,MAA5D;;MACA,KAAKD,OAAL,CAAa66C,IAAI,CAACvhC,WAAD,EAAc0vC,mBAAd,CAAjB,EAAqD/oD,KAArD,EAA4D,OAA5D;IACD;;EAvDiB;;EAyDpB,SAAS6oD,UAAT,CAAoB9jB,MAApB,EAA4B;IAC1B,MAAMvpB,OAAO,GAAG,EAAhB;IACA,MAAM1J,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYi2C,QAAQ,CAACvsC,OAAT,CAAiBra,KAA7B,CAAb;;IACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyQ,IAAI,CAAC1Q,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;MACpCma,OAAO,CAACnZ,IAAR,CAAa0lD,QAAQ,CAACZ,SAAT,CAAmBr1C,IAAI,CAACzQ,CAAD,CAAvB,CAAb;IACD;;IACD,MAAMqb,KAAK,GAAGqoB,MAAM,CAACvpB,OAAP,IAAkB,EAAhC;;IACA,KAAK,IAAIna,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqb,KAAK,CAACtb,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;MACrC,MAAMmnD,MAAM,GAAG9rC,KAAK,CAACrb,CAAD,CAApB;;MACA,IAAIma,OAAO,CAAClE,OAAR,CAAgBkxC,MAAhB,MAA4B,CAAC,CAAjC,EAAoC;QAClChtC,OAAO,CAACnZ,IAAR,CAAammD,MAAb;MACD;IACF;;IACD,OAAOhtC,OAAP;EACD;;EACD,SAASytC,OAAT,CAAiBzxC,OAAjB,EAA0Bs0B,GAA1B,EAA+B;IAC7B,IAAI,CAACA,GAAD,IAAQt0B,OAAO,KAAK,KAAxB,EAA+B;MAC7B,OAAO,IAAP;IACD;;IACD,IAAIA,OAAO,KAAK,IAAhB,EAAsB;MACpB,OAAO,EAAP;IACD;;IACD,OAAOA,OAAP;EACD;;EACD,SAASsxC,iBAAT,CAA2B9oD,KAA3B,EAAkCwb,OAAlC,EAA2ChE,OAA3C,EAAoDs0B,GAApD,EAAyD;IACvD,MAAM1tB,MAAM,GAAG,EAAf;IACA,MAAMlE,OAAO,GAAGla,KAAK,CAACuiB,UAAN,EAAhB;;IACA,KAAK,IAAIlhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGma,OAAO,CAACpa,MAA5B,EAAoCC,CAAC,EAArC,EAAyC;MACvC,MAAMmnD,MAAM,GAAGhtC,OAAO,CAACna,CAAD,CAAtB;MACA,MAAMgU,EAAE,GAAGmzC,MAAM,CAACnzC,EAAlB;MACA,MAAMgQ,IAAI,GAAG4jC,OAAO,CAACzxC,OAAO,CAACnC,EAAD,CAAR,EAAcy2B,GAAd,CAApB;;MACA,IAAIzmB,IAAI,KAAK,IAAb,EAAmB;QACjB;MACD;;MACDjH,MAAM,CAAC/b,IAAP,CAAY;QACVmmD,MADU;QAEVhxC,OAAO,EAAE0xC,UAAU,CAAClpD,KAAK,CAAC+kC,MAAP,EAAeyjB,MAAf,EAAuBnjC,IAAvB,EAA6BnL,OAA7B;MAFT,CAAZ;IAID;;IACD,OAAOkE,MAAP;EACD;;EACD,SAAS8qC,UAAT,CAAoBnkB,MAApB,EAA4ByjB,MAA5B,EAAoCnjC,IAApC,EAA0CnL,OAA1C,EAAmD;IACjD,MAAMpI,IAAI,GAAGizB,MAAM,CAACokB,eAAP,CAAuBX,MAAvB,CAAb;IACA,MAAM9xB,MAAM,GAAGqO,MAAM,CAACsN,eAAP,CAAuBhtB,IAAvB,EAA6BvT,IAA7B,CAAf;IACA,OAAOizB,MAAM,CAACuN,cAAP,CAAsB5b,MAAtB,EAA8Bxc,OAA9B,EAAuC,CAAC,EAAD,CAAvC,EAA6C;MAAC0e,UAAU,EAAE,KAAb;MAAoBC,SAAS,EAAE,KAA/B;MAAsCF,OAAO,EAAE;IAA/C,CAA7C,CAAP;EACD;;EAED,SAASywB,YAAT,CAAsBjpD,IAAtB,EAA4BqX,OAA5B,EAAqC;IACnC,MAAM6xC,eAAe,GAAG1sC,QAAQ,CAAC3C,QAAT,CAAkB7Z,IAAlB,KAA2B,EAAnD;IACA,MAAMmpD,cAAc,GAAG,CAAC9xC,OAAO,CAACwC,QAAR,IAAoB,EAArB,EAAyB7Z,IAAzB,KAAkC,EAAzD;IACA,OAAOmpD,cAAc,CAACtuC,SAAf,IAA4BxD,OAAO,CAACwD,SAApC,IAAiDquC,eAAe,CAACruC,SAAjE,IAA8E,GAArF;EACD;;EACD,SAASuuC,yBAAT,CAAmCl0C,EAAnC,EAAuC2F,SAAvC,EAAkD;IAChD,IAAIsS,IAAI,GAAGjY,EAAX;;IACA,IAAIA,EAAE,KAAK,SAAX,EAAsB;MACpBiY,IAAI,GAAGtS,SAAP;IACD,CAFD,MAEO,IAAI3F,EAAE,KAAK,SAAX,EAAsB;MAC3BiY,IAAI,GAAGtS,SAAS,KAAK,GAAd,GAAoB,GAApB,GAA0B,GAAjC;IACD;;IACD,OAAOsS,IAAP;EACD;;EACD,SAASk8B,yBAAT,CAAmCl8B,IAAnC,EAAyCtS,SAAzC,EAAoD;IAClD,OAAOsS,IAAI,KAAKtS,SAAT,GAAqB,SAArB,GAAiC,SAAxC;EACD;;EACD,SAASyuC,gBAAT,CAA0Bz7B,QAA1B,EAAoC;IAClC,IAAIA,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAAvC,EAAiD;MAC/C,OAAO,GAAP;IACD;;IACD,IAAIA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAAxC,EAAiD;MAC/C,OAAO,GAAP;IACD;EACF;;EACD,SAAS07B,aAAT,CAAuBr0C,EAAvB,EAA2Bs0C,YAA3B,EAAyC;IACvC,IAAIt0C,EAAE,KAAK,GAAP,IAAcA,EAAE,KAAK,GAAzB,EAA8B;MAC5B,OAAOA,EAAP;IACD;;IACD,OAAOs0C,YAAY,CAACr8B,IAAb,IAAqBm8B,gBAAgB,CAACE,YAAY,CAAC37B,QAAd,CAArC,IAAgE3Y,EAAE,CAAClC,MAAH,CAAU,CAAV,EAAaV,WAAb,EAAvE;EACD;;EACD,SAASm3C,gBAAT,CAA0B7kB,MAA1B,EAAkCvtB,OAAlC,EAA2C;IACzC,MAAMqyC,aAAa,GAAGzwC,SAAS,CAAC2rB,MAAM,CAAC5kC,IAAR,CAAT,IAA0B;MAACwb,MAAM,EAAE;IAAT,CAAhD;IACA,MAAMmuC,YAAY,GAAGtyC,OAAO,CAACmE,MAAR,IAAkB,EAAvC;IACA,MAAMouC,cAAc,GAAGX,YAAY,CAACrkB,MAAM,CAAC5kC,IAAR,EAAcqX,OAAd,CAAnC;IACA,MAAMwyC,QAAQ,GAAGj4C,MAAM,CAACmF,MAAP,CAAc,IAAd,CAAjB;IACA,MAAMyE,MAAM,GAAG5J,MAAM,CAACmF,MAAP,CAAc,IAAd,CAAf;IACAnF,MAAM,CAACD,IAAP,CAAYg4C,YAAZ,EAA0BtpD,OAA1B,CAAkC6U,EAAE,IAAI;MACtC,MAAM40C,SAAS,GAAGH,YAAY,CAACz0C,EAAD,CAA9B;;MACA,IAAI,CAACI,QAAQ,CAACw0C,SAAD,CAAb,EAA0B;QACxB,OAAO5xC,OAAO,CAAC6xC,KAAR,CAAe,0CAAyC70C,EAAG,EAA3D,CAAP;MACD;;MACD,IAAI40C,SAAS,CAAC5xB,MAAd,EAAsB;QACpB,OAAOhgB,OAAO,CAACC,IAAR,CAAc,kDAAiDjD,EAAG,EAAlE,CAAP;MACD;;MACD,MAAMiY,IAAI,GAAGo8B,aAAa,CAACr0C,EAAD,EAAK40C,SAAL,CAA1B;MACA,MAAME,SAAS,GAAGX,yBAAyB,CAACl8B,IAAD,EAAOy8B,cAAP,CAA3C;MACA,MAAMK,mBAAmB,GAAGP,aAAa,CAACluC,MAAd,IAAwB,EAApD;MACAquC,QAAQ,CAAC18B,IAAD,CAAR,GAAiB08B,QAAQ,CAAC18B,IAAD,CAAR,IAAkBjY,EAAnC;MACAsG,MAAM,CAACtG,EAAD,CAAN,GAAayC,OAAO,CAAC/F,MAAM,CAACmF,MAAP,CAAc,IAAd,CAAD,EAAsB,CAAC;QAACoW;MAAD,CAAD,EAAS28B,SAAT,EAAoBG,mBAAmB,CAAC98B,IAAD,CAAvC,EAA+C88B,mBAAmB,CAACD,SAAD,CAAlE,CAAtB,CAApB;IACD,CAbD;IAcAplB,MAAM,CAAChkB,IAAP,CAAY/G,QAAZ,CAAqBxZ,OAArB,CAA6BqvB,OAAO,IAAI;MACtC,MAAM1vB,IAAI,GAAG0vB,OAAO,CAAC1vB,IAAR,IAAgB4kC,MAAM,CAAC5kC,IAApC;MACA,MAAM6a,SAAS,GAAG6U,OAAO,CAAC7U,SAAR,IAAqBouC,YAAY,CAACjpD,IAAD,EAAOqX,OAAP,CAAnD;MACA,MAAM6xC,eAAe,GAAGjwC,SAAS,CAACjZ,IAAD,CAAT,IAAmB,EAA3C;MACA,MAAMiqD,mBAAmB,GAAGf,eAAe,CAAC1tC,MAAhB,IAA0B,EAAtD;MACA5J,MAAM,CAACD,IAAP,CAAYs4C,mBAAZ,EAAiC5pD,OAAjC,CAAyC6pD,SAAS,IAAI;QACpD,MAAM/8B,IAAI,GAAGi8B,yBAAyB,CAACc,SAAD,EAAYrvC,SAAZ,CAAtC;QACA,MAAM3F,EAAE,GAAGwa,OAAO,CAACvC,IAAI,GAAG,QAAR,CAAP,IAA4B08B,QAAQ,CAAC18B,IAAD,CAApC,IAA8CA,IAAzD;QACA3R,MAAM,CAACtG,EAAD,CAAN,GAAasG,MAAM,CAACtG,EAAD,CAAN,IAActD,MAAM,CAACmF,MAAP,CAAc,IAAd,CAA3B;QACAY,OAAO,CAAC6D,MAAM,CAACtG,EAAD,CAAP,EAAa,CAAC;UAACiY;QAAD,CAAD,EAASw8B,YAAY,CAACz0C,EAAD,CAArB,EAA2B+0C,mBAAmB,CAACC,SAAD,CAA9C,CAAb,CAAP;MACD,CALD;IAMD,CAXD;IAYAt4C,MAAM,CAACD,IAAP,CAAY6J,MAAZ,EAAoBnb,OAApB,CAA4B6W,GAAG,IAAI;MACjC,MAAMqE,KAAK,GAAGC,MAAM,CAACtE,GAAD,CAApB;MACAS,OAAO,CAAC4D,KAAD,EAAQ,CAACiB,QAAQ,CAAChB,MAAT,CAAgBD,KAAK,CAACvb,IAAtB,CAAD,EAA8Bwc,QAAQ,CAACjB,KAAvC,CAAR,CAAP;IACD,CAHD;IAIA,OAAOC,MAAP;EACD;;EACD,SAAS2uC,WAAT,CAAqBvlB,MAArB,EAA6B;IAC3B,MAAMvtB,OAAO,GAAGutB,MAAM,CAACvtB,OAAP,KAAmButB,MAAM,CAACvtB,OAAP,GAAiB,EAApC,CAAhB;IACAA,OAAO,CAACgE,OAAR,GAAkBzF,cAAc,CAACyB,OAAO,CAACgE,OAAT,EAAkB,EAAlB,CAAhC;IACAhE,OAAO,CAACmE,MAAR,GAAiBiuC,gBAAgB,CAAC7kB,MAAD,EAASvtB,OAAT,CAAjC;EACD;;EACD,SAAS+yC,QAAT,CAAkBxpC,IAAlB,EAAwB;IACtBA,IAAI,GAAGA,IAAI,IAAI,EAAf;IACAA,IAAI,CAAC/G,QAAL,GAAgB+G,IAAI,CAAC/G,QAAL,IAAiB,EAAjC;IACA+G,IAAI,CAAC8xB,MAAL,GAAc9xB,IAAI,CAAC8xB,MAAL,IAAe,EAA7B;IACA,OAAO9xB,IAAP;EACD;;EACD,SAASypC,UAAT,CAAoBzlB,MAApB,EAA4B;IAC1BA,MAAM,GAAGA,MAAM,IAAI,EAAnB;IACAA,MAAM,CAAChkB,IAAP,GAAcwpC,QAAQ,CAACxlB,MAAM,CAAChkB,IAAR,CAAtB;IACAupC,WAAW,CAACvlB,MAAD,CAAX;IACA,OAAOA,MAAP;EACD;;EACD,MAAM0lB,QAAQ,GAAG,IAAI9qD,GAAJ,EAAjB;EACA,MAAM+qD,UAAU,GAAG,IAAIjiC,GAAJ,EAAnB;;EACA,SAASkiC,UAAT,CAAoB7qB,QAApB,EAA8B8qB,QAA9B,EAAwC;IACtC,IAAI94C,IAAI,GAAG24C,QAAQ,CAAC3oD,GAAT,CAAag+B,QAAb,CAAX;;IACA,IAAI,CAAChuB,IAAL,EAAW;MACTA,IAAI,GAAG84C,QAAQ,EAAf;MACAH,QAAQ,CAACxoD,GAAT,CAAa69B,QAAb,EAAuBhuB,IAAvB;MACA44C,UAAU,CAACpoD,GAAX,CAAewP,IAAf;IACD;;IACD,OAAOA,IAAP;EACD;;EACD,MAAM+4C,UAAU,GAAG,CAAC5oD,GAAD,EAAMuR,GAAN,EAAW6D,GAAX,KAAmB;IACpC,MAAMgO,IAAI,GAAG1M,gBAAgB,CAACnF,GAAD,EAAM6D,GAAN,CAA7B;;IACA,IAAIgO,IAAI,KAAKvlB,SAAb,EAAwB;MACtBmC,GAAG,CAACK,GAAJ,CAAQ+iB,IAAR;IACD;EACF,CALD;;EAMA,MAAMylC,MAAN,CAAa;IACXtrD,WAAW,CAACulC,MAAD,EAAS;MAClB,KAAKgmB,OAAL,GAAeP,UAAU,CAACzlB,MAAD,CAAzB;MACA,KAAKimB,WAAL,GAAmB,IAAIrrD,GAAJ,EAAnB;MACA,KAAKsrD,cAAL,GAAsB,IAAItrD,GAAJ,EAAtB;IACD;;IACW,IAARwa,QAAQ,GAAG;MACb,OAAO,KAAK4wC,OAAL,CAAa5wC,QAApB;IACD;;IACO,IAAJha,IAAI,GAAG;MACT,OAAO,KAAK4qD,OAAL,CAAa5qD,IAApB;IACD;;IACO,IAAJA,IAAI,CAACA,IAAD,EAAO;MACb,KAAK4qD,OAAL,CAAa5qD,IAAb,GAAoBA,IAApB;IACD;;IACO,IAAJ4gB,IAAI,GAAG;MACT,OAAO,KAAKgqC,OAAL,CAAahqC,IAApB;IACD;;IACO,IAAJA,IAAI,CAACA,IAAD,EAAO;MACb,KAAKgqC,OAAL,CAAahqC,IAAb,GAAoBwpC,QAAQ,CAACxpC,IAAD,CAA5B;IACD;;IACU,IAAPvJ,OAAO,GAAG;MACZ,OAAO,KAAKuzC,OAAL,CAAavzC,OAApB;IACD;;IACU,IAAPA,OAAO,CAACA,OAAD,EAAU;MACnB,KAAKuzC,OAAL,CAAavzC,OAAb,GAAuBA,OAAvB;IACD;;IACU,IAAPgE,OAAO,GAAG;MACZ,OAAO,KAAKuvC,OAAL,CAAavvC,OAApB;IACD;;IACD6Z,MAAM,GAAG;MACP,MAAM0P,MAAM,GAAG,KAAKgmB,OAApB;MACA,KAAKG,UAAL;MACAZ,WAAW,CAACvlB,MAAD,CAAX;IACD;;IACDmmB,UAAU,GAAG;MACX,KAAKF,WAAL,CAAiBG,KAAjB;;MACA,KAAKF,cAAL,CAAoBE,KAApB;IACD;;IACD/Y,gBAAgB,CAACgZ,WAAD,EAAc;MAC5B,OAAOT,UAAU,CAACS,WAAD,EACf,MAAM,CAAC,CACJ,YAAWA,WAAY,EADnB,EAEL,EAFK,CAAD,CADS,CAAjB;IAKD;;IACDxW,yBAAyB,CAACwW,WAAD,EAAczW,UAAd,EAA0B;MACjD,OAAOgW,UAAU,CAAE,GAAES,WAAY,eAAczW,UAAW,EAAzC,EACf,MAAM,CACJ,CACG,YAAWyW,WAAY,gBAAezW,UAAW,EADpD,EAEG,eAAcA,UAAW,EAF5B,CADI,EAKJ,CACG,YAAWyW,WAAY,EAD1B,EAEE,EAFF,CALI,CADS,CAAjB;IAWD;;IACD5W,uBAAuB,CAAC4W,WAAD,EAAc9W,WAAd,EAA2B;MAChD,OAAOqW,UAAU,CAAE,GAAES,WAAY,IAAG9W,WAAY,EAA/B,EACf,MAAM,CAAC,CACJ,YAAW8W,WAAY,aAAY9W,WAAY,EAD3C,EAEJ,YAAW8W,WAAY,EAFnB,EAGJ,YAAW9W,WAAY,EAHnB,EAIL,EAJK,CAAD,CADS,CAAjB;IAOD;;IACD6U,eAAe,CAACX,MAAD,EAAS;MACtB,MAAMnzC,EAAE,GAAGmzC,MAAM,CAACnzC,EAAlB;MACA,MAAMlV,IAAI,GAAG,KAAKA,IAAlB;MACA,OAAOwqD,UAAU,CAAE,GAAExqD,IAAK,WAAUkV,EAAG,EAAtB,EACf,MAAM,CAAC,CACJ,WAAUA,EAAG,EADT,EAEL,IAAGmzC,MAAM,CAAC6C,sBAAP,IAAiC,EAApC,CAFK,CAAD,CADS,CAAjB;IAKD;;IACDC,aAAa,CAACC,SAAD,EAAYC,UAAZ,EAAwB;MACnC,MAAMR,WAAW,GAAG,KAAKA,WAAzB;;MACA,IAAIxpC,KAAK,GAAGwpC,WAAW,CAAClpD,GAAZ,CAAgBypD,SAAhB,CAAZ;;MACA,IAAI,CAAC/pC,KAAD,IAAUgqC,UAAd,EAA0B;QACxBhqC,KAAK,GAAG,IAAI7hB,GAAJ,EAAR;;QACAqrD,WAAW,CAAC/oD,GAAZ,CAAgBspD,SAAhB,EAA2B/pC,KAA3B;MACD;;MACD,OAAOA,KAAP;IACD;;IACD6wB,eAAe,CAACkZ,SAAD,EAAYE,QAAZ,EAAsBD,UAAtB,EAAkC;MAC/C,MAAM;QAACh0C,OAAD;QAAUrX;MAAV,IAAkB,IAAxB;;MACA,MAAMqhB,KAAK,GAAG,KAAK8pC,aAAL,CAAmBC,SAAnB,EAA8BC,UAA9B,CAAd;;MACA,MAAMtc,MAAM,GAAG1tB,KAAK,CAAC1f,GAAN,CAAU2pD,QAAV,CAAf;;MACA,IAAIvc,MAAJ,EAAY;QACV,OAAOA,MAAP;MACD;;MACD,MAAMxY,MAAM,GAAG,IAAIjO,GAAJ,EAAf;MACAgjC,QAAQ,CAACjrD,OAAT,CAAiBsR,IAAI,IAAI;QACvB,IAAIy5C,SAAJ,EAAe;UACb70B,MAAM,CAACp0B,GAAP,CAAWipD,SAAX;UACAz5C,IAAI,CAACtR,OAAL,CAAa6W,GAAG,IAAIwzC,UAAU,CAACn0B,MAAD,EAAS60B,SAAT,EAAoBl0C,GAApB,CAA9B;QACD;;QACDvF,IAAI,CAACtR,OAAL,CAAa6W,GAAG,IAAIwzC,UAAU,CAACn0B,MAAD,EAASlf,OAAT,EAAkBH,GAAlB,CAA9B;QACAvF,IAAI,CAACtR,OAAL,CAAa6W,GAAG,IAAIwzC,UAAU,CAACn0B,MAAD,EAAStd,SAAS,CAACjZ,IAAD,CAAT,IAAmB,EAA5B,EAAgCkX,GAAhC,CAA9B;QACAvF,IAAI,CAACtR,OAAL,CAAa6W,GAAG,IAAIwzC,UAAU,CAACn0B,MAAD,EAAS/Z,QAAT,EAAmBtF,GAAnB,CAA9B;QACAvF,IAAI,CAACtR,OAAL,CAAa6W,GAAG,IAAIwzC,UAAU,CAACn0B,MAAD,EAASrd,WAAT,EAAsBhC,GAAtB,CAA9B;MACD,CATD;MAUA,MAAM0H,KAAK,GAAG9gB,KAAK,CAACyqB,IAAN,CAAWgO,MAAX,CAAd;;MACA,IAAI3X,KAAK,CAAC3d,MAAN,KAAiB,CAArB,EAAwB;QACtB2d,KAAK,CAAC1c,IAAN,CAAW0P,MAAM,CAACmF,MAAP,CAAc,IAAd,CAAX;MACD;;MACD,IAAIwzC,UAAU,CAACnoD,GAAX,CAAekpD,QAAf,CAAJ,EAA8B;QAC5BjqC,KAAK,CAACvf,GAAN,CAAUwpD,QAAV,EAAoB1sC,KAApB;MACD;;MACD,OAAOA,KAAP;IACD;;IACD2sC,iBAAiB,GAAG;MAClB,MAAM;QAACl0C,OAAD;QAAUrX;MAAV,IAAkB,IAAxB;MACA,OAAO,CACLqX,OADK,EAEL4B,SAAS,CAACjZ,IAAD,CAAT,IAAmB,EAFd,EAGLwc,QAAQ,CAAC3C,QAAT,CAAkB7Z,IAAlB,KAA2B,EAHtB,EAIL;QAACA;MAAD,CAJK,EAKLwc,QALK,EAMLtD,WANK,CAAP;IAQD;;IACDo7B,mBAAmB,CAAC/d,MAAD,EAASnuB,KAAT,EAAgB2R,OAAhB,EAA0C;MAAA,IAAjByc,QAAiB,uEAAN,CAAC,EAAD,CAAM;MAC3D,MAAMvY,MAAM,GAAG;QAACqtB,OAAO,EAAE;MAAV,CAAf;MACA,MAAM;QAAC/R,QAAD;QAAWiyB;MAAX,IAA0BC,WAAW,CAAC,KAAKX,cAAN,EAAsBv0B,MAAtB,EAA8BC,QAA9B,CAA3C;MACA,IAAInf,OAAO,GAAGkiB,QAAd;;MACA,IAAImyB,WAAW,CAACnyB,QAAD,EAAWnxB,KAAX,CAAf,EAAkC;QAChC6V,MAAM,CAACqtB,OAAP,GAAiB,KAAjB;QACAvxB,OAAO,GAAGlB,UAAU,CAACkB,OAAD,CAAV,GAAsBA,OAAO,EAA7B,GAAkCA,OAA5C;QACA,MAAM4xC,WAAW,GAAG,KAAKxZ,cAAL,CAAoB5b,MAApB,EAA4Bxc,OAA5B,EAAqCyxC,WAArC,CAApB;QACAn0C,OAAO,GAAGygB,cAAc,CAACyB,QAAD,EAAWxf,OAAX,EAAoB4xC,WAApB,CAAxB;MACD;;MACD,KAAK,MAAMr7B,IAAX,IAAmBloB,KAAnB,EAA0B;QACxB6V,MAAM,CAACqS,IAAD,CAAN,GAAejZ,OAAO,CAACiZ,IAAD,CAAtB;MACD;;MACD,OAAOrS,MAAP;IACD;;IACDk0B,cAAc,CAAC5b,MAAD,EAASxc,OAAT,EAAuD;MAAA,IAArCyc,QAAqC,uEAA1B,CAAC,EAAD,CAA0B;MAAA,IAApByB,kBAAoB;MACnE,MAAM;QAACsB;MAAD,IAAakyB,WAAW,CAAC,KAAKX,cAAN,EAAsBv0B,MAAtB,EAA8BC,QAA9B,CAA9B;MACA,OAAOlhB,QAAQ,CAACyE,OAAD,CAAR,GACH+d,cAAc,CAACyB,QAAD,EAAWxf,OAAX,EAAoBpa,SAApB,EAA+Bs4B,kBAA/B,CADX,GAEHsB,QAFJ;IAGD;;EAhJU;;EAkJb,SAASkyB,WAAT,CAAqBG,aAArB,EAAoCr1B,MAApC,EAA4CC,QAA5C,EAAsD;IACpD,IAAInV,KAAK,GAAGuqC,aAAa,CAACjqD,GAAd,CAAkB40B,MAAlB,CAAZ;;IACA,IAAI,CAAClV,KAAL,EAAY;MACVA,KAAK,GAAG,IAAI7hB,GAAJ,EAAR;MACAosD,aAAa,CAAC9pD,GAAd,CAAkBy0B,MAAlB,EAA0BlV,KAA1B;IACD;;IACD,MAAMse,QAAQ,GAAGnJ,QAAQ,CAAC4C,IAAT,EAAjB;IACA,IAAI2V,MAAM,GAAG1tB,KAAK,CAAC1f,GAAN,CAAUg+B,QAAV,CAAb;;IACA,IAAI,CAACoP,MAAL,EAAa;MACX,MAAMxV,QAAQ,GAAGjD,eAAe,CAACC,MAAD,EAASC,QAAT,CAAhC;;MACAuY,MAAM,GAAG;QACPxV,QADO;QAEPiyB,WAAW,EAAEh1B,QAAQ,CAAC9E,MAAT,CAAgB7d,CAAC,IAAI,CAACA,CAAC,CAACvB,WAAF,GAAgBkgB,QAAhB,CAAyB,OAAzB,CAAtB;MAFN,CAAT;MAIAnR,KAAK,CAACvf,GAAN,CAAU69B,QAAV,EAAoBoP,MAApB;IACD;;IACD,OAAOA,MAAP;EACD;;EACD,MAAM8c,WAAW,GAAGj3C,KAAK,IAAIU,QAAQ,CAACV,KAAD,CAAR,IACxBhD,MAAM,CAACo5B,mBAAP,CAA2Bp2B,KAA3B,EAAkCvS,MAAlC,CAAyC,CAACC,GAAD,EAAM4U,GAAN,KAAc5U,GAAG,IAAIuW,UAAU,CAACjE,KAAK,CAACsC,GAAD,CAAN,CAAxE,EAAsF,KAAtF,CADL;;EAEA,SAASw0C,WAAT,CAAqB3zB,KAArB,EAA4B3vB,KAA5B,EAAmC;IACjC,MAAM;MAACwwB,YAAD;MAAeC;IAAf,IAA8Bpf,YAAY,CAACse,KAAD,CAAhD;;IACA,KAAK,MAAMzH,IAAX,IAAmBloB,KAAnB,EAA0B;MACxB,MAAMqwB,UAAU,GAAGG,YAAY,CAACtI,IAAD,CAA/B;MACA,MAAMoI,SAAS,GAAGG,WAAW,CAACvI,IAAD,CAA7B;MACA,MAAM1b,KAAK,GAAG,CAAC8jB,SAAS,IAAID,UAAd,KAA6BV,KAAK,CAACzH,IAAD,CAAhD;;MACA,IAAKmI,UAAU,KAAK5f,UAAU,CAACjE,KAAD,CAAV,IAAqBi3C,WAAW,CAACj3C,KAAD,CAArC,CAAX,IACE8jB,SAAS,IAAIxyB,OAAO,CAAC0O,KAAD,CAD1B,EACoC;QAClC,OAAO,IAAP;MACD;IACF;;IACD,OAAO,KAAP;EACD;;EAED,IAAIk3C,OAAO,GAAG,OAAd;EAEA,MAAMC,eAAe,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,WAAnC,CAAxB;;EACA,SAASC,oBAAT,CAA8Bn+B,QAA9B,EAAwCV,IAAxC,EAA8C;IAC5C,OAAOU,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAAnC,IAAgDk+B,eAAe,CAAC50C,OAAhB,CAAwB0W,QAAxB,MAAsC,CAAC,CAAvC,IAA4CV,IAAI,KAAK,GAA5G;EACD;;EACD,SAAS8+B,aAAT,CAAuBC,EAAvB,EAA2BC,EAA3B,EAA+B;IAC7B,OAAO,UAAS7oD,CAAT,EAAYC,CAAZ,EAAe;MACpB,OAAOD,CAAC,CAAC4oD,EAAD,CAAD,KAAU3oD,CAAC,CAAC2oD,EAAD,CAAX,GACH5oD,CAAC,CAAC6oD,EAAD,CAAD,GAAQ5oD,CAAC,CAAC4oD,EAAD,CADN,GAEH7oD,CAAC,CAAC4oD,EAAD,CAAD,GAAQ3oD,CAAC,CAAC2oD,EAAD,CAFb;IAGD,CAJD;EAKD;;EACD,SAASE,oBAAT,CAA8BryC,OAA9B,EAAuC;IACrC,MAAMla,KAAK,GAAGka,OAAO,CAACla,KAAtB;IACA,MAAM0qC,gBAAgB,GAAG1qC,KAAK,CAACwX,OAAN,CAAcqC,SAAvC;IACA7Z,KAAK,CAAC0/C,aAAN,CAAoB,aAApB;IACAjiD,QAAQ,CAACitC,gBAAgB,IAAIA,gBAAgB,CAAC8hB,UAAtC,EAAkD,CAACtyC,OAAD,CAAlD,EAA6Dla,KAA7D,CAAR;EACD;;EACD,SAASysD,mBAAT,CAA6BvyC,OAA7B,EAAsC;IACpC,MAAMla,KAAK,GAAGka,OAAO,CAACla,KAAtB;IACA,MAAM0qC,gBAAgB,GAAG1qC,KAAK,CAACwX,OAAN,CAAcqC,SAAvC;IACApc,QAAQ,CAACitC,gBAAgB,IAAIA,gBAAgB,CAACgiB,UAAtC,EAAkD,CAACxyC,OAAD,CAAlD,EAA6Dla,KAA7D,CAAR;EACD;;EACD,SAAS2sD,SAAT,CAAmBprD,IAAnB,EAAyB;IACvB,IAAIonB,eAAe,MAAM,OAAOpnB,IAAP,KAAgB,QAAzC,EAAmD;MACjDA,IAAI,GAAGqnB,QAAQ,CAACgkC,cAAT,CAAwBrrD,IAAxB,CAAP;IACD,CAFD,MAEO,IAAIA,IAAI,IAAIA,IAAI,CAACH,MAAjB,EAAyB;MAC9BG,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;IACD;;IACD,IAAIA,IAAI,IAAIA,IAAI,CAAC+gB,MAAjB,EAAyB;MACvB/gB,IAAI,GAAGA,IAAI,CAAC+gB,MAAZ;IACD;;IACD,OAAO/gB,IAAP;EACD;;EACD,MAAMsrD,SAAS,GAAG,EAAlB;;EACA,MAAMC,QAAQ,GAAIz1C,GAAD,IAAS;IACxB,MAAMiL,MAAM,GAAGqqC,SAAS,CAACt1C,GAAD,CAAxB;IACA,OAAOtF,MAAM,CAAC2H,MAAP,CAAcmzC,SAAd,EAAyBh7B,MAAzB,CAAiCluB,CAAD,IAAOA,CAAC,CAAC2e,MAAF,KAAaA,MAApD,EAA4D3gB,GAA5D,EAAP;EACD,CAHD;;EAIA,SAASorD,eAAT,CAAyBv5C,GAAzB,EAA8BxU,KAA9B,EAAqC82C,IAArC,EAA2C;IACzC,MAAMhkC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY0B,GAAZ,CAAb;;IACA,KAAK,MAAM6D,GAAX,IAAkBvF,IAAlB,EAAwB;MACtB,MAAMk7C,MAAM,GAAG,CAAC31C,GAAhB;;MACA,IAAI21C,MAAM,IAAIhuD,KAAd,EAAqB;QACnB,MAAM+V,KAAK,GAAGvB,GAAG,CAAC6D,GAAD,CAAjB;QACA,OAAO7D,GAAG,CAAC6D,GAAD,CAAV;;QACA,IAAIy+B,IAAI,GAAG,CAAP,IAAYkX,MAAM,GAAGhuD,KAAzB,EAAgC;UAC9BwU,GAAG,CAACw5C,MAAM,GAAGlX,IAAV,CAAH,GAAqB/gC,KAArB;QACD;MACF;IACF;EACF;;EACD,SAASk4C,kBAAT,CAA4BppD,CAA5B,EAA+BqpD,SAA/B,EAA0CC,WAA1C,EAAuDC,OAAvD,EAAgE;IAC9D,IAAI,CAACD,WAAD,IAAgBtpD,CAAC,CAAC1D,IAAF,KAAW,UAA/B,EAA2C;MACzC,OAAO,IAAP;IACD;;IACD,IAAIitD,OAAJ,EAAa;MACX,OAAOF,SAAP;IACD;;IACD,OAAOrpD,CAAP;EACD;;EACD,MAAM3G,KAAN,CAAY;IACVsC,WAAW,CAAC+B,IAAD,EAAO8rD,UAAP,EAAmB;MAC5B,MAAMtoB,MAAM,GAAG,KAAKA,MAAL,GAAc,IAAI+lB,MAAJ,CAAWuC,UAAX,CAA7B;MACA,MAAMC,aAAa,GAAGX,SAAS,CAACprD,IAAD,CAA/B;MACA,MAAMgsD,aAAa,GAAGT,QAAQ,CAACQ,aAAD,CAA9B;;MACA,IAAIC,aAAJ,EAAmB;QACjB,MAAM,IAAIj0B,KAAJ,CACJ,+CAA+Ci0B,aAAa,CAACl4C,EAA7D,GAAkE,IAAlE,GACJ,qDAFQ,CAAN;MAID;;MACD,MAAMmC,OAAO,GAAGutB,MAAM,CAACuN,cAAP,CAAsBvN,MAAM,CAAC2mB,iBAAP,EAAtB,EAAkD,KAAKnpC,UAAL,EAAlD,CAAhB;MACA,KAAKpI,QAAL,GAAgB,KAAK4qB,MAAM,CAAC5qB,QAAP,IAAmByuB,eAAe,CAAC0kB,aAAD,CAAvC,GAAhB;MACA,KAAKnzC,QAAL,CAAc2qB,YAAd,CAA2BC,MAA3B;MACA,MAAM7qB,OAAO,GAAG,KAAKC,QAAL,CAAcwqB,cAAd,CAA6B2oB,aAA7B,EAA4C91C,OAAO,CAACoU,WAApD,CAAhB;MACA,MAAMtJ,MAAM,GAAGpI,OAAO,IAAIA,OAAO,CAACoI,MAAlC;MACA,MAAMI,MAAM,GAAGJ,MAAM,IAAIA,MAAM,CAACI,MAAhC;MACA,MAAMrB,KAAK,GAAGiB,MAAM,IAAIA,MAAM,CAACjB,KAA/B;MACA,KAAKhM,EAAL,GAAUD,GAAG,EAAb;MACA,KAAKyF,GAAL,GAAWX,OAAX;MACA,KAAKoI,MAAL,GAAcA,MAAd;MACA,KAAKjB,KAAL,GAAaA,KAAb;MACA,KAAKqB,MAAL,GAAcA,MAAd;MACA,KAAK8qC,QAAL,GAAgBh2C,OAAhB;MACA,KAAKi2C,YAAL,GAAoB,KAAK7hC,WAAzB;MACA,KAAKgK,OAAL,GAAe,EAAf;MACA,KAAK83B,SAAL,GAAiB,EAAjB;MACA,KAAKxf,OAAL,GAAepuC,SAAf;MACA,KAAKmyB,KAAL,GAAa,EAAb;MACA,KAAK9P,uBAAL,GAA+BriB,SAA/B;MACA,KAAK0uB,SAAL,GAAiB1uB,SAAjB;MACA,KAAK0B,OAAL,GAAe,EAAf;MACA,KAAKmsD,UAAL,GAAkB7tD,SAAlB;MACA,KAAK8tD,UAAL,GAAkB,EAAlB;MACA,KAAKC,oBAAL,GAA4B/tD,SAA5B;MACA,KAAKguD,eAAL,GAAuB,EAAvB;MACA,KAAKnyC,MAAL,GAAc,EAAd;MACA,KAAKoyC,QAAL,GAAgB,IAAI7F,aAAJ,EAAhB;MACA,KAAK3f,QAAL,GAAgB,EAAhB;MACA,KAAKylB,cAAL,GAAsB,EAAtB;MACA,KAAKC,QAAL,GAAgB,KAAhB;MACA,KAAKjZ,mBAAL,GAA2Bl1C,SAA3B;MACA,KAAKqwC,QAAL,GAAgBrwC,SAAhB;MACA,KAAKouD,SAAL,GAAiB1vD,QAAQ,CAAC0c,IAAI,IAAI,KAAKma,MAAL,CAAYna,IAAZ,CAAT,EAA4B1D,OAAO,CAAC22C,WAAR,IAAuB,CAAnD,CAAzB;MACA,KAAKjY,YAAL,GAAoB,EAApB;MACA2W,SAAS,CAAC,KAAKx3C,EAAN,CAAT,GAAqB,IAArB;;MACA,IAAI,CAAC6E,OAAD,IAAY,CAACoI,MAAjB,EAAyB;QACvBjK,OAAO,CAAC6xC,KAAR,CAAc,mEAAd;QACA;MACD;;MACDjnD,QAAQ,CAACf,MAAT,CAAgB,IAAhB,EAAsB,UAAtB,EAAkCqqD,oBAAlC;MACAtpD,QAAQ,CAACf,MAAT,CAAgB,IAAhB,EAAsB,UAAtB,EAAkCuqD,mBAAlC;;MACA,KAAK2B,WAAL;;MACA,IAAI,KAAKH,QAAT,EAAmB;QACjB,KAAK54B,MAAL;MACD;IACF;;IACc,IAAXzJ,WAAW,GAAG;MAChB,MAAM;QAACpU,OAAO,EAAE;UAACoU,WAAD;UAAcxQ;QAAd,CAAV;QAA8CiG,KAA9C;QAAqDqB,MAArD;QAA6D+qC;MAA7D,IAA6E,IAAnF;;MACA,IAAI,CAACn4C,aAAa,CAACsW,WAAD,CAAlB,EAAiC;QAC/B,OAAOA,WAAP;MACD;;MACD,IAAIxQ,mBAAmB,IAAIqyC,YAA3B,EAAyC;QACvC,OAAOA,YAAP;MACD;;MACD,OAAO/qC,MAAM,GAAGrB,KAAK,GAAGqB,MAAX,GAAoB,IAAjC;IACD;;IACO,IAAJ3B,IAAI,GAAG;MACT,OAAO,KAAKgkB,MAAL,CAAYhkB,IAAnB;IACD;;IACO,IAAJA,IAAI,CAACA,IAAD,EAAO;MACb,KAAKgkB,MAAL,CAAYhkB,IAAZ,GAAmBA,IAAnB;IACD;;IACU,IAAPvJ,OAAO,GAAG;MACZ,OAAO,KAAKg2C,QAAZ;IACD;;IACU,IAAPh2C,OAAO,CAACA,OAAD,EAAU;MACnB,KAAKutB,MAAL,CAAYvtB,OAAZ,GAAsBA,OAAtB;IACD;;IACD42C,WAAW,GAAG;MACZ,KAAK1O,aAAL,CAAmB,YAAnB;;MACA,IAAI,KAAKloC,OAAL,CAAaiE,UAAjB,EAA6B;QAC3B,KAAKisB,MAAL;MACD,CAFD,MAEO;QACL3b,WAAW,CAAC,IAAD,EAAO,KAAKvU,OAAL,CAAayC,gBAApB,CAAX;MACD;;MACD,KAAKo0C,UAAL;MACA,KAAK3O,aAAL,CAAmB,WAAnB;MACA,OAAO,IAAP;IACD;;IACDyL,KAAK,GAAG;MACN9oC,WAAW,CAAC,KAAKC,MAAN,EAAc,KAAKzH,GAAnB,CAAX;MACA,OAAO,IAAP;IACD;;IACDhY,IAAI,GAAG;MACLI,QAAQ,CAACJ,IAAT,CAAc,IAAd;MACA,OAAO,IAAP;IACD;;IACD6kC,MAAM,CAACrmB,KAAD,EAAQqB,MAAR,EAAgB;MACpB,IAAI,CAACzf,QAAQ,CAAC/B,OAAT,CAAiB,IAAjB,CAAL,EAA6B;QAC3B,KAAKotD,OAAL,CAAajtC,KAAb,EAAoBqB,MAApB;MACD,CAFD,MAEO;QACL,KAAK6rC,iBAAL,GAAyB;UAACltC,KAAD;UAAQqB;QAAR,CAAzB;MACD;IACF;;IACD4rC,OAAO,CAACjtC,KAAD,EAAQqB,MAAR,EAAgB;MACrB,MAAMlL,OAAO,GAAG,KAAKA,OAArB;MACA,MAAM8K,MAAM,GAAG,KAAKA,MAApB;MACA,MAAMsJ,WAAW,GAAGpU,OAAO,CAAC4D,mBAAR,IAA+B,KAAKwQ,WAAxD;MACA,MAAM4iC,OAAO,GAAG,KAAKr0C,QAAL,CAAcsR,cAAd,CAA6BnJ,MAA7B,EAAqCjB,KAArC,EAA4CqB,MAA5C,EAAoDkJ,WAApD,CAAhB;MACA,MAAM6iC,QAAQ,GAAGj3C,OAAO,CAACyC,gBAAR,IAA4B,KAAKE,QAAL,CAAcC,mBAAd,EAA7C;MACA,MAAMc,IAAI,GAAG,KAAKmG,KAAL,GAAa,QAAb,GAAwB,QAArC;MACA,KAAKA,KAAL,GAAamtC,OAAO,CAACntC,KAArB;MACA,KAAKqB,MAAL,GAAc8rC,OAAO,CAAC9rC,MAAtB;MACA,KAAK+qC,YAAL,GAAoB,KAAK7hC,WAAzB;;MACA,IAAI,CAACG,WAAW,CAAC,IAAD,EAAO0iC,QAAP,EAAiB,IAAjB,CAAhB,EAAwC;QACtC;MACD;;MACD,KAAK/O,aAAL,CAAmB,QAAnB,EAA6B;QAACxmC,IAAI,EAAEs1C;MAAP,CAA7B;MACA/wD,QAAQ,CAAC+Z,OAAO,CAACk3C,QAAT,EAAmB,CAAC,IAAD,EAAOF,OAAP,CAAnB,EAAoC,IAApC,CAAR;;MACA,IAAI,KAAKP,QAAT,EAAmB;QACjB,IAAI,KAAKC,SAAL,CAAehzC,IAAf,CAAJ,EAA0B;UACxB,KAAKyzC,MAAL;QACD;MACF;IACF;;IACDC,mBAAmB,GAAG;MACpB,MAAMp3C,OAAO,GAAG,KAAKA,OAArB;MACA,MAAMq3C,aAAa,GAAGr3C,OAAO,CAACmE,MAAR,IAAkB,EAAxC;MACAtF,IAAI,CAACw4C,aAAD,EAAgB,CAACC,WAAD,EAAcvJ,MAAd,KAAyB;QAC3CuJ,WAAW,CAACz5C,EAAZ,GAAiBkwC,MAAjB;MACD,CAFG,CAAJ;IAGD;;IACDwJ,mBAAmB,GAAG;MACpB,MAAMv3C,OAAO,GAAG,KAAKA,OAArB;MACA,MAAMw3C,SAAS,GAAGx3C,OAAO,CAACmE,MAA1B;MACA,MAAMA,MAAM,GAAG,KAAKA,MAApB;MACA,MAAMszC,OAAO,GAAGl9C,MAAM,CAACD,IAAP,CAAY6J,MAAZ,EAAoBnZ,MAApB,CAA2B,CAACgR,GAAD,EAAM6B,EAAN,KAAa;QACtD7B,GAAG,CAAC6B,EAAD,CAAH,GAAU,KAAV;QACA,OAAO7B,GAAP;MACD,CAHe,EAGb,EAHa,CAAhB;MAIA,IAAIrS,KAAK,GAAG,EAAZ;;MACA,IAAI6tD,SAAJ,EAAe;QACb7tD,KAAK,GAAGA,KAAK,CAACyyB,MAAN,CACN7hB,MAAM,CAACD,IAAP,CAAYk9C,SAAZ,EAAuB1oD,GAAvB,CAA4B+O,EAAD,IAAQ;UACjC,MAAMs0C,YAAY,GAAGqF,SAAS,CAAC35C,EAAD,CAA9B;UACA,MAAMiY,IAAI,GAAGo8B,aAAa,CAACr0C,EAAD,EAAKs0C,YAAL,CAA1B;UACA,MAAMuF,QAAQ,GAAG5hC,IAAI,KAAK,GAA1B;UACA,MAAMgF,YAAY,GAAGhF,IAAI,KAAK,GAA9B;UACA,OAAO;YACL9V,OAAO,EAAEmyC,YADJ;YAELwF,SAAS,EAAED,QAAQ,GAAG,WAAH,GAAiB58B,YAAY,GAAG,QAAH,GAAc,MAFzD;YAGL88B,KAAK,EAAEF,QAAQ,GAAG,cAAH,GAAoB58B,YAAY,GAAG,UAAH,GAAgB;UAH1D,CAAP;QAKD,CAVD,CADM,CAAR;MAaD;;MACDjc,IAAI,CAAClV,KAAD,EAASI,IAAD,IAAU;QACpB,MAAMooD,YAAY,GAAGpoD,IAAI,CAACiW,OAA1B;QACA,MAAMnC,EAAE,GAAGs0C,YAAY,CAACt0C,EAAxB;QACA,MAAMiY,IAAI,GAAGo8B,aAAa,CAACr0C,EAAD,EAAKs0C,YAAL,CAA1B;QACA,MAAM0F,SAAS,GAAGt5C,cAAc,CAAC4zC,YAAY,CAACxpD,IAAd,EAAoBoB,IAAI,CAAC6tD,KAAzB,CAAhC;;QACA,IAAIzF,YAAY,CAAC37B,QAAb,KAA0BluB,SAA1B,IAAuCqsD,oBAAoB,CAACxC,YAAY,CAAC37B,QAAd,EAAwBV,IAAxB,CAApB,KAAsD6+B,oBAAoB,CAAC5qD,IAAI,CAAC4tD,SAAN,CAArH,EAAuI;UACrIxF,YAAY,CAAC37B,QAAb,GAAwBzsB,IAAI,CAAC4tD,SAA7B;QACD;;QACDF,OAAO,CAAC55C,EAAD,CAAP,GAAc,IAAd;QACA,IAAIqG,KAAK,GAAG,IAAZ;;QACA,IAAIrG,EAAE,IAAIsG,MAAN,IAAgBA,MAAM,CAACtG,EAAD,CAAN,CAAWlV,IAAX,KAAoBkvD,SAAxC,EAAmD;UACjD3zC,KAAK,GAAGC,MAAM,CAACtG,EAAD,CAAd;QACD,CAFD,MAEO;UACL,MAAMi6C,UAAU,GAAGvH,QAAQ,CAACX,QAAT,CAAkBiI,SAAlB,CAAnB;UACA3zC,KAAK,GAAG,IAAI4zC,UAAJ,CAAe;YACrBj6C,EADqB;YAErBlV,IAAI,EAAEkvD,SAFe;YAGrBx0C,GAAG,EAAE,KAAKA,GAHW;YAIrB7a,KAAK,EAAE;UAJc,CAAf,CAAR;UAMA2b,MAAM,CAACD,KAAK,CAACrG,EAAP,CAAN,GAAmBqG,KAAnB;QACD;;QACDA,KAAK,CAAC+hC,IAAN,CAAWkM,YAAX,EAAyBnyC,OAAzB;MACD,CAvBG,CAAJ;MAwBAnB,IAAI,CAAC44C,OAAD,EAAU,CAACM,UAAD,EAAal6C,EAAb,KAAoB;QAChC,IAAI,CAACk6C,UAAL,EAAiB;UACf,OAAO5zC,MAAM,CAACtG,EAAD,CAAb;QACD;MACF,CAJG,CAAJ;MAKAgB,IAAI,CAACsF,MAAD,EAAUD,KAAD,IAAW;QACtB8W,OAAO,CAACwD,SAAR,CAAkB,IAAlB,EAAwBta,KAAxB,EAA+BA,KAAK,CAAClE,OAArC;QACAgb,OAAO,CAACmD,MAAR,CAAe,IAAf,EAAqBja,KAArB;MACD,CAHG,CAAJ;IAID;;IACD8zC,eAAe,GAAG;MAChB,MAAMviC,QAAQ,GAAG,KAAKygC,SAAtB;MACA,MAAM/X,OAAO,GAAG,KAAK50B,IAAL,CAAU/G,QAAV,CAAmB5Y,MAAnC;MACA,MAAMs0C,OAAO,GAAGzoB,QAAQ,CAAC7rB,MAAzB;MACA6rB,QAAQ,CAAC3O,IAAT,CAAc,CAAC7a,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACsT,KAAF,GAAUrT,CAAC,CAACqT,KAApC;;MACA,IAAI2+B,OAAO,GAAGC,OAAd,EAAuB;QACrB,KAAK,IAAIt0C,CAAC,GAAGs0C,OAAb,EAAsBt0C,CAAC,GAAGq0C,OAA1B,EAAmC,EAAEr0C,CAArC,EAAwC;UACtC,KAAKouD,mBAAL,CAAyBpuD,CAAzB;QACD;;QACD4rB,QAAQ,CAACjL,MAAT,CAAgB2zB,OAAhB,EAAyBD,OAAO,GAAGC,OAAnC;MACD;;MACD,KAAKmY,eAAL,GAAuB7gC,QAAQ,CAAC9uB,KAAT,CAAe,CAAf,EAAkBmgB,IAAlB,CAAuB8tC,aAAa,CAAC,OAAD,EAAU,OAAV,CAApC,CAAvB;IACD;;IACDsD,2BAA2B,GAAG;MAC5B,MAAM;QAAChC,SAAS,EAAEzgC,QAAZ;QAAsBlM,IAAI,EAAE;UAAC/G;QAAD;MAA5B,IAA0C,IAAhD;;MACA,IAAIiT,QAAQ,CAAC7rB,MAAT,GAAkB4Y,QAAQ,CAAC5Y,MAA/B,EAAuC;QACrC,OAAO,KAAK8sC,OAAZ;MACD;;MACDjhB,QAAQ,CAACzsB,OAAT,CAAiB,CAACovB,IAAD,EAAO7Y,KAAP,KAAiB;QAChC,IAAIiD,QAAQ,CAAC6X,MAAT,CAAgB3qB,CAAC,IAAIA,CAAC,KAAK0oB,IAAI,CAAC+/B,QAAhC,EAA0CvuD,MAA1C,KAAqD,CAAzD,EAA4D;UAC1D,KAAKquD,mBAAL,CAAyB14C,KAAzB;QACD;MACF,CAJD;IAKD;;IACD64C,wBAAwB,GAAG;MACzB,MAAMC,cAAc,GAAG,EAAvB;MACA,MAAM71C,QAAQ,GAAG,KAAK+G,IAAL,CAAU/G,QAA3B;MACA,IAAI3Y,CAAJ,EAAOsV,IAAP;;MACA,KAAK+4C,2BAAL;;MACA,KAAKruD,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGqD,QAAQ,CAAC5Y,MAA5B,EAAoCC,CAAC,GAAGsV,IAAxC,EAA8CtV,CAAC,EAA/C,EAAmD;QACjD,MAAMwuB,OAAO,GAAG7V,QAAQ,CAAC3Y,CAAD,CAAxB;QACA,IAAIuuB,IAAI,GAAG,KAAKE,cAAL,CAAoBzuB,CAApB,CAAX;QACA,MAAMlB,IAAI,GAAG0vB,OAAO,CAAC1vB,IAAR,IAAgB,KAAK4kC,MAAL,CAAY5kC,IAAzC;;QACA,IAAIyvB,IAAI,CAACzvB,IAAL,IAAayvB,IAAI,CAACzvB,IAAL,KAAcA,IAA/B,EAAqC;UACnC,KAAKsvD,mBAAL,CAAyBpuD,CAAzB;;UACAuuB,IAAI,GAAG,KAAKE,cAAL,CAAoBzuB,CAApB,CAAP;QACD;;QACDuuB,IAAI,CAACzvB,IAAL,GAAYA,IAAZ;QACAyvB,IAAI,CAAC5U,SAAL,GAAiB6U,OAAO,CAAC7U,SAAR,IAAqBouC,YAAY,CAACjpD,IAAD,EAAO,KAAKqX,OAAZ,CAAlD;QACAoY,IAAI,CAACkgC,KAAL,GAAajgC,OAAO,CAACigC,KAAR,IAAiB,CAA9B;QACAlgC,IAAI,CAAC7Y,KAAL,GAAa1V,CAAb;QACAuuB,IAAI,CAACmkB,KAAL,GAAa,KAAKlkB,OAAO,CAACkkB,KAA1B;QACAnkB,IAAI,CAACkb,OAAL,GAAe,KAAKilB,gBAAL,CAAsB1uD,CAAtB,CAAf;;QACA,IAAIuuB,IAAI,CAACrC,UAAT,EAAqB;UACnBqC,IAAI,CAACrC,UAAL,CAAgBijB,WAAhB,CAA4BnvC,CAA5B;UACAuuB,IAAI,CAACrC,UAAL,CAAgB+iB,UAAhB;QACD,CAHD,MAGO;UACL,MAAM0f,eAAe,GAAGjI,QAAQ,CAACf,aAAT,CAAuB7mD,IAAvB,CAAxB;UACA,MAAM;YAAC0xC,kBAAD;YAAqBwC;UAArB,IAAwC13B,QAAQ,CAAC3C,QAAT,CAAkB7Z,IAAlB,CAA9C;UACA4R,MAAM,CAACgB,MAAP,CAAci9C,eAAe,CAAC9xD,SAA9B,EAAyC;YACvCm2C,eAAe,EAAE0T,QAAQ,CAACb,UAAT,CAAoB7S,eAApB,CADsB;YAEvCxC,kBAAkB,EAAEA,kBAAkB,IAAIkW,QAAQ,CAACb,UAAT,CAAoBrV,kBAApB;UAFH,CAAzC;UAIAjiB,IAAI,CAACrC,UAAL,GAAkB,IAAIyiC,eAAJ,CAAoB,IAApB,EAA0B3uD,CAA1B,CAAlB;UACAwuD,cAAc,CAACxtD,IAAf,CAAoButB,IAAI,CAACrC,UAAzB;QACD;MACF;;MACD,KAAKiiC,eAAL;;MACA,OAAOK,cAAP;IACD;;IACDI,cAAc,GAAG;MACf55C,IAAI,CAAC,KAAK0K,IAAL,CAAU/G,QAAX,EAAqB,CAAC6V,OAAD,EAAU/Y,YAAV,KAA2B;QAClD,KAAKgZ,cAAL,CAAoBhZ,YAApB,EAAkCyW,UAAlC,CAA6CkkB,KAA7C;MACD,CAFG,EAED,IAFC,CAAJ;IAGD;;IACDA,KAAK,GAAG;MACN,KAAKwe,cAAL;;MACA,KAAKvQ,aAAL,CAAmB,OAAnB;IACD;;IACDrqB,MAAM,CAACna,IAAD,EAAO;MACX,MAAM6pB,MAAM,GAAG,KAAKA,MAApB;MACAA,MAAM,CAAC1P,MAAP;MACA,MAAM7d,OAAO,GAAG,KAAKg2C,QAAL,GAAgBzoB,MAAM,CAACuN,cAAP,CAAsBvN,MAAM,CAAC2mB,iBAAP,EAAtB,EAAkD,KAAKnpC,UAAL,EAAlD,CAAhC;MACA,MAAM2tC,aAAa,GAAG,KAAKlb,mBAAL,GAA2B,CAACx9B,OAAO,CAACqC,SAA1D;;MACA,KAAKs2C,aAAL;;MACA,KAAKC,mBAAL;;MACA,KAAKC,oBAAL;;MACA,KAAKtC,QAAL,CAAcrF,UAAd;;MACA,IAAI,KAAKhJ,aAAL,CAAmB,cAAnB,EAAmC;QAACxkC,IAAD;QAAOutC,UAAU,EAAE;MAAnB,CAAnC,MAAiE,KAArE,EAA4E;QAC1E;MACD;;MACD,MAAMoH,cAAc,GAAG,KAAKD,wBAAL,EAAvB;MACA,KAAKlQ,aAAL,CAAmB,sBAAnB;MACA,IAAIzpB,UAAU,GAAG,CAAjB;;MACA,KAAK,IAAI50B,CAAC,GAAG,CAAR,EAAWsV,IAAI,GAAG,KAAKoK,IAAL,CAAU/G,QAAV,CAAmB5Y,MAA1C,EAAkDC,CAAC,GAAGsV,IAAtD,EAA4DtV,CAAC,EAA7D,EAAiE;QAC/D,MAAM;UAACksB;QAAD,IAAe,KAAKuC,cAAL,CAAoBzuB,CAApB,CAArB;QACA,MAAMowC,KAAK,GAAG,CAACye,aAAD,IAAkBL,cAAc,CAACv4C,OAAf,CAAuBiW,UAAvB,MAAuC,CAAC,CAAxE;QACAA,UAAU,CAACukB,qBAAX,CAAiCL,KAAjC;QACAxb,UAAU,GAAGt1B,IAAI,CAACgC,GAAL,CAAS,CAAC4qB,UAAU,CAACsmB,cAAX,EAAV,EAAuC5d,UAAvC,CAAb;MACD;;MACDA,UAAU,GAAG,KAAKxH,WAAL,GAAmBjX,OAAO,CAAC2b,MAAR,CAAeuC,WAAf,GAA6BO,UAA7B,GAA0C,CAA1E;;MACA,KAAKq6B,aAAL,CAAmBr6B,UAAnB;;MACA,IAAI,CAACi6B,aAAL,EAAoB;QAClB75C,IAAI,CAACw5C,cAAD,EAAkBtiC,UAAD,IAAgB;UACnCA,UAAU,CAACkkB,KAAX;QACD,CAFG,CAAJ;MAGD;;MACD,KAAK8e,eAAL,CAAqBr1C,IAArB;;MACA,KAAKwkC,aAAL,CAAmB,aAAnB,EAAkC;QAACxkC;MAAD,CAAlC;;MACA,KAAK0a,OAAL,CAAatX,IAAb,CAAkB8tC,aAAa,CAAC,GAAD,EAAM,MAAN,CAA/B;;MACA,MAAM;QAAC5qD,OAAD;QAAUmsD;MAAV,IAAwB,IAA9B;;MACA,IAAIA,UAAJ,EAAgB;QACd,KAAK6C,aAAL,CAAmB7C,UAAnB,EAA+B,IAA/B;MACD,CAFD,MAEO,IAAInsD,OAAO,CAACJ,MAAZ,EAAoB;QACzB,KAAKqvD,kBAAL,CAAwBjvD,OAAxB,EAAiCA,OAAjC,EAA0C,IAA1C;MACD;;MACD,KAAKmtD,MAAL;IACD;;IACDwB,aAAa,GAAG;MACd95C,IAAI,CAAC,KAAKsF,MAAN,EAAeD,KAAD,IAAW;QAC3B8W,OAAO,CAACsD,SAAR,CAAkB,IAAlB,EAAwBpa,KAAxB;MACD,CAFG,CAAJ;MAGA,KAAKkzC,mBAAL;MACA,KAAKG,mBAAL;IACD;;IACDqB,mBAAmB,GAAG;MACpB,MAAM54C,OAAO,GAAG,KAAKA,OAArB;MACA,MAAMk5C,cAAc,GAAG,IAAIjoC,GAAJ,CAAQ1W,MAAM,CAACD,IAAP,CAAY,KAAK87C,UAAjB,CAAR,CAAvB;MACA,MAAM+C,SAAS,GAAG,IAAIloC,GAAJ,CAAQjR,OAAO,CAAC8C,MAAhB,CAAlB;;MACA,IAAI,CAACrB,SAAS,CAACy3C,cAAD,EAAiBC,SAAjB,CAAV,IAAyC,CAAC,CAAC,KAAK9C,oBAAP,KAAgCr2C,OAAO,CAACiE,UAArF,EAAiG;QAC/F,KAAKm1C,YAAL;QACA,KAAKvC,UAAL;MACD;IACF;;IACDgC,oBAAoB,GAAG;MACrB,MAAM;QAACrC;MAAD,IAAmB,IAAzB;MACA,MAAM6C,OAAO,GAAG,KAAKC,sBAAL,MAAiC,EAAjD;;MACA,KAAK,MAAM;QAAC5oC,MAAD;QAASlpB,KAAT;QAAgB6zB;MAAhB,CAAX,IAAqCg+B,OAArC,EAA8C;QAC5C,MAAM/a,IAAI,GAAG5tB,MAAM,KAAK,iBAAX,GAA+B,CAAC2K,KAAhC,GAAwCA,KAArD;QACAk6B,eAAe,CAACiB,cAAD,EAAiBhvD,KAAjB,EAAwB82C,IAAxB,CAAf;MACD;IACF;;IACDgb,sBAAsB,GAAG;MACvB,MAAM5a,YAAY,GAAG,KAAKA,YAA1B;;MACA,IAAI,CAACA,YAAD,IAAiB,CAACA,YAAY,CAAC90C,MAAnC,EAA2C;QACzC;MACD;;MACD,KAAK80C,YAAL,GAAoB,EAApB;MACA,MAAM6a,YAAY,GAAG,KAAKhwC,IAAL,CAAU/G,QAAV,CAAmB5Y,MAAxC;;MACA,MAAM4vD,OAAO,GAAIt4C,GAAD,IAAS,IAAI+P,GAAJ,CACvBytB,YAAY,CACTrkB,MADH,CACUluB,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,KAAS+U,GADxB,EAEGpS,GAFH,CAEO,CAAC3C,CAAD,EAAItC,CAAJ,KAAUA,CAAC,GAAG,GAAJ,GAAUsC,CAAC,CAACqe,MAAF,CAAS,CAAT,EAAYuX,IAAZ,CAAiB,GAAjB,CAF3B,CADuB,CAAzB;;MAKA,MAAM03B,SAAS,GAAGD,OAAO,CAAC,CAAD,CAAzB;;MACA,KAAK,IAAI3vD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0vD,YAApB,EAAkC1vD,CAAC,EAAnC,EAAuC;QACrC,IAAI,CAAC4X,SAAS,CAACg4C,SAAD,EAAYD,OAAO,CAAC3vD,CAAD,CAAnB,CAAd,EAAuC;UACrC;QACD;MACF;;MACD,OAAOpD,KAAK,CAACyqB,IAAN,CAAWuoC,SAAX,EACJ3qD,GADI,CACA3C,CAAC,IAAIA,CAAC,CAAC6V,KAAF,CAAQ,GAAR,CADL,EAEJlT,GAFI,CAEA7C,CAAC,KAAK;QAACykB,MAAM,EAAEzkB,CAAC,CAAC,CAAD,CAAV;QAAezE,KAAK,EAAE,CAACyE,CAAC,CAAC,CAAD,CAAxB;QAA6BovB,KAAK,EAAE,CAACpvB,CAAC,CAAC,CAAD;MAAtC,CAAL,CAFD,CAAP;IAGD;;IACD6sD,aAAa,CAACr6B,UAAD,EAAa;MACxB,IAAI,KAAKypB,aAAL,CAAmB,cAAnB,EAAmC;QAAC+I,UAAU,EAAE;MAAb,CAAnC,MAA2D,KAA/D,EAAsE;QACpE;MACD;;MACDj2B,OAAO,CAAC6C,MAAR,CAAe,IAAf,EAAqB,KAAKhU,KAA1B,EAAiC,KAAKqB,MAAtC,EAA8CuT,UAA9C;MACA,MAAM9R,IAAI,GAAG,KAAKqK,SAAlB;MACA,MAAM0iC,MAAM,GAAG/sC,IAAI,CAAC9C,KAAL,IAAc,CAAd,IAAmB8C,IAAI,CAACzB,MAAL,IAAe,CAAjD;MACA,KAAKkT,OAAL,GAAe,EAAf;MACAvf,IAAI,CAAC,KAAK4b,KAAN,EAAc1H,GAAD,IAAS;QACxB,IAAI2mC,MAAM,IAAI3mC,GAAG,CAACyD,QAAJ,KAAiB,WAA/B,EAA4C;UAC1C;QACD;;QACD,IAAIzD,GAAG,CAACyL,SAAR,EAAmB;UACjBzL,GAAG,CAACyL,SAAJ;QACD;;QACD,KAAKJ,OAAL,CAAavzB,IAAb,CAAkB,GAAGkoB,GAAG,CAACqL,OAAJ,EAArB;MACD,CARG,EAQD,IARC,CAAJ;;MASA,KAAKA,OAAL,CAAap1B,OAAb,CAAqB,CAACe,IAAD,EAAOwV,KAAP,KAAiB;QACpCxV,IAAI,CAAC4vD,IAAL,GAAYp6C,KAAZ;MACD,CAFD;;MAGA,KAAK2oC,aAAL,CAAmB,aAAnB;IACD;;IACD6Q,eAAe,CAACr1C,IAAD,EAAO;MACpB,IAAI,KAAKwkC,aAAL,CAAmB,sBAAnB,EAA2C;QAACxkC,IAAD;QAAOutC,UAAU,EAAE;MAAnB,CAA3C,MAAyE,KAA7E,EAAoF;QAClF;MACD;;MACD,KAAK,IAAIpnD,CAAC,GAAG,CAAR,EAAWsV,IAAI,GAAG,KAAKoK,IAAL,CAAU/G,QAAV,CAAmB5Y,MAA1C,EAAkDC,CAAC,GAAGsV,IAAtD,EAA4D,EAAEtV,CAA9D,EAAiE;QAC/D,KAAKyuB,cAAL,CAAoBzuB,CAApB,EAAuBksB,UAAvB,CAAkCyI,SAAlC;MACD;;MACD,KAAK,IAAI30B,CAAC,GAAG,CAAR,EAAWsV,IAAI,GAAG,KAAKoK,IAAL,CAAU/G,QAAV,CAAmB5Y,MAA1C,EAAkDC,CAAC,GAAGsV,IAAtD,EAA4D,EAAEtV,CAA9D,EAAiE;QAC/D,KAAK+vD,cAAL,CAAoB/vD,CAApB,EAAuB2X,UAAU,CAACkC,IAAD,CAAV,GAAmBA,IAAI,CAAC;UAACpE,YAAY,EAAEzV;QAAf,CAAD,CAAvB,GAA6C6Z,IAApE;MACD;;MACD,KAAKwkC,aAAL,CAAmB,qBAAnB,EAA0C;QAACxkC;MAAD,CAA1C;IACD;;IACDk2C,cAAc,CAACr6C,KAAD,EAAQmE,IAAR,EAAc;MAC1B,MAAM0U,IAAI,GAAG,KAAKE,cAAL,CAAoB/Y,KAApB,CAAb;MACA,MAAM/Y,IAAI,GAAG;QAAC4xB,IAAD;QAAO7Y,KAAP;QAAcmE,IAAd;QAAoButC,UAAU,EAAE;MAAhC,CAAb;;MACA,IAAI,KAAK/I,aAAL,CAAmB,qBAAnB,EAA0C1hD,IAA1C,MAAoD,KAAxD,EAA+D;QAC7D;MACD;;MACD4xB,IAAI,CAACrC,UAAL,CAAgBzsB,OAAhB,CAAwBoa,IAAxB;;MACAld,IAAI,CAACyqD,UAAL,GAAkB,KAAlB;MACA,KAAK/I,aAAL,CAAmB,oBAAnB,EAAyC1hD,IAAzC;IACD;;IACD2wD,MAAM,GAAG;MACP,IAAI,KAAKjP,aAAL,CAAmB,cAAnB,EAAmC;QAAC+I,UAAU,EAAE;MAAb,CAAnC,MAA2D,KAA/D,EAAsE;QACpE;MACD;;MACD,IAAIxlD,QAAQ,CAACV,GAAT,CAAa,IAAb,CAAJ,EAAwB;QACtB,IAAI,KAAK0rD,QAAL,IAAiB,CAAChrD,QAAQ,CAAC/B,OAAT,CAAiB,IAAjB,CAAtB,EAA8C;UAC5C+B,QAAQ,CAACjE,KAAT,CAAe,IAAf;QACD;MACF,CAJD,MAIO;QACL,KAAKsC,IAAL;QACAirD,oBAAoB,CAAC;UAACvsD,KAAK,EAAE;QAAR,CAAD,CAApB;MACD;IACF;;IACDsB,IAAI,GAAG;MACL,IAAID,CAAJ;;MACA,IAAI,KAAKktD,iBAAT,EAA4B;QAC1B,MAAM;UAACltC,KAAD;UAAQqB;QAAR,IAAkB,KAAK6rC,iBAA7B;;QACA,KAAKD,OAAL,CAAajtC,KAAb,EAAoBqB,MAApB;;QACA,KAAK6rC,iBAAL,GAAyB,IAAzB;MACD;;MACD,KAAKpD,KAAL;;MACA,IAAI,KAAK9pC,KAAL,IAAc,CAAd,IAAmB,KAAKqB,MAAL,IAAe,CAAtC,EAAyC;QACvC;MACD;;MACD,IAAI,KAAKg9B,aAAL,CAAmB,YAAnB,EAAiC;QAAC+I,UAAU,EAAE;MAAb,CAAjC,MAAyD,KAA7D,EAAoE;QAClE;MACD;;MACD,MAAM4I,MAAM,GAAG,KAAKz7B,OAApB;;MACA,KAAKv0B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgwD,MAAM,CAACjwD,MAAX,IAAqBiwD,MAAM,CAAChwD,CAAD,CAAN,CAAUw0B,CAAV,IAAe,CAAhD,EAAmD,EAAEx0B,CAArD,EAAwD;QACtDgwD,MAAM,CAAChwD,CAAD,CAAN,CAAUC,IAAV,CAAe,KAAKktB,SAApB;MACD;;MACD,KAAK8iC,aAAL;;MACA,OAAOjwD,CAAC,GAAGgwD,MAAM,CAACjwD,MAAlB,EAA0B,EAAEC,CAA5B,EAA+B;QAC7BgwD,MAAM,CAAChwD,CAAD,CAAN,CAAUC,IAAV,CAAe,KAAKktB,SAApB;MACD;;MACD,KAAKkxB,aAAL,CAAmB,WAAnB;IACD;;IACDlT,sBAAsB,CAACD,aAAD,EAAgB;MACpC,MAAMtf,QAAQ,GAAG,KAAK6gC,eAAtB;MACA,MAAM1vC,MAAM,GAAG,EAAf;MACA,IAAI/c,CAAJ,EAAOsV,IAAP;;MACA,KAAKtV,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGsW,QAAQ,CAAC7rB,MAA5B,EAAoCC,CAAC,GAAGsV,IAAxC,EAA8C,EAAEtV,CAAhD,EAAmD;QACjD,MAAMuuB,IAAI,GAAG3C,QAAQ,CAAC5rB,CAAD,CAArB;;QACA,IAAI,CAACkrC,aAAD,IAAkB3c,IAAI,CAACkb,OAA3B,EAAoC;UAClC1sB,MAAM,CAAC/b,IAAP,CAAYutB,IAAZ;QACD;MACF;;MACD,OAAOxR,MAAP;IACD;;IACD8O,4BAA4B,GAAG;MAC7B,OAAO,KAAKsf,sBAAL,CAA4B,IAA5B,CAAP;IACD;;IACD8kB,aAAa,GAAG;MACd,IAAI,KAAK5R,aAAL,CAAmB,oBAAnB,EAAyC;QAAC+I,UAAU,EAAE;MAAb,CAAzC,MAAiE,KAArE,EAA4E;QAC1E;MACD;;MACD,MAAMx7B,QAAQ,GAAG,KAAKC,4BAAL,EAAjB;;MACA,KAAK,IAAI7rB,CAAC,GAAG4rB,QAAQ,CAAC7rB,MAAT,GAAkB,CAA/B,EAAkCC,CAAC,IAAI,CAAvC,EAA0C,EAAEA,CAA5C,EAA+C;QAC7C,KAAKkwD,YAAL,CAAkBtkC,QAAQ,CAAC5rB,CAAD,CAA1B;MACD;;MACD,KAAKq+C,aAAL,CAAmB,mBAAnB;IACD;;IACD6R,YAAY,CAAC3hC,IAAD,EAAO;MACjB,MAAM/U,GAAG,GAAG,KAAKA,GAAjB;MACA,MAAM2J,IAAI,GAAGoL,IAAI,CAACqkB,KAAlB;MACA,MAAMud,OAAO,GAAG,CAAChtC,IAAI,CAAC6nB,QAAtB;MACA,MAAMloB,IAAI,GAAG,KAAKqK,SAAlB;MACA,MAAMxwB,IAAI,GAAG;QACX4xB,IADW;QAEX7Y,KAAK,EAAE6Y,IAAI,CAAC7Y,KAFD;QAGX0xC,UAAU,EAAE;MAHD,CAAb;;MAKA,IAAI,KAAK/I,aAAL,CAAmB,mBAAnB,EAAwC1hD,IAAxC,MAAkD,KAAtD,EAA6D;QAC3D;MACD;;MACD,IAAIwzD,OAAJ,EAAa;QACXjtC,QAAQ,CAAC1J,GAAD,EAAM;UACZ1b,IAAI,EAAEqlB,IAAI,CAACrlB,IAAL,KAAc,KAAd,GAAsB,CAAtB,GAA0BglB,IAAI,CAAChlB,IAAL,GAAYqlB,IAAI,CAACrlB,IADrC;UAEZC,KAAK,EAAEolB,IAAI,CAACplB,KAAL,KAAe,KAAf,GAAuB,KAAKiiB,KAA5B,GAAoC8C,IAAI,CAAC/kB,KAAL,GAAaolB,IAAI,CAACplB,KAFjD;UAGZilB,GAAG,EAAEG,IAAI,CAACH,GAAL,KAAa,KAAb,GAAqB,CAArB,GAAyBF,IAAI,CAACE,GAAL,GAAWG,IAAI,CAACH,GAHlC;UAIZC,MAAM,EAAEE,IAAI,CAACF,MAAL,KAAgB,KAAhB,GAAwB,KAAK5B,MAA7B,GAAsCyB,IAAI,CAACG,MAAL,GAAcE,IAAI,CAACF;QAJrD,CAAN,CAAR;MAMD;;MACDsL,IAAI,CAACrC,UAAL,CAAgBjsB,IAAhB;;MACA,IAAIkwD,OAAJ,EAAa;QACX/sC,UAAU,CAAC5J,GAAD,CAAV;MACD;;MACD7c,IAAI,CAACyqD,UAAL,GAAkB,KAAlB;MACA,KAAK/I,aAAL,CAAmB,kBAAnB,EAAuC1hD,IAAvC;IACD;;IACDyzD,yBAAyB,CAAC5tD,CAAD,EAAIqX,IAAJ,EAAU1D,OAAV,EAAmB+W,gBAAnB,EAAqC;MAC5D,MAAMrG,MAAM,GAAGwH,WAAW,CAACC,KAAZ,CAAkBzU,IAAlB,CAAf;;MACA,IAAI,OAAOgN,MAAP,KAAkB,UAAtB,EAAkC;QAChC,OAAOA,MAAM,CAAC,IAAD,EAAOrkB,CAAP,EAAU2T,OAAV,EAAmB+W,gBAAnB,CAAb;MACD;;MACD,OAAO,EAAP;IACD;;IACDuB,cAAc,CAAChZ,YAAD,EAAe;MAC3B,MAAM+Y,OAAO,GAAG,KAAK9O,IAAL,CAAU/G,QAAV,CAAmBlD,YAAnB,CAAhB;MACA,MAAMmW,QAAQ,GAAG,KAAKygC,SAAtB;MACA,IAAI99B,IAAI,GAAG3C,QAAQ,CAAC4E,MAAT,CAAgB3qB,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACyoD,QAAF,KAAe9/B,OAAzC,EAAkDluB,GAAlD,EAAX;;MACA,IAAI,CAACiuB,IAAL,EAAW;QACTA,IAAI,GAAG;UACLzvB,IAAI,EAAE,IADD;UAEL4gB,IAAI,EAAE,EAFD;UAGL8O,OAAO,EAAE,IAHJ;UAILtC,UAAU,EAAE,IAJP;UAKL+hB,MAAM,EAAE,IALH;UAMLsB,OAAO,EAAE,IANJ;UAOLE,OAAO,EAAE,IAPJ;UAQLgf,KAAK,EAAEjgC,OAAO,IAAIA,OAAO,CAACigC,KAAnB,IAA4B,CAR9B;UASL/4C,KAAK,EAAED,YATF;UAUL64C,QAAQ,EAAE9/B,OAVL;UAWLkf,OAAO,EAAE,EAXJ;UAYLvhB,OAAO,EAAE;QAZJ,CAAP;QAcAP,QAAQ,CAAC5qB,IAAT,CAAcutB,IAAd;MACD;;MACD,OAAOA,IAAP;IACD;;IACDrN,UAAU,GAAG;MACX,OAAO,KAAK4tB,QAAL,KAAkB,KAAKA,QAAL,GAAgB1e,aAAa,CAAC,IAAD,EAAO;QAACzxB,KAAK,EAAE,IAAR;QAAcG,IAAI,EAAE;MAApB,CAAP,CAA/C,CAAP;IACD;;IACDuxD,sBAAsB,GAAG;MACvB,OAAO,KAAKxkC,4BAAL,GAAoC9rB,MAA3C;IACD;;IACD2uD,gBAAgB,CAACj5C,YAAD,EAAe;MAC7B,MAAM+Y,OAAO,GAAG,KAAK9O,IAAL,CAAU/G,QAAV,CAAmBlD,YAAnB,CAAhB;;MACA,IAAI,CAAC+Y,OAAL,EAAc;QACZ,OAAO,KAAP;MACD;;MACD,MAAMD,IAAI,GAAG,KAAKE,cAAL,CAAoBhZ,YAApB,CAAb;MACA,OAAO,OAAO8Y,IAAI,CAAC0f,MAAZ,KAAuB,SAAvB,GAAmC,CAAC1f,IAAI,CAAC0f,MAAzC,GAAkD,CAACzf,OAAO,CAACyf,MAAlE;IACD;;IACDqiB,oBAAoB,CAAC76C,YAAD,EAAeg0B,OAAf,EAAwB;MAC1C,MAAMlb,IAAI,GAAG,KAAKE,cAAL,CAAoBhZ,YAApB,CAAb;MACA8Y,IAAI,CAAC0f,MAAL,GAAc,CAACxE,OAAf;IACD;;IACD8mB,oBAAoB,CAAC76C,KAAD,EAAQ;MAC1B,KAAKi3C,cAAL,CAAoBj3C,KAApB,IAA6B,CAAC,KAAKi3C,cAAL,CAAoBj3C,KAApB,CAA9B;IACD;;IACD86C,iBAAiB,CAAC96C,KAAD,EAAQ;MACvB,OAAO,CAAC,KAAKi3C,cAAL,CAAoBj3C,KAApB,CAAR;IACD;;IACD+6C,iBAAiB,CAACh7C,YAAD,EAAe83B,SAAf,EAA0B9D,OAA1B,EAAmC;MAClD,MAAM5vB,IAAI,GAAG4vB,OAAO,GAAG,MAAH,GAAY,MAAhC;MACA,MAAMlb,IAAI,GAAG,KAAKE,cAAL,CAAoBhZ,YAApB,CAAb;;MACA,MAAM7W,KAAK,GAAG2vB,IAAI,CAACrC,UAAL,CAAgBmnB,kBAAhB,CAAmC50C,SAAnC,EAA8Cob,IAA9C,CAAd;;MACA,IAAInC,OAAO,CAAC61B,SAAD,CAAX,EAAwB;QACtBhf,IAAI,CAAC7O,IAAL,CAAU6tB,SAAV,EAAqBU,MAArB,GAA8B,CAACxE,OAA/B;QACA,KAAKzV,MAAL;MACD,CAHD,MAGO;QACL,KAAKs8B,oBAAL,CAA0B76C,YAA1B,EAAwCg0B,OAAxC;QACA7qC,KAAK,CAACo1B,MAAN,CAAazF,IAAb,EAAmB;UAACkb;QAAD,CAAnB;QACA,KAAKzV,MAAL,CAAaxa,GAAD,IAASA,GAAG,CAAC/D,YAAJ,KAAqBA,YAArB,GAAoCoE,IAApC,GAA2Cpb,SAAhE;MACD;IACF;;IACDirC,IAAI,CAACj0B,YAAD,EAAe83B,SAAf,EAA0B;MAC5B,KAAKkjB,iBAAL,CAAuBh7C,YAAvB,EAAqC83B,SAArC,EAAgD,KAAhD;IACD;;IACDhE,IAAI,CAAC9zB,YAAD,EAAe83B,SAAf,EAA0B;MAC5B,KAAKkjB,iBAAL,CAAuBh7C,YAAvB,EAAqC83B,SAArC,EAAgD,IAAhD;IACD;;IACD6gB,mBAAmB,CAAC34C,YAAD,EAAe;MAChC,MAAM8Y,IAAI,GAAG,KAAK89B,SAAL,CAAe52C,YAAf,CAAb;;MACA,IAAI8Y,IAAI,IAAIA,IAAI,CAACrC,UAAjB,EAA6B;QAC3BqC,IAAI,CAACrC,UAAL,CAAgBmkB,QAAhB;MACD;;MACD,OAAO,KAAKgc,SAAL,CAAe52C,YAAf,CAAP;IACD;;IACDi7C,KAAK,GAAG;MACN,IAAI1wD,CAAJ,EAAOsV,IAAP;MACA,KAAK9T,IAAL;MACAI,QAAQ,CAACF,MAAT,CAAgB,IAAhB;;MACA,KAAK1B,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG,KAAKoK,IAAL,CAAU/G,QAAV,CAAmB5Y,MAAtC,EAA8CC,CAAC,GAAGsV,IAAlD,EAAwD,EAAEtV,CAA1D,EAA6D;QAC3D,KAAKouD,mBAAL,CAAyBpuD,CAAzB;MACD;IACF;;IACD2wD,OAAO,GAAG;MACR,KAAKtS,aAAL,CAAmB,eAAnB;MACA,MAAM;QAACp9B,MAAD;QAASzH;MAAT,IAAgB,IAAtB;;MACA,KAAKk3C,KAAL;;MACA,KAAKhtB,MAAL,CAAYmmB,UAAZ;;MACA,IAAI5oC,MAAJ,EAAY;QACV,KAAKsuC,YAAL;QACAvuC,WAAW,CAACC,MAAD,EAASzH,GAAT,CAAX;QACA,KAAKV,QAAL,CAAcyqB,cAAd,CAA6B/pB,GAA7B;QACA,KAAKyH,MAAL,GAAc,IAAd;QACA,KAAKzH,GAAL,GAAW,IAAX;MACD;;MACD,KAAK6kC,aAAL,CAAmB,SAAnB;MACA,OAAOmN,SAAS,CAAC,KAAKx3C,EAAN,CAAhB;MACA,KAAKqqC,aAAL,CAAmB,cAAnB;IACD;;IACDuS,aAAa,GAAU;MACrB,OAAO,KAAK3vC,MAAL,CAAY4vC,SAAZ,CAAsB,YAAtB,CAAP;IACD;;IACD7D,UAAU,GAAG;MACX,KAAK8D,cAAL;;MACA,IAAI,KAAK36C,OAAL,CAAaiE,UAAjB,EAA6B;QAC3B,KAAK22C,oBAAL;MACD,CAFD,MAEO;QACL,KAAKnE,QAAL,GAAgB,IAAhB;MACD;IACF;;IACDkE,cAAc,GAAG;MACf,MAAM9xD,SAAS,GAAG,KAAKutD,UAAvB;MACA,MAAMzzC,QAAQ,GAAG,KAAKA,QAAtB;;MACA,MAAMk4C,IAAI,GAAG,CAAClyD,IAAD,EAAO2nB,QAAP,KAAoB;QAC/B3N,QAAQ,CAACsS,gBAAT,CAA0B,IAA1B,EAAgCtsB,IAAhC,EAAsC2nB,QAAtC;QACAznB,SAAS,CAACF,IAAD,CAAT,GAAkB2nB,QAAlB;MACD,CAHD;;MAIA,MAAMA,QAAQ,GAAG,CAACjkB,CAAD,EAAIqD,CAAJ,EAAOuX,CAAP,KAAa;QAC5B5a,CAAC,CAACwmB,OAAF,GAAYnjB,CAAZ;QACArD,CAAC,CAACymB,OAAF,GAAY7L,CAAZ;;QACA,KAAK+xC,aAAL,CAAmB3sD,CAAnB;MACD,CAJD;;MAKAwS,IAAI,CAAC,KAAKmB,OAAL,CAAa8C,MAAd,EAAuBna,IAAD,IAAUkyD,IAAI,CAAClyD,IAAD,EAAO2nB,QAAP,CAApC,CAAJ;IACD;;IACDsqC,oBAAoB,GAAG;MACrB,IAAI,CAAC,KAAKvE,oBAAV,EAAgC;QAC9B,KAAKA,oBAAL,GAA4B,EAA5B;MACD;;MACD,MAAMxtD,SAAS,GAAG,KAAKwtD,oBAAvB;MACA,MAAM1zC,QAAQ,GAAG,KAAKA,QAAtB;;MACA,MAAMk4C,IAAI,GAAG,CAAClyD,IAAD,EAAO2nB,QAAP,KAAoB;QAC/B3N,QAAQ,CAACsS,gBAAT,CAA0B,IAA1B,EAAgCtsB,IAAhC,EAAsC2nB,QAAtC;QACAznB,SAAS,CAACF,IAAD,CAAT,GAAkB2nB,QAAlB;MACD,CAHD;;MAIA,MAAMwqC,OAAO,GAAG,CAACnyD,IAAD,EAAO2nB,QAAP,KAAoB;QAClC,IAAIznB,SAAS,CAACF,IAAD,CAAb,EAAqB;UACnBga,QAAQ,CAACuS,mBAAT,CAA6B,IAA7B,EAAmCvsB,IAAnC,EAAyC2nB,QAAzC;UACA,OAAOznB,SAAS,CAACF,IAAD,CAAhB;QACD;MACF,CALD;;MAMA,MAAM2nB,QAAQ,GAAG,CAACzG,KAAD,EAAQqB,MAAR,KAAmB;QAClC,IAAI,KAAKJ,MAAT,EAAiB;UACf,KAAKolB,MAAL,CAAYrmB,KAAZ,EAAmBqB,MAAnB;QACD;MACF,CAJD;;MAKA,IAAI6vC,QAAJ;;MACA,MAAMtE,QAAQ,GAAG,MAAM;QACrBqE,OAAO,CAAC,QAAD,EAAWrE,QAAX,CAAP;;QACA,KAAKA,QAAL,GAAgB,IAAhB;QACA,KAAKvmB,MAAL;;QACA2qB,IAAI,CAAC,QAAD,EAAWvqC,QAAX,CAAJ;;QACAuqC,IAAI,CAAC,QAAD,EAAWE,QAAX,CAAJ;MACD,CAND;;MAOAA,QAAQ,GAAG,MAAM;QACf,KAAKtE,QAAL,GAAgB,KAAhB;;QACAqE,OAAO,CAAC,QAAD,EAAWxqC,QAAX,CAAP;;QACA,KAAKiqC,KAAL;;QACA,KAAKzD,OAAL,CAAa,CAAb,EAAgB,CAAhB;;QACA+D,IAAI,CAAC,QAAD,EAAWpE,QAAX,CAAJ;MACD,CAND;;MAOA,IAAI9zC,QAAQ,CAAC0qB,UAAT,CAAoB,KAAKviB,MAAzB,CAAJ,EAAsC;QACpC2rC,QAAQ;MACT,CAFD,MAEO;QACLsE,QAAQ;MACT;IACF;;IACD3B,YAAY,GAAG;MACbv6C,IAAI,CAAC,KAAKu3C,UAAN,EAAkB,CAAC9lC,QAAD,EAAW3nB,IAAX,KAAoB;QACxC,KAAKga,QAAL,CAAcuS,mBAAd,CAAkC,IAAlC,EAAwCvsB,IAAxC,EAA8C2nB,QAA9C;MACD,CAFG,CAAJ;MAGA,KAAK8lC,UAAL,GAAkB,EAAlB;MACAv3C,IAAI,CAAC,KAAKw3C,oBAAN,EAA4B,CAAC/lC,QAAD,EAAW3nB,IAAX,KAAoB;QAClD,KAAKga,QAAL,CAAcuS,mBAAd,CAAkC,IAAlC,EAAwCvsB,IAAxC,EAA8C2nB,QAA9C;MACD,CAFG,CAAJ;MAGA,KAAK+lC,oBAAL,GAA4B/tD,SAA5B;IACD;;IACD0yD,gBAAgB,CAACrxD,KAAD,EAAQ+Z,IAAR,EAAcs+B,OAAd,EAAuB;MACrC,MAAMtgB,MAAM,GAAGsgB,OAAO,GAAG,KAAH,GAAW,QAAjC;MACA,IAAI5pB,IAAJ,EAAUruB,IAAV,EAAgBF,CAAhB,EAAmBsV,IAAnB;;MACA,IAAIuE,IAAI,KAAK,SAAb,EAAwB;QACtB0U,IAAI,GAAG,KAAKE,cAAL,CAAoB3uB,KAAK,CAAC,CAAD,CAAL,CAAS2V,YAA7B,CAAP;QACA8Y,IAAI,CAACrC,UAAL,CAAgB,MAAM2L,MAAN,GAAe,mBAA/B;MACD;;MACD,KAAK73B,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGxV,KAAK,CAACC,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2C,EAAEtV,CAA7C,EAAgD;QAC9CE,IAAI,GAAGJ,KAAK,CAACE,CAAD,CAAZ;QACA,MAAMksB,UAAU,GAAGhsB,IAAI,IAAI,KAAKuuB,cAAL,CAAoBvuB,IAAI,CAACuV,YAAzB,EAAuCyW,UAAlE;;QACA,IAAIA,UAAJ,EAAgB;UACdA,UAAU,CAAC2L,MAAM,GAAG,YAAV,CAAV,CAAkC33B,IAAI,CAACgoB,OAAvC,EAAgDhoB,IAAI,CAACuV,YAArD,EAAmEvV,IAAI,CAACwV,KAAxE;QACD;MACF;IACF;;IACD07C,iBAAiB,GAAG;MAClB,OAAO,KAAKjxD,OAAL,IAAgB,EAAvB;IACD;;IACDkxD,iBAAiB,CAACC,cAAD,EAAiB;MAChC,MAAMC,UAAU,GAAG,KAAKpxD,OAAL,IAAgB,EAAnC;MACA,MAAMwoC,MAAM,GAAG2oB,cAAc,CAACrsD,GAAf,CAAmB,SAA2B;QAAA,IAA1B;UAACwQ,YAAD;UAAeC;QAAf,CAA0B;QAC3D,MAAM6Y,IAAI,GAAG,KAAKE,cAAL,CAAoBhZ,YAApB,CAAb;;QACA,IAAI,CAAC8Y,IAAL,EAAW;UACT,MAAM,IAAI0J,KAAJ,CAAU,+BAA+BxiB,YAAzC,CAAN;QACD;;QACD,OAAO;UACLA,YADK;UAELyS,OAAO,EAAEqG,IAAI,CAAC7O,IAAL,CAAUhK,KAAV,CAFJ;UAGLA;QAHK,CAAP;MAKD,CAVc,CAAf;MAWA,MAAMqe,OAAO,GAAG,CAAC5e,cAAc,CAACwzB,MAAD,EAAS4oB,UAAT,CAA/B;;MACA,IAAIx9B,OAAJ,EAAa;QACX,KAAK5zB,OAAL,GAAewoC,MAAf;QACA,KAAK2jB,UAAL,GAAkB,IAAlB;;QACA,KAAK8C,kBAAL,CAAwBzmB,MAAxB,EAAgC4oB,UAAhC;MACD;IACF;;IACDlT,aAAa,CAAC2I,IAAD,EAAOrqD,IAAP,EAAa6zB,MAAb,EAAqB;MAChC,OAAO,KAAKk8B,QAAL,CAAc3F,MAAd,CAAqB,IAArB,EAA2BC,IAA3B,EAAiCrqD,IAAjC,EAAuC6zB,MAAvC,CAAP;IACD;;IACD4+B,kBAAkB,CAACzmB,MAAD,EAAS4oB,UAAT,EAAqBC,MAArB,EAA6B;MAC7C,MAAMC,YAAY,GAAG,KAAKt7C,OAAL,CAAamD,KAAlC;;MACA,MAAMigC,IAAI,GAAG,CAACn3C,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACouB,MAAF,CAAS3qB,CAAC,IAAI,CAACxD,CAAC,CAACslD,IAAF,CAAOvqC,CAAC,IAAIvX,CAAC,CAAC4P,YAAF,KAAmB2H,CAAC,CAAC3H,YAArB,IAAqC5P,CAAC,CAAC6P,KAAF,KAAY0H,CAAC,CAAC1H,KAA/D,CAAf,CAAvB;;MACA,MAAMg8C,WAAW,GAAGnY,IAAI,CAACgY,UAAD,EAAa5oB,MAAb,CAAxB;MACA,MAAMgpB,SAAS,GAAGH,MAAM,GAAG7oB,MAAH,GAAY4Q,IAAI,CAAC5Q,MAAD,EAAS4oB,UAAT,CAAxC;;MACA,IAAIG,WAAW,CAAC3xD,MAAhB,EAAwB;QACtB,KAAKoxD,gBAAL,CAAsBO,WAAtB,EAAmCD,YAAY,CAAC53C,IAAhD,EAAsD,KAAtD;MACD;;MACD,IAAI83C,SAAS,CAAC5xD,MAAV,IAAoB0xD,YAAY,CAAC53C,IAArC,EAA2C;QACzC,KAAKs3C,gBAAL,CAAsBQ,SAAtB,EAAiCF,YAAY,CAAC53C,IAA9C,EAAoD,IAApD;MACD;IACF;;IACDs1C,aAAa,CAAC3sD,CAAD,EAAIgvD,MAAJ,EAAY;MACvB,MAAM70D,IAAI,GAAG;QACXmE,KAAK,EAAE0B,CADI;QAEXgvD,MAFW;QAGXpK,UAAU,EAAE,IAHD;QAIX0E,WAAW,EAAElpC,cAAc,CAACpgB,CAAD,EAAI,KAAK2qB,SAAT,EAAoB,KAAKC,WAAzB;MAJhB,CAAb;;MAMA,MAAMwkC,WAAW,GAAIzK,MAAD,IAAY,CAACA,MAAM,CAAChxC,OAAP,CAAe8C,MAAf,IAAyB,KAAK9C,OAAL,CAAa8C,MAAvC,EAA+CqY,QAA/C,CAAwD9uB,CAAC,CAACsmB,MAAF,CAAShqB,IAAjE,CAAhC;;MACA,IAAI,KAAKu/C,aAAL,CAAmB,aAAnB,EAAkC1hD,IAAlC,EAAwCi1D,WAAxC,MAAyD,KAA7D,EAAoE;QAClE;MACD;;MACD,MAAM79B,OAAO,GAAG,KAAK89B,YAAL,CAAkBrvD,CAAlB,EAAqBgvD,MAArB,EAA6B70D,IAAI,CAACmvD,WAAlC,CAAhB;;MACAnvD,IAAI,CAACyqD,UAAL,GAAkB,KAAlB;MACA,KAAK/I,aAAL,CAAmB,YAAnB,EAAiC1hD,IAAjC,EAAuCi1D,WAAvC;;MACA,IAAI79B,OAAO,IAAIp3B,IAAI,CAACo3B,OAApB,EAA6B;QAC3B,KAAKu5B,MAAL;MACD;;MACD,OAAO,IAAP;IACD;;IACDuE,YAAY,CAACrvD,CAAD,EAAIgvD,MAAJ,EAAY1F,WAAZ,EAAyB;MACnC,MAAM;QAAC3rD,OAAO,EAAEoxD,UAAU,GAAG,EAAvB;QAA2Bp7C;MAA3B,IAAsC,IAA5C;MACA,MAAM+W,gBAAgB,GAAGskC,MAAzB;;MACA,MAAM7oB,MAAM,GAAG,KAAKmpB,kBAAL,CAAwBtvD,CAAxB,EAA2B+uD,UAA3B,EAAuCzF,WAAvC,EAAoD5+B,gBAApD,CAAf;;MACA,MAAM6+B,OAAO,GAAGj0C,aAAa,CAACtV,CAAD,CAA7B;;MACA,MAAMqpD,SAAS,GAAGD,kBAAkB,CAACppD,CAAD,EAAI,KAAK8pD,UAAT,EAAqBR,WAArB,EAAkCC,OAAlC,CAApC;;MACA,IAAID,WAAJ,EAAiB;QACf,KAAKQ,UAAL,GAAkB,IAAlB;QACAlwD,QAAQ,CAAC+Z,OAAO,CAAC6D,OAAT,EAAkB,CAACxX,CAAD,EAAImmC,MAAJ,EAAY,IAAZ,CAAlB,EAAqC,IAArC,CAAR;;QACA,IAAIojB,OAAJ,EAAa;UACX3vD,QAAQ,CAAC+Z,OAAO,CAAC8D,OAAT,EAAkB,CAACzX,CAAD,EAAImmC,MAAJ,EAAY,IAAZ,CAAlB,EAAqC,IAArC,CAAR;QACD;MACF;;MACD,MAAM5U,OAAO,GAAG,CAAC5e,cAAc,CAACwzB,MAAD,EAAS4oB,UAAT,CAA/B;;MACA,IAAIx9B,OAAO,IAAIy9B,MAAf,EAAuB;QACrB,KAAKrxD,OAAL,GAAewoC,MAAf;;QACA,KAAKymB,kBAAL,CAAwBzmB,MAAxB,EAAgC4oB,UAAhC,EAA4CC,MAA5C;MACD;;MACD,KAAKlF,UAAL,GAAkBT,SAAlB;MACA,OAAO93B,OAAP;IACD;;IACD+9B,kBAAkB,CAACtvD,CAAD,EAAI+uD,UAAJ,EAAgBzF,WAAhB,EAA6B5+B,gBAA7B,EAA+C;MAC/D,IAAI1qB,CAAC,CAAC1D,IAAF,KAAW,UAAf,EAA2B;QACzB,OAAO,EAAP;MACD;;MACD,IAAI,CAACgtD,WAAL,EAAkB;QAChB,OAAOyF,UAAP;MACD;;MACD,MAAME,YAAY,GAAG,KAAKt7C,OAAL,CAAamD,KAAlC;MACA,OAAO,KAAK82C,yBAAL,CAA+B5tD,CAA/B,EAAkCivD,YAAY,CAAC53C,IAA/C,EAAqD43C,YAArD,EAAmEvkC,gBAAnE,CAAP;IACD;;EA1vBS;;EA4vBZ,MAAM6kC,iBAAiB,GAAG,MAAM/8C,IAAI,CAACnZ,KAAK,CAAC2vD,SAAP,EAAmB7sD,KAAD,IAAWA,KAAK,CAAC+tD,QAAN,CAAerF,UAAf,EAA7B,CAApC;;EACA,MAAMjsC,UAAU,GAAG,IAAnB;EACA1K,MAAM,CAACwK,gBAAP,CAAwBrf,KAAxB,EAA+B;IAC7Byf,QAAQ,EAAE;MACRF,UADQ;MAER1H,KAAK,EAAE4H;IAFC,CADmB;IAK7BkwC,SAAS,EAAE;MACTpwC,UADS;MAET1H,KAAK,EAAE83C;IAFE,CALkB;IAS7BzzC,SAAS,EAAE;MACTqD,UADS;MAET1H,KAAK,EAAEqE;IAFE,CATkB;IAa7B2uC,QAAQ,EAAE;MACRtrC,UADQ;MAER1H,KAAK,EAAEgzC;IAFC,CAbmB;IAiB7BkE,OAAO,EAAE;MACPxvC,UADO;MAEP1H,KAAK,EAAEk3C;IAFA,CAjBoB;IAqB7Ba,QAAQ,EAAE;MACRrwC,UADQ;MAER1H,KAAK,EAAE+3C;IAFC,CArBmB;IAyB7BjH,QAAQ,EAAE;MACRppC,UADQ;MAER1H,KAAK,EAAE,YAAc;QACnBgzC,QAAQ,CAACzlD,GAAT,CAAa,YAAb;QACA8wD,iBAAiB;MAClB;IALO,CAzBmB;IAgC7BnN,UAAU,EAAE;MACVxpC,UADU;MAEV1H,KAAK,EAAE,YAAc;QACnBgzC,QAAQ,CAAChlD,MAAT,CAAgB,YAAhB;QACAqwD,iBAAiB;MAClB;IALS;EAhCiB,CAA/B;;EAyCA,SAASC,QAAT,GAAoB;IAClB,MAAM,IAAI/5B,KAAJ,CAAU,iFAAV,CAAN;EACD;;EACD,MAAMg6B,WAAN,CAAkB;IAChB9zD,WAAW,CAACgY,OAAD,EAAU;MACnB,KAAKA,OAAL,GAAeA,OAAO,IAAI,EAA1B;IACD;;IACD+7C,OAAO,GAAG;MACR,OAAOF,QAAQ,EAAf;IACD;;IACD9gB,KAAK,CAACx9B,KAAD,EAAQurB,MAAR,EAAgB;MACnB,OAAO+yB,QAAQ,EAAf;IACD;;IACD/yB,MAAM,CAACkzB,SAAD,EAAYlzB,MAAZ,EAAoB;MACxB,OAAO+yB,QAAQ,EAAf;IACD;;IACD/wD,GAAG,CAACkxD,SAAD,EAAYC,MAAZ,EAAoBC,IAApB,EAA0B;MAC3B,OAAOL,QAAQ,EAAf;IACD;;IACDzY,IAAI,CAACn3C,CAAD,EAAIC,CAAJ,EAAOgwD,IAAP,EAAa;MACf,OAAOL,QAAQ,EAAf;IACD;;IACDM,OAAO,CAACH,SAAD,EAAYE,IAAZ,EAAkBE,OAAlB,EAA2B;MAChC,OAAOP,QAAQ,EAAf;IACD;;IACDQ,KAAK,CAACL,SAAD,EAAYE,IAAZ,EAAkB;MACrB,OAAOL,QAAQ,EAAf;IACD;;EAxBe;;EA0BlBC,WAAW,CAACv3C,QAAZ,GAAuB,UAAS+3C,OAAT,EAAkB;IACvC/hD,MAAM,CAACgB,MAAP,CAAcugD,WAAW,CAACp1D,SAA1B,EAAqC41D,OAArC;EACD,CAFD;;EAGA,IAAIC,SAAS,GAAG;IACdC,KAAK,EAAEV;EADO,CAAhB;;EAIA,SAASW,iBAAT,CAA2Bv4C,KAA3B,EAAkCvb,IAAlC,EAAwC;IACtC,IAAI,CAACub,KAAK,CAAC6hC,MAAN,CAAa2W,IAAlB,EAAwB;MACtB,MAAMC,YAAY,GAAGz4C,KAAK,CAACqyB,uBAAN,CAA8B5tC,IAA9B,CAArB;MACA,IAAIuZ,MAAM,GAAG,EAAb;;MACA,KAAK,IAAIrY,CAAC,GAAG,CAAR,EAAWsV,IAAI,GAAGw9C,YAAY,CAAC/yD,MAApC,EAA4CC,CAAC,GAAGsV,IAAhD,EAAsDtV,CAAC,EAAvD,EAA2D;QACzDqY,MAAM,GAAGA,MAAM,CAACka,MAAP,CAAcugC,YAAY,CAAC9yD,CAAD,CAAZ,CAAgBksB,UAAhB,CAA2BqmB,kBAA3B,CAA8Cl4B,KAA9C,CAAd,CAAT;MACD;;MACDA,KAAK,CAAC6hC,MAAN,CAAa2W,IAAb,GAAoB1rC,YAAY,CAAC9O,MAAM,CAAC4E,IAAP,CAAY,CAAC7a,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA1B,CAAD,CAAhC;IACD;;IACD,OAAOgY,KAAK,CAAC6hC,MAAN,CAAa2W,IAApB;EACD;;EACD,SAASE,oBAAT,CAA8BxkC,IAA9B,EAAoC;IAClC,MAAMlU,KAAK,GAAGkU,IAAI,CAACnC,MAAnB;IACA,MAAM/T,MAAM,GAAGu6C,iBAAiB,CAACv4C,KAAD,EAAQkU,IAAI,CAACzvB,IAAb,CAAhC;IACA,IAAIS,GAAG,GAAG8a,KAAK,CAACy+B,OAAhB;IACA,IAAI94C,CAAJ,EAAOsV,IAAP,EAAa09C,IAAb,EAAmBp3B,IAAnB;;IACA,MAAMq3B,gBAAgB,GAAG,MAAM;MAC7B,IAAID,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,CAAC,KAAhC,EAAuC;QACrC;MACD;;MACD,IAAIt7C,OAAO,CAACkkB,IAAD,CAAX,EAAmB;QACjBr8B,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAcD,IAAI,CAACge,GAAL,CAAS01C,IAAI,GAAGp3B,IAAhB,KAAyBr8B,GAAvC,CAAN;MACD;;MACDq8B,IAAI,GAAGo3B,IAAP;IACD,CARD;;IASA,KAAKhzD,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG+C,MAAM,CAACtY,MAA1B,EAAkCC,CAAC,GAAGsV,IAAtC,EAA4C,EAAEtV,CAA9C,EAAiD;MAC/CgzD,IAAI,GAAG34C,KAAK,CAAC0gC,gBAAN,CAAuB1iC,MAAM,CAACrY,CAAD,CAA7B,CAAP;MACAizD,gBAAgB;IACjB;;IACDr3B,IAAI,GAAGn9B,SAAP;;IACA,KAAKuB,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG+E,KAAK,CAACw7B,KAAN,CAAY91C,MAA/B,EAAuCC,CAAC,GAAGsV,IAA3C,EAAiD,EAAEtV,CAAnD,EAAsD;MACpDgzD,IAAI,GAAG34C,KAAK,CAAC+/B,eAAN,CAAsBp6C,CAAtB,CAAP;MACAizD,gBAAgB;IACjB;;IACD,OAAO1zD,GAAP;EACD;;EACD,SAAS2zD,wBAAT,CAAkCx9C,KAAlC,EAAyCy9C,KAAzC,EAAgDh9C,OAAhD,EAAyDi9C,UAAzD,EAAqE;IACnE,MAAMC,SAAS,GAAGl9C,OAAO,CAACm9C,YAA1B;IACA,IAAIz7C,IAAJ,EAAUvG,KAAV;;IACA,IAAI2C,aAAa,CAACo/C,SAAD,CAAjB,EAA8B;MAC5Bx7C,IAAI,GAAGs7C,KAAK,CAAC5zD,GAAN,GAAY4W,OAAO,CAACo9C,kBAA3B;MACAjiD,KAAK,GAAG6E,OAAO,CAACq9C,aAAhB;IACD,CAHD,MAGO;MACL37C,IAAI,GAAGw7C,SAAS,GAAGD,UAAnB;MACA9hD,KAAK,GAAG,CAAR;IACD;;IACD,OAAO;MACLmiD,KAAK,EAAE57C,IAAI,GAAGu7C,UADT;MAEL9hD,KAFK;MAGL3T,KAAK,EAAEw1D,KAAK,CAACO,MAAN,CAAah+C,KAAb,IAAuBmC,IAAI,GAAG;IAHhC,CAAP;EAKD;;EACD,SAAS87C,yBAAT,CAAmCj+C,KAAnC,EAA0Cy9C,KAA1C,EAAiDh9C,OAAjD,EAA0Di9C,UAA1D,EAAsE;IACpE,MAAMM,MAAM,GAAGP,KAAK,CAACO,MAArB;IACA,MAAMV,IAAI,GAAGU,MAAM,CAACh+C,KAAD,CAAnB;IACA,IAAIkmB,IAAI,GAAGlmB,KAAK,GAAG,CAAR,GAAYg+C,MAAM,CAACh+C,KAAK,GAAG,CAAT,CAAlB,GAAgC,IAA3C;IACA,IAAI8jB,IAAI,GAAG9jB,KAAK,GAAGg+C,MAAM,CAAC3zD,MAAP,GAAgB,CAAxB,GAA4B2zD,MAAM,CAACh+C,KAAK,GAAG,CAAT,CAAlC,GAAgD,IAA3D;IACA,MAAMk+C,OAAO,GAAGz9C,OAAO,CAACo9C,kBAAxB;;IACA,IAAI33B,IAAI,KAAK,IAAb,EAAmB;MACjBA,IAAI,GAAGo3B,IAAI,IAAIx5B,IAAI,KAAK,IAAT,GAAgB25B,KAAK,CAACv1D,GAAN,GAAYu1D,KAAK,CAACx1D,KAAlC,GAA0C67B,IAAI,GAAGw5B,IAArD,CAAX;IACD;;IACD,IAAIx5B,IAAI,KAAK,IAAb,EAAmB;MACjBA,IAAI,GAAGw5B,IAAI,GAAGA,IAAP,GAAcp3B,IAArB;IACD;;IACD,MAAMj+B,KAAK,GAAGq1D,IAAI,GAAG,CAACA,IAAI,GAAG1zD,IAAI,CAACC,GAAL,CAASq8B,IAAT,EAAepC,IAAf,CAAR,IAAgC,CAAhC,GAAoCo6B,OAAzD;IACA,MAAM/7C,IAAI,GAAGvY,IAAI,CAACge,GAAL,CAASkc,IAAI,GAAGoC,IAAhB,IAAwB,CAAxB,GAA4Bg4B,OAAzC;IACA,OAAO;MACLH,KAAK,EAAE57C,IAAI,GAAGu7C,UADT;MAEL9hD,KAAK,EAAE6E,OAAO,CAACq9C,aAFV;MAGL71D;IAHK,CAAP;EAKD;;EACD,SAASk2D,aAAT,CAAuBnuB,KAAvB,EAA8BxlC,IAA9B,EAAoCssC,MAApC,EAA4CxsC,CAA5C,EAA+C;IAC7C,MAAM8zD,UAAU,GAAGtnB,MAAM,CAAC0E,KAAP,CAAaxL,KAAK,CAAC,CAAD,CAAlB,EAAuB1lC,CAAvB,CAAnB;IACA,MAAM+zD,QAAQ,GAAGvnB,MAAM,CAAC0E,KAAP,CAAaxL,KAAK,CAAC,CAAD,CAAlB,EAAuB1lC,CAAvB,CAAjB;IACA,MAAMT,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASu0D,UAAT,EAAqBC,QAArB,CAAZ;IACA,MAAMzyD,GAAG,GAAGhC,IAAI,CAACgC,GAAL,CAASwyD,UAAT,EAAqBC,QAArB,CAAZ;IACA,IAAIC,QAAQ,GAAGz0D,GAAf;IACA,IAAI00D,MAAM,GAAG3yD,GAAb;;IACA,IAAIhC,IAAI,CAACge,GAAL,CAAS/d,GAAT,IAAgBD,IAAI,CAACge,GAAL,CAAShc,GAAT,CAApB,EAAmC;MACjC0yD,QAAQ,GAAG1yD,GAAX;MACA2yD,MAAM,GAAG10D,GAAT;IACD;;IACDW,IAAI,CAACssC,MAAM,CAACvgB,IAAR,CAAJ,GAAoBgoC,MAApB;IACA/zD,IAAI,CAACg0D,OAAL,GAAe;MACbF,QADa;MAEbC,MAFa;MAGbt2D,KAAK,EAAEm2D,UAHM;MAIbl2D,GAAG,EAAEm2D,QAJQ;MAKbx0D,GALa;MAMb+B;IANa,CAAf;EAQD;;EACD,SAAS6yD,UAAT,CAAoBzuB,KAApB,EAA2BxlC,IAA3B,EAAiCssC,MAAjC,EAAyCxsC,CAAzC,EAA4C;IAC1C,IAAIgF,OAAO,CAAC0gC,KAAD,CAAX,EAAoB;MAClBmuB,aAAa,CAACnuB,KAAD,EAAQxlC,IAAR,EAAcssC,MAAd,EAAsBxsC,CAAtB,CAAb;IACD,CAFD,MAEO;MACLE,IAAI,CAACssC,MAAM,CAACvgB,IAAR,CAAJ,GAAoBugB,MAAM,CAAC0E,KAAP,CAAaxL,KAAb,EAAoB1lC,CAApB,CAApB;IACD;;IACD,OAAOE,IAAP;EACD;;EACD,SAASk0D,qBAAT,CAA+B7lC,IAA/B,EAAqC7O,IAArC,EAA2C/hB,KAA3C,EAAkD6zB,KAAlD,EAAyD;IACvD,MAAMpF,MAAM,GAAGmC,IAAI,CAACnC,MAApB;IACA,MAAMogB,MAAM,GAAGje,IAAI,CAACie,MAApB;IACA,MAAMgF,MAAM,GAAGplB,MAAM,CAACqlB,SAAP,EAAf;IACA,MAAMC,WAAW,GAAGtlB,MAAM,KAAKogB,MAA/B;IACA,MAAMI,MAAM,GAAG,EAAf;IACA,IAAI5sC,CAAJ,EAAOsV,IAAP,EAAapV,IAAb,EAAmBwlC,KAAnB;;IACA,KAAK1lC,CAAC,GAAGrC,KAAJ,EAAW2X,IAAI,GAAG3X,KAAK,GAAG6zB,KAA/B,EAAsCxxB,CAAC,GAAGsV,IAA1C,EAAgD,EAAEtV,CAAlD,EAAqD;MACnD0lC,KAAK,GAAGhmB,IAAI,CAAC1f,CAAD,CAAZ;MACAE,IAAI,GAAG,EAAP;MACAA,IAAI,CAACksB,MAAM,CAACH,IAAR,CAAJ,GAAoBylB,WAAW,IAAItlB,MAAM,CAAC8kB,KAAP,CAAaM,MAAM,CAACxxC,CAAD,CAAnB,EAAwBA,CAAxB,CAAnC;MACA4sC,MAAM,CAAC5rC,IAAP,CAAYmzD,UAAU,CAACzuB,KAAD,EAAQxlC,IAAR,EAAcssC,MAAd,EAAsBxsC,CAAtB,CAAtB;IACD;;IACD,OAAO4sC,MAAP;EACD;;EACD,SAASynB,UAAT,CAAoBC,MAApB,EAA4B;IAC1B,OAAOA,MAAM,IAAIA,MAAM,CAACN,QAAP,KAAoBv1D,SAA9B,IAA2C61D,MAAM,CAACL,MAAP,KAAkBx1D,SAApE;EACD;;EACD,SAAS81D,OAAT,CAAiB18C,IAAjB,EAAuB20B,MAAvB,EAA+BgoB,UAA/B,EAA2C;IACzC,IAAI38C,IAAI,KAAK,CAAb,EAAgB;MACd,OAAOwE,IAAI,CAACxE,IAAD,CAAX;IACD;;IACD,OAAO,CAAC20B,MAAM,CAACvb,YAAP,KAAwB,CAAxB,GAA4B,CAAC,CAA9B,KAAoCub,MAAM,CAACjtC,GAAP,IAAci1D,UAAd,GAA2B,CAA3B,GAA+B,CAAC,CAApE,CAAP;EACD;;EACD,SAASC,WAAT,CAAqBnrB,UAArB,EAAiC;IAC/B,IAAIp0B,OAAJ,EAAavX,KAAb,EAAoBC,GAApB,EAAyBolB,GAAzB,EAA8BC,MAA9B;;IACA,IAAIqmB,UAAU,CAACtY,UAAf,EAA2B;MACzB9b,OAAO,GAAGo0B,UAAU,CAACxiB,IAAX,GAAkBwiB,UAAU,CAACzjC,CAAvC;MACAlI,KAAK,GAAG,MAAR;MACAC,GAAG,GAAG,OAAN;IACD,CAJD,MAIO;MACLsX,OAAO,GAAGo0B,UAAU,CAACxiB,IAAX,GAAkBwiB,UAAU,CAAClsB,CAAvC;MACAzf,KAAK,GAAG,QAAR;MACAC,GAAG,GAAG,KAAN;IACD;;IACD,IAAIsX,OAAJ,EAAa;MACX8N,GAAG,GAAG,KAAN;MACAC,MAAM,GAAG,OAAT;IACD,CAHD,MAGO;MACLD,GAAG,GAAG,OAAN;MACAC,MAAM,GAAG,KAAT;IACD;;IACD,OAAO;MAACtlB,KAAD;MAAQC,GAAR;MAAasX,OAAb;MAAsB8N,GAAtB;MAA2BC;IAA3B,CAAP;EACD;;EACD,SAASyxC,gBAAT,CAA0BprB,UAA1B,EAAsCnzB,OAAtC,EAA+C2a,KAA/C,EAAsDpb,KAAtD,EAA6D;IAC3D,IAAIgkC,IAAI,GAAGvjC,OAAO,CAACw+C,aAAnB;IACA,MAAM5tC,GAAG,GAAG,EAAZ;;IACA,IAAI,CAAC2yB,IAAL,EAAW;MACTpQ,UAAU,CAACqrB,aAAX,GAA2B5tC,GAA3B;MACA;IACD;;IACD,MAAM;MAACppB,KAAD;MAAQC,GAAR;MAAasX,OAAb;MAAsB8N,GAAtB;MAA2BC;IAA3B,IAAqCwxC,WAAW,CAACnrB,UAAD,CAAtD;;IACA,IAAIoQ,IAAI,KAAK,QAAT,IAAqB5oB,KAAzB,EAAgC;MAC9BwY,UAAU,CAACsrB,kBAAX,GAAgC,IAAhC;;MACA,IAAI,CAAC9jC,KAAK,CAACmc,IAAN,IAAc,CAAf,MAAsBv3B,KAA1B,EAAiC;QAC/BgkC,IAAI,GAAG12B,GAAP;MACD,CAFD,MAEO,IAAI,CAAC8N,KAAK,CAACoc,OAAN,IAAiB,CAAlB,MAAyBx3B,KAA7B,EAAoC;QACzCgkC,IAAI,GAAGz2B,MAAP;MACD,CAFM,MAEA;QACL8D,GAAG,CAAC8tC,SAAS,CAAC5xC,MAAD,EAAStlB,KAAT,EAAgBC,GAAhB,EAAqBsX,OAArB,CAAV,CAAH,GAA8C,IAA9C;QACAwkC,IAAI,GAAG12B,GAAP;MACD;IACF;;IACD+D,GAAG,CAAC8tC,SAAS,CAACnb,IAAD,EAAO/7C,KAAP,EAAcC,GAAd,EAAmBsX,OAAnB,CAAV,CAAH,GAA4C,IAA5C;IACAo0B,UAAU,CAACqrB,aAAX,GAA2B5tC,GAA3B;EACD;;EACD,SAAS8tC,SAAT,CAAmBnb,IAAnB,EAAyBt3C,CAAzB,EAA4BC,CAA5B,EAA+B6S,OAA/B,EAAwC;IACtC,IAAIA,OAAJ,EAAa;MACXwkC,IAAI,GAAGob,IAAI,CAACpb,IAAD,EAAOt3C,CAAP,EAAUC,CAAV,CAAX;MACAq3C,IAAI,GAAGqb,QAAQ,CAACrb,IAAD,EAAOr3C,CAAP,EAAUD,CAAV,CAAf;IACD,CAHD,MAGO;MACLs3C,IAAI,GAAGqb,QAAQ,CAACrb,IAAD,EAAOt3C,CAAP,EAAUC,CAAV,CAAf;IACD;;IACD,OAAOq3C,IAAP;EACD;;EACD,SAASob,IAAT,CAAcE,IAAd,EAAoBx/C,EAApB,EAAwBy/C,EAAxB,EAA4B;IAC1B,OAAOD,IAAI,KAAKx/C,EAAT,GAAcy/C,EAAd,GAAmBD,IAAI,KAAKC,EAAT,GAAcz/C,EAAd,GAAmBw/C,IAA7C;EACD;;EACD,SAASD,QAAT,CAAkBhyD,CAAlB,EAAqBpF,KAArB,EAA4BC,GAA5B,EAAiC;IAC/B,OAAOmF,CAAC,KAAK,OAAN,GAAgBpF,KAAhB,GAAwBoF,CAAC,KAAK,KAAN,GAAcnF,GAAd,GAAoBmF,CAAnD;EACD;;EACD,SAASmyD,gBAAT,CAA0B5rB,UAA1B,SAAuDh4B,KAAvD,EAA8D;IAAA,IAAxB;MAAC6jD;IAAD,CAAwB;IAC5D7rB,UAAU,CAAC6rB,aAAX,GAA2BA,aAAa,KAAK,MAAlB,GACvB7jD,KAAK,KAAK,CAAV,GAAc,IAAd,GAAqB,CADE,GAEvB6jD,aAFJ;EAGD;;EACD,MAAMC,aAAN,SAA4BjnB,iBAA5B,CAA8C;IAC5CmD,kBAAkB,CAAC/iB,IAAD,EAAO7O,IAAP,EAAa/hB,KAAb,EAAoB6zB,KAApB,EAA2B;MAC3C,OAAO4iC,qBAAqB,CAAC7lC,IAAD,EAAO7O,IAAP,EAAa/hB,KAAb,EAAoB6zB,KAApB,CAA5B;IACD;;IACD4f,cAAc,CAAC7iB,IAAD,EAAO7O,IAAP,EAAa/hB,KAAb,EAAoB6zB,KAApB,EAA2B;MACvC,OAAO4iC,qBAAqB,CAAC7lC,IAAD,EAAO7O,IAAP,EAAa/hB,KAAb,EAAoB6zB,KAApB,CAA5B;IACD;;IACD6f,eAAe,CAAC9iB,IAAD,EAAO7O,IAAP,EAAa/hB,KAAb,EAAoB6zB,KAApB,EAA2B;MACxC,MAAM;QAACpF,MAAD;QAASogB;MAAT,IAAmBje,IAAzB;MACA,MAAM;QAACojB,QAAQ,GAAG,GAAZ;QAAiBC,QAAQ,GAAG;MAA5B,IAAmC,KAAKpD,QAA9C;MACA,MAAM6mB,QAAQ,GAAGjpC,MAAM,CAACH,IAAP,KAAgB,GAAhB,GAAsB0lB,QAAtB,GAAiCC,QAAlD;MACA,MAAM0jB,QAAQ,GAAG9oB,MAAM,CAACvgB,IAAP,KAAgB,GAAhB,GAAsB0lB,QAAtB,GAAiCC,QAAlD;MACA,MAAMhF,MAAM,GAAG,EAAf;MACA,IAAI5sC,CAAJ,EAAOsV,IAAP,EAAapV,IAAb,EAAmBiS,GAAnB;;MACA,KAAKnS,CAAC,GAAGrC,KAAJ,EAAW2X,IAAI,GAAG3X,KAAK,GAAG6zB,KAA/B,EAAsCxxB,CAAC,GAAGsV,IAA1C,EAAgD,EAAEtV,CAAlD,EAAqD;QACnDmS,GAAG,GAAGuN,IAAI,CAAC1f,CAAD,CAAV;QACAE,IAAI,GAAG,EAAP;QACAA,IAAI,CAACksB,MAAM,CAACH,IAAR,CAAJ,GAAoBG,MAAM,CAAC8kB,KAAP,CAAa55B,gBAAgB,CAACnF,GAAD,EAAMkjD,QAAN,CAA7B,EAA8Cr1D,CAA9C,CAApB;QACA4sC,MAAM,CAAC5rC,IAAP,CAAYmzD,UAAU,CAAC78C,gBAAgB,CAACnF,GAAD,EAAMmjD,QAAN,CAAjB,EAAkCp1D,IAAlC,EAAwCssC,MAAxC,EAAgDxsC,CAAhD,CAAtB;MACD;;MACD,OAAO4sC,MAAP;IACD;;IACDmF,qBAAqB,CAACjtC,KAAD,EAAQuV,KAAR,EAAeuyB,MAAf,EAAuB9b,KAAvB,EAA8B;MACjD,MAAMihB,qBAAN,CAA4BjtC,KAA5B,EAAmCuV,KAAnC,EAA0CuyB,MAA1C,EAAkD9b,KAAlD;MACA,MAAMwjC,MAAM,GAAG1nB,MAAM,CAACsnB,OAAtB;;MACA,IAAII,MAAM,IAAIj6C,KAAK,KAAK,KAAKgS,WAAL,CAAiBmgB,MAAzC,EAAiD;QAC/C1nC,KAAK,CAACvF,GAAN,GAAYD,IAAI,CAACC,GAAL,CAASuF,KAAK,CAACvF,GAAf,EAAoB+0D,MAAM,CAAC/0D,GAA3B,CAAZ;QACAuF,KAAK,CAACxD,GAAN,GAAYhC,IAAI,CAACgC,GAAL,CAASwD,KAAK,CAACxD,GAAf,EAAoBgzD,MAAM,CAAChzD,GAA3B,CAAZ;MACD;IACF;;IACDkxC,cAAc,GAAG;MACf,OAAO,CAAP;IACD;;IACDC,gBAAgB,CAAC/8B,KAAD,EAAQ;MACtB,MAAM6Y,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAM;QAACD,MAAD;QAASogB;MAAT,IAAmBje,IAAzB;MACA,MAAMqe,MAAM,GAAG,KAAKiF,SAAL,CAAen8B,KAAf,CAAf;MACA,MAAM4+C,MAAM,GAAG1nB,MAAM,CAACsnB,OAAtB;MACA,MAAMxgD,KAAK,GAAG2gD,UAAU,CAACC,MAAD,CAAV,GACV,MAAMA,MAAM,CAAC32D,KAAb,GAAqB,IAArB,GAA4B22D,MAAM,CAAC12D,GAAnC,GAAyC,GAD/B,GAEV,KAAK4uC,MAAM,CAACmG,gBAAP,CAAwB/F,MAAM,CAACJ,MAAM,CAACvgB,IAAR,CAA9B,CAFT;MAGA,OAAO;QACLymB,KAAK,EAAE,KAAKtmB,MAAM,CAACumB,gBAAP,CAAwB/F,MAAM,CAACxgB,MAAM,CAACH,IAAR,CAA9B,CADP;QAELvY;MAFK,CAAP;IAID;;IACDs7B,UAAU,GAAG;MACX,KAAKH,mBAAL,GAA2B,IAA3B;MACA,MAAMG,UAAN;MACA,MAAMzgB,IAAI,GAAG,KAAKlC,WAAlB;MACAkC,IAAI,CAACuC,KAAL,GAAa,KAAKse,UAAL,GAAkBte,KAA/B;IACD;;IACDkD,MAAM,CAACna,IAAD,EAAO;MACX,MAAM0U,IAAI,GAAG,KAAKlC,WAAlB;MACA,KAAKqoB,cAAL,CAAoBnmB,IAAI,CAAC7O,IAAzB,EAA+B,CAA/B,EAAkC6O,IAAI,CAAC7O,IAAL,CAAU3f,MAA5C,EAAoD8Z,IAApD;IACD;;IACD66B,cAAc,CAAC6gB,IAAD,EAAO53D,KAAP,EAAc6zB,KAAd,EAAqB3X,IAArB,EAA2B;MACvC,MAAMu2B,KAAK,GAAGv2B,IAAI,KAAK,OAAvB;MACA,MAAM;QAACnE,KAAD;QAAQ2W,WAAW,EAAE;UAACmgB;QAAD;MAArB,IAAiC,IAAvC;MACA,MAAM1lB,IAAI,GAAG0lB,MAAM,CAACuU,YAAP,EAAb;MACA,MAAM/vB,UAAU,GAAGwb,MAAM,CAACvb,YAAP,EAAnB;;MACA,MAAMkiC,KAAK,GAAG,KAAKqC,SAAL,EAAd;;MACA,MAAMC,SAAS,GAAG,KAAK3iB,yBAAL,CAA+Bn1C,KAA/B,EAAsCkc,IAAtC,CAAlB;MACA,MAAM65B,aAAa,GAAG,KAAKF,gBAAL,CAAsBiiB,SAAtB,CAAtB;MACA,MAAMhiB,cAAc,GAAG,KAAKA,cAAL,CAAoB55B,IAApB,EAA0B65B,aAA1B,CAAvB;MACA,KAAKG,mBAAL,CAAyBH,aAAzB,EAAwC75B,IAAxC,EAA8C47C,SAA9C;;MACA,KAAK,IAAIz1D,CAAC,GAAGrC,KAAb,EAAoBqC,CAAC,GAAGrC,KAAK,GAAG6zB,KAAhC,EAAuCxxB,CAAC,EAAxC,EAA4C;QAC1C,MAAM4sC,MAAM,GAAG,KAAKiF,SAAL,CAAe7xC,CAAf,CAAf;QACA,MAAM01D,OAAO,GAAGtlB,KAAK,IAAIn8B,aAAa,CAAC24B,MAAM,CAACJ,MAAM,CAACvgB,IAAR,CAAP,CAAtB,GAA8C;UAACnF,IAAD;UAAO6uC,IAAI,EAAE7uC;QAAb,CAA9C,GAAmE,KAAK8uC,wBAAL,CAA8B51D,CAA9B,CAAnF;;QACA,MAAM61D,OAAO,GAAG,KAAKC,wBAAL,CAA8B91D,CAA9B,EAAiCmzD,KAAjC,CAAhB;;QACA,MAAMriC,KAAK,GAAG,CAAC8b,MAAM,CAACC,OAAP,IAAkB,EAAnB,EAAuBL,MAAM,CAACvgB,IAA9B,CAAd;QACA,MAAMqd,UAAU,GAAG;UACjBtY,UADiB;UAEjBlK,IAAI,EAAE4uC,OAAO,CAAC5uC,IAFG;UAGjB8tC,kBAAkB,EAAE,CAAC9jC,KAAD,IAAUujC,UAAU,CAACznB,MAAM,CAACsnB,OAAR,CAApB,IAAyCx+C,KAAK,KAAKob,KAAK,CAACmc,IAAhB,IAAwBv3B,KAAK,KAAKob,KAAK,CAACoc,OAHpF;UAIjBrnC,CAAC,EAAEmrB,UAAU,GAAG0kC,OAAO,CAACC,IAAX,GAAkBE,OAAO,CAAC/nC,MAJtB;UAKjB1Q,CAAC,EAAE4T,UAAU,GAAG6kC,OAAO,CAAC/nC,MAAX,GAAoB4nC,OAAO,CAACC,IALxB;UAMjBt0C,MAAM,EAAE2P,UAAU,GAAG6kC,OAAO,CAACh+C,IAAX,GAAkBvY,IAAI,CAACge,GAAL,CAASo4C,OAAO,CAAC79C,IAAjB,CANnB;UAOjBmI,KAAK,EAAEgR,UAAU,GAAG1xB,IAAI,CAACge,GAAL,CAASo4C,OAAO,CAAC79C,IAAjB,CAAH,GAA4Bg+C,OAAO,CAACh+C;QAPpC,CAAnB;;QASA,IAAI47B,cAAJ,EAAoB;UAClBnK,UAAU,CAACnzB,OAAX,GAAqBu9B,aAAa,IAAI,KAAKZ,yBAAL,CAA+B9yC,CAA/B,EAAkCu1D,IAAI,CAACv1D,CAAD,CAAJ,CAAQ2oC,MAAR,GAAiB,QAAjB,GAA4B9uB,IAA9D,CAAtC;QACD;;QACD,MAAM1D,OAAO,GAAGmzB,UAAU,CAACnzB,OAAX,IAAsBo/C,IAAI,CAACv1D,CAAD,CAAJ,CAAQmW,OAA9C;QACAu+C,gBAAgB,CAACprB,UAAD,EAAanzB,OAAb,EAAsB2a,KAAtB,EAA6Bpb,KAA7B,CAAhB;QACAw/C,gBAAgB,CAAC5rB,UAAD,EAAanzB,OAAb,EAAsBg9C,KAAK,CAAC7hD,KAA5B,CAAhB;QACA,KAAKsiC,aAAL,CAAmB2hB,IAAI,CAACv1D,CAAD,CAAvB,EAA4BA,CAA5B,EAA+BspC,UAA/B,EAA2CzvB,IAA3C;MACD;IACF;;IACDk8C,UAAU,CAACt0B,IAAD,EAAO8L,SAAP,EAAkB;MAC1B,MAAMhf,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAMD,MAAM,GAAGmC,IAAI,CAACnC,MAApB;MACA,MAAMR,QAAQ,GAAGQ,MAAM,CAACsgB,uBAAP,CAA+B,KAAK6B,KAApC,CAAjB;MACA,MAAM5C,OAAO,GAAGvf,MAAM,CAACjW,OAAP,CAAew1B,OAA/B;MACA,MAAMr2B,IAAI,GAAGsW,QAAQ,CAAC7rB,MAAtB;MACA,MAAMqxB,MAAM,GAAG,EAAf;MACA,IAAIpxB,CAAJ,EAAOE,IAAP;;MACA,KAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsV,IAAhB,EAAsB,EAAEtV,CAAxB,EAA2B;QACzBE,IAAI,GAAG0rB,QAAQ,CAAC5rB,CAAD,CAAf;;QACA,IAAI,CAACE,IAAI,CAACgsB,UAAL,CAAgB/V,OAAhB,CAAwB6/C,OAA7B,EAAsC;UACpC;QACD;;QACD,IAAI,OAAOzoB,SAAP,KAAqB,WAAzB,EAAsC;UACpC,MAAMt6B,GAAG,GAAG/S,IAAI,CAACgsB,UAAL,CAAgB2lB,SAAhB,CAA0BtE,SAA1B,EACVrtC,IAAI,CAACgsB,UAAL,CAAgBG,WAAhB,CAA4BmgB,MAA5B,CAAmCvgB,IADzB,CAAZ;;UAGA,IAAIhY,aAAa,CAAChB,GAAD,CAAb,IAAsBkK,KAAK,CAAClK,GAAD,CAA/B,EAAsC;YACpC;UACD;QACF;;QACD,IAAI04B,OAAO,KAAK,KAAZ,IAAqBva,MAAM,CAACnb,OAAP,CAAe/V,IAAI,CAAC4wB,KAApB,MAA+B,CAAC,CAArD,IACL6a,OAAO,KAAKltC,SAAZ,IAAyByB,IAAI,CAAC4wB,KAAL,KAAeryB,SADvC,EACmD;UACjD2yB,MAAM,CAACpwB,IAAP,CAAYd,IAAI,CAAC4wB,KAAjB;QACD;;QACD,IAAI5wB,IAAI,CAACwV,KAAL,KAAe+rB,IAAnB,EAAyB;UACvB;QACD;MACF;;MACD,IAAI,CAACrQ,MAAM,CAACrxB,MAAZ,EAAoB;QAClBqxB,MAAM,CAACpwB,IAAP,CAAYvC,SAAZ;MACD;;MACD,OAAO2yB,MAAP;IACD;;IACD6kC,cAAc,CAACvgD,KAAD,EAAQ;MACpB,OAAO,KAAKqgD,UAAL,CAAgBt3D,SAAhB,EAA2BiX,KAA3B,EAAkC3V,MAAzC;IACD;;IACDm2D,cAAc,CAACzgD,YAAD,EAAemF,IAAf,EAAqB2yB,SAArB,EAAgC;MAC5C,MAAMnc,MAAM,GAAG,KAAK2kC,UAAL,CAAgBtgD,YAAhB,EAA8B83B,SAA9B,CAAf;;MACA,MAAM73B,KAAK,GAAIkF,IAAI,KAAKnc,SAAV,GACV2yB,MAAM,CAACnb,OAAP,CAAe2E,IAAf,CADU,GAEV,CAAC,CAFL;MAGA,OAAQlF,KAAK,KAAK,CAAC,CAAZ,GACH0b,MAAM,CAACrxB,MAAP,GAAgB,CADb,GAEH2V,KAFJ;IAGD;;IACD8/C,SAAS,GAAG;MACV,MAAMxxC,IAAI,GAAG,KAAK7N,OAAlB;MACA,MAAMoY,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAMD,MAAM,GAAGmC,IAAI,CAACnC,MAApB;MACA,MAAMsnC,MAAM,GAAG,EAAf;MACA,IAAI1zD,CAAJ,EAAOsV,IAAP;;MACA,KAAKtV,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGiZ,IAAI,CAAC7O,IAAL,CAAU3f,MAA7B,EAAqCC,CAAC,GAAGsV,IAAzC,EAA+C,EAAEtV,CAAjD,EAAoD;QAClD0zD,MAAM,CAAC1yD,IAAP,CAAYorB,MAAM,CAAC2uB,gBAAP,CAAwB,KAAKlJ,SAAL,CAAe7xC,CAAf,EAAkBosB,MAAM,CAACH,IAAzB,CAAxB,EAAwDjsB,CAAxD,CAAZ;MACD;;MACD,MAAMszD,YAAY,GAAGtvC,IAAI,CAACsvC,YAA1B;MACA,MAAM/zD,GAAG,GAAG+zD,YAAY,IAAIP,oBAAoB,CAACxkC,IAAD,CAAhD;MACA,OAAO;QACLhvB,GADK;QAELm0D,MAFK;QAGL/1D,KAAK,EAAEyuB,MAAM,CAAC6tB,WAHT;QAILr8C,GAAG,EAAEwuB,MAAM,CAAC8tB,SAJP;QAKLkZ,UAAU,EAAE,KAAK6C,cAAL,EALP;QAML57C,KAAK,EAAE+R,MANF;QAOL4pC,OAAO,EAAEhyC,IAAI,CAACgyC,OAPT;QAQL1kD,KAAK,EAAEgiD,YAAY,GAAG,CAAH,GAAOtvC,IAAI,CAACuvC,kBAAL,GAA0BvvC,IAAI,CAACwvC;MARpD,CAAP;IAUD;;IACDoC,wBAAwB,CAAClgD,KAAD,EAAQ;MAC9B,MAAM;QAAC2W,WAAW,EAAE;UAACmgB,MAAD;UAAS0B;QAAT,CAAd;QAAkC/3B,OAAO,EAAE;UAAC2Q,IAAI,EAAEqvC,SAAP;UAAkBC;QAAlB;MAA3C,IAA8E,IAApF;MACA,MAAM5B,UAAU,GAAG2B,SAAS,IAAI,CAAhC;MACA,MAAMvpB,MAAM,GAAG,KAAKiF,SAAL,CAAen8B,KAAf,CAAf;MACA,MAAM4+C,MAAM,GAAG1nB,MAAM,CAACsnB,OAAtB;MACA,MAAMmC,QAAQ,GAAGhC,UAAU,CAACC,MAAD,CAA3B;MACA,IAAI5gD,KAAK,GAAGk5B,MAAM,CAACJ,MAAM,CAACvgB,IAAR,CAAlB;MACA,IAAItuB,KAAK,GAAG,CAAZ;MACA,IAAIoC,MAAM,GAAGmuC,QAAQ,GAAG,KAAK9C,UAAL,CAAgBoB,MAAhB,EAAwBI,MAAxB,EAAgCsB,QAAhC,CAAH,GAA+Cx6B,KAApE;MACA,IAAIiiD,IAAJ,EAAU99C,IAAV;;MACA,IAAI9X,MAAM,KAAK2T,KAAf,EAAsB;QACpB/V,KAAK,GAAGoC,MAAM,GAAG2T,KAAjB;QACA3T,MAAM,GAAG2T,KAAT;MACD;;MACD,IAAI2iD,QAAJ,EAAc;QACZ3iD,KAAK,GAAG4gD,MAAM,CAACN,QAAf;QACAj0D,MAAM,GAAGu0D,MAAM,CAACL,MAAP,GAAgBK,MAAM,CAACN,QAAhC;;QACA,IAAItgD,KAAK,KAAK,CAAV,IAAe2I,IAAI,CAAC3I,KAAD,CAAJ,KAAgB2I,IAAI,CAACi4C,MAAM,CAACL,MAAR,CAAvC,EAAwD;UACtDt2D,KAAK,GAAG,CAAR;QACD;;QACDA,KAAK,IAAI+V,KAAT;MACD;;MACD,MAAMogD,UAAU,GAAG,CAAC7/C,aAAa,CAACkiD,SAAD,CAAd,IAA6B,CAACE,QAA9B,GAAyCF,SAAzC,GAAqDx4D,KAAxE;MACA,IAAImpB,IAAI,GAAG0lB,MAAM,CAACuO,gBAAP,CAAwB+Y,UAAxB,CAAX;;MACA,IAAI,KAAKn1D,KAAL,CAAW6xD,iBAAX,CAA6B96C,KAA7B,CAAJ,EAAyC;QACvCigD,IAAI,GAAGnpB,MAAM,CAACuO,gBAAP,CAAwBp9C,KAAK,GAAGoC,MAAhC,CAAP;MACD,CAFD,MAEO;QACL41D,IAAI,GAAG7uC,IAAP;MACD;;MACDjP,IAAI,GAAG89C,IAAI,GAAG7uC,IAAd;;MACA,IAAIxnB,IAAI,CAACge,GAAL,CAASzF,IAAT,IAAiBu+C,YAArB,EAAmC;QACjCv+C,IAAI,GAAG08C,OAAO,CAAC18C,IAAD,EAAO20B,MAAP,EAAegoB,UAAf,CAAP,GAAoC4B,YAA3C;;QACA,IAAI1iD,KAAK,KAAK8gD,UAAd,EAA0B;UACxB1tC,IAAI,IAAIjP,IAAI,GAAG,CAAf;QACD;;QACD89C,IAAI,GAAG7uC,IAAI,GAAGjP,IAAd;MACD;;MACD,IAAIiP,IAAI,KAAK0lB,MAAM,CAACuO,gBAAP,CAAwByZ,UAAxB,CAAb,EAAkD;QAChD,MAAM8B,QAAQ,GAAGj6C,IAAI,CAACxE,IAAD,CAAJ,GAAa20B,MAAM,CAAC+W,oBAAP,CAA4BiR,UAA5B,CAAb,GAAuD,CAAxE;QACA1tC,IAAI,IAAIwvC,QAAR;QACAz+C,IAAI,IAAIy+C,QAAR;MACD;;MACD,OAAO;QACLz+C,IADK;QAELiP,IAFK;QAGL6uC,IAHK;QAIL7nC,MAAM,EAAE6nC,IAAI,GAAG99C,IAAI,GAAG;MAJjB,CAAP;IAMD;;IACDi+C,wBAAwB,CAACpgD,KAAD,EAAQy9C,KAAR,EAAe;MACrC,MAAM94C,KAAK,GAAG84C,KAAK,CAAC94C,KAApB;MACA,MAAMlE,OAAO,GAAG,KAAKA,OAArB;MACA,MAAMogD,QAAQ,GAAGpgD,OAAO,CAACogD,QAAzB;MACA,MAAMC,eAAe,GAAG9hD,cAAc,CAACyB,OAAO,CAACqgD,eAAT,EAA0BC,QAA1B,CAAtC;MACA,IAAI3oC,MAAJ,EAAYjW,IAAZ;;MACA,IAAIs7C,KAAK,CAAC6C,OAAV,EAAmB;QACjB,MAAM5C,UAAU,GAAGmD,QAAQ,GAAG,KAAKN,cAAL,CAAoBvgD,KAApB,CAAH,GAAgCy9C,KAAK,CAACC,UAAjE;QACA,MAAMtuD,KAAK,GAAGqR,OAAO,CAACm9C,YAAR,KAAyB,MAAzB,GACVK,yBAAyB,CAACj+C,KAAD,EAAQy9C,KAAR,EAAeh9C,OAAf,EAAwBi9C,UAAxB,CADf,GAEVF,wBAAwB,CAACx9C,KAAD,EAAQy9C,KAAR,EAAeh9C,OAAf,EAAwBi9C,UAAxB,CAF5B;;QAGA,MAAMsD,UAAU,GAAG,KAAKR,cAAL,CAAoB,KAAKxgD,KAAzB,EAAgC,KAAK2W,WAAL,CAAiByE,KAAjD,EAAwDylC,QAAQ,GAAG7gD,KAAH,GAAWjX,SAA3E,CAAnB;;QACAqvB,MAAM,GAAGhpB,KAAK,CAACnH,KAAN,GAAemH,KAAK,CAAC2uD,KAAN,GAAciD,UAA7B,GAA4C5xD,KAAK,CAAC2uD,KAAN,GAAc,CAAnE;QACA57C,IAAI,GAAGvY,IAAI,CAACC,GAAL,CAASi3D,eAAT,EAA0B1xD,KAAK,CAAC2uD,KAAN,GAAc3uD,KAAK,CAACwM,KAA9C,CAAP;MACD,CARD,MAQO;QACLwc,MAAM,GAAGzT,KAAK,CAAC0gC,gBAAN,CAAuB,KAAKlJ,SAAL,CAAen8B,KAAf,EAAsB2E,KAAK,CAAC4R,IAA5B,CAAvB,EAA0DvW,KAA1D,CAAT;QACAmC,IAAI,GAAGvY,IAAI,CAACC,GAAL,CAASi3D,eAAT,EAA0BrD,KAAK,CAAC5zD,GAAN,GAAY4zD,KAAK,CAAC7hD,KAA5C,CAAP;MACD;;MACD,OAAO;QACLwV,IAAI,EAAEgH,MAAM,GAAGjW,IAAI,GAAG,CADjB;QAEL89C,IAAI,EAAE7nC,MAAM,GAAGjW,IAAI,GAAG,CAFjB;QAGLiW,MAHK;QAILjW;MAJK,CAAP;IAMD;;IACD5X,IAAI,GAAG;MACL,MAAMsuB,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAMmgB,MAAM,GAAGje,IAAI,CAACie,MAApB;MACA,MAAMmqB,KAAK,GAAGpoC,IAAI,CAAC7O,IAAnB;MACA,MAAMpK,IAAI,GAAGqhD,KAAK,CAAC52D,MAAnB;MACA,IAAIC,CAAC,GAAG,CAAR;;MACA,OAAOA,CAAC,GAAGsV,IAAX,EAAiB,EAAEtV,CAAnB,EAAsB;QACpB,IAAI,KAAK6xC,SAAL,CAAe7xC,CAAf,EAAkBwsC,MAAM,CAACvgB,IAAzB,MAAmC,IAAvC,EAA6C;UAC3C0qC,KAAK,CAAC32D,CAAD,CAAL,CAASC,IAAT,CAAc,KAAKmuC,IAAnB;QACD;MACF;IACF;;EAlP2C;;EAoP9CgnB,aAAa,CAACphD,EAAd,GAAmB,KAAnB;EACAohD,aAAa,CAAC95C,QAAd,GAAyB;IACvBk1B,kBAAkB,EAAE,KADG;IAEvBwC,eAAe,EAAE,KAFM;IAGvBugB,kBAAkB,EAAE,GAHG;IAIvBC,aAAa,EAAE,GAJQ;IAKvBwC,OAAO,EAAE,IALc;IAMvBxsB,UAAU,EAAE;MACVL,OAAO,EAAE;QACPrqC,IAAI,EAAE,QADC;QAEPwqC,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,EAAmB,OAAnB,EAA4B,QAA5B;MAFL;IADC;EANW,CAAzB;EAaA8rB,aAAa,CAACr9C,SAAd,GAA0B;IACxBuC,MAAM,EAAE;MACNs8C,OAAO,EAAE;QACP93D,IAAI,EAAE,UADC;QAEPy3C,MAAM,EAAE,IAFD;QAGPC,IAAI,EAAE;UACJD,MAAM,EAAE;QADJ;MAHC,CADH;MAQNsgB,OAAO,EAAE;QACP/3D,IAAI,EAAE,QADC;QAEPmxB,WAAW,EAAE;MAFN;IARH;EADgB,CAA1B;;EAgBA,MAAM6mC,gBAAN,SAA+B3oB,iBAA/B,CAAiD;IAC/Ca,UAAU,GAAG;MACX,KAAKH,mBAAL,GAA2B,IAA3B;MACA,MAAMG,UAAN;IACD;;IACDsC,kBAAkB,CAAC/iB,IAAD,EAAO7O,IAAP,EAAa/hB,KAAb,EAAoB6zB,KAApB,EAA2B;MAC3C,MAAMob,MAAM,GAAG,MAAM0E,kBAAN,CAAyB/iB,IAAzB,EAA+B7O,IAA/B,EAAqC/hB,KAArC,EAA4C6zB,KAA5C,CAAf;;MACA,KAAK,IAAIxxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4sC,MAAM,CAAC7sC,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;QACtC4sC,MAAM,CAAC5sC,CAAD,CAAN,CAAUk0D,OAAV,GAAoB,KAAKphB,yBAAL,CAA+B9yC,CAAC,GAAGrC,KAAnC,EAA0CikB,MAA9D;MACD;;MACD,OAAOgrB,MAAP;IACD;;IACDwE,cAAc,CAAC7iB,IAAD,EAAO7O,IAAP,EAAa/hB,KAAb,EAAoB6zB,KAApB,EAA2B;MACvC,MAAMob,MAAM,GAAG,MAAMwE,cAAN,CAAqB7iB,IAArB,EAA2B7O,IAA3B,EAAiC/hB,KAAjC,EAAwC6zB,KAAxC,CAAf;;MACA,KAAK,IAAIxxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4sC,MAAM,CAAC7sC,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;QACtC,MAAME,IAAI,GAAGwf,IAAI,CAAC/hB,KAAK,GAAGqC,CAAT,CAAjB;QACA4sC,MAAM,CAAC5sC,CAAD,CAAN,CAAUk0D,OAAV,GAAoBx/C,cAAc,CAACxU,IAAI,CAAC,CAAD,CAAL,EAAU,KAAK4yC,yBAAL,CAA+B9yC,CAAC,GAAGrC,KAAnC,EAA0CikB,MAApD,CAAlC;MACD;;MACD,OAAOgrB,MAAP;IACD;;IACDyE,eAAe,CAAC9iB,IAAD,EAAO7O,IAAP,EAAa/hB,KAAb,EAAoB6zB,KAApB,EAA2B;MACxC,MAAMob,MAAM,GAAG,MAAMyE,eAAN,CAAsB9iB,IAAtB,EAA4B7O,IAA5B,EAAkC/hB,KAAlC,EAAyC6zB,KAAzC,CAAf;;MACA,KAAK,IAAIxxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4sC,MAAM,CAAC7sC,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;QACtC,MAAME,IAAI,GAAGwf,IAAI,CAAC/hB,KAAK,GAAGqC,CAAT,CAAjB;QACA4sC,MAAM,CAAC5sC,CAAD,CAAN,CAAUk0D,OAAV,GAAoBx/C,cAAc,CAACxU,IAAI,IAAIA,IAAI,CAAC8C,CAAb,IAAkB,CAAC9C,IAAI,CAAC8C,CAAzB,EAA4B,KAAK8vC,yBAAL,CAA+B9yC,CAAC,GAAGrC,KAAnC,EAA0CikB,MAAtE,CAAlC;MACD;;MACD,OAAOgrB,MAAP;IACD;;IACD4F,cAAc,GAAG;MACf,MAAM9yB,IAAI,GAAG,KAAK2M,WAAL,CAAiB3M,IAA9B;MACA,IAAIpe,GAAG,GAAG,CAAV;;MACA,KAAK,IAAItB,CAAC,GAAG0f,IAAI,CAAC3f,MAAL,GAAc,CAA3B,EAA8BC,CAAC,IAAI,CAAnC,EAAsC,EAAEA,CAAxC,EAA2C;QACzCsB,GAAG,GAAGhC,IAAI,CAACgC,GAAL,CAASA,GAAT,EAAcoe,IAAI,CAAC1f,CAAD,CAAJ,CAAQ6X,IAAR,CAAa,KAAKi7B,yBAAL,CAA+B9yC,CAA/B,CAAb,IAAkD,CAAhE,CAAN;MACD;;MACD,OAAOsB,GAAG,GAAG,CAAN,IAAWA,GAAlB;IACD;;IACDmxC,gBAAgB,CAAC/8B,KAAD,EAAQ;MACtB,MAAM6Y,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAM;QAACwe,MAAD;QAASC;MAAT,IAAmBvc,IAAzB;MACA,MAAMqe,MAAM,GAAG,KAAKiF,SAAL,CAAen8B,KAAf,CAAf;MACA,MAAM7P,CAAC,GAAGglC,MAAM,CAAC8H,gBAAP,CAAwB/F,MAAM,CAAC/mC,CAA/B,CAAV;MACA,MAAMuX,CAAC,GAAG0tB,MAAM,CAAC6H,gBAAP,CAAwB/F,MAAM,CAACxvB,CAA/B,CAAV;MACA,MAAMpa,CAAC,GAAG4pC,MAAM,CAACsnB,OAAjB;MACA,OAAO;QACLxhB,KAAK,EAAEnkB,IAAI,CAACmkB,KADP;QAELh/B,KAAK,EAAE,MAAM7N,CAAN,GAAU,IAAV,GAAiBuX,CAAjB,IAAsBpa,CAAC,GAAG,OAAOA,CAAV,GAAc,EAArC,IAA2C;MAF7C,CAAP;IAID;;IACDgxB,MAAM,CAACna,IAAD,EAAO;MACX,MAAMof,MAAM,GAAG,KAAK5M,WAAL,CAAiB3M,IAAhC;MACA,KAAKg1B,cAAL,CAAoBzb,MAApB,EAA4B,CAA5B,EAA+BA,MAAM,CAACl5B,MAAtC,EAA8C8Z,IAA9C;IACD;;IACD66B,cAAc,CAACzb,MAAD,EAASt7B,KAAT,EAAgB6zB,KAAhB,EAAuB3X,IAAvB,EAA6B;MACzC,MAAMu2B,KAAK,GAAGv2B,IAAI,KAAK,OAAvB;MACA,MAAM;QAACuS,MAAD;QAASogB;MAAT,IAAmB,KAAKngB,WAA9B;MACA,MAAMopC,SAAS,GAAG,KAAK3iB,yBAAL,CAA+Bn1C,KAA/B,EAAsCkc,IAAtC,CAAlB;MACA,MAAM65B,aAAa,GAAG,KAAKF,gBAAL,CAAsBiiB,SAAtB,CAAtB;MACA,MAAMhiB,cAAc,GAAG,KAAKA,cAAL,CAAoB55B,IAApB,EAA0B65B,aAA1B,CAAvB;MACA,MAAM5G,KAAK,GAAG1gB,MAAM,CAACH,IAArB;MACA,MAAM8gB,KAAK,GAAGP,MAAM,CAACvgB,IAArB;;MACA,KAAK,IAAIjsB,CAAC,GAAGrC,KAAb,EAAoBqC,CAAC,GAAGrC,KAAK,GAAG6zB,KAAhC,EAAuCxxB,CAAC,EAAxC,EAA4C;QAC1C,MAAM6iB,KAAK,GAAGoW,MAAM,CAACj5B,CAAD,CAApB;QACA,MAAM4sC,MAAM,GAAG,CAACwD,KAAD,IAAU,KAAKyB,SAAL,CAAe7xC,CAAf,CAAzB;QACA,MAAMspC,UAAU,GAAG,EAAnB;QACA,MAAMzO,MAAM,GAAGyO,UAAU,CAACwD,KAAD,CAAV,GAAoBsD,KAAK,GAAGhkB,MAAM,CAACw0B,kBAAP,CAA0B,GAA1B,CAAH,GAAoCx0B,MAAM,CAAC2uB,gBAAP,CAAwBnO,MAAM,CAACE,KAAD,CAA9B,CAA5E;QACA,MAAMhS,MAAM,GAAGwO,UAAU,CAACyD,KAAD,CAAV,GAAoBqD,KAAK,GAAG5D,MAAM,CAACuU,YAAP,EAAH,GAA2BvU,MAAM,CAACuO,gBAAP,CAAwBnO,MAAM,CAACG,KAAD,CAA9B,CAAnE;QACAzD,UAAU,CAACxd,IAAX,GAAkB3O,KAAK,CAAC0d,MAAD,CAAL,IAAiB1d,KAAK,CAAC2d,MAAD,CAAxC;;QACA,IAAI2Y,cAAJ,EAAoB;UAClBnK,UAAU,CAACnzB,OAAX,GAAqB,KAAK28B,yBAAL,CAA+B9yC,CAA/B,EAAkC6iB,KAAK,CAAC8lB,MAAN,GAAe,QAAf,GAA0B9uB,IAA5D,CAArB;;UACA,IAAIu2B,KAAJ,EAAW;YACT9G,UAAU,CAACnzB,OAAX,CAAmByL,MAAnB,GAA4B,CAA5B;UACD;QACF;;QACD,KAAKgyB,aAAL,CAAmB/wB,KAAnB,EAA0B7iB,CAA1B,EAA6BspC,UAA7B,EAAyCzvB,IAAzC;MACD;;MACD,KAAKg6B,mBAAL,CAAyBH,aAAzB,EAAwC75B,IAAxC,EAA8C47C,SAA9C;IACD;;IACD3iB,yBAAyB,CAACp9B,KAAD,EAAQmE,IAAR,EAAc;MACrC,MAAM+yB,MAAM,GAAG,KAAKiF,SAAL,CAAen8B,KAAf,CAAf;MACA,IAAI2C,MAAM,GAAG,MAAMy6B,yBAAN,CAAgCp9B,KAAhC,EAAuCmE,IAAvC,CAAb;;MACA,IAAIxB,MAAM,CAAC+xB,OAAX,EAAoB;QAClB/xB,MAAM,GAAG3H,MAAM,CAACgB,MAAP,CAAc,EAAd,EAAkB2G,MAAlB,EAA0B;UAAC+xB,OAAO,EAAE;QAAV,CAA1B,CAAT;MACD;;MACD,MAAMxoB,MAAM,GAAGvJ,MAAM,CAACuJ,MAAtB;;MACA,IAAI/H,IAAI,KAAK,QAAb,EAAuB;QACrBxB,MAAM,CAACuJ,MAAP,GAAgB,CAAhB;MACD;;MACDvJ,MAAM,CAACuJ,MAAP,IAAiBlN,cAAc,CAACk4B,MAAM,IAAIA,MAAM,CAACsnB,OAAlB,EAA2BtyC,MAA3B,CAA/B;MACA,OAAOvJ,MAAP;IACD;;EAzF8C;;EA2FjDy+C,gBAAgB,CAAC9iD,EAAjB,GAAsB,QAAtB;EACA8iD,gBAAgB,CAACx7C,QAAjB,GAA4B;IAC1Bk1B,kBAAkB,EAAE,KADM;IAE1BwC,eAAe,EAAE,OAFS;IAG1BxJ,UAAU,EAAE;MACVL,OAAO,EAAE;QACPrqC,IAAI,EAAE,QADC;QAEPwqC,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,aAAX,EAA0B,QAA1B;MAFL;IADC;EAHc,CAA5B;EAUAwtB,gBAAgB,CAAC/+C,SAAjB,GAA6B;IAC3BuC,MAAM,EAAE;MACNzU,CAAC,EAAE;QACD/G,IAAI,EAAE;MADL,CADG;MAINse,CAAC,EAAE;QACDte,IAAI,EAAE;MADL;IAJG,CADmB;IAS3Bqb,OAAO,EAAE;MACP48C,OAAO,EAAE;QACPh4D,SAAS,EAAE;UACTg4C,KAAK,GAAG;YACN,OAAO,EAAP;UACD;;QAHQ;MADJ;IADF;EATkB,CAA7B;;EAoBA,SAASigB,iBAAT,CAA2Br1C,QAA3B,EAAqCs1C,aAArC,EAAoDC,MAApD,EAA4D;IAC1D,IAAIC,MAAM,GAAG,CAAb;IACA,IAAIC,MAAM,GAAG,CAAb;IACA,IAAIpuC,OAAO,GAAG,CAAd;IACA,IAAIC,OAAO,GAAG,CAAd;;IACA,IAAIguC,aAAa,GAAGr7C,GAApB,EAAyB;MACvB,MAAM4R,UAAU,GAAG7L,QAAnB;MACA,MAAM8L,QAAQ,GAAGD,UAAU,GAAGypC,aAA9B;MACA,MAAMI,MAAM,GAAG/3D,IAAI,CAAC+iB,GAAL,CAASmL,UAAT,CAAf;MACA,MAAM8pC,MAAM,GAAGh4D,IAAI,CAAC8iB,GAAL,CAASoL,UAAT,CAAf;MACA,MAAM+pC,IAAI,GAAGj4D,IAAI,CAAC+iB,GAAL,CAASoL,QAAT,CAAb;MACA,MAAM+pC,IAAI,GAAGl4D,IAAI,CAAC8iB,GAAL,CAASqL,QAAT,CAAb;;MACA,MAAMgqC,OAAO,GAAG,CAACl5C,KAAD,EAAQnc,CAAR,EAAWC,CAAX,KAAiB0c,aAAa,CAACR,KAAD,EAAQiP,UAAR,EAAoBC,QAApB,EAA8B,IAA9B,CAAb,GAAmD,CAAnD,GAAuDnuB,IAAI,CAACgC,GAAL,CAASc,CAAT,EAAYA,CAAC,GAAG80D,MAAhB,EAAwB70D,CAAxB,EAA2BA,CAAC,GAAG60D,MAA/B,CAAxF;;MACA,MAAMQ,OAAO,GAAG,CAACn5C,KAAD,EAAQnc,CAAR,EAAWC,CAAX,KAAiB0c,aAAa,CAACR,KAAD,EAAQiP,UAAR,EAAoBC,QAApB,EAA8B,IAA9B,CAAb,GAAmD,CAAC,CAApD,GAAwDnuB,IAAI,CAACC,GAAL,CAAS6C,CAAT,EAAYA,CAAC,GAAG80D,MAAhB,EAAwB70D,CAAxB,EAA2BA,CAAC,GAAG60D,MAA/B,CAAzF;;MACA,MAAMS,IAAI,GAAGF,OAAO,CAAC,CAAD,EAAIJ,MAAJ,EAAYE,IAAZ,CAApB;MACA,MAAMK,IAAI,GAAGH,OAAO,CAACx7C,OAAD,EAAUq7C,MAAV,EAAkBE,IAAlB,CAApB;MACA,MAAMK,IAAI,GAAGH,OAAO,CAAC/7C,EAAD,EAAK07C,MAAL,EAAaE,IAAb,CAApB;MACA,MAAMO,IAAI,GAAGJ,OAAO,CAAC/7C,EAAE,GAAGM,OAAN,EAAeq7C,MAAf,EAAuBE,IAAvB,CAApB;MACAL,MAAM,GAAG,CAACQ,IAAI,GAAGE,IAAR,IAAgB,CAAzB;MACAT,MAAM,GAAG,CAACQ,IAAI,GAAGE,IAAR,IAAgB,CAAzB;MACA9uC,OAAO,GAAG,EAAE2uC,IAAI,GAAGE,IAAT,IAAiB,CAA3B;MACA5uC,OAAO,GAAG,EAAE2uC,IAAI,GAAGE,IAAT,IAAiB,CAA3B;IACD;;IACD,OAAO;MAACX,MAAD;MAASC,MAAT;MAAiBpuC,OAAjB;MAA0BC;IAA1B,CAAP;EACD;;EACD,MAAM8uC,kBAAN,SAAiC5pB,iBAAjC,CAAmD;IACjDhwC,WAAW,CAACQ,KAAD,EAAQ8W,YAAR,EAAsB;MAC/B,MAAM9W,KAAN,EAAa8W,YAAb;MACA,KAAKo5B,mBAAL,GAA2B,IAA3B;MACA,KAAKmpB,WAAL,GAAmBv5D,SAAnB;MACA,KAAKw5D,WAAL,GAAmBx5D,SAAnB;MACA,KAAKuqB,OAAL,GAAevqB,SAAf;MACA,KAAKwqB,OAAL,GAAexqB,SAAf;IACD;;IACDwwC,UAAU,GAAG,CAAE;;IACfiC,KAAK,CAACvzC,KAAD,EAAQ6zB,KAAR,EAAe;MAClB,MAAM9R,IAAI,GAAG,KAAK0vB,UAAL,GAAkB1vB,IAA/B;MACA,MAAM6O,IAAI,GAAG,KAAKlC,WAAlB;;MACA,IAAI,KAAKmiB,QAAL,KAAkB,KAAtB,EAA6B;QAC3BjgB,IAAI,CAACmf,OAAL,GAAehuB,IAAf;MACD,CAFD,MAEO;QACL,IAAIw4C,MAAM,GAAIl4D,CAAD,IAAO,CAAC0f,IAAI,CAAC1f,CAAD,CAAzB;;QACA,IAAIoU,QAAQ,CAACsL,IAAI,CAAC/hB,KAAD,CAAL,CAAZ,EAA2B;UACzB,MAAM;YAACqY,GAAG,GAAG;UAAP,IAAkB,KAAKw4B,QAA7B;;UACA0pB,MAAM,GAAIl4D,CAAD,IAAO,CAACsX,gBAAgB,CAACoI,IAAI,CAAC1f,CAAD,CAAL,EAAUgW,GAAV,CAAjC;QACD;;QACD,IAAIhW,CAAJ,EAAOsV,IAAP;;QACA,KAAKtV,CAAC,GAAGrC,KAAJ,EAAW2X,IAAI,GAAG3X,KAAK,GAAG6zB,KAA/B,EAAsCxxB,CAAC,GAAGsV,IAA1C,EAAgD,EAAEtV,CAAlD,EAAqD;UACnDuuB,IAAI,CAACmf,OAAL,CAAa1tC,CAAb,IAAkBk4D,MAAM,CAACl4D,CAAD,CAAxB;QACD;MACF;IACF;;IACDm4D,YAAY,GAAG;MACb,OAAOv6C,SAAS,CAAC,KAAKzH,OAAL,CAAawL,QAAb,GAAwB,EAAzB,CAAhB;IACD;;IACDy2C,iBAAiB,GAAG;MAClB,OAAOx6C,SAAS,CAAC,KAAKzH,OAAL,CAAa8gD,aAAd,CAAhB;IACD;;IACDoB,mBAAmB,GAAG;MACpB,IAAI94D,GAAG,GAAGqc,GAAV;MACA,IAAIta,GAAG,GAAG,CAACsa,GAAX;;MACA,KAAK,IAAI5b,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrB,KAAL,CAAW+gB,IAAX,CAAgB/G,QAAhB,CAAyB5Y,MAA7C,EAAqD,EAAEC,CAAvD,EAA0D;QACxD,IAAI,KAAKrB,KAAL,CAAW+vD,gBAAX,CAA4B1uD,CAA5B,CAAJ,EAAoC;UAClC,MAAMksB,UAAU,GAAG,KAAKvtB,KAAL,CAAW8vB,cAAX,CAA0BzuB,CAA1B,EAA6BksB,UAAhD;;UACA,MAAMvK,QAAQ,GAAGuK,UAAU,CAACisC,YAAX,EAAjB;;UACA,MAAMlB,aAAa,GAAG/qC,UAAU,CAACksC,iBAAX,EAAtB;;UACA74D,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAcoiB,QAAd,CAAN;UACArgB,GAAG,GAAGhC,IAAI,CAACgC,GAAL,CAASA,GAAT,EAAcqgB,QAAQ,GAAGs1C,aAAzB,CAAN;QACD;MACF;;MACD,OAAO;QACLt1C,QAAQ,EAAEpiB,GADL;QAEL03D,aAAa,EAAE31D,GAAG,GAAG/B;MAFhB,CAAP;IAID;;IACDy0B,MAAM,CAACna,IAAD,EAAO;MACX,MAAMlb,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAM;QAACwuB;MAAD,IAAcxuB,KAApB;MACA,MAAM4vB,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAMisC,IAAI,GAAG/pC,IAAI,CAAC7O,IAAlB;MACA,MAAM+4B,OAAO,GAAG,KAAK8f,iBAAL,KAA2B,KAAKC,YAAL,CAAkBF,IAAlB,CAA3B,GAAqD,KAAKniD,OAAL,CAAasiC,OAAlF;MACA,MAAMggB,OAAO,GAAGn5D,IAAI,CAACgC,GAAL,CAAS,CAAChC,IAAI,CAACC,GAAL,CAAS4tB,SAAS,CAACnN,KAAnB,EAA0BmN,SAAS,CAAC9L,MAApC,IAA8Co3B,OAA/C,IAA0D,CAAnE,EAAsE,CAAtE,CAAhB;MACA,MAAMye,MAAM,GAAG53D,IAAI,CAACC,GAAL,CAASoV,YAAY,CAAC,KAAKwB,OAAL,CAAa+gD,MAAd,EAAsBuB,OAAtB,CAArB,EAAqD,CAArD,CAAf;;MACA,MAAMC,WAAW,GAAG,KAAKC,cAAL,CAAoB,KAAKjjD,KAAzB,CAApB;;MACA,MAAM;QAACuhD,aAAD;QAAgBt1C;MAAhB,IAA4B,KAAK02C,mBAAL,EAAlC;;MACA,MAAM;QAAClB,MAAD;QAASC,MAAT;QAAiBpuC,OAAjB;QAA0BC;MAA1B,IAAqC+tC,iBAAiB,CAACr1C,QAAD,EAAWs1C,aAAX,EAA0BC,MAA1B,CAA5D;MACA,MAAMzyC,QAAQ,GAAG,CAAC0I,SAAS,CAACnN,KAAV,GAAkBy4B,OAAnB,IAA8B0e,MAA/C;MACA,MAAMvtC,SAAS,GAAG,CAACuD,SAAS,CAAC9L,MAAV,GAAmBo3B,OAApB,IAA+B2e,MAAjD;MACA,MAAMwB,SAAS,GAAGt5D,IAAI,CAACgC,GAAL,CAAShC,IAAI,CAACC,GAAL,CAASklB,QAAT,EAAmBmF,SAAnB,IAAgC,CAAzC,EAA4C,CAA5C,CAAlB;MACA,MAAMquC,WAAW,GAAGljD,WAAW,CAAC,KAAKoB,OAAL,CAAayL,MAAd,EAAsBg3C,SAAtB,CAA/B;MACA,MAAMZ,WAAW,GAAG14D,IAAI,CAACgC,GAAL,CAAS22D,WAAW,GAAGf,MAAvB,EAA+B,CAA/B,CAApB;;MACA,MAAM2B,YAAY,GAAG,CAACZ,WAAW,GAAGD,WAAf,IAA8B,KAAKc,6BAAL,EAAnD;;MACA,KAAK9vC,OAAL,GAAeA,OAAO,GAAGivC,WAAzB;MACA,KAAKhvC,OAAL,GAAeA,OAAO,GAAGgvC,WAAzB;MACA1pC,IAAI,CAAC0G,KAAL,GAAa,KAAK8jC,cAAL,EAAb;MACA,KAAKd,WAAL,GAAmBA,WAAW,GAAGY,YAAY,GAAG,KAAKG,oBAAL,CAA0B,KAAKtjD,KAA/B,CAAhD;MACA,KAAKsiD,WAAL,GAAmB14D,IAAI,CAACgC,GAAL,CAAS,KAAK22D,WAAL,GAAmBY,YAAY,GAAGH,WAA3C,EAAwD,CAAxD,CAAnB;MACA,KAAKhkB,cAAL,CAAoB4jB,IAApB,EAA0B,CAA1B,EAA6BA,IAAI,CAACv4D,MAAlC,EAA0C8Z,IAA1C;IACD;;IACDo/C,cAAc,CAACj5D,CAAD,EAAIowC,KAAJ,EAAW;MACvB,MAAMpsB,IAAI,GAAG,KAAK7N,OAAlB;MACA,MAAMoY,IAAI,GAAG,KAAKlC,WAAlB;;MACA,MAAM4qC,aAAa,GAAG,KAAKmB,iBAAL,EAAtB;;MACA,IAAKhoB,KAAK,IAAIpsB,IAAI,CAACxL,SAAL,CAAe0gD,aAAzB,IAA2C,CAAC,KAAKv6D,KAAL,CAAW6xD,iBAAX,CAA6BxwD,CAA7B,CAA5C,IAA+EuuB,IAAI,CAACmf,OAAL,CAAa1tC,CAAb,MAAoB,IAAnG,IAA2GuuB,IAAI,CAAC7O,IAAL,CAAU1f,CAAV,EAAaiuC,MAA5H,EAAoI;QAClI,OAAO,CAAP;MACD;;MACD,OAAO,KAAKkrB,sBAAL,CAA4B5qC,IAAI,CAACmf,OAAL,CAAa1tC,CAAb,IAAkBi3D,aAAlB,GAAkCr7C,GAA9D,CAAP;IACD;;IACD84B,cAAc,CAAC4jB,IAAD,EAAO36D,KAAP,EAAc6zB,KAAd,EAAqB3X,IAArB,EAA2B;MACvC,MAAMu2B,KAAK,GAAGv2B,IAAI,KAAK,OAAvB;MACA,MAAMlb,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAMwuB,SAAS,GAAGxuB,KAAK,CAACwuB,SAAxB;MACA,MAAMnJ,IAAI,GAAGrlB,KAAK,CAACwX,OAAnB;MACA,MAAMijD,aAAa,GAAGp1C,IAAI,CAACxL,SAA3B;MACA,MAAM6gD,OAAO,GAAG,CAAClsC,SAAS,CAACrvB,IAAV,GAAiBqvB,SAAS,CAACpvB,KAA5B,IAAqC,CAArD;MACA,MAAMu7D,OAAO,GAAG,CAACnsC,SAAS,CAACnK,GAAV,GAAgBmK,SAAS,CAAClK,MAA3B,IAAqC,CAArD;MACA,MAAMs2C,YAAY,GAAGnpB,KAAK,IAAIgpB,aAAa,CAACG,YAA5C;MACA,MAAMvB,WAAW,GAAGuB,YAAY,GAAG,CAAH,GAAO,KAAKvB,WAA5C;MACA,MAAMC,WAAW,GAAGsB,YAAY,GAAG,CAAH,GAAO,KAAKtB,WAA5C;MACA,MAAMxC,SAAS,GAAG,KAAK3iB,yBAAL,CAA+Bn1C,KAA/B,EAAsCkc,IAAtC,CAAlB;MACA,MAAM65B,aAAa,GAAG,KAAKF,gBAAL,CAAsBiiB,SAAtB,CAAtB;MACA,MAAMhiB,cAAc,GAAG,KAAKA,cAAL,CAAoB55B,IAApB,EAA0B65B,aAA1B,CAAvB;;MACA,IAAIlmB,UAAU,GAAG,KAAK2qC,YAAL,EAAjB;;MACA,IAAIn4D,CAAJ;;MACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGrC,KAAhB,EAAuB,EAAEqC,CAAzB,EAA4B;QAC1BwtB,UAAU,IAAI,KAAKyrC,cAAL,CAAoBj5D,CAApB,EAAuBowC,KAAvB,CAAd;MACD;;MACD,KAAKpwC,CAAC,GAAGrC,KAAT,EAAgBqC,CAAC,GAAGrC,KAAK,GAAG6zB,KAA5B,EAAmC,EAAExxB,CAArC,EAAwC;QACtC,MAAMi3D,aAAa,GAAG,KAAKgC,cAAL,CAAoBj5D,CAApB,EAAuBowC,KAAvB,CAAtB;;QACA,MAAMnuB,GAAG,GAAGq2C,IAAI,CAACt4D,CAAD,CAAhB;QACA,MAAMspC,UAAU,GAAG;UACjBzjC,CAAC,EAAEwzD,OAAO,GAAG,KAAKrwC,OADD;UAEjB5L,CAAC,EAAEk8C,OAAO,GAAG,KAAKrwC,OAFD;UAGjBuE,UAHiB;UAIjBC,QAAQ,EAAED,UAAU,GAAGypC,aAJN;UAKjBA,aALiB;UAMjBgB,WANiB;UAOjBD;QAPiB,CAAnB;;QASA,IAAIvkB,cAAJ,EAAoB;UAClBnK,UAAU,CAACnzB,OAAX,GAAqBu9B,aAAa,IAAI,KAAKZ,yBAAL,CAA+B9yC,CAA/B,EAAkCiiB,GAAG,CAAC0mB,MAAJ,GAAa,QAAb,GAAwB9uB,IAA1D,CAAtC;QACD;;QACD2T,UAAU,IAAIypC,aAAd;QACA,KAAKrjB,aAAL,CAAmB3xB,GAAnB,EAAwBjiB,CAAxB,EAA2BspC,UAA3B,EAAuCzvB,IAAvC;MACD;;MACD,KAAKg6B,mBAAL,CAAyBH,aAAzB,EAAwC75B,IAAxC,EAA8C47C,SAA9C;IACD;;IACDsD,cAAc,GAAG;MACf,MAAMxqC,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAMmtC,QAAQ,GAAGjrC,IAAI,CAAC7O,IAAtB;MACA,IAAIuV,KAAK,GAAG,CAAZ;MACA,IAAIj1B,CAAJ;;MACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGw5D,QAAQ,CAACz5D,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;QACpC,MAAM0T,KAAK,GAAG6a,IAAI,CAACmf,OAAL,CAAa1tC,CAAb,CAAd;;QACA,IAAI0T,KAAK,KAAK,IAAV,IAAkB,CAACyJ,KAAK,CAACzJ,KAAD,CAAxB,IAAmC,KAAK/U,KAAL,CAAW6xD,iBAAX,CAA6BxwD,CAA7B,CAAnC,IAAsE,CAACw5D,QAAQ,CAACx5D,CAAD,CAAR,CAAYiuC,MAAvF,EAA+F;UAC7FhZ,KAAK,IAAI31B,IAAI,CAACge,GAAL,CAAS5J,KAAT,CAAT;QACD;MACF;;MACD,OAAOuhB,KAAP;IACD;;IACDkkC,sBAAsB,CAACzlD,KAAD,EAAQ;MAC5B,MAAMuhB,KAAK,GAAG,KAAK5I,WAAL,CAAiB4I,KAA/B;;MACA,IAAIA,KAAK,GAAG,CAAR,IAAa,CAAC9X,KAAK,CAACzJ,KAAD,CAAvB,EAAgC;QAC9B,OAAOkI,GAAG,IAAItc,IAAI,CAACge,GAAL,CAAS5J,KAAT,IAAkBuhB,KAAtB,CAAV;MACD;;MACD,OAAO,CAAP;IACD;;IACDwd,gBAAgB,CAAC/8B,KAAD,EAAQ;MACtB,MAAM6Y,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAM1tB,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAM6yC,MAAM,GAAG7yC,KAAK,CAAC+gB,IAAN,CAAW8xB,MAAX,IAAqB,EAApC;MACA,MAAM99B,KAAK,GAAGqrB,YAAY,CAACxQ,IAAI,CAACmf,OAAL,CAAah4B,KAAb,CAAD,EAAsB/W,KAAK,CAACwX,OAAN,CAAcqoB,MAApC,CAA1B;MACA,OAAO;QACLkU,KAAK,EAAElB,MAAM,CAAC97B,KAAD,CAAN,IAAiB,EADnB;QAELhC;MAFK,CAAP;IAID;;IACD6kD,iBAAiB,CAACD,IAAD,EAAO;MACtB,IAAIh3D,GAAG,GAAG,CAAV;MACA,MAAM3C,KAAK,GAAG,KAAKA,KAAnB;MACA,IAAIqB,CAAJ,EAAOsV,IAAP,EAAaiZ,IAAb,EAAmBrC,UAAnB,EAA+B/V,OAA/B;;MACA,IAAI,CAACmiD,IAAL,EAAW;QACT,KAAKt4D,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG3W,KAAK,CAAC+gB,IAAN,CAAW/G,QAAX,CAAoB5Y,MAAvC,EAA+CC,CAAC,GAAGsV,IAAnD,EAAyD,EAAEtV,CAA3D,EAA8D;UAC5D,IAAIrB,KAAK,CAAC+vD,gBAAN,CAAuB1uD,CAAvB,CAAJ,EAA+B;YAC7BuuB,IAAI,GAAG5vB,KAAK,CAAC8vB,cAAN,CAAqBzuB,CAArB,CAAP;YACAs4D,IAAI,GAAG/pC,IAAI,CAAC7O,IAAZ;YACAwM,UAAU,GAAGqC,IAAI,CAACrC,UAAlB;YACA;UACD;QACF;MACF;;MACD,IAAI,CAACosC,IAAL,EAAW;QACT,OAAO,CAAP;MACD;;MACD,KAAKt4D,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGgjD,IAAI,CAACv4D,MAAxB,EAAgCC,CAAC,GAAGsV,IAApC,EAA0C,EAAEtV,CAA5C,EAA+C;QAC7CmW,OAAO,GAAG+V,UAAU,CAAC4mB,yBAAX,CAAqC9yC,CAArC,CAAV;;QACA,IAAImW,OAAO,CAACsjD,WAAR,KAAwB,OAA5B,EAAqC;UACnCn4D,GAAG,GAAGhC,IAAI,CAACgC,GAAL,CAASA,GAAT,EAAc6U,OAAO,CAACuM,WAAR,IAAuB,CAArC,EAAwCvM,OAAO,CAACujD,gBAAR,IAA4B,CAApE,CAAN;QACD;MACF;;MACD,OAAOp4D,GAAP;IACD;;IACDk3D,YAAY,CAACF,IAAD,EAAO;MACjB,IAAIh3D,GAAG,GAAG,CAAV;;MACA,KAAK,IAAItB,CAAC,GAAG,CAAR,EAAWsV,IAAI,GAAGgjD,IAAI,CAACv4D,MAA5B,EAAoCC,CAAC,GAAGsV,IAAxC,EAA8C,EAAEtV,CAAhD,EAAmD;QACjD,MAAMmW,OAAO,GAAG,KAAK28B,yBAAL,CAA+B9yC,CAA/B,CAAhB;QACAsB,GAAG,GAAGhC,IAAI,CAACgC,GAAL,CAASA,GAAT,EAAc6U,OAAO,CAACogC,MAAR,IAAkB,CAAhC,EAAmCpgC,OAAO,CAACwjD,WAAR,IAAuB,CAA1D,CAAN;MACD;;MACD,OAAOr4D,GAAP;IACD;;IACD03D,oBAAoB,CAACvjD,YAAD,EAAe;MACjC,IAAImkD,gBAAgB,GAAG,CAAvB;;MACA,KAAK,IAAI55D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyV,YAApB,EAAkC,EAAEzV,CAApC,EAAuC;QACrC,IAAI,KAAKrB,KAAL,CAAW+vD,gBAAX,CAA4B1uD,CAA5B,CAAJ,EAAoC;UAClC45D,gBAAgB,IAAI,KAAKjB,cAAL,CAAoB34D,CAApB,CAApB;QACD;MACF;;MACD,OAAO45D,gBAAP;IACD;;IACDjB,cAAc,CAACljD,YAAD,EAAe;MAC3B,OAAOnW,IAAI,CAACgC,GAAL,CAASoT,cAAc,CAAC,KAAK/V,KAAL,CAAW+gB,IAAX,CAAgB/G,QAAhB,CAAyBlD,YAAzB,EAAuCnD,MAAxC,EAAgD,CAAhD,CAAvB,EAA2E,CAA3E,CAAP;IACD;;IACDwmD,6BAA6B,GAAG;MAC9B,OAAO,KAAKE,oBAAL,CAA0B,KAAKr6D,KAAL,CAAW+gB,IAAX,CAAgB/G,QAAhB,CAAyB5Y,MAAnD,KAA8D,CAArE;IACD;;EAvMgD;;EAyMnDg4D,kBAAkB,CAAC/jD,EAAnB,GAAwB,UAAxB;EACA+jD,kBAAkB,CAACz8C,QAAnB,GAA8B;IAC5Bk1B,kBAAkB,EAAE,KADQ;IAE5BwC,eAAe,EAAE,KAFW;IAG5Bx6B,SAAS,EAAE;MACT0gD,aAAa,EAAE,IADN;MAETK,YAAY,EAAE;IAFL,CAHiB;IAO5B/vB,UAAU,EAAE;MACVL,OAAO,EAAE;QACPrqC,IAAI,EAAE,QADC;QAEPwqC,UAAU,EAAE,CAAC,eAAD,EAAkB,UAAlB,EAA8B,aAA9B,EAA6C,aAA7C,EAA4D,YAA5D,EAA0E,GAA1E,EAA+E,GAA/E,EAAoF,QAApF,EAA8F,aAA9F,EAA6G,SAA7G;MAFL;IADC,CAPgB;IAa5B4tB,MAAM,EAAE,KAboB;IAc5Bv1C,QAAQ,EAAE,CAdkB;IAe5Bs1C,aAAa,EAAE,GAfa;IAgB5Br1C,MAAM,EAAE,MAhBoB;IAiB5B62B,OAAO,EAAE,CAjBmB;IAkB5B9+B,SAAS,EAAE;EAlBiB,CAA9B;EAoBAo+C,kBAAkB,CAAC//C,WAAnB,GAAiC;IAC/BuD,WAAW,EAAGX,IAAD,IAAUA,IAAI,KAAK,SADD;IAE/Ba,UAAU,EAAGb,IAAD,IAAUA,IAAI,KAAK;EAFA,CAAjC;EAIAm9C,kBAAkB,CAAChgD,SAAnB,GAA+B;IAC7BwS,WAAW,EAAE,CADgB;IAE7BpQ,OAAO,EAAE;MACP0/C,MAAM,EAAE;QACNroB,MAAM,EAAE;UACNsoB,cAAc,CAACn7D,KAAD,EAAQ;YACpB,MAAM+gB,IAAI,GAAG/gB,KAAK,CAAC+gB,IAAnB;;YACA,IAAIA,IAAI,CAAC8xB,MAAL,CAAYzxC,MAAZ,IAAsB2f,IAAI,CAAC/G,QAAL,CAAc5Y,MAAxC,EAAgD;cAC9C,MAAM;gBAACyxC,MAAM,EAAE;kBAAC9vB;gBAAD;cAAT,IAAyB/iB,KAAK,CAACk7D,MAAN,CAAa1jD,OAA5C;cACA,OAAOuJ,IAAI,CAAC8xB,MAAL,CAAYvsC,GAAZ,CAAgB,CAACytC,KAAD,EAAQ1yC,CAAR,KAAc;gBACnC,MAAMuuB,IAAI,GAAG5vB,KAAK,CAAC8vB,cAAN,CAAqB,CAArB,CAAb;gBACA,MAAMrV,KAAK,GAAGmV,IAAI,CAACrC,UAAL,CAAgB/D,QAAhB,CAAyBnoB,CAAzB,CAAd;gBACA,OAAO;kBACL+jB,IAAI,EAAE2uB,KADD;kBAEL7tB,SAAS,EAAEzL,KAAK,CAACX,eAFZ;kBAGL6L,WAAW,EAAElL,KAAK,CAACV,WAHd;kBAIL6L,SAAS,EAAEnL,KAAK,CAACsJ,WAJZ;kBAKLhB,UAAU,EAAEA,UALP;kBAMLusB,MAAM,EAAE,CAACtvC,KAAK,CAAC6xD,iBAAN,CAAwBxwD,CAAxB,CANJ;kBAOL0V,KAAK,EAAE1V;gBAPF,CAAP;cASD,CAZM,CAAP;YAaD;;YACD,OAAO,EAAP;UACD;;QApBK,CADF;;QAuBNia,OAAO,CAACzX,CAAD,EAAIu3D,UAAJ,EAAgBF,MAAhB,EAAwB;UAC7BA,MAAM,CAACl7D,KAAP,CAAa4xD,oBAAb,CAAkCwJ,UAAU,CAACrkD,KAA7C;UACAmkD,MAAM,CAACl7D,KAAP,CAAaq1B,MAAb;QACD;;MA1BK,CADD;MA6BP+iC,OAAO,EAAE;QACPh4D,SAAS,EAAE;UACTg4C,KAAK,GAAG;YACN,OAAO,EAAP;UACD,CAHQ;;UAITrE,KAAK,CAACsnB,WAAD,EAAc;YACjB,IAAIC,SAAS,GAAGD,WAAW,CAACtnB,KAA5B;YACA,MAAMh/B,KAAK,GAAG,OAAOsmD,WAAW,CAACE,cAAjC;;YACA,IAAIl1D,OAAO,CAACi1D,SAAD,CAAX,EAAwB;cACtBA,SAAS,GAAGA,SAAS,CAACn9D,KAAV,EAAZ;cACAm9D,SAAS,CAAC,CAAD,CAAT,IAAgBvmD,KAAhB;YACD,CAHD,MAGO;cACLumD,SAAS,IAAIvmD,KAAb;YACD;;YACD,OAAOumD,SAAP;UACD;;QAdQ;MADJ;IA7BF;EAFoB,CAA/B;;EAoDA,MAAME,cAAN,SAA6BhsB,iBAA7B,CAA+C;IAC7Ca,UAAU,GAAG;MACX,KAAKH,mBAAL,GAA2B,IAA3B;MACA,MAAMG,UAAN;IACD;;IACDhb,MAAM,CAACna,IAAD,EAAO;MACX,MAAM0U,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAM;QAACmC,OAAO,EAAEpK,IAAV;QAAgB1E,IAAI,EAAEuZ,MAAM,GAAG,EAA/B;QAAmCq1B;MAAnC,IAA+C//B,IAArD;MACA,MAAM6rC,kBAAkB,GAAG,KAAKz7D,KAAL,CAAWg1C,mBAAtC;MACA,IAAI;QAACh2C,KAAD;QAAQ6zB;MAAR,IAAiB6oC,+BAA+B,CAAC9rC,IAAD,EAAO0K,MAAP,EAAemhC,kBAAf,CAApD;MACA,KAAKzrB,UAAL,GAAkBhxC,KAAlB;MACA,KAAKixC,UAAL,GAAkBpd,KAAlB;;MACA,IAAI8oC,kBAAkB,CAAC/rC,IAAD,CAAtB,EAA8B;QAC5B5wB,KAAK,GAAG,CAAR;QACA6zB,KAAK,GAAGyH,MAAM,CAACl5B,MAAf;MACD;;MACDqkB,IAAI,CAAC8d,MAAL,GAAc,KAAKvjC,KAAnB;MACAylB,IAAI,CAACie,aAAL,GAAqB,KAAK3sB,KAA1B;MACA0O,IAAI,CAACm2C,UAAL,GAAkB,CAAC,CAACjM,QAAQ,CAACiM,UAA7B;MACAn2C,IAAI,CAAC6U,MAAL,GAAcA,MAAd;MACA,MAAM9iB,OAAO,GAAG,KAAK08B,4BAAL,CAAkCh5B,IAAlC,CAAhB;;MACA,IAAI,CAAC,KAAK1D,OAAL,CAAaoE,QAAlB,EAA4B;QAC1BpE,OAAO,CAACuM,WAAR,GAAsB,CAAtB;MACD;;MACDvM,OAAO,CAACqqB,OAAR,GAAkB,KAAKrqB,OAAL,CAAaqqB,OAA/B;MACA,KAAKoT,aAAL,CAAmBxvB,IAAnB,EAAyB3lB,SAAzB,EAAoC;QAClC+7D,QAAQ,EAAE,CAACJ,kBADuB;QAElCjkD;MAFkC,CAApC,EAGG0D,IAHH;MAIA,KAAK66B,cAAL,CAAoBzb,MAApB,EAA4Bt7B,KAA5B,EAAmC6zB,KAAnC,EAA0C3X,IAA1C;IACD;;IACD66B,cAAc,CAACzb,MAAD,EAASt7B,KAAT,EAAgB6zB,KAAhB,EAAuB3X,IAAvB,EAA6B;MACzC,MAAMu2B,KAAK,GAAGv2B,IAAI,KAAK,OAAvB;MACA,MAAM;QAACuS,MAAD;QAASogB,MAAT;QAAiB0B,QAAjB;QAA2BogB;MAA3B,IAAuC,KAAKjiC,WAAlD;MACA,MAAMopC,SAAS,GAAG,KAAK3iB,yBAAL,CAA+Bn1C,KAA/B,EAAsCkc,IAAtC,CAAlB;MACA,MAAM65B,aAAa,GAAG,KAAKF,gBAAL,CAAsBiiB,SAAtB,CAAtB;MACA,MAAMhiB,cAAc,GAAG,KAAKA,cAAL,CAAoB55B,IAApB,EAA0B65B,aAA1B,CAAvB;MACA,MAAM5G,KAAK,GAAG1gB,MAAM,CAACH,IAArB;MACA,MAAM8gB,KAAK,GAAGP,MAAM,CAACvgB,IAArB;MACA,MAAM;QAACyP,QAAD;QAAW8E;MAAX,IAAsB,KAAKrqB,OAAjC;MACA,MAAMskD,YAAY,GAAGv9C,QAAQ,CAACwe,QAAD,CAAR,GAAqBA,QAArB,GAAgCpnB,MAAM,CAACyH,iBAA5D;MACA,MAAM2+C,YAAY,GAAG,KAAK/7D,KAAL,CAAWg1C,mBAAX,IAAkCvD,KAAlC,IAA2Cv2B,IAAI,KAAK,MAAzE;MACA,IAAI8gD,UAAU,GAAGh9D,KAAK,GAAG,CAAR,IAAa,KAAKk0C,SAAL,CAAel0C,KAAK,GAAG,CAAvB,CAA9B;;MACA,KAAK,IAAIqC,CAAC,GAAGrC,KAAb,EAAoBqC,CAAC,GAAGrC,KAAK,GAAG6zB,KAAhC,EAAuC,EAAExxB,CAAzC,EAA4C;QAC1C,MAAM6iB,KAAK,GAAGoW,MAAM,CAACj5B,CAAD,CAApB;QACA,MAAM4sC,MAAM,GAAG,KAAKiF,SAAL,CAAe7xC,CAAf,CAAf;QACA,MAAMspC,UAAU,GAAGoxB,YAAY,GAAG73C,KAAH,GAAW,EAA1C;QACA,MAAM+3C,QAAQ,GAAG3mD,aAAa,CAAC24B,MAAM,CAACG,KAAD,CAAP,CAA9B;QACA,MAAMlS,MAAM,GAAGyO,UAAU,CAACwD,KAAD,CAAV,GAAoB1gB,MAAM,CAAC2uB,gBAAP,CAAwBnO,MAAM,CAACE,KAAD,CAA9B,EAAuC9sC,CAAvC,CAAnC;QACA,MAAM86B,MAAM,GAAGwO,UAAU,CAACyD,KAAD,CAAV,GAAoBqD,KAAK,IAAIwqB,QAAT,GAAoBpuB,MAAM,CAACuU,YAAP,EAApB,GAA4CvU,MAAM,CAACuO,gBAAP,CAAwB7M,QAAQ,GAAG,KAAK9C,UAAL,CAAgBoB,MAAhB,EAAwBI,MAAxB,EAAgCsB,QAAhC,CAAH,GAA+CtB,MAAM,CAACG,KAAD,CAArF,EAA8F/sC,CAA9F,CAA/E;QACAspC,UAAU,CAACxd,IAAX,GAAkB3O,KAAK,CAAC0d,MAAD,CAAL,IAAiB1d,KAAK,CAAC2d,MAAD,CAAtB,IAAkC8/B,QAApD;QACAtxB,UAAU,CAAC9nC,IAAX,GAAkBxB,CAAC,GAAG,CAAJ,IAAU4sC,MAAM,CAACE,KAAD,CAAN,GAAgB6tB,UAAU,CAAC7tB,KAAD,CAA3B,GAAsC2tB,YAAjE;;QACA,IAAIj6B,OAAJ,EAAa;UACX8I,UAAU,CAACsD,MAAX,GAAoBA,MAApB;UACAtD,UAAU,CAACkE,GAAX,GAAiB8gB,QAAQ,CAAC5uC,IAAT,CAAc1f,CAAd,CAAjB;QACD;;QACD,IAAIyzC,cAAJ,EAAoB;UAClBnK,UAAU,CAACnzB,OAAX,GAAqBu9B,aAAa,IAAI,KAAKZ,yBAAL,CAA+B9yC,CAA/B,EAAkC6iB,KAAK,CAAC8lB,MAAN,GAAe,QAAf,GAA0B9uB,IAA5D,CAAtC;QACD;;QACD,IAAI,CAAC6gD,YAAL,EAAmB;UACjB,KAAK9mB,aAAL,CAAmB/wB,KAAnB,EAA0B7iB,CAA1B,EAA6BspC,UAA7B,EAAyCzvB,IAAzC;QACD;;QACD8gD,UAAU,GAAG/tB,MAAb;MACD;;MACD,KAAKiH,mBAAL,CAAyBH,aAAzB,EAAwC75B,IAAxC,EAA8C47C,SAA9C;IACD;;IACDjjB,cAAc,GAAG;MACf,MAAMjkB,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAMmC,OAAO,GAAGD,IAAI,CAACC,OAArB;MACA,MAAMqsC,MAAM,GAAGrsC,OAAO,CAACrY,OAAR,IAAmBqY,OAAO,CAACrY,OAAR,CAAgBuM,WAAnC,IAAkD,CAAjE;MACA,MAAMhD,IAAI,GAAG6O,IAAI,CAAC7O,IAAL,IAAa,EAA1B;;MACA,IAAI,CAACA,IAAI,CAAC3f,MAAV,EAAkB;QAChB,OAAO86D,MAAP;MACD;;MACD,MAAMzhC,UAAU,GAAG1Z,IAAI,CAAC,CAAD,CAAJ,CAAQ7H,IAAR,CAAa,KAAKi7B,yBAAL,CAA+B,CAA/B,CAAb,CAAnB;MACA,MAAMgoB,SAAS,GAAGp7C,IAAI,CAACA,IAAI,CAAC3f,MAAL,GAAc,CAAf,CAAJ,CAAsB8X,IAAtB,CAA2B,KAAKi7B,yBAAL,CAA+BpzB,IAAI,CAAC3f,MAAL,GAAc,CAA7C,CAA3B,CAAlB;MACA,OAAOT,IAAI,CAACgC,GAAL,CAASu5D,MAAT,EAAiBzhC,UAAjB,EAA6B0hC,SAA7B,IAA0C,CAAjD;IACD;;IACD76D,IAAI,GAAG;MACL,MAAMsuB,IAAI,GAAG,KAAKlC,WAAlB;MACAkC,IAAI,CAACC,OAAL,CAAausC,mBAAb,CAAiC,KAAKp8D,KAAL,CAAWwuB,SAA5C,EAAuDoB,IAAI,CAACnC,MAAL,CAAYH,IAAnE;MACA,MAAMhsB,IAAN;IACD;;EAlF4C;;EAoF/Ck6D,cAAc,CAACnmD,EAAf,GAAoB,MAApB;EACAmmD,cAAc,CAAC7+C,QAAf,GAA0B;IACxBk1B,kBAAkB,EAAE,MADI;IAExBwC,eAAe,EAAE,OAFO;IAGxBz4B,QAAQ,EAAE,IAHc;IAIxBmhB,QAAQ,EAAE;EAJc,CAA1B;EAMAy+B,cAAc,CAACpiD,SAAf,GAA2B;IACzBuC,MAAM,EAAE;MACNs8C,OAAO,EAAE;QACP93D,IAAI,EAAE;MADC,CADH;MAIN+3D,OAAO,EAAE;QACP/3D,IAAI,EAAE;MADC;IAJH;EADiB,CAA3B;;EAUA,SAASu7D,+BAAT,CAAyC9rC,IAAzC,EAA+C0K,MAA/C,EAAuDmhC,kBAAvD,EAA2E;IACzE,MAAMY,UAAU,GAAG/hC,MAAM,CAACl5B,MAA1B;IACA,IAAIpC,KAAK,GAAG,CAAZ;IACA,IAAI6zB,KAAK,GAAGwpC,UAAZ;;IACA,IAAIzsC,IAAI,CAACpC,OAAT,EAAkB;MAChB,MAAM;QAACC,MAAD;QAASshB;MAAT,IAAoBnf,IAA1B;MACA,MAAMtC,IAAI,GAAGG,MAAM,CAACH,IAApB;MACA,MAAM;QAAC1sB,GAAD;QAAM+B,GAAN;QAAW0qC,UAAX;QAAuBC;MAAvB,IAAqC7f,MAAM,CAAC2f,aAAP,EAA3C;;MACA,IAAIC,UAAJ,EAAgB;QACdruC,KAAK,GAAG0hB,WAAW,CAAC/f,IAAI,CAACC,GAAL,CAClB6mB,YAAY,CAACsnB,OAAD,EAAUthB,MAAM,CAACH,IAAjB,EAAuB1sB,GAAvB,CAAZ,CAAwC2mB,EADtB,EAElBk0C,kBAAkB,GAAGY,UAAH,GAAgB50C,YAAY,CAAC6S,MAAD,EAAShN,IAAT,EAAeG,MAAM,CAAC2uB,gBAAP,CAAwBx7C,GAAxB,CAAf,CAAZ,CAAyD2mB,EAFzE,CAAD,EAGnB,CAHmB,EAGhB80C,UAAU,GAAG,CAHG,CAAnB;MAID;;MACD,IAAI/uB,UAAJ,EAAgB;QACdza,KAAK,GAAGnS,WAAW,CAAC/f,IAAI,CAACgC,GAAL,CAClB8kB,YAAY,CAACsnB,OAAD,EAAUthB,MAAM,CAACH,IAAjB,EAAuB3qB,GAAvB,CAAZ,CAAwC2kB,EAAxC,GAA6C,CAD3B,EAElBm0C,kBAAkB,GAAG,CAAH,GAAOh0C,YAAY,CAAC6S,MAAD,EAAShN,IAAT,EAAeG,MAAM,CAAC2uB,gBAAP,CAAwBz5C,GAAxB,CAAf,CAAZ,CAAyD2kB,EAAzD,GAA8D,CAFrE,CAAD,EAGnBtoB,KAHmB,EAGZq9D,UAHY,CAAX,GAGar9D,KAHrB;MAID,CALD,MAKO;QACL6zB,KAAK,GAAGwpC,UAAU,GAAGr9D,KAArB;MACD;IACF;;IACD,OAAO;MAACA,KAAD;MAAQ6zB;IAAR,CAAP;EACD;;EACD,SAAS8oC,kBAAT,CAA4B/rC,IAA5B,EAAkC;IAChC,MAAM;MAACsc,MAAD;MAASC,MAAT;MAAiBmwB;IAAjB,IAAiC1sC,IAAvC;IACA,MAAM2sC,SAAS,GAAG;MAChBC,IAAI,EAAEtwB,MAAM,CAACtrC,GADG;MAEhB67D,IAAI,EAAEvwB,MAAM,CAACvpC,GAFG;MAGhB+5D,IAAI,EAAEvwB,MAAM,CAACvrC,GAHG;MAIhB+7D,IAAI,EAAExwB,MAAM,CAACxpC;IAJG,CAAlB;;IAMA,IAAI,CAAC25D,YAAL,EAAmB;MACjB1sC,IAAI,CAAC0sC,YAAL,GAAoBC,SAApB;MACA,OAAO,IAAP;IACD;;IACD,MAAMnnC,OAAO,GAAGknC,YAAY,CAACE,IAAb,KAAsBtwB,MAAM,CAACtrC,GAA7B,IACb07D,YAAY,CAACG,IAAb,KAAsBvwB,MAAM,CAACvpC,GADhB,IAEb25D,YAAY,CAACI,IAAb,KAAsBvwB,MAAM,CAACvrC,GAFhB,IAGb07D,YAAY,CAACK,IAAb,KAAsBxwB,MAAM,CAACxpC,GAHhC;IAIAoP,MAAM,CAACgB,MAAP,CAAcupD,YAAd,EAA4BC,SAA5B;IACA,OAAOnnC,OAAP;EACD;;EAED,MAAMwnC,mBAAN,SAAkCptB,iBAAlC,CAAoD;IAClDhwC,WAAW,CAACQ,KAAD,EAAQ8W,YAAR,EAAsB;MAC/B,MAAM9W,KAAN,EAAa8W,YAAb;MACA,KAAKuiD,WAAL,GAAmBv5D,SAAnB;MACA,KAAKw5D,WAAL,GAAmBx5D,SAAnB;IACD;;IACDg0C,gBAAgB,CAAC/8B,KAAD,EAAQ;MACtB,MAAM6Y,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAM1tB,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAM6yC,MAAM,GAAG7yC,KAAK,CAAC+gB,IAAN,CAAW8xB,MAAX,IAAqB,EAApC;MACA,MAAM99B,KAAK,GAAGqrB,YAAY,CAACxQ,IAAI,CAACmf,OAAL,CAAah4B,KAAb,EAAoB1S,CAArB,EAAwBrE,KAAK,CAACwX,OAAN,CAAcqoB,MAAtC,CAA1B;MACA,OAAO;QACLkU,KAAK,EAAElB,MAAM,CAAC97B,KAAD,CAAN,IAAiB,EADnB;QAELhC;MAFK,CAAP;IAID;;IACDsgB,MAAM,CAACna,IAAD,EAAO;MACX,MAAMy+C,IAAI,GAAG,KAAKjsC,WAAL,CAAiB3M,IAA9B;;MACA,KAAK87C,aAAL;;MACA,KAAK9mB,cAAL,CAAoB4jB,IAApB,EAA0B,CAA1B,EAA6BA,IAAI,CAACv4D,MAAlC,EAA0C8Z,IAA1C;IACD;;IACD2hD,aAAa,GAAG;MACd,MAAM78D,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAMwuB,SAAS,GAAGxuB,KAAK,CAACwuB,SAAxB;MACA,MAAMnJ,IAAI,GAAGrlB,KAAK,CAACwX,OAAnB;MACA,MAAMgpC,OAAO,GAAG7/C,IAAI,CAACC,GAAL,CAAS4tB,SAAS,CAACpvB,KAAV,GAAkBovB,SAAS,CAACrvB,IAArC,EAA2CqvB,SAAS,CAAClK,MAAV,GAAmBkK,SAAS,CAACnK,GAAxE,CAAhB;MACA,MAAMi1C,WAAW,GAAG34D,IAAI,CAACgC,GAAL,CAAS69C,OAAO,GAAG,CAAnB,EAAsB,CAAtB,CAApB;MACA,MAAM6Y,WAAW,GAAG14D,IAAI,CAACgC,GAAL,CAAS0iB,IAAI,CAACy3C,gBAAL,GAAyBxD,WAAW,GAAG,GAAf,GAAuBj0C,IAAI,CAACy3C,gBAApD,GAAwE,CAAjF,EAAoF,CAApF,CAApB;MACA,MAAM5C,YAAY,GAAG,CAACZ,WAAW,GAAGD,WAAf,IAA8Br5D,KAAK,CAAC0xD,sBAAN,EAAnD;MACA,KAAK4H,WAAL,GAAmBA,WAAW,GAAIY,YAAY,GAAG,KAAKnjD,KAAtD;MACA,KAAKsiD,WAAL,GAAmB,KAAKC,WAAL,GAAmBY,YAAtC;IACD;;IACDnkB,cAAc,CAAC4jB,IAAD,EAAO36D,KAAP,EAAc6zB,KAAd,EAAqB3X,IAArB,EAA2B;MACvC,MAAMu2B,KAAK,GAAGv2B,IAAI,KAAK,OAAvB;MACA,MAAMlb,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAM6vB,OAAO,GAAG,KAAK4gB,UAAL,EAAhB;MACA,MAAMprB,IAAI,GAAGrlB,KAAK,CAACwX,OAAnB;MACA,MAAMijD,aAAa,GAAGp1C,IAAI,CAACxL,SAA3B;MACA,MAAM6B,KAAK,GAAG,KAAKgS,WAAL,CAAiB4jB,MAA/B;MACA,MAAMopB,OAAO,GAAGh/C,KAAK,CAACqhD,OAAtB;MACA,MAAMpC,OAAO,GAAGj/C,KAAK,CAACshD,OAAtB;MACA,MAAMC,iBAAiB,GAAGvhD,KAAK,CAACwhD,aAAN,CAAoB,CAApB,IAAyB,MAAMlgD,EAAzD;MACA,IAAI4C,KAAK,GAAGq9C,iBAAZ;MACA,IAAI57D,CAAJ;MACA,MAAM87D,YAAY,GAAG,MAAM,KAAKC,oBAAL,EAA3B;;MACA,KAAK/7D,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGrC,KAAhB,EAAuB,EAAEqC,CAAzB,EAA4B;QAC1Bue,KAAK,IAAI,KAAKy9C,aAAL,CAAmBh8D,CAAnB,EAAsB6Z,IAAtB,EAA4BiiD,YAA5B,CAAT;MACD;;MACD,KAAK97D,CAAC,GAAGrC,KAAT,EAAgBqC,CAAC,GAAGrC,KAAK,GAAG6zB,KAA5B,EAAmCxxB,CAAC,EAApC,EAAwC;QACtC,MAAMiiB,GAAG,GAAGq2C,IAAI,CAACt4D,CAAD,CAAhB;QACA,IAAIwtB,UAAU,GAAGjP,KAAjB;;QACA,IAAIkP,QAAQ,GAAGlP,KAAK,GAAG,KAAKy9C,aAAL,CAAmBh8D,CAAnB,EAAsB6Z,IAAtB,EAA4BiiD,YAA5B,CAAvB;;QACA,IAAI7D,WAAW,GAAGt5D,KAAK,CAAC6xD,iBAAN,CAAwBxwD,CAAxB,IAA6Bqa,KAAK,CAAC4hD,6BAAN,CAAoCztC,OAAO,CAAC9O,IAAR,CAAa1f,CAAb,CAApC,CAA7B,GAAoF,CAAtG;QACAue,KAAK,GAAGkP,QAAR;;QACA,IAAI2iB,KAAJ,EAAW;UACT,IAAIgpB,aAAa,CAACG,YAAlB,EAAgC;YAC9BtB,WAAW,GAAG,CAAd;UACD;;UACD,IAAImB,aAAa,CAACF,aAAlB,EAAiC;YAC/B1rC,UAAU,GAAGC,QAAQ,GAAGmuC,iBAAxB;UACD;QACF;;QACD,MAAMtyB,UAAU,GAAG;UACjBzjC,CAAC,EAAEwzD,OADc;UAEjBj8C,CAAC,EAAEk8C,OAFc;UAGjBtB,WAAW,EAAE,CAHI;UAIjBC,WAJiB;UAKjBzqC,UALiB;UAMjBC,QANiB;UAOjBtX,OAAO,EAAE,KAAK28B,yBAAL,CAA+B9yC,CAA/B,EAAkCiiB,GAAG,CAAC0mB,MAAJ,GAAa,QAAb,GAAwB9uB,IAA1D;QAPQ,CAAnB;QASA,KAAK+5B,aAAL,CAAmB3xB,GAAnB,EAAwBjiB,CAAxB,EAA2BspC,UAA3B,EAAuCzvB,IAAvC;MACD;IACF;;IACDkiD,oBAAoB,GAAG;MACrB,MAAMvtC,OAAO,GAAG,KAAK4gB,UAAL,EAAhB;MACA,MAAM7gB,IAAI,GAAG,KAAKlC,WAAlB;MACA,IAAImF,KAAK,GAAG,CAAZ;MACAjD,IAAI,CAAC7O,IAAL,CAAUvgB,OAAV,CAAkB,CAAC+oB,OAAD,EAAUxS,KAAV,KAAoB;QACpC,IAAI,CAACyH,KAAK,CAACqR,OAAO,CAAC9O,IAAR,CAAahK,KAAb,CAAD,CAAN,IAA+B,KAAK/W,KAAL,CAAW6xD,iBAAX,CAA6B96C,KAA7B,CAAnC,EAAwE;UACtE8b,KAAK;QACN;MACF,CAJD;MAKA,OAAOA,KAAP;IACD;;IACDwqC,aAAa,CAACtmD,KAAD,EAAQmE,IAAR,EAAciiD,YAAd,EAA4B;MACvC,OAAO,KAAKn9D,KAAL,CAAW6xD,iBAAX,CAA6B96C,KAA7B,IACHkI,SAAS,CAAC,KAAKk1B,yBAAL,CAA+Bp9B,KAA/B,EAAsCmE,IAAtC,EAA4C0E,KAA5C,IAAqDu9C,YAAtD,CADN,GAEH,CAFJ;IAGD;;EAzFiD;;EA2FpDP,mBAAmB,CAACvnD,EAApB,GAAyB,WAAzB;EACAunD,mBAAmB,CAACjgD,QAApB,GAA+B;IAC7B03B,eAAe,EAAE,KADY;IAE7Bx6B,SAAS,EAAE;MACT0gD,aAAa,EAAE,IADN;MAETK,YAAY,EAAE;IAFL,CAFkB;IAM7B/vB,UAAU,EAAE;MACVL,OAAO,EAAE;QACPrqC,IAAI,EAAE,QADC;QAEPwqC,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,YAAX,EAAyB,UAAzB,EAAqC,aAArC,EAAoD,aAApD;MAFL;IADC,CANiB;IAY7B3vB,SAAS,EAAE,GAZkB;IAa7B6T,UAAU,EAAE;EAbiB,CAA/B;EAeA+tC,mBAAmB,CAACxjD,SAApB,GAAgC;IAC9BwS,WAAW,EAAE,CADiB;IAE9BpQ,OAAO,EAAE;MACP0/C,MAAM,EAAE;QACNroB,MAAM,EAAE;UACNsoB,cAAc,CAACn7D,KAAD,EAAQ;YACpB,MAAM+gB,IAAI,GAAG/gB,KAAK,CAAC+gB,IAAnB;;YACA,IAAIA,IAAI,CAAC8xB,MAAL,CAAYzxC,MAAZ,IAAsB2f,IAAI,CAAC/G,QAAL,CAAc5Y,MAAxC,EAAgD;cAC9C,MAAM;gBAACyxC,MAAM,EAAE;kBAAC9vB;gBAAD;cAAT,IAAyB/iB,KAAK,CAACk7D,MAAN,CAAa1jD,OAA5C;cACA,OAAOuJ,IAAI,CAAC8xB,MAAL,CAAYvsC,GAAZ,CAAgB,CAACytC,KAAD,EAAQ1yC,CAAR,KAAc;gBACnC,MAAMuuB,IAAI,GAAG5vB,KAAK,CAAC8vB,cAAN,CAAqB,CAArB,CAAb;gBACA,MAAMrV,KAAK,GAAGmV,IAAI,CAACrC,UAAL,CAAgB/D,QAAhB,CAAyBnoB,CAAzB,CAAd;gBACA,OAAO;kBACL+jB,IAAI,EAAE2uB,KADD;kBAEL7tB,SAAS,EAAEzL,KAAK,CAACX,eAFZ;kBAGL6L,WAAW,EAAElL,KAAK,CAACV,WAHd;kBAIL6L,SAAS,EAAEnL,KAAK,CAACsJ,WAJZ;kBAKLhB,UAAU,EAAEA,UALP;kBAMLusB,MAAM,EAAE,CAACtvC,KAAK,CAAC6xD,iBAAN,CAAwBxwD,CAAxB,CANJ;kBAOL0V,KAAK,EAAE1V;gBAPF,CAAP;cASD,CAZM,CAAP;YAaD;;YACD,OAAO,EAAP;UACD;;QApBK,CADF;;QAuBNia,OAAO,CAACzX,CAAD,EAAIu3D,UAAJ,EAAgBF,MAAhB,EAAwB;UAC7BA,MAAM,CAACl7D,KAAP,CAAa4xD,oBAAb,CAAkCwJ,UAAU,CAACrkD,KAA7C;UACAmkD,MAAM,CAACl7D,KAAP,CAAaq1B,MAAb;QACD;;MA1BK,CADD;MA6BP+iC,OAAO,EAAE;QACPh4D,SAAS,EAAE;UACTg4C,KAAK,GAAG;YACN,OAAO,EAAP;UACD,CAHQ;;UAITrE,KAAK,CAAC75B,OAAD,EAAU;YACb,OAAOA,OAAO,CAACla,KAAR,CAAc+gB,IAAd,CAAmB8xB,MAAnB,CAA0B34B,OAAO,CAAC00B,SAAlC,IAA+C,IAA/C,GAAsD10B,OAAO,CAACqhD,cAArE;UACD;;QANQ;MADJ;IA7BF,CAFqB;IA0C9B5/C,MAAM,EAAE;MACNtX,CAAC,EAAE;QACDlE,IAAI,EAAE,cADL;QAEDo9D,UAAU,EAAE;UACVhnC,OAAO,EAAE;QADC,CAFX;QAKDjF,WAAW,EAAE,IALZ;QAMDumB,IAAI,EAAE;UACJ2lB,QAAQ,EAAE;QADN,CANL;QASDC,WAAW,EAAE;UACXlnC,OAAO,EAAE;QADE,CATZ;QAYD1H,UAAU,EAAE;MAZX;IADG;EA1CsB,CAAhC;;EA4DA,MAAM6uC,aAAN,SAA4BtE,kBAA5B,CAA+C;;EAE/CsE,aAAa,CAACroD,EAAd,GAAmB,KAAnB;EACAqoD,aAAa,CAAC/gD,QAAd,GAAyB;IACvB47C,MAAM,EAAE,CADe;IAEvBv1C,QAAQ,EAAE,CAFa;IAGvBs1C,aAAa,EAAE,GAHQ;IAIvBr1C,MAAM,EAAE;EAJe,CAAzB;;EAOA,MAAM06C,eAAN,SAA8BnuB,iBAA9B,CAAgD;IAC9CsE,gBAAgB,CAAC/8B,KAAD,EAAQ;MACtB,MAAM82B,MAAM,GAAG,KAAKngB,WAAL,CAAiBmgB,MAAhC;MACA,MAAMI,MAAM,GAAG,KAAKiF,SAAL,CAAen8B,KAAf,CAAf;MACA,OAAO;QACLg9B,KAAK,EAAElG,MAAM,CAACiF,SAAP,GAAmB/7B,KAAnB,CADF;QAELhC,KAAK,EAAE,KAAK84B,MAAM,CAACmG,gBAAP,CAAwB/F,MAAM,CAACJ,MAAM,CAACvgB,IAAR,CAA9B;MAFP,CAAP;IAID;;IACD+H,MAAM,CAACna,IAAD,EAAO;MACX,MAAM0U,IAAI,GAAG,KAAKlC,WAAlB;MACA,MAAMjI,IAAI,GAAGmK,IAAI,CAACC,OAAlB;MACA,MAAMyK,MAAM,GAAG1K,IAAI,CAAC7O,IAAL,IAAa,EAA5B;MACA,MAAM8xB,MAAM,GAAGjjB,IAAI,CAACnC,MAAL,CAAYqlB,SAAZ,EAAf;MACArtB,IAAI,CAAC6U,MAAL,GAAcA,MAAd;;MACA,IAAIpf,IAAI,KAAK,QAAb,EAAuB;QACrB,MAAM1D,OAAO,GAAG,KAAK08B,4BAAL,CAAkCh5B,IAAlC,CAAhB;;QACA,IAAI,CAAC,KAAK1D,OAAL,CAAaoE,QAAlB,EAA4B;UAC1BpE,OAAO,CAACuM,WAAR,GAAsB,CAAtB;QACD;;QACD,MAAM4mB,UAAU,GAAG;UACjB1H,KAAK,EAAE,IADU;UAEjBG,SAAS,EAAEyP,MAAM,CAACzxC,MAAP,KAAkBk5B,MAAM,CAACl5B,MAFnB;UAGjBoW;QAHiB,CAAnB;QAKA,KAAKy9B,aAAL,CAAmBxvB,IAAnB,EAAyB3lB,SAAzB,EAAoC6qC,UAApC,EAAgDzvB,IAAhD;MACD;;MACD,KAAK66B,cAAL,CAAoBzb,MAApB,EAA4B,CAA5B,EAA+BA,MAAM,CAACl5B,MAAtC,EAA8C8Z,IAA9C;IACD;;IACD66B,cAAc,CAACzb,MAAD,EAASt7B,KAAT,EAAgB6zB,KAAhB,EAAuB3X,IAAvB,EAA6B;MACzC,MAAM2U,OAAO,GAAG,KAAK4gB,UAAL,EAAhB;MACA,MAAM/0B,KAAK,GAAG,KAAKgS,WAAL,CAAiB4jB,MAA/B;MACA,MAAMG,KAAK,GAAGv2B,IAAI,KAAK,OAAvB;;MACA,KAAK,IAAI7Z,CAAC,GAAGrC,KAAb,EAAoBqC,CAAC,GAAGrC,KAAK,GAAG6zB,KAAhC,EAAuCxxB,CAAC,EAAxC,EAA4C;QAC1C,MAAM6iB,KAAK,GAAGoW,MAAM,CAACj5B,CAAD,CAApB;QACA,MAAMmW,OAAO,GAAG,KAAK28B,yBAAL,CAA+B9yC,CAA/B,EAAkC6iB,KAAK,CAAC8lB,MAAN,GAAe,QAAf,GAA0B9uB,IAA5D,CAAhB;QACA,MAAM0iD,aAAa,GAAGliD,KAAK,CAACmiD,wBAAN,CAA+Bx8D,CAA/B,EAAkCwuB,OAAO,CAAC9O,IAAR,CAAa1f,CAAb,CAAlC,CAAtB;QACA,MAAM6F,CAAC,GAAGuqC,KAAK,GAAG/1B,KAAK,CAACqhD,OAAT,GAAmBa,aAAa,CAAC12D,CAAhD;QACA,MAAMuX,CAAC,GAAGgzB,KAAK,GAAG/1B,KAAK,CAACshD,OAAT,GAAmBY,aAAa,CAACn/C,CAAhD;QACA,MAAMksB,UAAU,GAAG;UACjBzjC,CADiB;UAEjBuX,CAFiB;UAGjBmB,KAAK,EAAEg+C,aAAa,CAACh+C,KAHJ;UAIjBuN,IAAI,EAAE3O,KAAK,CAACtX,CAAD,CAAL,IAAYsX,KAAK,CAACC,CAAD,CAJN;UAKjBjH;QALiB,CAAnB;QAOA,KAAKy9B,aAAL,CAAmB/wB,KAAnB,EAA0B7iB,CAA1B,EAA6BspC,UAA7B,EAAyCzvB,IAAzC;MACD;IACF;;EAhD6C;;EAkDhDyiD,eAAe,CAACtoD,EAAhB,GAAqB,OAArB;EACAsoD,eAAe,CAAChhD,QAAhB,GAA2B;IACzBk1B,kBAAkB,EAAE,MADK;IAEzBwC,eAAe,EAAE,OAFQ;IAGzBr5B,SAAS,EAAE,GAHc;IAIzBY,QAAQ,EAAE,IAJe;IAKzBvB,QAAQ,EAAE;MACRoL,IAAI,EAAE;QACJ3B,IAAI,EAAE;MADF;IADE;EALe,CAA3B;EAWA65C,eAAe,CAACvkD,SAAhB,GAA4B;IAC1BwS,WAAW,EAAE,CADa;IAE1BjQ,MAAM,EAAE;MACNtX,CAAC,EAAE;QACDlE,IAAI,EAAE;MADL;IADG;EAFkB,CAA5B;;EASA,MAAM29D,iBAAN,SAAgCtC,cAAhC,CAA+C;;EAE/CsC,iBAAiB,CAACzoD,EAAlB,GAAuB,SAAvB;EACAyoD,iBAAiB,CAACnhD,QAAlB,GAA6B;IAC3Bf,QAAQ,EAAE,KADiB;IAE3BkI,IAAI,EAAE;EAFqB,CAA7B;EAIAg6C,iBAAiB,CAAC1kD,SAAlB,GAA8B;IAC5B6B,WAAW,EAAE;MACXC,IAAI,EAAE;IADK,CADe;IAI5BM,OAAO,EAAE;MACP48C,OAAO,EAAE;QACPh4D,SAAS,EAAE;UACTg4C,KAAK,GAAG;YACN,OAAO,EAAP;UACD,CAHQ;;UAITrE,KAAK,CAACxyC,IAAD,EAAO;YACV,OAAO,MAAMA,IAAI,CAACwyC,KAAX,GAAmB,IAAnB,GAA0BxyC,IAAI,CAACg6D,cAA/B,GAAgD,GAAvD;UACD;;QANQ;MADJ;IADF,CAJmB;IAgB5B5/C,MAAM,EAAE;MACNzU,CAAC,EAAE;QACD/G,IAAI,EAAE;MADL,CADG;MAINse,CAAC,EAAE;QACDte,IAAI,EAAE;MADL;IAJG;EAhBoB,CAA9B;EA0BA,IAAIumD,WAAW,GAAG,aAAa30C,MAAM,CAACykB,MAAP,CAAc;IAC7CgO,SAAS,EAAE,IADkC;IAE7CiyB,aAAa,EAAEA,aAF8B;IAG7C0B,gBAAgB,EAAEA,gBAH2B;IAI7CiB,kBAAkB,EAAEA,kBAJyB;IAK7CoC,cAAc,EAAEA,cAL6B;IAM7CoB,mBAAmB,EAAEA,mBANwB;IAO7Cc,aAAa,EAAEA,aAP8B;IAQ7CC,eAAe,EAAEA,eAR4B;IAS7CG,iBAAiB,EAAEA;EAT0B,CAAd,CAA/B;;EAYA,SAASC,OAAT,CAAiBljD,GAAjB,EAAsB0O,OAAtB,EAA+BuF,QAA/B,EAAyC;IACvC,MAAM;MAACD,UAAD;MAAamvC,WAAb;MAA0B92D,CAA1B;MAA6BuX,CAA7B;MAAgC66C,WAAhC;MAA6CD;IAA7C,IAA4D9vC,OAAlE;IACA,IAAI00C,WAAW,GAAGD,WAAW,GAAG1E,WAAhC;IACAz+C,GAAG,CAACwI,SAAJ;IACAxI,GAAG,CAACyI,GAAJ,CAAQpc,CAAR,EAAWuX,CAAX,EAAc66C,WAAd,EAA2BzqC,UAAU,GAAGovC,WAAxC,EAAqDnvC,QAAQ,GAAGmvC,WAAhE;;IACA,IAAI5E,WAAW,GAAG2E,WAAlB,EAA+B;MAC7BC,WAAW,GAAGD,WAAW,GAAG3E,WAA5B;MACAx+C,GAAG,CAACyI,GAAJ,CAAQpc,CAAR,EAAWuX,CAAX,EAAc46C,WAAd,EAA2BvqC,QAAQ,GAAGmvC,WAAtC,EAAmDpvC,UAAU,GAAGovC,WAAhE,EAA6E,IAA7E;IACD,CAHD,MAGO;MACLpjD,GAAG,CAACyI,GAAJ,CAAQpc,CAAR,EAAWuX,CAAX,EAAcu/C,WAAd,EAA2BlvC,QAAQ,GAAGxR,OAAtC,EAA+CuR,UAAU,GAAGvR,OAA5D;IACD;;IACDzC,GAAG,CAAC0I,SAAJ;IACA1I,GAAG,CAAC2J,IAAJ;EACD;;EACD,SAAS05C,eAAT,CAAyBnpD,KAAzB,EAAgC;IAC9B,OAAOsb,iBAAiB,CAACtb,KAAD,EAAQ,CAAC,YAAD,EAAe,UAAf,EAA2B,YAA3B,EAAyC,UAAzC,CAAR,CAAxB;EACD;;EACD,SAASopD,mBAAT,CAA6B76C,GAA7B,EAAkC+1C,WAAlC,EAA+CC,WAA/C,EAA4D8E,UAA5D,EAAwE;IACtE,MAAMC,CAAC,GAAGH,eAAe,CAAC56C,GAAG,CAAC9L,OAAJ,CAAY8mD,YAAb,CAAzB;IACA,MAAMC,aAAa,GAAG,CAACjF,WAAW,GAAGD,WAAf,IAA8B,CAApD;IACA,MAAMmF,UAAU,GAAG79D,IAAI,CAACC,GAAL,CAAS29D,aAAT,EAAwBH,UAAU,GAAG/E,WAAb,GAA2B,CAAnD,CAAnB;;IACA,MAAMoF,iBAAiB,GAAInqD,GAAD,IAAS;MACjC,MAAMoqD,aAAa,GAAG,CAACpF,WAAW,GAAG34D,IAAI,CAACC,GAAL,CAAS29D,aAAT,EAAwBjqD,GAAxB,CAAf,IAA+C8pD,UAA/C,GAA4D,CAAlF;MACA,OAAO19C,WAAW,CAACpM,GAAD,EAAM,CAAN,EAAS3T,IAAI,CAACC,GAAL,CAAS29D,aAAT,EAAwBG,aAAxB,CAAT,CAAlB;IACD,CAHD;;IAIA,OAAO;MACLC,UAAU,EAAEF,iBAAiB,CAACJ,CAAC,CAACM,UAAH,CADxB;MAELC,QAAQ,EAAEH,iBAAiB,CAACJ,CAAC,CAACO,QAAH,CAFtB;MAGLC,UAAU,EAAEn+C,WAAW,CAAC29C,CAAC,CAACQ,UAAH,EAAe,CAAf,EAAkBL,UAAlB,CAHlB;MAILM,QAAQ,EAAEp+C,WAAW,CAAC29C,CAAC,CAACS,QAAH,EAAa,CAAb,EAAgBN,UAAhB;IAJhB,CAAP;EAMD;;EACD,SAASO,UAAT,CAAoB16D,CAApB,EAAuB26D,KAAvB,EAA8B93D,CAA9B,EAAiCuX,CAAjC,EAAoC;IAClC,OAAO;MACLvX,CAAC,EAAEA,CAAC,GAAG7C,CAAC,GAAG1D,IAAI,CAAC+iB,GAAL,CAASs7C,KAAT,CADN;MAELvgD,CAAC,EAAEA,CAAC,GAAGpa,CAAC,GAAG1D,IAAI,CAAC8iB,GAAL,CAASu7C,KAAT;IAFN,CAAP;EAID;;EACD,SAASC,OAAT,CAAiBpkD,GAAjB,EAAsB0O,OAAtB,EAA+BquB,MAA/B,EAAuCkC,OAAvC,EAAgD76C,GAAhD,EAAqD;IACnD,MAAM;MAACiI,CAAD;MAAIuX,CAAJ;MAAOoQ,UAAU,EAAE7vB,KAAnB;MAA0Bg/D,WAA1B;MAAuC3E,WAAW,EAAE6F;IAApD,IAA8D31C,OAApE;IACA,MAAM+vC,WAAW,GAAG34D,IAAI,CAACgC,GAAL,CAAS4mB,OAAO,CAAC+vC,WAAR,GAAsBxf,OAAtB,GAAgClC,MAAhC,GAAyComB,WAAlD,EAA+D,CAA/D,CAApB;IACA,MAAM3E,WAAW,GAAG6F,MAAM,GAAG,CAAT,GAAaA,MAAM,GAAGplB,OAAT,GAAmBlC,MAAnB,GAA4BomB,WAAzC,GAAuD,CAA3E;IACA,IAAImB,aAAa,GAAG,CAApB;IACA,MAAMhrD,KAAK,GAAGlV,GAAG,GAAGD,KAApB;;IACA,IAAI86C,OAAJ,EAAa;MACX,MAAMslB,oBAAoB,GAAGF,MAAM,GAAG,CAAT,GAAaA,MAAM,GAAGplB,OAAtB,GAAgC,CAA7D;MACA,MAAMulB,oBAAoB,GAAG/F,WAAW,GAAG,CAAd,GAAkBA,WAAW,GAAGxf,OAAhC,GAA0C,CAAvE;MACA,MAAMwlB,kBAAkB,GAAG,CAACF,oBAAoB,GAAGC,oBAAxB,IAAgD,CAA3E;MACA,MAAME,aAAa,GAAGD,kBAAkB,KAAK,CAAvB,GAA4BnrD,KAAK,GAAGmrD,kBAAT,IAAgCA,kBAAkB,GAAGxlB,OAArD,CAA3B,GAA2F3lC,KAAjH;MACAgrD,aAAa,GAAG,CAAChrD,KAAK,GAAGorD,aAAT,IAA0B,CAA1C;IACD;;IACD,MAAMC,IAAI,GAAG7+D,IAAI,CAACgC,GAAL,CAAS,KAAT,EAAgBwR,KAAK,GAAGmlD,WAAR,GAAsB1hB,MAAM,GAAG56B,EAA/C,IAAqDs8C,WAAlE;IACA,MAAMmG,WAAW,GAAG,CAACtrD,KAAK,GAAGqrD,IAAT,IAAiB,CAArC;IACA,MAAM3wC,UAAU,GAAG7vB,KAAK,GAAGygE,WAAR,GAAsBN,aAAzC;IACA,MAAMrwC,QAAQ,GAAG7vB,GAAG,GAAGwgE,WAAN,GAAoBN,aAArC;IACA,MAAM;MAACR,UAAD;MAAaC,QAAb;MAAuBC,UAAvB;MAAmCC;IAAnC,IAA+CX,mBAAmB,CAAC50C,OAAD,EAAU8vC,WAAV,EAAuBC,WAAvB,EAAoCxqC,QAAQ,GAAGD,UAA/C,CAAxE;IACA,MAAM6wC,wBAAwB,GAAGpG,WAAW,GAAGqF,UAA/C;IACA,MAAMgB,sBAAsB,GAAGrG,WAAW,GAAGsF,QAA7C;IACA,MAAMgB,uBAAuB,GAAG/wC,UAAU,GAAG8vC,UAAU,GAAGe,wBAA1D;IACA,MAAMG,qBAAqB,GAAG/wC,QAAQ,GAAG8vC,QAAQ,GAAGe,sBAApD;IACA,MAAMG,wBAAwB,GAAGzG,WAAW,GAAGwF,UAA/C;IACA,MAAMkB,sBAAsB,GAAG1G,WAAW,GAAGyF,QAA7C;IACA,MAAMkB,uBAAuB,GAAGnxC,UAAU,GAAGgwC,UAAU,GAAGiB,wBAA1D;IACA,MAAMG,qBAAqB,GAAGnxC,QAAQ,GAAGgwC,QAAQ,GAAGiB,sBAApD;IACAllD,GAAG,CAACwI,SAAJ;IACAxI,GAAG,CAACyI,GAAJ,CAAQpc,CAAR,EAAWuX,CAAX,EAAc66C,WAAd,EAA2BsG,uBAA3B,EAAoDC,qBAApD;;IACA,IAAIjB,QAAQ,GAAG,CAAf,EAAkB;MAChB,MAAMsB,OAAO,GAAGnB,UAAU,CAACY,sBAAD,EAAyBE,qBAAzB,EAAgD34D,CAAhD,EAAmDuX,CAAnD,CAA1B;MACA5D,GAAG,CAACyI,GAAJ,CAAQ48C,OAAO,CAACh5D,CAAhB,EAAmBg5D,OAAO,CAACzhD,CAA3B,EAA8BmgD,QAA9B,EAAwCiB,qBAAxC,EAA+D/wC,QAAQ,GAAGxR,OAA1E;IACD;;IACD,MAAM6iD,EAAE,GAAGpB,UAAU,CAACgB,sBAAD,EAAyBjxC,QAAzB,EAAmC5nB,CAAnC,EAAsCuX,CAAtC,CAArB;IACA5D,GAAG,CAAC8I,MAAJ,CAAWw8C,EAAE,CAACj5D,CAAd,EAAiBi5D,EAAE,CAAC1hD,CAApB;;IACA,IAAIqgD,QAAQ,GAAG,CAAf,EAAkB;MAChB,MAAMoB,OAAO,GAAGnB,UAAU,CAACgB,sBAAD,EAAyBE,qBAAzB,EAAgD/4D,CAAhD,EAAmDuX,CAAnD,CAA1B;MACA5D,GAAG,CAACyI,GAAJ,CAAQ48C,OAAO,CAACh5D,CAAhB,EAAmBg5D,OAAO,CAACzhD,CAA3B,EAA8BqgD,QAA9B,EAAwChwC,QAAQ,GAAGxR,OAAnD,EAA4D2iD,qBAAqB,GAAGt/D,IAAI,CAACqc,EAAzF;IACD;;IACDnC,GAAG,CAACyI,GAAJ,CAAQpc,CAAR,EAAWuX,CAAX,EAAc46C,WAAd,EAA2BvqC,QAAQ,GAAIgwC,QAAQ,GAAGzF,WAAlD,EAAgExqC,UAAU,GAAIgwC,UAAU,GAAGxF,WAA3F,EAAyG,IAAzG;;IACA,IAAIwF,UAAU,GAAG,CAAjB,EAAoB;MAClB,MAAMqB,OAAO,GAAGnB,UAAU,CAACe,wBAAD,EAA2BE,uBAA3B,EAAoD94D,CAApD,EAAuDuX,CAAvD,CAA1B;MACA5D,GAAG,CAACyI,GAAJ,CAAQ48C,OAAO,CAACh5D,CAAhB,EAAmBg5D,OAAO,CAACzhD,CAA3B,EAA8BogD,UAA9B,EAA0CmB,uBAAuB,GAAGr/D,IAAI,CAACqc,EAAzE,EAA6E6R,UAAU,GAAGvR,OAA1F;IACD;;IACD,MAAM8iD,EAAE,GAAGrB,UAAU,CAACW,wBAAD,EAA2B7wC,UAA3B,EAAuC3nB,CAAvC,EAA0CuX,CAA1C,CAArB;IACA5D,GAAG,CAAC8I,MAAJ,CAAWy8C,EAAE,CAACl5D,CAAd,EAAiBk5D,EAAE,CAAC3hD,CAApB;;IACA,IAAIkgD,UAAU,GAAG,CAAjB,EAAoB;MAClB,MAAMuB,OAAO,GAAGnB,UAAU,CAACW,wBAAD,EAA2BE,uBAA3B,EAAoD14D,CAApD,EAAuDuX,CAAvD,CAA1B;MACA5D,GAAG,CAACyI,GAAJ,CAAQ48C,OAAO,CAACh5D,CAAhB,EAAmBg5D,OAAO,CAACzhD,CAA3B,EAA8BkgD,UAA9B,EAA0C9vC,UAAU,GAAGvR,OAAvD,EAAgEsiD,uBAAhE;IACD;;IACD/kD,GAAG,CAAC0I,SAAJ;EACD;;EACD,SAAS88C,OAAT,CAAiBxlD,GAAjB,EAAsB0O,OAAtB,EAA+BquB,MAA/B,EAAuCkC,OAAvC,EAAgD;IAC9C,MAAM;MAACwmB,WAAD;MAAczxC,UAAd;MAA0BypC;IAA1B,IAA2C/uC,OAAjD;IACA,IAAIuF,QAAQ,GAAGvF,OAAO,CAACuF,QAAvB;;IACA,IAAIwxC,WAAJ,EAAiB;MACfrB,OAAO,CAACpkD,GAAD,EAAM0O,OAAN,EAAequB,MAAf,EAAuBkC,OAAvB,EAAgCjrB,UAAU,GAAG5R,GAA7C,CAAP;;MACA,KAAK,IAAI5b,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGi/D,WAApB,EAAiC,EAAEj/D,CAAnC,EAAsC;QACpCwZ,GAAG,CAACiJ,IAAJ;MACD;;MACD,IAAI,CAACtF,KAAK,CAAC85C,aAAD,CAAV,EAA2B;QACzBxpC,QAAQ,GAAGD,UAAU,GAAGypC,aAAa,GAAGr7C,GAAxC;;QACA,IAAIq7C,aAAa,GAAGr7C,GAAhB,KAAwB,CAA5B,EAA+B;UAC7B6R,QAAQ,IAAI7R,GAAZ;QACD;MACF;IACF;;IACDgiD,OAAO,CAACpkD,GAAD,EAAM0O,OAAN,EAAequB,MAAf,EAAuBkC,OAAvB,EAAgChrB,QAAhC,CAAP;IACAjU,GAAG,CAACiJ,IAAJ;IACA,OAAOgL,QAAP;EACD;;EACD,SAASyxC,qBAAT,CAA+B1lD,GAA/B,EAAoC0O,OAApC,EAA6Ci3C,KAA7C,EAAoD;IAClD,MAAM;MAACt5D,CAAD;MAAIuX,CAAJ;MAAOoQ,UAAP;MAAmBmvC,WAAnB;MAAgCsC;IAAhC,IAA+C/2C,OAArD;IACA,MAAM+vC,WAAW,GAAG34D,IAAI,CAACgC,GAAL,CAAS4mB,OAAO,CAAC+vC,WAAR,GAAsB0E,WAA/B,EAA4C,CAA5C,CAApB;IACA,MAAM3E,WAAW,GAAG9vC,OAAO,CAAC8vC,WAAR,GAAsB2E,WAA1C;IACA,IAAI38D,CAAJ;;IACA,IAAIm/D,KAAJ,EAAW;MACTzC,OAAO,CAACljD,GAAD,EAAM0O,OAAN,EAAesF,UAAU,GAAG5R,GAA5B,CAAP;IACD;;IACDpC,GAAG,CAACwI,SAAJ;IACAxI,GAAG,CAACyI,GAAJ,CAAQpc,CAAR,EAAWuX,CAAX,EAAc46C,WAAd,EAA2BxqC,UAAU,GAAG5R,GAAxC,EAA6C4R,UAA7C,EAAyD,IAAzD;;IACA,KAAKxtB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGi/D,WAAhB,EAA6B,EAAEj/D,CAA/B,EAAkC;MAChCwZ,GAAG,CAACmJ,MAAJ;IACD;;IACDnJ,GAAG,CAACwI,SAAJ;IACAxI,GAAG,CAACyI,GAAJ,CAAQpc,CAAR,EAAWuX,CAAX,EAAc66C,WAAd,EAA2BzqC,UAA3B,EAAuCA,UAAU,GAAG5R,GAApD;;IACA,KAAK5b,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGi/D,WAAhB,EAA6B,EAAEj/D,CAA/B,EAAkC;MAChCwZ,GAAG,CAACmJ,MAAJ;IACD;EACF;;EACD,SAAS8zB,UAAT,CAAoBj9B,GAApB,EAAyB0O,OAAzB,EAAkCquB,MAAlC,EAA0CkC,OAA1C,EAAmDhrB,QAAnD,EAA6D;IAC3D,MAAM;MAACtX;IAAD,IAAY+R,OAAlB;IACA,MAAM;MAACxF,WAAD;MAAcugB;IAAd,IAAiC9sB,OAAvC;IACA,MAAMgpD,KAAK,GAAGhpD,OAAO,CAACsjD,WAAR,KAAwB,OAAtC;;IACA,IAAI,CAAC/2C,WAAL,EAAkB;MAChB;IACD;;IACD,IAAIy8C,KAAJ,EAAW;MACT3lD,GAAG,CAAC+K,SAAJ,GAAgB7B,WAAW,GAAG,CAA9B;MACAlJ,GAAG,CAAC4lD,QAAJ,GAAen8B,eAAe,IAAI,OAAlC;IACD,CAHD,MAGO;MACLzpB,GAAG,CAAC+K,SAAJ,GAAgB7B,WAAhB;MACAlJ,GAAG,CAAC4lD,QAAJ,GAAen8B,eAAe,IAAI,OAAlC;IACD;;IACD,IAAI/a,OAAO,CAAC+2C,WAAZ,EAAyB;MACvBC,qBAAqB,CAAC1lD,GAAD,EAAM0O,OAAN,EAAei3C,KAAf,CAArB;IACD;;IACD,IAAIA,KAAJ,EAAW;MACTzC,OAAO,CAACljD,GAAD,EAAM0O,OAAN,EAAeuF,QAAf,CAAP;IACD;;IACDmwC,OAAO,CAACpkD,GAAD,EAAM0O,OAAN,EAAequB,MAAf,EAAuBkC,OAAvB,EAAgChrB,QAAhC,CAAP;IACAjU,GAAG,CAACmJ,MAAJ;EACD;;EACD,MAAM08C,UAAN,SAAyBhqB,OAAzB,CAAiC;IAC/Bl3C,WAAW,CAAC6pC,GAAD,EAAM;MACf;MACA,KAAK7xB,OAAL,GAAe1X,SAAf;MACA,KAAKw4D,aAAL,GAAqBx4D,SAArB;MACA,KAAK+uB,UAAL,GAAkB/uB,SAAlB;MACA,KAAKgvB,QAAL,GAAgBhvB,SAAhB;MACA,KAAKu5D,WAAL,GAAmBv5D,SAAnB;MACA,KAAKw5D,WAAL,GAAmBx5D,SAAnB;MACA,KAAKk+D,WAAL,GAAmB,CAAnB;MACA,KAAKsC,WAAL,GAAmB,CAAnB;;MACA,IAAIj3B,GAAJ,EAAS;QACPt3B,MAAM,CAACgB,MAAP,CAAc,IAAd,EAAoBs2B,GAApB;MACD;IACF;;IACD1a,OAAO,CAACgyC,MAAD,EAASC,MAAT,EAAiBryC,gBAAjB,EAAmC;MACxC,MAAMrK,KAAK,GAAG,KAAK6K,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,CAAd,EAA0BR,gBAA1B,CAAd;MACA,MAAM;QAAC3O,KAAD;QAAQE;MAAR,IAAoBR,iBAAiB,CAAC4E,KAAD,EAAQ;QAAChd,CAAC,EAAEy5D,MAAJ;QAAYliD,CAAC,EAAEmiD;MAAf,CAAR,CAA3C;MACA,MAAM;QAAC/xC,UAAD;QAAaC,QAAb;QAAuBuqC,WAAvB;QAAoCC,WAApC;QAAiDhB;MAAjD,IAAkE,KAAKvpC,QAAL,CAAc,CACpF,YADoF,EAEpF,UAFoF,EAGpF,aAHoF,EAIpF,aAJoF,EAKpF,eALoF,CAAd,EAMrER,gBANqE,CAAxE;MAOA,MAAMsyC,OAAO,GAAG,KAAKrpD,OAAL,CAAasiC,OAAb,GAAuB,CAAvC;;MACA,MAAMwgB,cAAc,GAAGvkD,cAAc,CAACuiD,aAAD,EAAgBxpC,QAAQ,GAAGD,UAA3B,CAArC;;MACA,MAAMiyC,aAAa,GAAGxG,cAAc,IAAIr9C,GAAlB,IAAyBmD,aAAa,CAACR,KAAD,EAAQiP,UAAR,EAAoBC,QAApB,CAA5D;;MACA,MAAMiyC,YAAY,GAAGngD,UAAU,CAACd,QAAD,EAAWu5C,WAAW,GAAGwH,OAAzB,EAAkCvH,WAAW,GAAGuH,OAAhD,CAA/B;;MACA,OAAQC,aAAa,IAAIC,YAAzB;IACD;;IACD3xC,cAAc,CAACb,gBAAD,EAAmB;MAC/B,MAAM;QAACrnB,CAAD;QAAIuX,CAAJ;QAAOoQ,UAAP;QAAmBC,QAAnB;QAA6BuqC,WAA7B;QAA0CC;MAA1C,IAAyD,KAAKvqC,QAAL,CAAc,CAC3E,GAD2E,EAE3E,GAF2E,EAG3E,YAH2E,EAI3E,UAJ2E,EAK3E,aAL2E,EAM3E,aAN2E,EAO3E,eAP2E,CAAd,EAQ5DR,gBAR4D,CAA/D;MASA,MAAM;QAACqpB,MAAD;QAASkC;MAAT,IAAoB,KAAKtiC,OAA/B;MACA,MAAMwpD,SAAS,GAAG,CAACnyC,UAAU,GAAGC,QAAd,IAA0B,CAA5C;MACA,MAAMmyC,UAAU,GAAG,CAAC5H,WAAW,GAAGC,WAAd,GAA4Bxf,OAA5B,GAAsClC,MAAvC,IAAiD,CAApE;MACA,OAAO;QACL1wC,CAAC,EAAEA,CAAC,GAAGvG,IAAI,CAAC+iB,GAAL,CAASs9C,SAAT,IAAsBC,UADxB;QAELxiD,CAAC,EAAEA,CAAC,GAAG9d,IAAI,CAAC8iB,GAAL,CAASu9C,SAAT,IAAsBC;MAFxB,CAAP;IAID;;IACDtqB,eAAe,CAACpoB,gBAAD,EAAmB;MAChC,OAAO,KAAKa,cAAL,CAAoBb,gBAApB,CAAP;IACD;;IACDjtB,IAAI,CAACuZ,GAAD,EAAM;MACR,MAAM;QAACrD,OAAD;QAAU8gD;MAAV,IAA2B,IAAjC;MACA,MAAM1gB,MAAM,GAAG,CAACpgC,OAAO,CAACogC,MAAR,IAAkB,CAAnB,IAAwB,CAAvC;MACA,MAAMkC,OAAO,GAAG,CAACtiC,OAAO,CAACsiC,OAAR,IAAmB,CAApB,IAAyB,CAAzC;MACA,KAAKkkB,WAAL,GAAoBxmD,OAAO,CAACsjD,WAAR,KAAwB,OAAzB,GAAoC,IAApC,GAA2C,CAA9D;MACA,KAAKwF,WAAL,GAAmBhI,aAAa,GAAGr7C,GAAhB,GAAsBtc,IAAI,CAACqd,KAAL,CAAWs6C,aAAa,GAAGr7C,GAA3B,CAAtB,GAAwD,CAA3E;;MACA,IAAIq7C,aAAa,KAAK,CAAlB,IAAuB,KAAKe,WAAL,GAAmB,CAA1C,IAA+C,KAAKC,WAAL,GAAmB,CAAtE,EAAyE;QACvE;MACD;;MACDz+C,GAAG,CAAC6G,IAAJ;MACA,IAAIw/C,YAAY,GAAG,CAAnB;;MACA,IAAItpB,MAAJ,EAAY;QACVspB,YAAY,GAAGtpB,MAAM,GAAG,CAAxB;QACA,MAAMopB,SAAS,GAAG,CAAC,KAAKnyC,UAAL,GAAkB,KAAKC,QAAxB,IAAoC,CAAtD;QACAjU,GAAG,CAACsI,SAAJ,CAAcxiB,IAAI,CAAC+iB,GAAL,CAASs9C,SAAT,IAAsBE,YAApC,EAAkDvgE,IAAI,CAAC8iB,GAAL,CAASu9C,SAAT,IAAsBE,YAAxE;;QACA,IAAI,KAAK5I,aAAL,IAAsBt7C,EAA1B,EAA8B;UAC5BkkD,YAAY,GAAGtpB,MAAf;QACD;MACF;;MACD/8B,GAAG,CAACqL,SAAJ,GAAgB1O,OAAO,CAACsC,eAAxB;MACAe,GAAG,CAAC8K,WAAJ,GAAkBnO,OAAO,CAACuC,WAA1B;MACA,MAAM+U,QAAQ,GAAGuxC,OAAO,CAACxlD,GAAD,EAAM,IAAN,EAAYqmD,YAAZ,EAA0BpnB,OAA1B,CAAxB;MACAhC,UAAU,CAACj9B,GAAD,EAAM,IAAN,EAAYqmD,YAAZ,EAA0BpnB,OAA1B,EAAmChrB,QAAnC,CAAV;MACAjU,GAAG,CAACiH,OAAJ;IACD;;EA5E8B;;EA8EjC4+C,UAAU,CAACrrD,EAAX,GAAgB,KAAhB;EACAqrD,UAAU,CAAC/jD,QAAX,GAAsB;IACpBm+C,WAAW,EAAE,QADO;IAEpB/gD,WAAW,EAAE,MAFO;IAGpBuqB,eAAe,EAAExkC,SAHG;IAIpBw+D,YAAY,EAAE,CAJM;IAKpBv6C,WAAW,EAAE,CALO;IAMpB6zB,MAAM,EAAE,CANY;IAOpBkC,OAAO,EAAE,CAPW;IAQpBl6B,KAAK,EAAE9f;EARa,CAAtB;EAUA4gE,UAAU,CAAC5pB,aAAX,GAA2B;IACzBh9B,eAAe,EAAE;EADQ,CAA3B;;EAIA,SAASqnD,QAAT,CAAkBtmD,GAAlB,EAAuBrD,OAAvB,EAAiD;IAAA,IAAjBiD,KAAiB,uEAATjD,OAAS;IAC/CqD,GAAG,CAACumD,OAAJ,GAAcrrD,cAAc,CAAC0E,KAAK,CAAC0pB,cAAP,EAAuB3sB,OAAO,CAAC2sB,cAA/B,CAA5B;IACAtpB,GAAG,CAACmqC,WAAJ,CAAgBjvC,cAAc,CAAC0E,KAAK,CAAC2pB,UAAP,EAAmB5sB,OAAO,CAAC4sB,UAA3B,CAA9B;IACAvpB,GAAG,CAACoqC,cAAJ,GAAqBlvC,cAAc,CAAC0E,KAAK,CAAC4pB,gBAAP,EAAyB7sB,OAAO,CAAC6sB,gBAAjC,CAAnC;IACAxpB,GAAG,CAAC4lD,QAAJ,GAAe1qD,cAAc,CAAC0E,KAAK,CAAC6pB,eAAP,EAAwB9sB,OAAO,CAAC8sB,eAAhC,CAA7B;IACAzpB,GAAG,CAAC+K,SAAJ,GAAgB7P,cAAc,CAAC0E,KAAK,CAACsJ,WAAP,EAAoBvM,OAAO,CAACuM,WAA5B,CAA9B;IACAlJ,GAAG,CAAC8K,WAAJ,GAAkB5P,cAAc,CAAC0E,KAAK,CAACV,WAAP,EAAoBvC,OAAO,CAACuC,WAA5B,CAAhC;EACD;;EACD,SAAS4J,MAAT,CAAgB9I,GAAhB,EAAqB1C,QAArB,EAA+BlB,MAA/B,EAAuC;IACrC4D,GAAG,CAAC8I,MAAJ,CAAW1M,MAAM,CAAC/P,CAAlB,EAAqB+P,MAAM,CAACwH,CAA5B;EACD;;EACD,SAAS4iD,aAAT,CAAuB7pD,OAAvB,EAAgC;IAC9B,IAAIA,OAAO,CAAC8pD,OAAZ,EAAqB;MACnB,OAAO58C,cAAP;IACD;;IACD,IAAIlN,OAAO,CAAC0lB,OAAR,IAAmB1lB,OAAO,CAACwlB,sBAAR,KAAmC,UAA1D,EAAsE;MACpE,OAAOnY,cAAP;IACD;;IACD,OAAOlB,MAAP;EACD;;EACD,SAAS49C,QAAT,CAAkBjnC,MAAlB,EAA0BuH,OAA1B,EAAgD;IAAA,IAAb7O,MAAa,uEAAJ,EAAI;IAC9C,MAAMH,KAAK,GAAGyH,MAAM,CAACl5B,MAArB;IACA,MAAM;MAACpC,KAAK,EAAEwiE,WAAW,GAAG,CAAtB;MAAyBviE,GAAG,EAAEwiE,SAAS,GAAG5uC,KAAK,GAAG;IAAlD,IAAuDG,MAA7D;IACA,MAAM;MAACh0B,KAAK,EAAE0iE,YAAR;MAAsBziE,GAAG,EAAE0iE;IAA3B,IAAyC9/B,OAA/C;IACA,MAAM7iC,KAAK,GAAG2B,IAAI,CAACgC,GAAL,CAAS6+D,WAAT,EAAsBE,YAAtB,CAAd;IACA,MAAMziE,GAAG,GAAG0B,IAAI,CAACC,GAAL,CAAS6gE,SAAT,EAAoBE,UAApB,CAAZ;IACA,MAAMC,OAAO,GAAGJ,WAAW,GAAGE,YAAd,IAA8BD,SAAS,GAAGC,YAA1C,IAA0DF,WAAW,GAAGG,UAAd,IAA4BF,SAAS,GAAGE,UAAlH;IACA,OAAO;MACL9uC,KADK;MAEL7zB,KAFK;MAGL69B,IAAI,EAAEgF,OAAO,CAAChF,IAHT;MAILlmB,IAAI,EAAE1X,GAAG,GAAGD,KAAN,IAAe,CAAC4iE,OAAhB,GAA0B/uC,KAAK,GAAG5zB,GAAR,GAAcD,KAAxC,GAAgDC,GAAG,GAAGD;IAJvD,CAAP;EAMD;;EACD,SAAS6iE,WAAT,CAAqBhnD,GAArB,EAA0B4K,IAA1B,EAAgCoc,OAAhC,EAAyC7O,MAAzC,EAAiD;IAC/C,MAAM;MAACsH,MAAD;MAAS9iB;IAAT,IAAoBiO,IAA1B;IACA,MAAM;MAACoN,KAAD;MAAQ7zB,KAAR;MAAe69B,IAAf;MAAqBlmB;IAArB,IAA6B4qD,QAAQ,CAACjnC,MAAD,EAASuH,OAAT,EAAkB7O,MAAlB,CAA3C;IACA,MAAM8uC,UAAU,GAAGT,aAAa,CAAC7pD,OAAD,CAAhC;IACA,IAAI;MAACs+B,IAAI,GAAG,IAAR;MAAcv/B;IAAd,IAAyByc,MAAM,IAAI,EAAvC;IACA,IAAI3xB,CAAJ,EAAO6iB,KAAP,EAAc+Y,IAAd;;IACA,KAAK57B,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIsV,IAAjB,EAAuB,EAAEtV,CAAzB,EAA4B;MAC1B6iB,KAAK,GAAGoW,MAAM,CAAC,CAACt7B,KAAK,IAAIuX,OAAO,GAAGI,IAAI,GAAGtV,CAAV,GAAcA,CAAzB,CAAN,IAAqCwxB,KAAtC,CAAd;;MACA,IAAI3O,KAAK,CAACiJ,IAAV,EAAgB;QACd;MACD,CAFD,MAEO,IAAI2oB,IAAJ,EAAU;QACfj7B,GAAG,CAAC2I,MAAJ,CAAWU,KAAK,CAAChd,CAAjB,EAAoBgd,KAAK,CAACzF,CAA1B;QACAq3B,IAAI,GAAG,KAAP;MACD,CAHM,MAGA;QACLgsB,UAAU,CAACjnD,GAAD,EAAMoiB,IAAN,EAAY/Y,KAAZ,EAAmB3N,OAAnB,EAA4BiB,OAAO,CAAC8pD,OAApC,CAAV;MACD;;MACDrkC,IAAI,GAAG/Y,KAAP;IACD;;IACD,IAAI2Y,IAAJ,EAAU;MACR3Y,KAAK,GAAGoW,MAAM,CAAC,CAACt7B,KAAK,IAAIuX,OAAO,GAAGI,IAAH,GAAU,CAArB,CAAN,IAAiCkc,KAAlC,CAAd;MACAivC,UAAU,CAACjnD,GAAD,EAAMoiB,IAAN,EAAY/Y,KAAZ,EAAmB3N,OAAnB,EAA4BiB,OAAO,CAAC8pD,OAApC,CAAV;IACD;;IACD,OAAO,CAAC,CAACzkC,IAAT;EACD;;EACD,SAASklC,eAAT,CAAyBlnD,GAAzB,EAA8B4K,IAA9B,EAAoCoc,OAApC,EAA6C7O,MAA7C,EAAqD;IACnD,MAAMsH,MAAM,GAAG7U,IAAI,CAAC6U,MAApB;IACA,MAAM;MAACzH,KAAD;MAAQ7zB,KAAR;MAAe2X;IAAf,IAAuB4qD,QAAQ,CAACjnC,MAAD,EAASuH,OAAT,EAAkB7O,MAAlB,CAArC;IACA,MAAM;MAAC8iB,IAAI,GAAG,IAAR;MAAcv/B;IAAd,IAAyByc,MAAM,IAAI,EAAzC;IACA,IAAIgvC,IAAI,GAAG,CAAX;IACA,IAAIC,MAAM,GAAG,CAAb;IACA,IAAI5gE,CAAJ,EAAO6iB,KAAP,EAAcg+C,KAAd,EAAqB/I,IAArB,EAA2BF,IAA3B,EAAiCkJ,KAAjC;;IACA,MAAMC,UAAU,GAAIrrD,KAAD,IAAW,CAAC/X,KAAK,IAAIuX,OAAO,GAAGI,IAAI,GAAGI,KAAV,GAAkBA,KAA7B,CAAN,IAA6C8b,KAA3E;;IACA,MAAMwvC,KAAK,GAAG,MAAM;MAClB,IAAIlJ,IAAI,KAAKF,IAAb,EAAmB;QACjBp+C,GAAG,CAAC8I,MAAJ,CAAWq+C,IAAX,EAAiB/I,IAAjB;QACAp+C,GAAG,CAAC8I,MAAJ,CAAWq+C,IAAX,EAAiB7I,IAAjB;QACAt+C,GAAG,CAAC8I,MAAJ,CAAWq+C,IAAX,EAAiBG,KAAjB;MACD;IACF,CAND;;IAOA,IAAIrsB,IAAJ,EAAU;MACR5xB,KAAK,GAAGoW,MAAM,CAAC8nC,UAAU,CAAC,CAAD,CAAX,CAAd;MACAvnD,GAAG,CAAC2I,MAAJ,CAAWU,KAAK,CAAChd,CAAjB,EAAoBgd,KAAK,CAACzF,CAA1B;IACD;;IACD,KAAKpd,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIsV,IAAjB,EAAuB,EAAEtV,CAAzB,EAA4B;MAC1B6iB,KAAK,GAAGoW,MAAM,CAAC8nC,UAAU,CAAC/gE,CAAD,CAAX,CAAd;;MACA,IAAI6iB,KAAK,CAACiJ,IAAV,EAAgB;QACd;MACD;;MACD,MAAMjmB,CAAC,GAAGgd,KAAK,CAAChd,CAAhB;MACA,MAAMuX,CAAC,GAAGyF,KAAK,CAACzF,CAAhB;MACA,MAAM6jD,MAAM,GAAGp7D,CAAC,GAAG,CAAnB;;MACA,IAAIo7D,MAAM,KAAKJ,KAAf,EAAsB;QACpB,IAAIzjD,CAAC,GAAG06C,IAAR,EAAc;UACZA,IAAI,GAAG16C,CAAP;QACD,CAFD,MAEO,IAAIA,CAAC,GAAGw6C,IAAR,EAAc;UACnBA,IAAI,GAAGx6C,CAAP;QACD;;QACDujD,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAT,GAAgB96D,CAAjB,IAAsB,EAAE+6D,MAA/B;MACD,CAPD,MAOO;QACLI,KAAK;QACLxnD,GAAG,CAAC8I,MAAJ,CAAWzc,CAAX,EAAcuX,CAAd;QACAyjD,KAAK,GAAGI,MAAR;QACAL,MAAM,GAAG,CAAT;QACA9I,IAAI,GAAGF,IAAI,GAAGx6C,CAAd;MACD;;MACD0jD,KAAK,GAAG1jD,CAAR;IACD;;IACD4jD,KAAK;EACN;;EACD,SAASE,iBAAT,CAA2B98C,IAA3B,EAAiC;IAC/B,MAAMJ,IAAI,GAAGI,IAAI,CAACjO,OAAlB;IACA,MAAM4sB,UAAU,GAAG/e,IAAI,CAAC+e,UAAL,IAAmB/e,IAAI,CAAC+e,UAAL,CAAgBhjC,MAAtD;IACA,MAAMohE,WAAW,GAAG,CAAC/8C,IAAI,CAACm2C,UAAN,IAAoB,CAACn2C,IAAI,CAACwd,KAA1B,IAAmC,CAAC5d,IAAI,CAAC6X,OAAzC,IAAoD7X,IAAI,CAAC2X,sBAAL,KAAgC,UAApF,IAAkG,CAAC3X,IAAI,CAACi8C,OAAxG,IAAmH,CAACl9B,UAAxI;IACA,OAAOo+B,WAAW,GAAGT,eAAH,GAAqBF,WAAvC;EACD;;EACD,SAASY,uBAAT,CAAiCjrD,OAAjC,EAA0C;IACxC,IAAIA,OAAO,CAAC8pD,OAAZ,EAAqB;MACnB,OAAO/hC,qBAAP;IACD;;IACD,IAAI/nB,OAAO,CAAC0lB,OAAR,IAAmB1lB,OAAO,CAACwlB,sBAAR,KAAmC,UAA1D,EAAsE;MACpE,OAAOwC,oBAAP;IACD;;IACD,OAAOF,YAAP;EACD;;EACD,SAASojC,mBAAT,CAA6B7nD,GAA7B,EAAkC4K,IAAlC,EAAwCzmB,KAAxC,EAA+C6zB,KAA/C,EAAsD;IACpD,IAAI8vC,IAAI,GAAGl9C,IAAI,CAACm9C,KAAhB;;IACA,IAAI,CAACD,IAAL,EAAW;MACTA,IAAI,GAAGl9C,IAAI,CAACm9C,KAAL,GAAa,IAAIC,MAAJ,EAApB;;MACA,IAAIp9C,IAAI,CAACk9C,IAAL,CAAUA,IAAV,EAAgB3jE,KAAhB,EAAuB6zB,KAAvB,CAAJ,EAAmC;QACjC8vC,IAAI,CAACp/C,SAAL;MACD;IACF;;IACD49C,QAAQ,CAACtmD,GAAD,EAAM4K,IAAI,CAACjO,OAAX,CAAR;IACAqD,GAAG,CAACmJ,MAAJ,CAAW2+C,IAAX;EACD;;EACD,SAASG,gBAAT,CAA0BjoD,GAA1B,EAA+B4K,IAA/B,EAAqCzmB,KAArC,EAA4C6zB,KAA5C,EAAmD;IACjD,MAAM;MAAC6P,QAAD;MAAWlrB;IAAX,IAAsBiO,IAA5B;;IACA,MAAMs9C,aAAa,GAAGR,iBAAiB,CAAC98C,IAAD,CAAvC;;IACA,KAAK,MAAMoc,OAAX,IAAsBa,QAAtB,EAAgC;MAC9By+B,QAAQ,CAACtmD,GAAD,EAAMrD,OAAN,EAAeqqB,OAAO,CAACpnB,KAAvB,CAAR;MACAI,GAAG,CAACwI,SAAJ;;MACA,IAAI0/C,aAAa,CAACloD,GAAD,EAAM4K,IAAN,EAAYoc,OAAZ,EAAqB;QAAC7iC,KAAD;QAAQC,GAAG,EAAED,KAAK,GAAG6zB,KAAR,GAAgB;MAA7B,CAArB,CAAjB,EAAwE;QACtEhY,GAAG,CAAC0I,SAAJ;MACD;;MACD1I,GAAG,CAACmJ,MAAJ;IACD;EACF;;EACD,MAAMg/C,SAAS,GAAG,OAAOH,MAAP,KAAkB,UAApC;;EACA,SAASvhE,IAAT,CAAcuZ,GAAd,EAAmB4K,IAAnB,EAAyBzmB,KAAzB,EAAgC6zB,KAAhC,EAAuC;IACrC,IAAImwC,SAAS,IAAI,CAACv9C,IAAI,CAACjO,OAAL,CAAaqqB,OAA/B,EAAwC;MACtC6gC,mBAAmB,CAAC7nD,GAAD,EAAM4K,IAAN,EAAYzmB,KAAZ,EAAmB6zB,KAAnB,CAAnB;IACD,CAFD,MAEO;MACLiwC,gBAAgB,CAACjoD,GAAD,EAAM4K,IAAN,EAAYzmB,KAAZ,EAAmB6zB,KAAnB,CAAhB;IACD;EACF;;EACD,MAAMowC,WAAN,SAA0BvsB,OAA1B,CAAkC;IAChCl3C,WAAW,CAAC6pC,GAAD,EAAM;MACf;MACA,KAAKwyB,QAAL,GAAgB,IAAhB;MACA,KAAKrkD,OAAL,GAAe1X,SAAf;MACA,KAAKyjC,MAAL,GAAczjC,SAAd;MACA,KAAKmjC,KAAL,GAAanjC,SAAb;MACA,KAAKsjC,SAAL,GAAiBtjC,SAAjB;MACA,KAAK8iE,KAAL,GAAa9iE,SAAb;MACA,KAAKojE,OAAL,GAAepjE,SAAf;MACA,KAAKqjE,SAAL,GAAiBrjE,SAAjB;MACA,KAAK87D,UAAL,GAAkB,KAAlB;MACA,KAAKwH,cAAL,GAAsB,KAAtB;MACA,KAAK1/B,aAAL,GAAqB5jC,SAArB;;MACA,IAAIupC,GAAJ,EAAS;QACPt3B,MAAM,CAACgB,MAAP,CAAc,IAAd,EAAoBs2B,GAApB;MACD;IACF;;IACD+yB,mBAAmB,CAAC5tC,SAAD,EAAYxT,SAAZ,EAAuB;MACxC,MAAMxD,OAAO,GAAG,KAAKA,OAArB;;MACA,IAAI,CAACA,OAAO,CAAC0lB,OAAR,IAAmB1lB,OAAO,CAACwlB,sBAAR,KAAmC,UAAvD,KAAsE,CAACxlB,OAAO,CAAC8pD,OAA/E,IAA0F,CAAC,KAAK8B,cAApG,EAAoH;QAClH,MAAMvmC,IAAI,GAAGrlB,OAAO,CAACulB,QAAR,GAAmB,KAAKkG,KAAxB,GAAgC,KAAKG,SAAlD;;QACAxG,0BAA0B,CAAC,KAAKsmC,OAAN,EAAe1rD,OAAf,EAAwBgX,SAAxB,EAAmCqO,IAAnC,EAAyC7hB,SAAzC,CAA1B;;QACA,KAAKooD,cAAL,GAAsB,IAAtB;MACD;IACF;;IACS,IAAN9oC,MAAM,CAACA,MAAD,EAAS;MACjB,KAAK4oC,OAAL,GAAe5oC,MAAf;MACA,OAAO,KAAK6oC,SAAZ;MACA,OAAO,KAAKP,KAAZ;MACA,KAAKQ,cAAL,GAAsB,KAAtB;IACD;;IACS,IAAN9oC,MAAM,GAAG;MACX,OAAO,KAAK4oC,OAAZ;IACD;;IACW,IAARxgC,QAAQ,GAAG;MACb,OAAO,KAAKygC,SAAL,KAAmB,KAAKA,SAAL,GAAiBpgC,gBAAgB,CAAC,IAAD,EAAO,KAAKvrB,OAAL,CAAaqqB,OAApB,CAApD,CAAP;IACD;;IACD8X,KAAK,GAAG;MACN,MAAMjX,QAAQ,GAAG,KAAKA,QAAtB;MACA,MAAMpI,MAAM,GAAG,KAAKA,MAApB;MACA,OAAOoI,QAAQ,CAACthC,MAAT,IAAmBk5B,MAAM,CAACoI,QAAQ,CAAC,CAAD,CAAR,CAAY1jC,KAAb,CAAhC;IACD;;IACD8jC,IAAI,GAAG;MACL,MAAMJ,QAAQ,GAAG,KAAKA,QAAtB;MACA,MAAMpI,MAAM,GAAG,KAAKA,MAApB;MACA,MAAMzH,KAAK,GAAG6P,QAAQ,CAACthC,MAAvB;MACA,OAAOyxB,KAAK,IAAIyH,MAAM,CAACoI,QAAQ,CAAC7P,KAAK,GAAG,CAAT,CAAR,CAAoB5zB,GAArB,CAAtB;IACD;;IACDokE,WAAW,CAACn/C,KAAD,EAAQlF,QAAR,EAAkB;MAC3B,MAAMxH,OAAO,GAAG,KAAKA,OAArB;MACA,MAAMzC,KAAK,GAAGmP,KAAK,CAAClF,QAAD,CAAnB;MACA,MAAMsb,MAAM,GAAG,KAAKA,MAApB;;MACA,MAAMoI,QAAQ,GAAGD,cAAc,CAAC,IAAD,EAAO;QAACzjB,QAAD;QAAWhgB,KAAK,EAAE+V,KAAlB;QAAyB9V,GAAG,EAAE8V;MAA9B,CAAP,CAA/B;;MACA,IAAI,CAAC2tB,QAAQ,CAACthC,MAAd,EAAsB;QACpB;MACD;;MACD,MAAMgd,MAAM,GAAG,EAAf;;MACA,MAAMklD,YAAY,GAAGb,uBAAuB,CAACjrD,OAAD,CAA5C;;MACA,IAAInW,CAAJ,EAAOsV,IAAP;;MACA,KAAKtV,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG+rB,QAAQ,CAACthC,MAA5B,EAAoCC,CAAC,GAAGsV,IAAxC,EAA8C,EAAEtV,CAAhD,EAAmD;QACjD,MAAM;UAACrC,KAAD;UAAQC;QAAR,IAAeyjC,QAAQ,CAACrhC,CAAD,CAA7B;QACA,MAAMuF,EAAE,GAAG0zB,MAAM,CAACt7B,KAAD,CAAjB;QACA,MAAM6H,EAAE,GAAGyzB,MAAM,CAACr7B,GAAD,CAAjB;;QACA,IAAI2H,EAAE,KAAKC,EAAX,EAAe;UACbuX,MAAM,CAAC/b,IAAP,CAAYuE,EAAZ;UACA;QACD;;QACD,MAAMg0B,CAAC,GAAGj6B,IAAI,CAACge,GAAL,CAAS,CAAC5J,KAAK,GAAGnO,EAAE,CAACoY,QAAD,CAAX,KAA0BnY,EAAE,CAACmY,QAAD,CAAF,GAAepY,EAAE,CAACoY,QAAD,CAA3C,CAAT,CAAV;;QACA,MAAMukD,YAAY,GAAGD,YAAY,CAAC18D,EAAD,EAAKC,EAAL,EAAS+zB,CAAT,EAAYpjB,OAAO,CAAC8pD,OAApB,CAAjC;;QACAiC,YAAY,CAACvkD,QAAD,CAAZ,GAAyBkF,KAAK,CAAClF,QAAD,CAA9B;QACAZ,MAAM,CAAC/b,IAAP,CAAYkhE,YAAZ;MACD;;MACD,OAAOnlD,MAAM,CAAChd,MAAP,KAAkB,CAAlB,GAAsBgd,MAAM,CAAC,CAAD,CAA5B,GAAkCA,MAAzC;IACD;;IACDyjD,WAAW,CAAChnD,GAAD,EAAMgnB,OAAN,EAAe7O,MAAf,EAAuB;MAChC,MAAM+vC,aAAa,GAAGR,iBAAiB,CAAC,IAAD,CAAvC;;MACA,OAAOQ,aAAa,CAACloD,GAAD,EAAM,IAAN,EAAYgnB,OAAZ,EAAqB7O,MAArB,CAApB;IACD;;IACD2vC,IAAI,CAAC9nD,GAAD,EAAM7b,KAAN,EAAa6zB,KAAb,EAAoB;MACtB,MAAM6P,QAAQ,GAAG,KAAKA,QAAtB;;MACA,MAAMqgC,aAAa,GAAGR,iBAAiB,CAAC,IAAD,CAAvC;;MACA,IAAI1lC,IAAI,GAAG,KAAKoG,KAAhB;MACAjkC,KAAK,GAAGA,KAAK,IAAI,CAAjB;MACA6zB,KAAK,GAAGA,KAAK,IAAK,KAAKyH,MAAL,CAAYl5B,MAAZ,GAAqBpC,KAAvC;;MACA,KAAK,MAAM6iC,OAAX,IAAsBa,QAAtB,EAAgC;QAC9B7F,IAAI,IAAIkmC,aAAa,CAACloD,GAAD,EAAM,IAAN,EAAYgnB,OAAZ,EAAqB;UAAC7iC,KAAD;UAAQC,GAAG,EAAED,KAAK,GAAG6zB,KAAR,GAAgB;QAA7B,CAArB,CAArB;MACD;;MACD,OAAO,CAAC,CAACgK,IAAT;IACD;;IACDv7B,IAAI,CAACuZ,GAAD,EAAM2T,SAAN,EAAiBxvB,KAAjB,EAAwB6zB,KAAxB,EAA+B;MACjC,MAAMrb,OAAO,GAAG,KAAKA,OAAL,IAAgB,EAAhC;MACA,MAAM8iB,MAAM,GAAG,KAAKA,MAAL,IAAe,EAA9B;;MACA,IAAIA,MAAM,CAACl5B,MAAP,IAAiBoW,OAAO,CAACuM,WAA7B,EAA0C;QACxClJ,GAAG,CAAC6G,IAAJ;QACApgB,IAAI,CAACuZ,GAAD,EAAM,IAAN,EAAY7b,KAAZ,EAAmB6zB,KAAnB,CAAJ;QACAhY,GAAG,CAACiH,OAAJ;MACD;;MACD,IAAI,KAAK+5C,QAAT,EAAmB;QACjB,KAAKuH,cAAL,GAAsB,KAAtB;QACA,KAAKR,KAAL,GAAa9iE,SAAb;MACD;IACF;;EAtG+B;;EAwGlCmjE,WAAW,CAAC5tD,EAAZ,GAAiB,MAAjB;EACA4tD,WAAW,CAACtmD,QAAZ,GAAuB;IACrBwnB,cAAc,EAAE,MADK;IAErBC,UAAU,EAAE,EAFS;IAGrBC,gBAAgB,EAAE,CAHG;IAIrBC,eAAe,EAAE,OAJI;IAKrBvgB,WAAW,EAAE,CALQ;IAMrByY,eAAe,EAAE,IANI;IAOrBQ,sBAAsB,EAAE,SAPH;IAQrBlZ,IAAI,EAAE,KARe;IASrBiZ,QAAQ,EAAE,KATW;IAUrBukC,OAAO,EAAE,KAVY;IAWrBpkC,OAAO,EAAE;EAXY,CAAvB;EAaA+lC,WAAW,CAACnsB,aAAZ,GAA4B;IAC1Bh9B,eAAe,EAAE,iBADS;IAE1BC,WAAW,EAAE;EAFa,CAA5B;EAIAkpD,WAAW,CAAC5pD,WAAZ,GAA0B;IACxBuD,WAAW,EAAE,IADW;IAExBE,UAAU,EAAGb,IAAD,IAAUA,IAAI,KAAK,YAAT,IAAyBA,IAAI,KAAK;EAFhC,CAA1B;;EAKA,SAASunD,SAAT,CAAmB/5C,EAAnB,EAAuB7Q,GAAvB,EAA4B0U,IAA5B,EAAkCiB,gBAAlC,EAAoD;IAClD,MAAM/W,OAAO,GAAGiS,EAAE,CAACjS,OAAnB;IACA,MAAM;MAAC,CAAC8V,IAAD,GAAQvY;IAAT,IAAkB0U,EAAE,CAACsF,QAAH,CAAY,CAACzB,IAAD,CAAZ,EAAoBiB,gBAApB,CAAxB;IACA,OAAQ5tB,IAAI,CAACge,GAAL,CAAS/F,GAAG,GAAG7D,KAAf,IAAwByC,OAAO,CAACyL,MAAR,GAAiBzL,OAAO,CAACisD,SAAzD;EACD;;EACD,MAAMC,YAAN,SAA2BhtB,OAA3B,CAAmC;IACjCl3C,WAAW,CAAC6pC,GAAD,EAAM;MACf;MACA,KAAK7xB,OAAL,GAAe1X,SAAf;MACA,KAAKmuC,MAAL,GAAcnuC,SAAd;MACA,KAAKqtB,IAAL,GAAYrtB,SAAZ;MACA,KAAK+C,IAAL,GAAY/C,SAAZ;;MACA,IAAIupC,GAAJ,EAAS;QACPt3B,MAAM,CAACgB,MAAP,CAAc,IAAd,EAAoBs2B,GAApB;MACD;IACF;;IACD1a,OAAO,CAACg1C,MAAD,EAASC,MAAT,EAAiBr1C,gBAAjB,EAAmC;MACxC,MAAM/W,OAAO,GAAG,KAAKA,OAArB;MACA,MAAM;QAACtQ,CAAD;QAAIuX;MAAJ,IAAS,KAAKsQ,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,CAAd,EAA0BR,gBAA1B,CAAf;MACA,OAAS5tB,IAAI,CAACod,GAAL,CAAS4lD,MAAM,GAAGz8D,CAAlB,EAAqB,CAArB,IAA0BvG,IAAI,CAACod,GAAL,CAAS6lD,MAAM,GAAGnlD,CAAlB,EAAqB,CAArB,CAA3B,GAAsD9d,IAAI,CAACod,GAAL,CAASvG,OAAO,CAACisD,SAAR,GAAoBjsD,OAAO,CAACyL,MAArC,EAA6C,CAA7C,CAA9D;IACD;;IACD4gD,QAAQ,CAACF,MAAD,EAASp1C,gBAAT,EAA2B;MACjC,OAAOi1C,SAAS,CAAC,IAAD,EAAOG,MAAP,EAAe,GAAf,EAAoBp1C,gBAApB,CAAhB;IACD;;IACDu1C,QAAQ,CAACF,MAAD,EAASr1C,gBAAT,EAA2B;MACjC,OAAOi1C,SAAS,CAAC,IAAD,EAAOI,MAAP,EAAe,GAAf,EAAoBr1C,gBAApB,CAAhB;IACD;;IACDa,cAAc,CAACb,gBAAD,EAAmB;MAC/B,MAAM;QAACrnB,CAAD;QAAIuX;MAAJ,IAAS,KAAKsQ,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,CAAd,EAA0BR,gBAA1B,CAAf;MACA,OAAO;QAACrnB,CAAD;QAAIuX;MAAJ,CAAP;IACD;;IACDvF,IAAI,CAAC1B,OAAD,EAAU;MACZA,OAAO,GAAGA,OAAO,IAAI,KAAKA,OAAhB,IAA2B,EAArC;MACA,IAAIyL,MAAM,GAAGzL,OAAO,CAACyL,MAAR,IAAkB,CAA/B;MACAA,MAAM,GAAGtiB,IAAI,CAACgC,GAAL,CAASsgB,MAAT,EAAiBA,MAAM,IAAIzL,OAAO,CAACusD,WAAlB,IAAiC,CAAlD,CAAT;MACA,MAAMhgD,WAAW,GAAGd,MAAM,IAAIzL,OAAO,CAACuM,WAAlB,IAAiC,CAArD;MACA,OAAO,CAACd,MAAM,GAAGc,WAAV,IAAyB,CAAhC;IACD;;IACDziB,IAAI,CAACuZ,GAAD,EAAMsJ,IAAN,EAAY;MACd,MAAM3M,OAAO,GAAG,KAAKA,OAArB;;MACA,IAAI,KAAK2V,IAAL,IAAa3V,OAAO,CAACyL,MAAR,GAAiB,GAA9B,IAAqC,CAACgB,cAAc,CAAC,IAAD,EAAOE,IAAP,EAAa,KAAKjL,IAAL,CAAU1B,OAAV,IAAqB,CAAlC,CAAxD,EAA8F;QAC5F;MACD;;MACDqD,GAAG,CAAC8K,WAAJ,GAAkBnO,OAAO,CAACuC,WAA1B;MACAc,GAAG,CAAC+K,SAAJ,GAAgBpO,OAAO,CAACuM,WAAxB;MACAlJ,GAAG,CAACqL,SAAJ,GAAgB1O,OAAO,CAACsC,eAAxB;MACA6I,SAAS,CAAC9H,GAAD,EAAMrD,OAAN,EAAe,KAAKtQ,CAApB,EAAuB,KAAKuX,CAA5B,CAAT;IACD;;IACDqP,QAAQ,GAAG;MACT,MAAMtW,OAAO,GAAG,KAAKA,OAAL,IAAgB,EAAhC;MACA,OAAOA,OAAO,CAACyL,MAAR,GAAiBzL,OAAO,CAACisD,SAAhC;IACD;;EA9CgC;;EAgDnCC,YAAY,CAACruD,EAAb,GAAkB,OAAlB;EACAquD,YAAY,CAAC/mD,QAAb,GAAwB;IACtBoH,WAAW,EAAE,CADS;IAEtB0/C,SAAS,EAAE,CAFW;IAGtB1I,gBAAgB,EAAE,CAHI;IAItBgJ,WAAW,EAAE,CAJS;IAKtBhhD,UAAU,EAAE,QALU;IAMtBE,MAAM,EAAE,CANc;IAOtBD,QAAQ,EAAE;EAPY,CAAxB;EASA0gD,YAAY,CAAC5sB,aAAb,GAA6B;IAC3Bh9B,eAAe,EAAE,iBADU;IAE3BC,WAAW,EAAE;EAFc,CAA7B;;EAKA,SAASiqD,YAAT,CAAsBC,GAAtB,EAA2B11C,gBAA3B,EAA6C;IAC3C,MAAM;MAACrnB,CAAD;MAAIuX,CAAJ;MAAO0J,IAAP;MAAa9G,KAAb;MAAoBqB;IAApB,IAA8BuhD,GAAG,CAACl1C,QAAJ,CAAa,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,EAAmB,OAAnB,EAA4B,QAA5B,CAAb,EAAoDR,gBAApD,CAApC;IACA,IAAIpvB,IAAJ,EAAUC,KAAV,EAAiBilB,GAAjB,EAAsBC,MAAtB,EAA8B4/C,IAA9B;;IACA,IAAID,GAAG,CAAC5xC,UAAR,EAAoB;MAClB6xC,IAAI,GAAGxhD,MAAM,GAAG,CAAhB;MACAvjB,IAAI,GAAGwB,IAAI,CAACC,GAAL,CAASsG,CAAT,EAAYihB,IAAZ,CAAP;MACA/oB,KAAK,GAAGuB,IAAI,CAACgC,GAAL,CAASuE,CAAT,EAAYihB,IAAZ,CAAR;MACA9D,GAAG,GAAG5F,CAAC,GAAGylD,IAAV;MACA5/C,MAAM,GAAG7F,CAAC,GAAGylD,IAAb;IACD,CAND,MAMO;MACLA,IAAI,GAAG7iD,KAAK,GAAG,CAAf;MACAliB,IAAI,GAAG+H,CAAC,GAAGg9D,IAAX;MACA9kE,KAAK,GAAG8H,CAAC,GAAGg9D,IAAZ;MACA7/C,GAAG,GAAG1jB,IAAI,CAACC,GAAL,CAAS6d,CAAT,EAAY0J,IAAZ,CAAN;MACA7D,MAAM,GAAG3jB,IAAI,CAACgC,GAAL,CAAS8b,CAAT,EAAY0J,IAAZ,CAAT;IACD;;IACD,OAAO;MAAChpB,IAAD;MAAOklB,GAAP;MAAYjlB,KAAZ;MAAmBklB;IAAnB,CAAP;EACD;;EACD,SAAS6/C,WAAT,CAAqBh3C,IAArB,EAA2BpY,KAA3B,EAAkCnU,GAAlC,EAAuC+B,GAAvC,EAA4C;IAC1C,OAAOwqB,IAAI,GAAG,CAAH,GAAOzM,WAAW,CAAC3L,KAAD,EAAQnU,GAAR,EAAa+B,GAAb,CAA7B;EACD;;EACD,SAASyhE,gBAAT,CAA0BH,GAA1B,EAA+BI,IAA/B,EAAqCC,IAArC,EAA2C;IACzC,MAAMvvD,KAAK,GAAGkvD,GAAG,CAACzsD,OAAJ,CAAYuM,WAA1B;IACA,MAAMoJ,IAAI,GAAG82C,GAAG,CAACjO,aAAjB;IACA,MAAMqI,CAAC,GAAG3tC,MAAM,CAAC3b,KAAD,CAAhB;IACA,OAAO;MACL6lB,CAAC,EAAEupC,WAAW,CAACh3C,IAAI,CAAC9I,GAAN,EAAWg6C,CAAC,CAACh6C,GAAb,EAAkB,CAAlB,EAAqBigD,IAArB,CADT;MAELjgE,CAAC,EAAE8/D,WAAW,CAACh3C,IAAI,CAAC/tB,KAAN,EAAai/D,CAAC,CAACj/D,KAAf,EAAsB,CAAtB,EAAyBilE,IAAzB,CAFT;MAGL3gE,CAAC,EAAEygE,WAAW,CAACh3C,IAAI,CAAC7I,MAAN,EAAc+5C,CAAC,CAAC/5C,MAAhB,EAAwB,CAAxB,EAA2BggD,IAA3B,CAHT;MAILx/D,CAAC,EAAEq/D,WAAW,CAACh3C,IAAI,CAAChuB,IAAN,EAAYk/D,CAAC,CAACl/D,IAAd,EAAoB,CAApB,EAAuBklE,IAAvB;IAJT,CAAP;EAMD;;EACD,SAASE,iBAAT,CAA2BN,GAA3B,EAAgCI,IAAhC,EAAsCC,IAAtC,EAA4C;IAC1C,MAAM;MAACrO;IAAD,IAAuBgO,GAAG,CAACl1C,QAAJ,CAAa,CAAC,oBAAD,CAAb,CAA7B;IACA,MAAMha,KAAK,GAAGkvD,GAAG,CAACzsD,OAAJ,CAAY8mD,YAA1B;IACA,MAAMD,CAAC,GAAG1tC,aAAa,CAAC5b,KAAD,CAAvB;IACA,MAAMyvD,IAAI,GAAG7jE,IAAI,CAACC,GAAL,CAASyjE,IAAT,EAAeC,IAAf,CAAb;IACA,MAAMn3C,IAAI,GAAG82C,GAAG,CAACjO,aAAjB;IACA,MAAMyO,YAAY,GAAGxO,kBAAkB,IAAIxgD,QAAQ,CAACV,KAAD,CAAnD;IACA,OAAO;MACLgS,OAAO,EAAEo9C,WAAW,CAAC,CAACM,YAAD,IAAiBt3C,IAAI,CAAC9I,GAAtB,IAA6B8I,IAAI,CAAChuB,IAAnC,EAAyCk/D,CAAC,CAACt3C,OAA3C,EAAoD,CAApD,EAAuDy9C,IAAvD,CADf;MAELt9C,QAAQ,EAAEi9C,WAAW,CAAC,CAACM,YAAD,IAAiBt3C,IAAI,CAAC9I,GAAtB,IAA6B8I,IAAI,CAAC/tB,KAAnC,EAA0Ci/D,CAAC,CAACn3C,QAA5C,EAAsD,CAAtD,EAAyDs9C,IAAzD,CAFhB;MAGLx9C,UAAU,EAAEm9C,WAAW,CAAC,CAACM,YAAD,IAAiBt3C,IAAI,CAAC7I,MAAtB,IAAgC6I,IAAI,CAAChuB,IAAtC,EAA4Ck/D,CAAC,CAACr3C,UAA9C,EAA0D,CAA1D,EAA6Dw9C,IAA7D,CAHlB;MAILv9C,WAAW,EAAEk9C,WAAW,CAAC,CAACM,YAAD,IAAiBt3C,IAAI,CAAC7I,MAAtB,IAAgC6I,IAAI,CAAC/tB,KAAtC,EAA6Ci/D,CAAC,CAACp3C,WAA/C,EAA4D,CAA5D,EAA+Du9C,IAA/D;IAJnB,CAAP;EAMD;;EACD,SAASE,aAAT,CAAuBT,GAAvB,EAA4B;IAC1B,MAAMniC,MAAM,GAAGkiC,YAAY,CAACC,GAAD,CAA3B;IACA,MAAM5iD,KAAK,GAAGygB,MAAM,CAAC1iC,KAAP,GAAe0iC,MAAM,CAAC3iC,IAApC;IACA,MAAMujB,MAAM,GAAGof,MAAM,CAACxd,MAAP,GAAgBwd,MAAM,CAACzd,GAAtC;IACA,MAAM63C,MAAM,GAAGkI,gBAAgB,CAACH,GAAD,EAAM5iD,KAAK,GAAG,CAAd,EAAiBqB,MAAM,GAAG,CAA1B,CAA/B;IACA,MAAMO,MAAM,GAAGshD,iBAAiB,CAACN,GAAD,EAAM5iD,KAAK,GAAG,CAAd,EAAiBqB,MAAM,GAAG,CAA1B,CAAhC;IACA,OAAO;MACLiiD,KAAK,EAAE;QACLz9D,CAAC,EAAE46B,MAAM,CAAC3iC,IADL;QAELsf,CAAC,EAAEqjB,MAAM,CAACzd,GAFL;QAGLre,CAAC,EAAEqb,KAHE;QAILtc,CAAC,EAAE2d,MAJE;QAKLO;MALK,CADF;MAQLu9C,KAAK,EAAE;QACLt5D,CAAC,EAAE46B,MAAM,CAAC3iC,IAAP,GAAc+8D,MAAM,CAACp3D,CADnB;QAEL2Z,CAAC,EAAEqjB,MAAM,CAACzd,GAAP,GAAa63C,MAAM,CAACthC,CAFlB;QAGL50B,CAAC,EAAEqb,KAAK,GAAG66C,MAAM,CAACp3D,CAAf,GAAmBo3D,MAAM,CAAC73D,CAHxB;QAILU,CAAC,EAAE2d,MAAM,GAAGw5C,MAAM,CAACthC,CAAhB,GAAoBshC,MAAM,CAACx4D,CAJzB;QAKLuf,MAAM,EAAE;UACN8D,OAAO,EAAEpmB,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAYsgB,MAAM,CAAC8D,OAAP,GAAiBpmB,IAAI,CAACgC,GAAL,CAASu5D,MAAM,CAACthC,CAAhB,EAAmBshC,MAAM,CAACp3D,CAA1B,CAA7B,CADH;UAENoiB,QAAQ,EAAEvmB,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAYsgB,MAAM,CAACiE,QAAP,GAAkBvmB,IAAI,CAACgC,GAAL,CAASu5D,MAAM,CAACthC,CAAhB,EAAmBshC,MAAM,CAAC73D,CAA1B,CAA9B,CAFJ;UAGN2iB,UAAU,EAAErmB,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAYsgB,MAAM,CAAC+D,UAAP,GAAoBrmB,IAAI,CAACgC,GAAL,CAASu5D,MAAM,CAACx4D,CAAhB,EAAmBw4D,MAAM,CAACp3D,CAA1B,CAAhC,CAHN;UAINmiB,WAAW,EAAEtmB,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAYsgB,MAAM,CAACgE,WAAP,GAAqBtmB,IAAI,CAACgC,GAAL,CAASu5D,MAAM,CAACx4D,CAAhB,EAAmBw4D,MAAM,CAAC73D,CAA1B,CAAjC;QAJP;MALH;IARF,CAAP;EAqBD;;EACD,SAASsqB,OAAT,CAAiBs1C,GAAjB,EAAsB/8D,CAAtB,EAAyBuX,CAAzB,EAA4B8P,gBAA5B,EAA8C;IAC5C,MAAMq2C,KAAK,GAAG19D,CAAC,KAAK,IAApB;IACA,MAAM29D,KAAK,GAAGpmD,CAAC,KAAK,IAApB;IACA,MAAMqmD,QAAQ,GAAGF,KAAK,IAAIC,KAA1B;IACA,MAAM/iC,MAAM,GAAGmiC,GAAG,IAAI,CAACa,QAAR,IAAoBd,YAAY,CAACC,GAAD,EAAM11C,gBAAN,CAA/C;IACA,OAAOuT,MAAM,KACT8iC,KAAK,IAAIhkD,UAAU,CAAC1Z,CAAD,EAAI46B,MAAM,CAAC3iC,IAAX,EAAiB2iC,MAAM,CAAC1iC,KAAxB,CADV,CAAN,KAEHylE,KAAK,IAAIjkD,UAAU,CAACnC,CAAD,EAAIqjB,MAAM,CAACzd,GAAX,EAAgByd,MAAM,CAACxd,MAAvB,CAFhB,CAAP;EAGD;;EACD,SAASygD,SAAT,CAAmB9hD,MAAnB,EAA2B;IACzB,OAAOA,MAAM,CAAC8D,OAAP,IAAkB9D,MAAM,CAACiE,QAAzB,IAAqCjE,MAAM,CAAC+D,UAA5C,IAA0D/D,MAAM,CAACgE,WAAxE;EACD;;EACD,SAAS+9C,iBAAT,CAA2BnqD,GAA3B,EAAgCgJ,IAAhC,EAAsC;IACpChJ,GAAG,CAACgJ,IAAJ,CAASA,IAAI,CAAC3c,CAAd,EAAiB2c,IAAI,CAACpF,CAAtB,EAAyBoF,IAAI,CAAC7d,CAA9B,EAAiC6d,IAAI,CAAC9e,CAAtC;EACD;;EACD,SAASkgE,WAAT,CAAqBphD,IAArB,EAA2B4vC,MAA3B,EAAiD;IAAA,IAAdyR,OAAc,uEAAJ,EAAI;IAC/C,MAAMh+D,CAAC,GAAG2c,IAAI,CAAC3c,CAAL,KAAWg+D,OAAO,CAACh+D,CAAnB,GAAuB,CAACusD,MAAxB,GAAiC,CAA3C;IACA,MAAMh1C,CAAC,GAAGoF,IAAI,CAACpF,CAAL,KAAWymD,OAAO,CAACzmD,CAAnB,GAAuB,CAACg1C,MAAxB,GAAiC,CAA3C;IACA,MAAMztD,CAAC,GAAG,CAAC6d,IAAI,CAAC3c,CAAL,GAAS2c,IAAI,CAAC7d,CAAd,KAAoBk/D,OAAO,CAACh+D,CAAR,GAAYg+D,OAAO,CAACl/D,CAAxC,GAA4CytD,MAA5C,GAAqD,CAAtD,IAA2DvsD,CAArE;IACA,MAAMnC,CAAC,GAAG,CAAC8e,IAAI,CAACpF,CAAL,GAASoF,IAAI,CAAC9e,CAAd,KAAoBmgE,OAAO,CAACzmD,CAAR,GAAYymD,OAAO,CAACngE,CAAxC,GAA4C0uD,MAA5C,GAAqD,CAAtD,IAA2Dh1C,CAArE;IACA,OAAO;MACLvX,CAAC,EAAE2c,IAAI,CAAC3c,CAAL,GAASA,CADP;MAELuX,CAAC,EAAEoF,IAAI,CAACpF,CAAL,GAASA,CAFP;MAGLzY,CAAC,EAAE6d,IAAI,CAAC7d,CAAL,GAASA,CAHP;MAILjB,CAAC,EAAE8e,IAAI,CAAC9e,CAAL,GAASA,CAJP;MAKLke,MAAM,EAAEY,IAAI,CAACZ;IALR,CAAP;EAOD;;EACD,MAAMkiD,UAAN,SAAyBzuB,OAAzB,CAAiC;IAC/Bl3C,WAAW,CAAC6pC,GAAD,EAAM;MACf;MACA,KAAK7xB,OAAL,GAAe1X,SAAf;MACA,KAAKuyB,UAAL,GAAkBvyB,SAAlB;MACA,KAAKqoB,IAAL,GAAYroB,SAAZ;MACA,KAAKuhB,KAAL,GAAavhB,SAAb;MACA,KAAK4iB,MAAL,GAAc5iB,SAAd;MACA,KAAK02D,aAAL,GAAqB12D,SAArB;;MACA,IAAIupC,GAAJ,EAAS;QACPt3B,MAAM,CAACgB,MAAP,CAAc,IAAd,EAAoBs2B,GAApB;MACD;IACF;;IACD/nC,IAAI,CAACuZ,GAAD,EAAM;MACR,MAAM;QAAC27C,aAAD;QAAgBh/C,OAAO,EAAE;UAACuC,WAAD;UAAcD;QAAd;MAAzB,IAA2D,IAAjE;MACA,MAAM;QAAC0mD,KAAD;QAAQmE;MAAR,IAAiBD,aAAa,CAAC,IAAD,CAApC;MACA,MAAMU,WAAW,GAAGL,SAAS,CAACJ,KAAK,CAAC1hD,MAAP,CAAT,GAA0B6D,kBAA1B,GAA+Ck+C,iBAAnE;MACAnqD,GAAG,CAAC6G,IAAJ;;MACA,IAAIijD,KAAK,CAAC3+D,CAAN,KAAYw6D,KAAK,CAACx6D,CAAlB,IAAuB2+D,KAAK,CAAC5/D,CAAN,KAAYy7D,KAAK,CAACz7D,CAA7C,EAAgD;QAC9C8V,GAAG,CAACwI,SAAJ;QACA+hD,WAAW,CAACvqD,GAAD,EAAMoqD,WAAW,CAACN,KAAD,EAAQnO,aAAR,EAAuBgK,KAAvB,CAAjB,CAAX;QACA3lD,GAAG,CAAC2J,IAAJ;QACA4gD,WAAW,CAACvqD,GAAD,EAAMoqD,WAAW,CAACzE,KAAD,EAAQ,CAAChK,aAAT,EAAwBmO,KAAxB,CAAjB,CAAX;QACA9pD,GAAG,CAACqL,SAAJ,GAAgBnM,WAAhB;QACAc,GAAG,CAACiJ,IAAJ,CAAS,SAAT;MACD;;MACDjJ,GAAG,CAACwI,SAAJ;MACA+hD,WAAW,CAACvqD,GAAD,EAAMoqD,WAAW,CAACzE,KAAD,EAAQhK,aAAR,CAAjB,CAAX;MACA37C,GAAG,CAACqL,SAAJ,GAAgBpM,eAAhB;MACAe,GAAG,CAACiJ,IAAJ;MACAjJ,GAAG,CAACiH,OAAJ;IACD;;IACD6M,OAAO,CAACg1C,MAAD,EAASC,MAAT,EAAiBr1C,gBAAjB,EAAmC;MACxC,OAAOI,OAAO,CAAC,IAAD,EAAOg1C,MAAP,EAAeC,MAAf,EAAuBr1C,gBAAvB,CAAd;IACD;;IACDs1C,QAAQ,CAACF,MAAD,EAASp1C,gBAAT,EAA2B;MACjC,OAAOI,OAAO,CAAC,IAAD,EAAOg1C,MAAP,EAAe,IAAf,EAAqBp1C,gBAArB,CAAd;IACD;;IACDu1C,QAAQ,CAACF,MAAD,EAASr1C,gBAAT,EAA2B;MACjC,OAAOI,OAAO,CAAC,IAAD,EAAO,IAAP,EAAai1C,MAAb,EAAqBr1C,gBAArB,CAAd;IACD;;IACDa,cAAc,CAACb,gBAAD,EAAmB;MAC/B,MAAM;QAACrnB,CAAD;QAAIuX,CAAJ;QAAO0J,IAAP;QAAakK;MAAb,IAA2B,KAAKtD,QAAL,CAAc,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,EAAmB,YAAnB,CAAd,EAAgDR,gBAAhD,CAAjC;MACA,OAAO;QACLrnB,CAAC,EAAEmrB,UAAU,GAAG,CAACnrB,CAAC,GAAGihB,IAAL,IAAa,CAAhB,GAAoBjhB,CAD5B;QAELuX,CAAC,EAAE4T,UAAU,GAAG5T,CAAH,GAAO,CAACA,CAAC,GAAG0J,IAAL,IAAa;MAF5B,CAAP;IAID;;IACD2F,QAAQ,CAACR,IAAD,EAAO;MACb,OAAOA,IAAI,KAAK,GAAT,GAAe,KAAKjM,KAAL,GAAa,CAA5B,GAAgC,KAAKqB,MAAL,GAAc,CAArD;IACD;;EAlD8B;;EAoDjCyiD,UAAU,CAAC9vD,EAAX,GAAgB,KAAhB;EACA8vD,UAAU,CAACxoD,QAAX,GAAsB;IACpBq5C,aAAa,EAAE,OADK;IAEpBjyC,WAAW,EAAE,CAFO;IAGpBu6C,YAAY,EAAE,CAHM;IAIpB9H,aAAa,EAAE,MAJK;IAKpBzzC,UAAU,EAAEjjB;EALQ,CAAtB;EAOAqlE,UAAU,CAACruB,aAAX,GAA2B;IACzBh9B,eAAe,EAAE,iBADQ;IAEzBC,WAAW,EAAE;EAFY,CAA3B;EAKA,IAAIM,QAAQ,GAAG,aAAatI,MAAM,CAACykB,MAAP,CAAc;IAC1CgO,SAAS,EAAE,IAD+B;IAE1Ck8B,UAAU,EAAEA,UAF8B;IAG1CuC,WAAW,EAAEA,WAH6B;IAI1CS,YAAY,EAAEA,YAJ4B;IAK1CyB,UAAU,EAAEA;EAL8B,CAAd,CAA5B;;EAQA,SAASE,cAAT,CAAwBtkD,IAAxB,EAA8B/hB,KAA9B,EAAqC6zB,KAArC,EAA4CS,cAA5C,EAA4D9b,OAA5D,EAAqE;IACnE,MAAM8tD,OAAO,GAAG9tD,OAAO,CAAC8tD,OAAR,IAAmBhyC,cAAnC;;IACA,IAAIgyC,OAAO,IAAIzyC,KAAf,EAAsB;MACpB,OAAO9R,IAAI,CAAC5iB,KAAL,CAAWa,KAAX,EAAkBA,KAAK,GAAG6zB,KAA1B,CAAP;IACD;;IACD,MAAM0yC,SAAS,GAAG,EAAlB;IACA,MAAMC,WAAW,GAAG,CAAC3yC,KAAK,GAAG,CAAT,KAAeyyC,OAAO,GAAG,CAAzB,CAApB;IACA,IAAIG,YAAY,GAAG,CAAnB;IACA,MAAMC,QAAQ,GAAG1mE,KAAK,GAAG6zB,KAAR,GAAgB,CAAjC;IACA,IAAIpvB,CAAC,GAAGzE,KAAR;IACA,IAAIqC,CAAJ,EAAOskE,YAAP,EAAqBC,OAArB,EAA8BzhD,IAA9B,EAAoC0hD,KAApC;IACAN,SAAS,CAACE,YAAY,EAAb,CAAT,GAA4B1kD,IAAI,CAACtd,CAAD,CAAhC;;IACA,KAAKpC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGikE,OAAO,GAAG,CAA1B,EAA6BjkE,CAAC,EAA9B,EAAkC;MAChC,IAAI2gE,IAAI,GAAG,CAAX;MACA,IAAI8D,IAAI,GAAG,CAAX;MACA,IAAI7zD,CAAJ;MACA,MAAM8zD,aAAa,GAAGplE,IAAI,CAACqd,KAAL,CAAW,CAAC3c,CAAC,GAAG,CAAL,IAAUmkE,WAArB,IAAoC,CAApC,GAAwCxmE,KAA9D;MACA,MAAMgnE,WAAW,GAAGrlE,IAAI,CAACC,GAAL,CAASD,IAAI,CAACqd,KAAL,CAAW,CAAC3c,CAAC,GAAG,CAAL,IAAUmkE,WAArB,IAAoC,CAA7C,EAAgD3yC,KAAhD,IAAyD7zB,KAA7E;MACA,MAAMinE,cAAc,GAAGD,WAAW,GAAGD,aAArC;;MACA,KAAK9zD,CAAC,GAAG8zD,aAAT,EAAwB9zD,CAAC,GAAG+zD,WAA5B,EAAyC/zD,CAAC,EAA1C,EAA8C;QAC5C+vD,IAAI,IAAIjhD,IAAI,CAAC9O,CAAD,CAAJ,CAAQ/K,CAAhB;QACA4+D,IAAI,IAAI/kD,IAAI,CAAC9O,CAAD,CAAJ,CAAQwM,CAAhB;MACD;;MACDujD,IAAI,IAAIiE,cAAR;MACAH,IAAI,IAAIG,cAAR;MACA,MAAMC,SAAS,GAAGvlE,IAAI,CAACqd,KAAL,CAAW3c,CAAC,GAAGmkE,WAAf,IAA8B,CAA9B,GAAkCxmE,KAApD;MACA,MAAMmnE,OAAO,GAAGxlE,IAAI,CAACC,GAAL,CAASD,IAAI,CAACqd,KAAL,CAAW,CAAC3c,CAAC,GAAG,CAAL,IAAUmkE,WAArB,IAAoC,CAA7C,EAAgD3yC,KAAhD,IAAyD7zB,KAAzE;MACA,MAAM;QAACkI,CAAC,EAAEk/D,OAAJ;QAAa3nD,CAAC,EAAE4nD;MAAhB,IAA2BtlD,IAAI,CAACtd,CAAD,CAArC;MACAmiE,OAAO,GAAGzhD,IAAI,GAAG,CAAC,CAAlB;;MACA,KAAKlS,CAAC,GAAGi0D,SAAT,EAAoBj0D,CAAC,GAAGk0D,OAAxB,EAAiCl0D,CAAC,EAAlC,EAAsC;QACpCkS,IAAI,GAAG,MAAMxjB,IAAI,CAACge,GAAL,CACX,CAACynD,OAAO,GAAGpE,IAAX,KAAoBjhD,IAAI,CAAC9O,CAAD,CAAJ,CAAQwM,CAAR,GAAY4nD,OAAhC,IACA,CAACD,OAAO,GAAGrlD,IAAI,CAAC9O,CAAD,CAAJ,CAAQ/K,CAAnB,KAAyB4+D,IAAI,GAAGO,OAAhC,CAFW,CAAb;;QAIA,IAAIliD,IAAI,GAAGyhD,OAAX,EAAoB;UAClBA,OAAO,GAAGzhD,IAAV;UACAwhD,YAAY,GAAG5kD,IAAI,CAAC9O,CAAD,CAAnB;UACA4zD,KAAK,GAAG5zD,CAAR;QACD;MACF;;MACDszD,SAAS,CAACE,YAAY,EAAb,CAAT,GAA4BE,YAA5B;MACAliE,CAAC,GAAGoiE,KAAJ;IACD;;IACDN,SAAS,CAACE,YAAY,EAAb,CAAT,GAA4B1kD,IAAI,CAAC2kD,QAAD,CAAhC;IACA,OAAOH,SAAP;EACD;;EACD,SAASe,gBAAT,CAA0BvlD,IAA1B,EAAgC/hB,KAAhC,EAAuC6zB,KAAvC,EAA8CS,cAA9C,EAA8D;IAC5D,IAAI0uC,IAAI,GAAG,CAAX;IACA,IAAIC,MAAM,GAAG,CAAb;IACA,IAAI5gE,CAAJ,EAAO6iB,KAAP,EAAchd,CAAd,EAAiBuX,CAAjB,EAAoByjD,KAApB,EAA2BqE,QAA3B,EAAqCC,QAArC,EAA+CC,UAA/C,EAA2DtN,IAA3D,EAAiEF,IAAjE;IACA,MAAMsM,SAAS,GAAG,EAAlB;IACA,MAAMG,QAAQ,GAAG1mE,KAAK,GAAG6zB,KAAR,GAAgB,CAAjC;IACA,MAAM6zC,IAAI,GAAG3lD,IAAI,CAAC/hB,KAAD,CAAJ,CAAYkI,CAAzB;IACA,MAAMy/D,IAAI,GAAG5lD,IAAI,CAAC2kD,QAAD,CAAJ,CAAex+D,CAA5B;IACA,MAAM0/D,EAAE,GAAGD,IAAI,GAAGD,IAAlB;;IACA,KAAKrlE,CAAC,GAAGrC,KAAT,EAAgBqC,CAAC,GAAGrC,KAAK,GAAG6zB,KAA5B,EAAmC,EAAExxB,CAArC,EAAwC;MACtC6iB,KAAK,GAAGnD,IAAI,CAAC1f,CAAD,CAAZ;MACA6F,CAAC,GAAG,CAACgd,KAAK,CAAChd,CAAN,GAAUw/D,IAAX,IAAmBE,EAAnB,GAAwBtzC,cAA5B;MACA7U,CAAC,GAAGyF,KAAK,CAACzF,CAAV;MACA,MAAM6jD,MAAM,GAAGp7D,CAAC,GAAG,CAAnB;;MACA,IAAIo7D,MAAM,KAAKJ,KAAf,EAAsB;QACpB,IAAIzjD,CAAC,GAAG06C,IAAR,EAAc;UACZA,IAAI,GAAG16C,CAAP;UACA8nD,QAAQ,GAAGllE,CAAX;QACD,CAHD,MAGO,IAAIod,CAAC,GAAGw6C,IAAR,EAAc;UACnBA,IAAI,GAAGx6C,CAAP;UACA+nD,QAAQ,GAAGnlE,CAAX;QACD;;QACD2gE,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAT,GAAgB99C,KAAK,CAAChd,CAAvB,IAA4B,EAAE+6D,MAArC;MACD,CATD,MASO;QACL,MAAM4E,SAAS,GAAGxlE,CAAC,GAAG,CAAtB;;QACA,IAAI,CAACiU,aAAa,CAACixD,QAAD,CAAd,IAA4B,CAACjxD,aAAa,CAACkxD,QAAD,CAA9C,EAA0D;UACxD,MAAMM,kBAAkB,GAAGnmE,IAAI,CAACC,GAAL,CAAS2lE,QAAT,EAAmBC,QAAnB,CAA3B;UACA,MAAMO,kBAAkB,GAAGpmE,IAAI,CAACgC,GAAL,CAAS4jE,QAAT,EAAmBC,QAAnB,CAA3B;;UACA,IAAIM,kBAAkB,KAAKL,UAAvB,IAAqCK,kBAAkB,KAAKD,SAAhE,EAA2E;YACzEtB,SAAS,CAACljE,IAAV,CAAe,EACb,GAAG0e,IAAI,CAAC+lD,kBAAD,CADM;cAEb5/D,CAAC,EAAE86D;YAFU,CAAf;UAID;;UACD,IAAI+E,kBAAkB,KAAKN,UAAvB,IAAqCM,kBAAkB,KAAKF,SAAhE,EAA2E;YACzEtB,SAAS,CAACljE,IAAV,CAAe,EACb,GAAG0e,IAAI,CAACgmD,kBAAD,CADM;cAEb7/D,CAAC,EAAE86D;YAFU,CAAf;UAID;QACF;;QACD,IAAI3gE,CAAC,GAAG,CAAJ,IAASwlE,SAAS,KAAKJ,UAA3B,EAAuC;UACrClB,SAAS,CAACljE,IAAV,CAAe0e,IAAI,CAAC8lD,SAAD,CAAnB;QACD;;QACDtB,SAAS,CAACljE,IAAV,CAAe6hB,KAAf;QACAg+C,KAAK,GAAGI,MAAR;QACAL,MAAM,GAAG,CAAT;QACA9I,IAAI,GAAGF,IAAI,GAAGx6C,CAAd;QACA8nD,QAAQ,GAAGC,QAAQ,GAAGC,UAAU,GAAGplE,CAAnC;MACD;IACF;;IACD,OAAOkkE,SAAP;EACD;;EACD,SAASyB,qBAAT,CAA+Bn3C,OAA/B,EAAwC;IACtC,IAAIA,OAAO,CAAC+rC,UAAZ,EAAwB;MACtB,MAAM76C,IAAI,GAAG8O,OAAO,CAACigB,KAArB;MACA,OAAOjgB,OAAO,CAAC+rC,UAAf;MACA,OAAO/rC,OAAO,CAACigB,KAAf;MACA/9B,MAAM,CAACiW,cAAP,CAAsB6H,OAAtB,EAA+B,MAA/B,EAAuC;QAAC9a,KAAK,EAAEgM;MAAR,CAAvC;IACD;EACF;;EACD,SAASkmD,kBAAT,CAA4BjnE,KAA5B,EAAmC;IACjCA,KAAK,CAAC+gB,IAAN,CAAW/G,QAAX,CAAoBxZ,OAApB,CAA6BqvB,OAAD,IAAa;MACvCm3C,qBAAqB,CAACn3C,OAAD,CAArB;IACD,CAFD;EAGD;;EACD,SAASq3C,yCAAT,CAAmDt3C,IAAnD,EAAyD0K,MAAzD,EAAiE;IAC/D,MAAM+hC,UAAU,GAAG/hC,MAAM,CAACl5B,MAA1B;IACA,IAAIpC,KAAK,GAAG,CAAZ;IACA,IAAI6zB,KAAJ;IACA,MAAM;MAACpF;IAAD,IAAWmC,IAAjB;IACA,MAAM;MAAChvB,GAAD;MAAM+B,GAAN;MAAW0qC,UAAX;MAAuBC;IAAvB,IAAqC7f,MAAM,CAAC2f,aAAP,EAA3C;;IACA,IAAIC,UAAJ,EAAgB;MACdruC,KAAK,GAAG0hB,WAAW,CAAC+G,YAAY,CAAC6S,MAAD,EAAS7M,MAAM,CAACH,IAAhB,EAAsB1sB,GAAtB,CAAZ,CAAuC2mB,EAAxC,EAA4C,CAA5C,EAA+C80C,UAAU,GAAG,CAA5D,CAAnB;IACD;;IACD,IAAI/uB,UAAJ,EAAgB;MACdza,KAAK,GAAGnS,WAAW,CAAC+G,YAAY,CAAC6S,MAAD,EAAS7M,MAAM,CAACH,IAAhB,EAAsB3qB,GAAtB,CAAZ,CAAuC2kB,EAAvC,GAA4C,CAA7C,EAAgDtoB,KAAhD,EAAuDq9D,UAAvD,CAAX,GAAgFr9D,KAAxF;IACD,CAFD,MAEO;MACL6zB,KAAK,GAAGwpC,UAAU,GAAGr9D,KAArB;IACD;;IACD,OAAO;MAACA,KAAD;MAAQ6zB;IAAR,CAAP;EACD;;EACD,IAAIs0C,iBAAiB,GAAG;IACtB9xD,EAAE,EAAE,YADkB;IAEtBsH,QAAQ,EAAE;MACRyqD,SAAS,EAAE,SADH;MAER5tB,OAAO,EAAE;IAFD,CAFY;IAMtB6tB,oBAAoB,EAAE,CAACrnE,KAAD,EAAQhC,IAAR,EAAcwZ,OAAd,KAA0B;MAC9C,IAAI,CAACA,OAAO,CAACgiC,OAAb,EAAsB;QACpBytB,kBAAkB,CAACjnE,KAAD,CAAlB;QACA;MACD;;MACD,MAAMszB,cAAc,GAAGtzB,KAAK,CAACqhB,KAA7B;MACArhB,KAAK,CAAC+gB,IAAN,CAAW/G,QAAX,CAAoBxZ,OAApB,CAA4B,CAACqvB,OAAD,EAAU/Y,YAAV,KAA2B;QACrD,MAAM;UAACg5B,KAAD;UAAQ90B;QAAR,IAAqB6U,OAA3B;QACA,MAAMD,IAAI,GAAG5vB,KAAK,CAAC8vB,cAAN,CAAqBhZ,YAArB,CAAb;QACA,MAAMiK,IAAI,GAAG+uB,KAAK,IAAIjgB,OAAO,CAAC9O,IAA9B;;QACA,IAAIgQ,OAAO,CAAC,CAAC/V,SAAD,EAAYhb,KAAK,CAACwX,OAAN,CAAcwD,SAA1B,CAAD,CAAP,KAAkD,GAAtD,EAA2D;UACzD;QACD;;QACD,IAAI4U,IAAI,CAACzvB,IAAL,KAAc,MAAlB,EAA0B;UACxB;QACD;;QACD,MAAMmnE,KAAK,GAAGtnE,KAAK,CAAC2b,MAAN,CAAaiU,IAAI,CAACghB,OAAlB,CAAd;;QACA,IAAI02B,KAAK,CAACnnE,IAAN,KAAe,QAAf,IAA2BmnE,KAAK,CAACnnE,IAAN,KAAe,MAA9C,EAAsD;UACpD;QACD;;QACD,IAAIH,KAAK,CAACwX,OAAN,CAAc+D,OAAlB,EAA2B;UACzB;QACD;;QACD,IAAI;UAACvc,KAAD;UAAQ6zB;QAAR,IAAiBq0C,yCAAyC,CAACt3C,IAAD,EAAO7O,IAAP,CAA9D;QACA,MAAMwmD,SAAS,GAAG/vD,OAAO,CAAC+vD,SAAR,IAAqB,IAAIj0C,cAA3C;;QACA,IAAIT,KAAK,IAAI00C,SAAb,EAAwB;UACtBP,qBAAqB,CAACn3C,OAAD,CAArB;UACA;QACD;;QACD,IAAIva,aAAa,CAACw6B,KAAD,CAAjB,EAA0B;UACxBjgB,OAAO,CAACigB,KAAR,GAAgB/uB,IAAhB;UACA,OAAO8O,OAAO,CAAC9O,IAAf;UACAhP,MAAM,CAACiW,cAAP,CAAsB6H,OAAtB,EAA+B,MAA/B,EAAuC;YACrC5H,YAAY,EAAE,IADuB;YAErCxL,UAAU,EAAE,IAFyB;YAGrC3a,GAAG,EAAE,YAAW;cACd,OAAO,KAAK85D,UAAZ;YACD,CALoC;YAMrC35D,GAAG,EAAE,UAAS2B,CAAT,EAAY;cACf,KAAKksC,KAAL,GAAalsC,CAAb;YACD;UARoC,CAAvC;QAUD;;QACD,IAAI2hE,SAAJ;;QACA,QAAQ/tD,OAAO,CAAC4vD,SAAhB;UACA,KAAK,MAAL;YACE7B,SAAS,GAAGF,cAAc,CAACtkD,IAAD,EAAO/hB,KAAP,EAAc6zB,KAAd,EAAqBS,cAArB,EAAqC9b,OAArC,CAA1B;YACA;;UACF,KAAK,SAAL;YACE+tD,SAAS,GAAGe,gBAAgB,CAACvlD,IAAD,EAAO/hB,KAAP,EAAc6zB,KAAd,EAAqBS,cAArB,CAA5B;YACA;;UACF;YACE,MAAM,IAAIgG,KAAJ,CAAW,qCAAoC9hB,OAAO,CAAC4vD,SAAU,GAAjE,CAAN;QARF;;QAUAv3C,OAAO,CAAC+rC,UAAR,GAAqB2J,SAArB;MACD,CAjDD;IAkDD,CA9DqB;;IA+DtBvT,OAAO,CAAChyD,KAAD,EAAQ;MACbinE,kBAAkB,CAACjnE,KAAD,CAAlB;IACD;;EAjEqB,CAAxB;;EAoEA,SAASwnE,cAAT,CAAwBxnE,KAAxB,EAA+B+W,KAA/B,EAAsC;IACpC,MAAM6Y,IAAI,GAAG5vB,KAAK,CAAC8vB,cAAN,CAAqB/Y,KAArB,CAAb;IACA,MAAM+zB,OAAO,GAAGlb,IAAI,IAAI5vB,KAAK,CAAC+vD,gBAAN,CAAuBh5C,KAAvB,CAAxB;IACA,OAAO+zB,OAAO,GAAGlb,IAAI,CAACC,OAAR,GAAkB,IAAhC;EACD;;EACD,SAAS43C,eAAT,CAAyBhiD,IAAzB,EAA+B;IAC7B,MAAMjO,OAAO,GAAGiO,IAAI,CAACjO,OAArB;IACA,MAAMkwD,UAAU,GAAGlwD,OAAO,CAACsM,IAA3B;IACA,IAAIA,IAAI,GAAG/N,cAAc,CAAC2xD,UAAU,IAAIA,UAAU,CAACzwD,MAA1B,EAAkCywD,UAAlC,CAAzB;;IACA,IAAI5jD,IAAI,KAAKhkB,SAAb,EAAwB;MACtBgkB,IAAI,GAAG,CAAC,CAACtM,OAAO,CAACsC,eAAjB;IACD;;IACD,IAAIgK,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,IAA/B,EAAqC;MACnC,OAAO,KAAP;IACD;;IACD,IAAIA,IAAI,KAAK,IAAb,EAAmB;MACjB,OAAO,QAAP;IACD;;IACD,OAAOA,IAAP;EACD;;EACD,SAAS6jD,UAAT,CAAoBliD,IAApB,EAA0B1O,KAA1B,EAAiC8b,KAAjC,EAAwC;IACtC,MAAM/O,IAAI,GAAG2jD,eAAe,CAAChiD,IAAD,CAA5B;;IACA,IAAIhQ,QAAQ,CAACqO,IAAD,CAAZ,EAAoB;MAClB,OAAOtF,KAAK,CAACsF,IAAI,CAAC/O,KAAN,CAAL,GAAoB,KAApB,GAA4B+O,IAAnC;IACD;;IACD,IAAI7M,MAAM,GAAGd,UAAU,CAAC2N,IAAD,CAAvB;;IACA,IAAIpO,cAAc,CAACuB,MAAD,CAAd,IAA0BtW,IAAI,CAACqd,KAAL,CAAW/G,MAAX,MAAuBA,MAArD,EAA6D;MAC3D,IAAI6M,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAZ,IAAmBA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAnC,EAAwC;QACtC7M,MAAM,GAAGF,KAAK,GAAGE,MAAjB;MACD;;MACD,IAAIA,MAAM,KAAKF,KAAX,IAAoBE,MAAM,GAAG,CAA7B,IAAkCA,MAAM,IAAI4b,KAAhD,EAAuD;QACrD,OAAO,KAAP;MACD;;MACD,OAAO5b,MAAP;IACD;;IACD,OAAO,CAAC,QAAD,EAAW,OAAX,EAAoB,KAApB,EAA2B,OAA3B,EAAoC,OAApC,EAA6CK,OAA7C,CAAqDwM,IAArD,KAA8D,CAA9D,IAAmEA,IAA1E;EACD;;EACD,SAAS8jD,qBAAT,CAA+B5wD,MAA/B,EAAuC;IACrC,MAAM;MAAC0E,KAAK,GAAG,EAAT;MAAaoI;IAAb,IAAqB9M,MAA3B;IACA,IAAIC,MAAM,GAAG,IAAb;IACA,IAAIob,UAAJ;;IACA,IAAIvO,IAAI,KAAK,OAAb,EAAsB;MACpB7M,MAAM,GAAGyE,KAAK,CAAC4I,MAAf;IACD,CAFD,MAEO,IAAIR,IAAI,KAAK,KAAb,EAAoB;MACzB7M,MAAM,GAAGyE,KAAK,CAAC2I,GAAf;IACD,CAFM,MAEA,IAAI5O,QAAQ,CAACqO,IAAD,CAAZ,EAAoB;MACzB7M,MAAM,GAAGyE,KAAK,CAAC0gC,gBAAN,CAAuBt4B,IAAI,CAAC/O,KAA5B,CAAT;IACD,CAFM,MAEA,IAAI2G,KAAK,CAAC0mC,YAAV,EAAwB;MAC7BnrC,MAAM,GAAGyE,KAAK,CAAC0mC,YAAN,EAAT;IACD;;IACD,IAAI1sC,cAAc,CAACuB,MAAD,CAAlB,EAA4B;MAC1Bob,UAAU,GAAG3W,KAAK,CAAC4W,YAAN,EAAb;MACA,OAAO;QACLprB,CAAC,EAAEmrB,UAAU,GAAGpb,MAAH,GAAY,IADpB;QAELwH,CAAC,EAAE4T,UAAU,GAAG,IAAH,GAAUpb;MAFlB,CAAP;IAID;;IACD,OAAO,IAAP;EACD;;EACD,MAAM4wD,SAAN,CAAgB;IACdroE,WAAW,CAAC6lB,IAAD,EAAO;MAChB,KAAKne,CAAL,GAASme,IAAI,CAACne,CAAd;MACA,KAAKuX,CAAL,GAAS4G,IAAI,CAAC5G,CAAd;MACA,KAAKwE,MAAL,GAAcoC,IAAI,CAACpC,MAAnB;IACD;;IACD4+C,WAAW,CAAChnD,GAAD,EAAMinB,MAAN,EAAczc,IAAd,EAAoB;MAC7B,MAAM;QAACne,CAAD;QAAIuX,CAAJ;QAAOwE;MAAP,IAAiB,IAAvB;MACA6e,MAAM,GAAGA,MAAM,IAAI;QAAC9iC,KAAK,EAAE,CAAR;QAAWC,GAAG,EAAEge;MAAhB,CAAnB;MACApC,GAAG,CAACyI,GAAJ,CAAQpc,CAAR,EAAWuX,CAAX,EAAcwE,MAAd,EAAsB6e,MAAM,CAAC7iC,GAA7B,EAAkC6iC,MAAM,CAAC9iC,KAAzC,EAAgD,IAAhD;MACA,OAAO,CAACqmB,IAAI,CAACyc,MAAb;IACD;;IACDuhC,WAAW,CAACn/C,KAAD,EAAQ;MACjB,MAAM;QAAChd,CAAD;QAAIuX,CAAJ;QAAOwE;MAAP,IAAiB,IAAvB;MACA,MAAMrD,KAAK,GAAGsE,KAAK,CAACtE,KAApB;MACA,OAAO;QACL1Y,CAAC,EAAEA,CAAC,GAAGvG,IAAI,CAAC+iB,GAAL,CAAS9D,KAAT,IAAkBqD,MADpB;QAELxE,CAAC,EAAEA,CAAC,GAAG9d,IAAI,CAAC8iB,GAAL,CAAS7D,KAAT,IAAkBqD,MAFpB;QAGLrD;MAHK,CAAP;IAKD;;EApBa;;EAsBhB,SAASkoD,uBAAT,CAAiC9wD,MAAjC,EAAyC;IACvC,MAAM;MAAC0E,KAAD;MAAQoI;IAAR,IAAgB9M,MAAtB;IACA,MAAMQ,OAAO,GAAGkE,KAAK,CAAClE,OAAtB;IACA,MAAMpW,MAAM,GAAGsa,KAAK,CAACo3B,SAAN,GAAkB1xC,MAAjC;IACA,MAAM6V,MAAM,GAAG,EAAf;IACA,MAAMjY,KAAK,GAAGwY,OAAO,CAACjB,OAAR,GAAkBmF,KAAK,CAAC/Y,GAAxB,GAA8B+Y,KAAK,CAAC9a,GAAlD;IACA,MAAM3B,GAAG,GAAGuY,OAAO,CAACjB,OAAR,GAAkBmF,KAAK,CAAC9a,GAAxB,GAA8B8a,KAAK,CAAC/Y,GAAhD;IACA,IAAItB,CAAJ,EAAO8tB,MAAP,EAAepa,KAAf;;IACA,IAAI+O,IAAI,KAAK,OAAb,EAAsB;MACpB/O,KAAK,GAAG/V,KAAR;IACD,CAFD,MAEO,IAAI8kB,IAAI,KAAK,KAAb,EAAoB;MACzB/O,KAAK,GAAG9V,GAAR;IACD,CAFM,MAEA,IAAIwW,QAAQ,CAACqO,IAAD,CAAZ,EAAoB;MACzB/O,KAAK,GAAG+O,IAAI,CAAC/O,KAAb;IACD,CAFM,MAEA;MACLA,KAAK,GAAG2G,KAAK,CAAC2mC,YAAN,EAAR;IACD;;IACD,IAAI7qC,OAAO,CAACqgC,IAAR,CAAa2lB,QAAjB,EAA2B;MACzBruC,MAAM,GAAGzT,KAAK,CAACmiD,wBAAN,CAA+B,CAA/B,EAAkC7+D,KAAlC,CAAT;MACA,OAAO,IAAI6oE,SAAJ,CAAc;QACnB3gE,CAAC,EAAEioB,MAAM,CAACjoB,CADS;QAEnBuX,CAAC,EAAE0Q,MAAM,CAAC1Q,CAFS;QAGnBwE,MAAM,EAAEvH,KAAK,CAAC4hD,6BAAN,CAAoCvoD,KAApC;MAHW,CAAd,CAAP;IAKD;;IACD,KAAK1T,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,MAAhB,EAAwB,EAAEC,CAA1B,EAA6B;MAC3B4V,MAAM,CAAC5U,IAAP,CAAYqZ,KAAK,CAACmiD,wBAAN,CAA+Bx8D,CAA/B,EAAkC0T,KAAlC,CAAZ;IACD;;IACD,OAAOkC,MAAP;EACD;;EACD,SAAS8wD,eAAT,CAAyB/wD,MAAzB,EAAiC;IAC/B,MAAM0E,KAAK,GAAG1E,MAAM,CAAC0E,KAAP,IAAgB,EAA9B;;IACA,IAAIA,KAAK,CAACmiD,wBAAV,EAAoC;MAClC,OAAOiK,uBAAuB,CAAC9wD,MAAD,CAA9B;IACD;;IACD,OAAO4wD,qBAAqB,CAAC5wD,MAAD,CAA5B;EACD;;EACD,SAASgxD,cAAT,CAAwBhpE,KAAxB,EAA+BC,GAA/B,EAAoCq7B,MAApC,EAA4C;IAC1C,OAAMr7B,GAAG,GAAGD,KAAZ,EAAmBC,GAAG,EAAtB,EAA0B;MACxB,MAAMilB,KAAK,GAAGoW,MAAM,CAACr7B,GAAD,CAApB;;MACA,IAAI,CAACuf,KAAK,CAAC0F,KAAK,CAAChd,CAAP,CAAN,IAAmB,CAACsX,KAAK,CAAC0F,KAAK,CAACzF,CAAP,CAA7B,EAAwC;QACtC;MACD;IACF;;IACD,OAAOxf,GAAP;EACD;;EACD,SAASgpE,kBAAT,CAA4BC,QAA5B,EAAsCziD,IAAtC,EAA4C;IAC1C,MAAM;MAACve,CAAC,GAAG,IAAL;MAAWuX,CAAC,GAAG;IAAf,IAAuBypD,QAAQ,IAAI,EAAzC;IACA,MAAMC,UAAU,GAAG1iD,IAAI,CAAC6U,MAAxB;IACA,MAAMA,MAAM,GAAG,EAAf;IACA7U,IAAI,CAACid,QAAL,CAAcliC,OAAd,CAAsB,SAAkB;MAAA,IAAjB;QAACxB,KAAD;QAAQC;MAAR,CAAiB;MACtCA,GAAG,GAAG+oE,cAAc,CAAChpE,KAAD,EAAQC,GAAR,EAAakpE,UAAb,CAApB;MACA,MAAMxuB,KAAK,GAAGwuB,UAAU,CAACnpE,KAAD,CAAxB;MACA,MAAM8jC,IAAI,GAAGqlC,UAAU,CAAClpE,GAAD,CAAvB;;MACA,IAAIwf,CAAC,KAAK,IAAV,EAAgB;QACd6b,MAAM,CAACj4B,IAAP,CAAY;UAAC6E,CAAC,EAAEyyC,KAAK,CAACzyC,CAAV;UAAauX;QAAb,CAAZ;QACA6b,MAAM,CAACj4B,IAAP,CAAY;UAAC6E,CAAC,EAAE47B,IAAI,CAAC57B,CAAT;UAAYuX;QAAZ,CAAZ;MACD,CAHD,MAGO,IAAIvX,CAAC,KAAK,IAAV,EAAgB;QACrBozB,MAAM,CAACj4B,IAAP,CAAY;UAAC6E,CAAD;UAAIuX,CAAC,EAAEk7B,KAAK,CAACl7B;QAAb,CAAZ;QACA6b,MAAM,CAACj4B,IAAP,CAAY;UAAC6E,CAAD;UAAIuX,CAAC,EAAEqkB,IAAI,CAACrkB;QAAZ,CAAZ;MACD;IACF,CAXD;IAYA,OAAO6b,MAAP;EACD;;EACD,SAAS8tC,cAAT,CAAwBpxD,MAAxB,EAAgC;IAC9B,MAAM;MAAC0E,KAAD;MAAQ3E,KAAR;MAAe0O;IAAf,IAAuBzO,MAA7B;IACA,MAAMsjB,MAAM,GAAG,EAAf;IACA,MAAMoI,QAAQ,GAAGjd,IAAI,CAACid,QAAtB;IACA,MAAM2lC,YAAY,GAAG5iD,IAAI,CAAC6U,MAA1B;IACA,MAAMguC,UAAU,GAAGC,aAAa,CAAC7sD,KAAD,EAAQ3E,KAAR,CAAhC;IACAuxD,UAAU,CAACjmE,IAAX,CAAgBmmE,kBAAkB,CAAC;MAACthE,CAAC,EAAE,IAAJ;MAAUuX,CAAC,EAAE/C,KAAK,CAAC4I;IAAnB,CAAD,EAA6BmB,IAA7B,CAAlC;;IACA,KAAK,IAAIpkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqhC,QAAQ,CAACthC,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;MACxC,MAAMwgC,OAAO,GAAGa,QAAQ,CAACrhC,CAAD,CAAxB;;MACA,KAAK,IAAI4Q,CAAC,GAAG4vB,OAAO,CAAC7iC,KAArB,EAA4BiT,CAAC,IAAI4vB,OAAO,CAAC5iC,GAAzC,EAA8CgT,CAAC,EAA/C,EAAmD;QACjDw2D,cAAc,CAACnuC,MAAD,EAAS+tC,YAAY,CAACp2D,CAAD,CAArB,EAA0Bq2D,UAA1B,CAAd;MACD;IACF;;IACD,OAAO,IAAIrF,WAAJ,CAAgB;MAAC3oC,MAAD;MAAS9iB,OAAO,EAAE;IAAlB,CAAhB,CAAP;EACD;;EACD,SAAS+wD,aAAT,CAAuB7sD,KAAvB,EAA8B3E,KAA9B,EAAqC;IACnC,MAAM2xD,KAAK,GAAG,EAAd;IACA,MAAM9qB,KAAK,GAAGliC,KAAK,CAACqyB,uBAAN,CAA8B,MAA9B,CAAd;;IACA,KAAK,IAAI1sC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGu8C,KAAK,CAACx8C,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;MACrC,MAAMuuB,IAAI,GAAGguB,KAAK,CAACv8C,CAAD,CAAlB;;MACA,IAAIuuB,IAAI,CAAC7Y,KAAL,KAAeA,KAAnB,EAA0B;QACxB;MACD;;MACD,IAAI,CAAC6Y,IAAI,CAAC0f,MAAV,EAAkB;QAChBo5B,KAAK,CAACC,OAAN,CAAc/4C,IAAI,CAACC,OAAnB;MACD;IACF;;IACD,OAAO64C,KAAP;EACD;;EACD,SAASD,cAAT,CAAwBnuC,MAAxB,EAAgCsuC,WAAhC,EAA6CN,UAA7C,EAAyD;IACvD,MAAMO,SAAS,GAAG,EAAlB;;IACA,KAAK,IAAI52D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGq2D,UAAU,CAAClnE,MAA/B,EAAuC6Q,CAAC,EAAxC,EAA4C;MAC1C,MAAMwT,IAAI,GAAG6iD,UAAU,CAACr2D,CAAD,CAAvB;MACA,MAAM;QAAC0nC,KAAD;QAAQ7W,IAAR;QAAc5e;MAAd,IAAuB4kD,SAAS,CAACrjD,IAAD,EAAOmjD,WAAP,EAAoB,GAApB,CAAtC;;MACA,IAAI,CAAC1kD,KAAD,IAAWy1B,KAAK,IAAI7W,IAAxB,EAA+B;QAC7B;MACD;;MACD,IAAI6W,KAAJ,EAAW;QACTkvB,SAAS,CAACF,OAAV,CAAkBzkD,KAAlB;MACD,CAFD,MAEO;QACLoW,MAAM,CAACj4B,IAAP,CAAY6hB,KAAZ;;QACA,IAAI,CAAC4e,IAAL,EAAW;UACT;QACD;MACF;IACF;;IACDxI,MAAM,CAACj4B,IAAP,CAAY,GAAGwmE,SAAf;EACD;;EACD,SAASC,SAAT,CAAmBrjD,IAAnB,EAAyBmjD,WAAzB,EAAsC5pD,QAAtC,EAAgD;IAC9C,MAAMkF,KAAK,GAAGuB,IAAI,CAAC49C,WAAL,CAAiBuF,WAAjB,EAA8B5pD,QAA9B,CAAd;;IACA,IAAI,CAACkF,KAAL,EAAY;MACV,OAAO,EAAP;IACD;;IACD,MAAM6kD,UAAU,GAAG7kD,KAAK,CAAClF,QAAD,CAAxB;IACA,MAAM0jB,QAAQ,GAAGjd,IAAI,CAACid,QAAtB;IACA,MAAMylC,UAAU,GAAG1iD,IAAI,CAAC6U,MAAxB;IACA,IAAIqf,KAAK,GAAG,KAAZ;IACA,IAAI7W,IAAI,GAAG,KAAX;;IACA,KAAK,IAAIzhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqhC,QAAQ,CAACthC,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;MACxC,MAAMwgC,OAAO,GAAGa,QAAQ,CAACrhC,CAAD,CAAxB;MACA,MAAM2nE,UAAU,GAAGb,UAAU,CAACtmC,OAAO,CAAC7iC,KAAT,CAAV,CAA0BggB,QAA1B,CAAnB;MACA,MAAMiqD,SAAS,GAAGd,UAAU,CAACtmC,OAAO,CAAC5iC,GAAT,CAAV,CAAwB+f,QAAxB,CAAlB;;MACA,IAAI4B,UAAU,CAACmoD,UAAD,EAAaC,UAAb,EAAyBC,SAAzB,CAAd,EAAmD;QACjDtvB,KAAK,GAAGovB,UAAU,KAAKC,UAAvB;QACAlmC,IAAI,GAAGimC,UAAU,KAAKE,SAAtB;QACA;MACD;IACF;;IACD,OAAO;MAACtvB,KAAD;MAAQ7W,IAAR;MAAc5e;IAAd,CAAP;EACD;;EACD,SAAS2S,SAAT,CAAmB7f,MAAnB,EAA2B;IACzB,MAAM;MAAChX,KAAD;MAAQ8jB,IAAR;MAAc2B;IAAd,IAAsBzO,MAA5B;;IACA,IAAItB,cAAc,CAACoO,IAAD,CAAlB,EAA0B;MACxB,OAAO0jD,cAAc,CAACxnE,KAAD,EAAQ8jB,IAAR,CAArB;IACD;;IACD,IAAIA,IAAI,KAAK,OAAb,EAAsB;MACpB,OAAOskD,cAAc,CAACpxD,MAAD,CAArB;IACD;;IACD,IAAI8M,IAAI,KAAK,OAAb,EAAsB;MACpB,OAAO,IAAP;IACD;;IACD,MAAMokD,QAAQ,GAAGH,eAAe,CAAC/wD,MAAD,CAAhC;;IACA,IAAIkxD,QAAQ,YAAYL,SAAxB,EAAmC;MACjC,OAAOK,QAAP;IACD;;IACD,OAAOM,kBAAkB,CAACN,QAAD,EAAWziD,IAAX,CAAzB;EACD;;EACD,SAAS+iD,kBAAT,CAA4BN,QAA5B,EAAsCziD,IAAtC,EAA4C;IAC1C,IAAI6U,MAAM,GAAG,EAAb;IACA,IAAI2I,KAAK,GAAG,KAAZ;;IACA,IAAI58B,OAAO,CAAC6hE,QAAD,CAAX,EAAuB;MACrBjlC,KAAK,GAAG,IAAR;MACA3I,MAAM,GAAG4tC,QAAT;IACD,CAHD,MAGO;MACL5tC,MAAM,GAAG2tC,kBAAkB,CAACC,QAAD,EAAWziD,IAAX,CAA3B;IACD;;IACD,OAAO6U,MAAM,CAACl5B,MAAP,GAAgB,IAAI6hE,WAAJ,CAAgB;MACrC3oC,MADqC;MAErC9iB,OAAO,EAAE;QAAC0lB,OAAO,EAAE;MAAV,CAF4B;MAGrC+F,KAHqC;MAIrCG,SAAS,EAAEH;IAJ0B,CAAhB,CAAhB,GAKF,IALL;EAMD;;EACD,SAASimC,aAAT,CAAuBtxD,OAAvB,EAAgCb,KAAhC,EAAuCoyD,SAAvC,EAAkD;IAChD,MAAMnyD,MAAM,GAAGY,OAAO,CAACb,KAAD,CAAtB;IACA,IAAI+M,IAAI,GAAG9M,MAAM,CAAC8M,IAAlB;IACA,MAAMslD,OAAO,GAAG,CAACryD,KAAD,CAAhB;IACA,IAAIE,MAAJ;;IACA,IAAI,CAACkyD,SAAL,EAAgB;MACd,OAAOrlD,IAAP;IACD;;IACD,OAAOA,IAAI,KAAK,KAAT,IAAkBslD,OAAO,CAAC9xD,OAAR,CAAgBwM,IAAhB,MAA0B,CAAC,CAApD,EAAuD;MACrD,IAAI,CAACpO,cAAc,CAACoO,IAAD,CAAnB,EAA2B;QACzB,OAAOA,IAAP;MACD;;MACD7M,MAAM,GAAGW,OAAO,CAACkM,IAAD,CAAhB;;MACA,IAAI,CAAC7M,MAAL,EAAa;QACX,OAAO,KAAP;MACD;;MACD,IAAIA,MAAM,CAAC6zB,OAAX,EAAoB;QAClB,OAAOhnB,IAAP;MACD;;MACDslD,OAAO,CAAC/mE,IAAR,CAAayhB,IAAb;MACAA,IAAI,GAAG7M,MAAM,CAAC6M,IAAd;IACD;;IACD,OAAO,KAAP;EACD;;EACD,SAASmwB,KAAT,CAAep5B,GAAf,EAAoB5D,MAApB,EAA4BoyD,KAA5B,EAAmC;IACjC,MAAM;MAAC3mC,QAAD;MAAWpI;IAAX,IAAqBrjB,MAA3B;IACA,IAAI0iC,KAAK,GAAG,IAAZ;IACA,IAAI2vB,QAAQ,GAAG,KAAf;IACAzuD,GAAG,CAACwI,SAAJ;;IACA,KAAK,MAAMwe,OAAX,IAAsBa,QAAtB,EAAgC;MAC9B,MAAM;QAAC1jC,KAAD;QAAQC;MAAR,IAAe4iC,OAArB;MACA,MAAMpH,UAAU,GAAGH,MAAM,CAACt7B,KAAD,CAAzB;MACA,MAAMm9D,SAAS,GAAG7hC,MAAM,CAAC0tC,cAAc,CAAChpE,KAAD,EAAQC,GAAR,EAAaq7B,MAAb,CAAf,CAAxB;;MACA,IAAIqf,KAAJ,EAAW;QACT9+B,GAAG,CAAC2I,MAAJ,CAAWiX,UAAU,CAACvzB,CAAtB,EAAyBuzB,UAAU,CAAChc,CAApC;QACAk7B,KAAK,GAAG,KAAR;MACD,CAHD,MAGO;QACL9+B,GAAG,CAAC8I,MAAJ,CAAW8W,UAAU,CAACvzB,CAAtB,EAAyBmiE,KAAzB;QACAxuD,GAAG,CAAC8I,MAAJ,CAAW8W,UAAU,CAACvzB,CAAtB,EAAyBuzB,UAAU,CAAChc,CAApC;MACD;;MACD6qD,QAAQ,GAAG,CAAC,CAACryD,MAAM,CAAC4qD,WAAP,CAAmBhnD,GAAnB,EAAwBgnB,OAAxB,EAAiC;QAACiU,IAAI,EAAEwzB;MAAP,CAAjC,CAAb;;MACA,IAAIA,QAAJ,EAAc;QACZzuD,GAAG,CAAC0I,SAAJ;MACD,CAFD,MAEO;QACL1I,GAAG,CAAC8I,MAAJ,CAAWw4C,SAAS,CAACj1D,CAArB,EAAwBmiE,KAAxB;MACD;IACF;;IACDxuD,GAAG,CAAC8I,MAAJ,CAAW1M,MAAM,CAAC0iC,KAAP,GAAezyC,CAA1B,EAA6BmiE,KAA7B;IACAxuD,GAAG,CAAC0I,SAAJ;IACA1I,GAAG,CAAC2J,IAAJ;EACD;;EACD,SAAS+kD,SAAT,CAAmBvqD,QAAnB,EAA6B26B,KAA7B,EAAoC7W,IAApC,EAA0CjG,IAA1C,EAAgD;IAC9C,IAAIA,IAAJ,EAAU;MACR;IACD;;IACD,IAAI79B,KAAK,GAAG26C,KAAK,CAAC36B,QAAD,CAAjB;IACA,IAAI/f,GAAG,GAAG6jC,IAAI,CAAC9jB,QAAD,CAAd;;IACA,IAAIA,QAAQ,KAAK,OAAjB,EAA0B;MACxBhgB,KAAK,GAAGmhB,eAAe,CAACnhB,KAAD,CAAvB;MACAC,GAAG,GAAGkhB,eAAe,CAAClhB,GAAD,CAArB;IACD;;IACD,OAAO;MAAC+f,QAAD;MAAWhgB,KAAX;MAAkBC;IAAlB,CAAP;EACD;;EACD,SAASuqE,QAAT,CAAkB/lE,CAAlB,EAAqBC,CAArB,EAAwB+sB,IAAxB,EAA8B7yB,EAA9B,EAAkC;IAChC,IAAI6F,CAAC,IAAIC,CAAT,EAAY;MACV,OAAO9F,EAAE,CAAC6F,CAAC,CAACgtB,IAAD,CAAF,EAAU/sB,CAAC,CAAC+sB,IAAD,CAAX,CAAT;IACD;;IACD,OAAOhtB,CAAC,GAAGA,CAAC,CAACgtB,IAAD,CAAJ,GAAa/sB,CAAC,GAAGA,CAAC,CAAC+sB,IAAD,CAAJ,GAAa,CAAnC;EACD;;EACD,SAAS0yC,SAAT,CAAmB19C,IAAnB,EAAyBxO,MAAzB,EAAiC+H,QAAjC,EAA2C;IACzC,MAAM0jB,QAAQ,GAAGjd,IAAI,CAACid,QAAtB;IACA,MAAMpI,MAAM,GAAG7U,IAAI,CAAC6U,MAApB;IACA,MAAMmvC,OAAO,GAAGxyD,MAAM,CAACqjB,MAAvB;IACA,MAAMksB,KAAK,GAAG,EAAd;;IACA,KAAK,MAAM3kB,OAAX,IAAsBa,QAAtB,EAAgC;MAC9B,IAAI;QAAC1jC,KAAD;QAAQC;MAAR,IAAe4iC,OAAnB;MACA5iC,GAAG,GAAG+oE,cAAc,CAAChpE,KAAD,EAAQC,GAAR,EAAaq7B,MAAb,CAApB;MACA,MAAMwH,MAAM,GAAGynC,SAAS,CAACvqD,QAAD,EAAWsb,MAAM,CAACt7B,KAAD,CAAjB,EAA0Bs7B,MAAM,CAACr7B,GAAD,CAAhC,EAAuC4iC,OAAO,CAAChF,IAA/C,CAAxB;;MACA,IAAI,CAAC5lB,MAAM,CAACyrB,QAAZ,EAAsB;QACpB8jB,KAAK,CAACnkD,IAAN,CAAW;UACT2U,MAAM,EAAE6qB,OADC;UAET5qB,MAAM,EAAE6qB,MAFC;UAGT9iC,KAAK,EAAEs7B,MAAM,CAACt7B,KAAD,CAHJ;UAITC,GAAG,EAAEq7B,MAAM,CAACr7B,GAAD;QAJF,CAAX;QAMA;MACD;;MACD,MAAMyqE,cAAc,GAAGjnC,cAAc,CAACxrB,MAAD,EAAS6qB,MAAT,CAArC;;MACA,KAAK,MAAM6nC,GAAX,IAAkBD,cAAlB,EAAkC;QAChC,MAAME,SAAS,GAAGL,SAAS,CAACvqD,QAAD,EAAWyqD,OAAO,CAACE,GAAG,CAAC3qE,KAAL,CAAlB,EAA+ByqE,OAAO,CAACE,GAAG,CAAC1qE,GAAL,CAAtC,EAAiD0qE,GAAG,CAAC9sC,IAArD,CAA3B;;QACA,MAAMgtC,WAAW,GAAG5nC,aAAa,CAACJ,OAAD,EAAUvH,MAAV,EAAkBsvC,SAAlB,CAAjC;;QACA,KAAK,MAAME,UAAX,IAAyBD,WAAzB,EAAsC;UACpCrjB,KAAK,CAACnkD,IAAN,CAAW;YACT2U,MAAM,EAAE8yD,UADC;YAET7yD,MAAM,EAAE0yD,GAFC;YAGT3qE,KAAK,EAAE;cACL,CAACggB,QAAD,GAAYwqD,QAAQ,CAAC1nC,MAAD,EAAS8nC,SAAT,EAAoB,OAApB,EAA6BjpE,IAAI,CAACgC,GAAlC;YADf,CAHE;YAMT1D,GAAG,EAAE;cACH,CAAC+f,QAAD,GAAYwqD,QAAQ,CAAC1nC,MAAD,EAAS8nC,SAAT,EAAoB,KAApB,EAA2BjpE,IAAI,CAACC,GAAhC;YADjB;UANI,CAAX;QAUD;MACF;IACF;;IACD,OAAO4lD,KAAP;EACD;;EACD,SAASujB,UAAT,CAAoBlvD,GAApB,EAAyBa,KAAzB,EAAgComB,MAAhC,EAAwC;IACtC,MAAM;MAACzd,GAAD;MAAMC;IAAN,IAAgB5I,KAAK,CAAC1b,KAAN,CAAYwuB,SAAlC;IACA,MAAM;MAACxP,QAAD;MAAWhgB,KAAX;MAAkBC;IAAlB,IAAyB6iC,MAAM,IAAI,EAAzC;;IACA,IAAI9iB,QAAQ,KAAK,GAAjB,EAAsB;MACpBnE,GAAG,CAACwI,SAAJ;MACAxI,GAAG,CAACgJ,IAAJ,CAAS7kB,KAAT,EAAgBqlB,GAAhB,EAAqBplB,GAAG,GAAGD,KAA3B,EAAkCslB,MAAM,GAAGD,GAA3C;MACAxJ,GAAG,CAAC2J,IAAJ;IACD;EACF;;EACD,SAASwlD,kBAAT,CAA4BnvD,GAA5B,EAAiC5D,MAAjC,EAAyCiN,KAAzC,EAAgDlF,QAAhD,EAA0D;IACxD,MAAMirD,iBAAiB,GAAGhzD,MAAM,CAACosD,WAAP,CAAmBn/C,KAAnB,EAA0BlF,QAA1B,CAA1B;;IACA,IAAIirD,iBAAJ,EAAuB;MACrBpvD,GAAG,CAAC8I,MAAJ,CAAWsmD,iBAAiB,CAAC/iE,CAA7B,EAAgC+iE,iBAAiB,CAACxrD,CAAlD;IACD;EACF;;EACD,SAASyrD,KAAT,CAAervD,GAAf,EAAoBwuB,GAApB,EAAyB;IACvB,MAAM;MAAC5jB,IAAD;MAAOxO,MAAP;MAAe+H,QAAf;MAAyBtL,KAAzB;MAAgCgI;IAAhC,IAAyC2tB,GAA/C;;IACA,MAAM3G,QAAQ,GAAGygC,SAAS,CAAC19C,IAAD,EAAOxO,MAAP,EAAe+H,QAAf,CAA1B;;IACA,KAAK,MAAM;MAAChI,MAAM,EAAEmzD,GAAT;MAAclzD,MAAM,EAAE0yD,GAAtB;MAA2B3qE,KAA3B;MAAkCC;IAAlC,CAAX,IAAqDyjC,QAArD,EAA+D;MAC7D,MAAM;QAACjoB,KAAK,EAAE;UAACX,eAAe,GAAGpG;QAAnB,IAA4B;MAApC,IAA0Cy2D,GAAhD;MACA,MAAMC,QAAQ,GAAGnzD,MAAM,KAAK,IAA5B;MACA4D,GAAG,CAAC6G,IAAJ;MACA7G,GAAG,CAACqL,SAAJ,GAAgBpM,eAAhB;MACAiwD,UAAU,CAAClvD,GAAD,EAAMa,KAAN,EAAa0uD,QAAQ,IAAIb,SAAS,CAACvqD,QAAD,EAAWhgB,KAAX,EAAkBC,GAAlB,CAAlC,CAAV;MACA4b,GAAG,CAACwI,SAAJ;MACA,MAAMimD,QAAQ,GAAG,CAAC,CAAC7jD,IAAI,CAACo8C,WAAL,CAAiBhnD,GAAjB,EAAsBsvD,GAAtB,CAAnB;MACA,IAAIttC,IAAJ;;MACA,IAAIutC,QAAJ,EAAc;QACZ,IAAId,QAAJ,EAAc;UACZzuD,GAAG,CAAC0I,SAAJ;QACD,CAFD,MAEO;UACLymD,kBAAkB,CAACnvD,GAAD,EAAM5D,MAAN,EAAchY,GAAd,EAAmB+f,QAAnB,CAAlB;QACD;;QACD,MAAMqrD,UAAU,GAAG,CAAC,CAACpzD,MAAM,CAAC4qD,WAAP,CAAmBhnD,GAAnB,EAAwB8uD,GAAxB,EAA6B;UAAC7zB,IAAI,EAAEwzB,QAAP;UAAiB/yD,OAAO,EAAE;QAA1B,CAA7B,CAArB;QACAsmB,IAAI,GAAGysC,QAAQ,IAAIe,UAAnB;;QACA,IAAI,CAACxtC,IAAL,EAAW;UACTmtC,kBAAkB,CAACnvD,GAAD,EAAM5D,MAAN,EAAcjY,KAAd,EAAqBggB,QAArB,CAAlB;QACD;MACF;;MACDnE,GAAG,CAAC0I,SAAJ;MACA1I,GAAG,CAACiJ,IAAJ,CAAS+Y,IAAI,GAAG,SAAH,GAAe,SAA5B;MACAhiB,GAAG,CAACiH,OAAJ;IACD;EACF;;EACD,SAASwoD,MAAT,CAAgBzvD,GAAhB,EAAqBwuB,GAArB,EAA0B;IACxB,MAAM;MAAC5jB,IAAD;MAAOxO,MAAP;MAAeszD,KAAf;MAAsB7B,KAAtB;MAA6BvkD,IAA7B;MAAmCzI;IAAnC,IAA4C2tB,GAAlD;IACA,MAAMrqB,QAAQ,GAAGyG,IAAI,CAACwd,KAAL,GAAa,OAAb,GAAuBoG,GAAG,CAAC/b,IAA5C;IACAzS,GAAG,CAAC6G,IAAJ;;IACA,IAAI1C,QAAQ,KAAK,GAAb,IAAoB0pD,KAAK,KAAK6B,KAAlC,EAAyC;MACvCt2B,KAAK,CAACp5B,GAAD,EAAM5D,MAAN,EAAckN,IAAI,CAACE,GAAnB,CAAL;;MACA6lD,KAAK,CAACrvD,GAAD,EAAM;QAAC4K,IAAD;QAAOxO,MAAP;QAAevD,KAAK,EAAE62D,KAAtB;QAA6B7uD,KAA7B;QAAoCsD;MAApC,CAAN,CAAL;;MACAnE,GAAG,CAACiH,OAAJ;MACAjH,GAAG,CAAC6G,IAAJ;;MACAuyB,KAAK,CAACp5B,GAAD,EAAM5D,MAAN,EAAckN,IAAI,CAACG,MAAnB,CAAL;IACD;;IACD4lD,KAAK,CAACrvD,GAAD,EAAM;MAAC4K,IAAD;MAAOxO,MAAP;MAAevD,KAAK,EAAEg1D,KAAtB;MAA6BhtD,KAA7B;MAAoCsD;IAApC,CAAN,CAAL;;IACAnE,GAAG,CAACiH,OAAJ;EACD;;EACD,SAAS0oD,QAAT,CAAkB3vD,GAAlB,EAAuB7D,MAAvB,EAA+BmN,IAA/B,EAAqC;IACnC,MAAMlN,MAAM,GAAG4f,SAAS,CAAC7f,MAAD,CAAxB;IACA,MAAM;MAACyO,IAAD;MAAO/J,KAAP;MAAc4R;IAAd,IAAsBtW,MAA5B;IACA,MAAMyzD,QAAQ,GAAGhlD,IAAI,CAACjO,OAAtB;IACA,MAAMkwD,UAAU,GAAG+C,QAAQ,CAAC3mD,IAA5B;IACA,MAAMpQ,KAAK,GAAG+2D,QAAQ,CAAC3wD,eAAvB;IACA,MAAM;MAACywD,KAAK,GAAG72D,KAAT;MAAgBg1D,KAAK,GAAGh1D;IAAxB,IAAiCg0D,UAAU,IAAI,EAArD;;IACA,IAAIzwD,MAAM,IAAIwO,IAAI,CAAC6U,MAAL,CAAYl5B,MAA1B,EAAkC;MAChCmjB,QAAQ,CAAC1J,GAAD,EAAMsJ,IAAN,CAAR;MACAmmD,MAAM,CAACzvD,GAAD,EAAM;QAAC4K,IAAD;QAAOxO,MAAP;QAAeszD,KAAf;QAAsB7B,KAAtB;QAA6BvkD,IAA7B;QAAmCzI,KAAnC;QAA0C4R;MAA1C,CAAN,CAAN;MACA7I,UAAU,CAAC5J,GAAD,CAAV;IACD;EACF;;EACD,IAAI6vD,aAAa,GAAG;IAClBr1D,EAAE,EAAE,QADc;;IAElBs1D,mBAAmB,CAAC3qE,KAAD,EAAQ4qE,KAAR,EAAepzD,OAAf,EAAwB;MACzC,MAAMqb,KAAK,GAAG,CAAC7yB,KAAK,CAAC+gB,IAAN,CAAW/G,QAAX,IAAuB,EAAxB,EAA4B5Y,MAA1C;MACA,MAAMwW,OAAO,GAAG,EAAhB;MACA,IAAIgY,IAAJ,EAAUvuB,CAAV,EAAaokB,IAAb,EAAmBzO,MAAnB;;MACA,KAAK3V,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwxB,KAAhB,EAAuB,EAAExxB,CAAzB,EAA4B;QAC1BuuB,IAAI,GAAG5vB,KAAK,CAAC8vB,cAAN,CAAqBzuB,CAArB,CAAP;QACAokB,IAAI,GAAGmK,IAAI,CAACC,OAAZ;QACA7Y,MAAM,GAAG,IAAT;;QACA,IAAIyO,IAAI,IAAIA,IAAI,CAACjO,OAAb,IAAwBiO,IAAI,YAAYw9C,WAA5C,EAAyD;UACvDjsD,MAAM,GAAG;YACP8zB,OAAO,EAAE9qC,KAAK,CAAC+vD,gBAAN,CAAuB1uD,CAAvB,CADF;YAEP0V,KAAK,EAAE1V,CAFA;YAGPyiB,IAAI,EAAE6jD,UAAU,CAACliD,IAAD,EAAOpkB,CAAP,EAAUwxB,KAAV,CAHT;YAIP7yB,KAJO;YAKPstB,IAAI,EAAEsC,IAAI,CAACrC,UAAL,CAAgB/V,OAAhB,CAAwBwD,SALvB;YAMPU,KAAK,EAAEkU,IAAI,CAACie,MANL;YAOPpoB;UAPO,CAAT;QASD;;QACDmK,IAAI,CAACi7C,OAAL,GAAe7zD,MAAf;QACAY,OAAO,CAACvV,IAAR,CAAa2U,MAAb;MACD;;MACD,KAAK3V,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGwxB,KAAhB,EAAuB,EAAExxB,CAAzB,EAA4B;QAC1B2V,MAAM,GAAGY,OAAO,CAACvW,CAAD,CAAhB;;QACA,IAAI,CAAC2V,MAAD,IAAWA,MAAM,CAAC8M,IAAP,KAAgB,KAA/B,EAAsC;UACpC;QACD;;QACD9M,MAAM,CAAC8M,IAAP,GAAcolD,aAAa,CAACtxD,OAAD,EAAUvW,CAAV,EAAamW,OAAO,CAAC2xD,SAArB,CAA3B;MACD;IACF,CA/BiB;;IAgClB2B,UAAU,CAAC9qE,KAAD,EAAQ4qE,KAAR,EAAepzD,OAAf,EAAwB;MAChC,MAAMlW,IAAI,GAAGkW,OAAO,CAACuzD,QAAR,KAAqB,YAAlC;MACA,MAAM99C,QAAQ,GAAGjtB,KAAK,CAACktB,4BAAN,EAAjB;MACA,MAAM/I,IAAI,GAAGnkB,KAAK,CAACwuB,SAAnB;;MACA,KAAK,IAAIntB,CAAC,GAAG4rB,QAAQ,CAAC7rB,MAAT,GAAkB,CAA/B,EAAkCC,CAAC,IAAI,CAAvC,EAA0C,EAAEA,CAA5C,EAA+C;QAC7C,MAAM2V,MAAM,GAAGiW,QAAQ,CAAC5rB,CAAD,CAAR,CAAYwpE,OAA3B;;QACA,IAAI,CAAC7zD,MAAL,EAAa;UACX;QACD;;QACDA,MAAM,CAACyO,IAAP,CAAY22C,mBAAZ,CAAgCj4C,IAAhC,EAAsCnN,MAAM,CAACsW,IAA7C;;QACA,IAAIhsB,IAAJ,EAAU;UACRkpE,QAAQ,CAACxqE,KAAK,CAAC6a,GAAP,EAAY7D,MAAZ,EAAoBmN,IAApB,CAAR;QACD;MACF;IACF,CA9CiB;;IA+ClB6mD,kBAAkB,CAAChrE,KAAD,EAAQ4qE,KAAR,EAAepzD,OAAf,EAAwB;MACxC,IAAIA,OAAO,CAACuzD,QAAR,KAAqB,oBAAzB,EAA+C;QAC7C;MACD;;MACD,MAAM99C,QAAQ,GAAGjtB,KAAK,CAACktB,4BAAN,EAAjB;;MACA,KAAK,IAAI7rB,CAAC,GAAG4rB,QAAQ,CAAC7rB,MAAT,GAAkB,CAA/B,EAAkCC,CAAC,IAAI,CAAvC,EAA0C,EAAEA,CAA5C,EAA+C;QAC7C,MAAM2V,MAAM,GAAGiW,QAAQ,CAAC5rB,CAAD,CAAR,CAAYwpE,OAA3B;;QACA,IAAI7zD,MAAJ,EAAY;UACVwzD,QAAQ,CAACxqE,KAAK,CAAC6a,GAAP,EAAY7D,MAAZ,EAAoBhX,KAAK,CAACwuB,SAA1B,CAAR;QACD;MACF;IACF,CA1DiB;;IA2DlBy8C,iBAAiB,CAACjrE,KAAD,EAAQhC,IAAR,EAAcwZ,OAAd,EAAuB;MACtC,MAAMR,MAAM,GAAGhZ,IAAI,CAAC4xB,IAAL,CAAUi7C,OAAzB;;MACA,IAAI,CAAC7zD,MAAD,IAAWA,MAAM,CAAC8M,IAAP,KAAgB,KAA3B,IAAoCtM,OAAO,CAACuzD,QAAR,KAAqB,mBAA7D,EAAkF;QAChF;MACD;;MACDP,QAAQ,CAACxqE,KAAK,CAAC6a,GAAP,EAAY7D,MAAZ,EAAoBhX,KAAK,CAACwuB,SAA1B,CAAR;IACD,CAjEiB;;IAkElB7R,QAAQ,EAAE;MACRwsD,SAAS,EAAE,IADH;MAER4B,QAAQ,EAAE;IAFF;EAlEQ,CAApB;;EAwEA,MAAMG,UAAU,GAAG,CAACC,SAAD,EAAY1lB,QAAZ,KAAyB;IAC1C,IAAI;MAAC2lB,SAAS,GAAG3lB,QAAb;MAAuB4lB,QAAQ,GAAG5lB;IAAlC,IAA8C0lB,SAAlD;;IACA,IAAIA,SAAS,CAACG,aAAd,EAA6B;MAC3BF,SAAS,GAAGzqE,IAAI,CAACC,GAAL,CAASwqE,SAAT,EAAoB3lB,QAApB,CAAZ;MACA4lB,QAAQ,GAAG1qE,IAAI,CAACC,GAAL,CAASyqE,QAAT,EAAmB5lB,QAAnB,CAAX;IACD;;IACD,OAAO;MACL4lB,QADK;MAELD,SAFK;MAGLG,UAAU,EAAE5qE,IAAI,CAACgC,GAAL,CAAS8iD,QAAT,EAAmB2lB,SAAnB;IAHP,CAAP;EAKD,CAXD;;EAYA,MAAMI,UAAU,GAAG,CAAC/nE,CAAD,EAAIC,CAAJ,KAAUD,CAAC,KAAK,IAAN,IAAcC,CAAC,KAAK,IAApB,IAA4BD,CAAC,CAACqT,YAAF,KAAmBpT,CAAC,CAACoT,YAAjD,IAAiErT,CAAC,CAACsT,KAAF,KAAYrT,CAAC,CAACqT,KAA5G;;EACA,MAAM00D,MAAN,SAAqB/0B,OAArB,CAA6B;IAC3Bl3C,WAAW,CAACulC,MAAD,EAAS;MAClB;MACA,KAAK2mC,MAAL,GAAc,KAAd;MACA,KAAKC,cAAL,GAAsB,EAAtB;MACA,KAAKC,YAAL,GAAoB,IAApB;MACA,KAAKC,YAAL,GAAoB,KAApB;MACA,KAAK7rE,KAAL,GAAa+kC,MAAM,CAAC/kC,KAApB;MACA,KAAKwX,OAAL,GAAeutB,MAAM,CAACvtB,OAAtB;MACA,KAAKqD,GAAL,GAAWkqB,MAAM,CAAClqB,GAAlB;MACA,KAAKixD,WAAL,GAAmBhsE,SAAnB;MACA,KAAKisE,WAAL,GAAmBjsE,SAAnB;MACA,KAAKksE,UAAL,GAAkBlsE,SAAlB;MACA,KAAKmrB,SAAL,GAAiBnrB,SAAjB;MACA,KAAKgmB,QAAL,GAAgBhmB,SAAhB;MACA,KAAKukB,GAAL,GAAWvkB,SAAX;MACA,KAAKwkB,MAAL,GAAcxkB,SAAd;MACA,KAAKX,IAAL,GAAYW,SAAZ;MACA,KAAKV,KAAL,GAAaU,SAAb;MACA,KAAK4iB,MAAL,GAAc5iB,SAAd;MACA,KAAKuhB,KAAL,GAAavhB,SAAb;MACA,KAAKw8C,QAAL,GAAgBx8C,SAAhB;MACA,KAAKkuB,QAAL,GAAgBluB,SAAhB;MACA,KAAK6T,MAAL,GAAc7T,SAAd;MACA,KAAKszB,QAAL,GAAgBtzB,SAAhB;IACD;;IACDu1B,MAAM,CAACvP,QAAD,EAAWmF,SAAX,EAAsBY,OAAtB,EAA+B;MACnC,KAAK/F,QAAL,GAAgBA,QAAhB;MACA,KAAKmF,SAAL,GAAiBA,SAAjB;MACA,KAAKqxB,QAAL,GAAgBzwB,OAAhB;MACA,KAAKsyB,aAAL;MACA,KAAK8tB,WAAL;MACA,KAAKhtB,GAAL;IACD;;IACDd,aAAa,GAAG;MACd,IAAI,KAAK7rB,YAAL,EAAJ,EAAyB;QACvB,KAAKjR,KAAL,GAAa,KAAKyE,QAAlB;QACA,KAAK3mB,IAAL,GAAY,KAAKm9C,QAAL,CAAcn9C,IAA1B;QACA,KAAKC,KAAL,GAAa,KAAKiiB,KAAlB;MACD,CAJD,MAIO;QACL,KAAKqB,MAAL,GAAc,KAAKuI,SAAnB;QACA,KAAK5G,GAAL,GAAW,KAAKi4B,QAAL,CAAcj4B,GAAzB;QACA,KAAKC,MAAL,GAAc,KAAK5B,MAAnB;MACD;IACF;;IACDupD,WAAW,GAAG;MACZ,MAAMd,SAAS,GAAG,KAAK3zD,OAAL,CAAaq7B,MAAb,IAAuB,EAAzC;MACA,IAAIi5B,WAAW,GAAGruE,QAAQ,CAAC0tE,SAAS,CAAChQ,cAAX,EAA2B,CAAC,KAAKn7D,KAAN,CAA3B,EAAyC,IAAzC,CAAR,IAA0D,EAA5E;;MACA,IAAImrE,SAAS,CAACt5C,MAAd,EAAsB;QACpBi6C,WAAW,GAAGA,WAAW,CAACj6C,MAAZ,CAAoBtwB,IAAD,IAAU4pE,SAAS,CAACt5C,MAAV,CAAiBtwB,IAAjB,EAAuB,KAAKvB,KAAL,CAAW+gB,IAAlC,CAA7B,CAAd;MACD;;MACD,IAAIoqD,SAAS,CAAC7sD,IAAd,EAAoB;QAClBwtD,WAAW,GAAGA,WAAW,CAACxtD,IAAZ,CAAiB,CAAC7a,CAAD,EAAIC,CAAJ,KAAUynE,SAAS,CAAC7sD,IAAV,CAAe7a,CAAf,EAAkBC,CAAlB,EAAqB,KAAK1D,KAAL,CAAW+gB,IAAhC,CAA3B,CAAd;MACD;;MACD,IAAI,KAAKvJ,OAAL,CAAajB,OAAjB,EAA0B;QACxBu1D,WAAW,CAACv1D,OAAZ;MACD;;MACD,KAAKu1D,WAAL,GAAmBA,WAAnB;IACD;;IACD7sB,GAAG,GAAG;MACJ,MAAM;QAACznC,OAAD;QAAUqD;MAAV,IAAiB,IAAvB;;MACA,IAAI,CAACrD,OAAO,CAAC+e,OAAb,EAAsB;QACpB,KAAKlV,KAAL,GAAa,KAAKqB,MAAL,GAAc,CAA3B;QACA;MACD;;MACD,MAAMyoD,SAAS,GAAG3zD,OAAO,CAACq7B,MAA1B;MACA,MAAMq5B,SAAS,GAAGr7C,MAAM,CAACs6C,SAAS,CAAC5wD,IAAX,CAAxB;MACA,MAAMkrC,QAAQ,GAAGymB,SAAS,CAAChzD,IAA3B;;MACA,MAAMynC,WAAW,GAAG,KAAKwrB,mBAAL,EAApB;;MACA,MAAM;QAACd,QAAD;QAAWE;MAAX,IAAyBL,UAAU,CAACC,SAAD,EAAY1lB,QAAZ,CAAzC;MACA,IAAIpkC,KAAJ,EAAWqB,MAAX;MACA7H,GAAG,CAACN,IAAJ,GAAW2xD,SAAS,CAAChrD,MAArB;;MACA,IAAI,KAAKoR,YAAL,EAAJ,EAAyB;QACvBjR,KAAK,GAAG,KAAKyE,QAAb;QACApD,MAAM,GAAG,KAAK0pD,QAAL,CAAczrB,WAAd,EAA2B8E,QAA3B,EAAqC4lB,QAArC,EAA+CE,UAA/C,IAA6D,EAAtE;MACD,CAHD,MAGO;QACL7oD,MAAM,GAAG,KAAKuI,SAAd;QACA5J,KAAK,GAAG,KAAKgrD,QAAL,CAAc1rB,WAAd,EAA2B8E,QAA3B,EAAqC4lB,QAArC,EAA+CE,UAA/C,IAA6D,EAArE;MACD;;MACD,KAAKlqD,KAAL,GAAa1gB,IAAI,CAACC,GAAL,CAASygB,KAAT,EAAgB7J,OAAO,CAACsO,QAAR,IAAoB,KAAKA,QAAzC,CAAb;MACA,KAAKpD,MAAL,GAAc/hB,IAAI,CAACC,GAAL,CAAS8hB,MAAT,EAAiBlL,OAAO,CAACyT,SAAR,IAAqB,KAAKA,SAA3C,CAAd;IACD;;IACDmhD,QAAQ,CAACzrB,WAAD,EAAc8E,QAAd,EAAwB4lB,QAAxB,EAAkCE,UAAlC,EAA8C;MACpD,MAAM;QAAC1wD,GAAD;QAAMiL,QAAN;QAAgBtO,OAAO,EAAE;UAACq7B,MAAM,EAAE;YAACpd;UAAD;QAAT;MAAzB,IAAgD,IAAtD;MACA,MAAM62C,QAAQ,GAAG,KAAKX,cAAL,GAAsB,EAAvC;MACA,MAAMK,UAAU,GAAG,KAAKA,UAAL,GAAkB,CAAC,CAAD,CAArC;MACA,MAAMtxD,UAAU,GAAG6wD,UAAU,GAAG91C,OAAhC;MACA,IAAI82C,WAAW,GAAG5rB,WAAlB;MACA9lC,GAAG,CAACsL,SAAJ,GAAgB,MAAhB;MACAtL,GAAG,CAACuL,YAAJ,GAAmB,QAAnB;MACA,IAAIomD,GAAG,GAAG,CAAC,CAAX;MACA,IAAInoD,GAAG,GAAG,CAAC3J,UAAX;MACA,KAAKoxD,WAAL,CAAiBtrE,OAAjB,CAAyB,CAAC46D,UAAD,EAAa/5D,CAAb,KAAmB;QAC1C,MAAMu/B,SAAS,GAAGyqC,QAAQ,GAAI5lB,QAAQ,GAAG,CAAvB,GAA4B5qC,GAAG,CAACuG,WAAJ,CAAgBg6C,UAAU,CAACh2C,IAA3B,EAAiC/D,KAA/E;;QACA,IAAIhgB,CAAC,KAAK,CAAN,IAAW2qE,UAAU,CAACA,UAAU,CAAC5qE,MAAX,GAAoB,CAArB,CAAV,GAAoCw/B,SAApC,GAAgD,IAAInL,OAApD,GAA8D3P,QAA7E,EAAuF;UACrFymD,WAAW,IAAI7xD,UAAf;UACAsxD,UAAU,CAACA,UAAU,CAAC5qE,MAAX,IAAqBC,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAjC,CAAD,CAAV,GAAkD,CAAlD;UACAgjB,GAAG,IAAI3J,UAAP;UACA8xD,GAAG;QACJ;;QACDF,QAAQ,CAACjrE,CAAD,CAAR,GAAc;UAAClC,IAAI,EAAE,CAAP;UAAUklB,GAAV;UAAemoD,GAAf;UAAoBnrD,KAAK,EAAEuf,SAA3B;UAAsCle,MAAM,EAAE6oD;QAA9C,CAAd;QACAS,UAAU,CAACA,UAAU,CAAC5qE,MAAX,GAAoB,CAArB,CAAV,IAAqCw/B,SAAS,GAAGnL,OAAjD;MACD,CAVD;MAWA,OAAO82C,WAAP;IACD;;IACDF,QAAQ,CAAC1rB,WAAD,EAAc8E,QAAd,EAAwB4lB,QAAxB,EAAkCE,UAAlC,EAA8C;MACpD,MAAM;QAAC1wD,GAAD;QAAMoQ,SAAN;QAAiBzT,OAAO,EAAE;UAACq7B,MAAM,EAAE;YAACpd;UAAD;QAAT;MAA1B,IAAiD,IAAvD;MACA,MAAM62C,QAAQ,GAAG,KAAKX,cAAL,GAAsB,EAAvC;MACA,MAAMI,WAAW,GAAG,KAAKA,WAAL,GAAmB,EAAvC;MACA,MAAMU,WAAW,GAAGxhD,SAAS,GAAG01B,WAAhC;MACA,IAAI+rB,UAAU,GAAGj3C,OAAjB;MACA,IAAIk3C,eAAe,GAAG,CAAtB;MACA,IAAIC,gBAAgB,GAAG,CAAvB;MACA,IAAIztE,IAAI,GAAG,CAAX;MACA,IAAI0tE,GAAG,GAAG,CAAV;MACA,KAAKf,WAAL,CAAiBtrE,OAAjB,CAAyB,CAAC46D,UAAD,EAAa/5D,CAAb,KAAmB;QAC1C,MAAMu/B,SAAS,GAAGyqC,QAAQ,GAAI5lB,QAAQ,GAAG,CAAvB,GAA4B5qC,GAAG,CAACuG,WAAJ,CAAgBg6C,UAAU,CAACh2C,IAA3B,EAAiC/D,KAA/E;;QACA,IAAIhgB,CAAC,GAAG,CAAJ,IAASurE,gBAAgB,GAAGrB,UAAnB,GAAgC,IAAI91C,OAApC,GAA8Cg3C,WAA3D,EAAwE;UACtEC,UAAU,IAAIC,eAAe,GAAGl3C,OAAhC;UACAs2C,WAAW,CAAC1pE,IAAZ,CAAiB;YAACgf,KAAK,EAAEsrD,eAAR;YAAyBjqD,MAAM,EAAEkqD;UAAjC,CAAjB;UACAztE,IAAI,IAAIwtE,eAAe,GAAGl3C,OAA1B;UACAo3C,GAAG;UACHF,eAAe,GAAGC,gBAAgB,GAAG,CAArC;QACD;;QACDN,QAAQ,CAACjrE,CAAD,CAAR,GAAc;UAAClC,IAAD;UAAOklB,GAAG,EAAEuoD,gBAAZ;UAA8BC,GAA9B;UAAmCxrD,KAAK,EAAEuf,SAA1C;UAAqDle,MAAM,EAAE6oD;QAA7D,CAAd;QACAoB,eAAe,GAAGhsE,IAAI,CAACgC,GAAL,CAASgqE,eAAT,EAA0B/rC,SAA1B,CAAlB;QACAgsC,gBAAgB,IAAIrB,UAAU,GAAG91C,OAAjC;MACD,CAZD;MAaAi3C,UAAU,IAAIC,eAAd;MACAZ,WAAW,CAAC1pE,IAAZ,CAAiB;QAACgf,KAAK,EAAEsrD,eAAR;QAAyBjqD,MAAM,EAAEkqD;MAAjC,CAAjB;MACA,OAAOF,UAAP;IACD;;IACDI,cAAc,GAAG;MACf,IAAI,CAAC,KAAKt1D,OAAL,CAAa+e,OAAlB,EAA2B;QACzB;MACD;;MACD,MAAMoqB,WAAW,GAAG,KAAKwrB,mBAAL,EAApB;;MACA,MAAM;QAACR,cAAc,EAAEW,QAAjB;QAA2B90D,OAAO,EAAE;UAAC1Y,KAAD;UAAQ+zC,MAAM,EAAE;YAACpd;UAAD,CAAhB;UAA2Bp2B;QAA3B;MAApC,IAAuE,IAA7E;MACA,MAAM0tE,SAAS,GAAGhsC,aAAa,CAAC1hC,GAAD,EAAM,KAAKF,IAAX,EAAiB,KAAKkiB,KAAtB,CAA/B;;MACA,IAAI,KAAKiR,YAAL,EAAJ,EAAyB;QACvB,IAAIk6C,GAAG,GAAG,CAAV;;QACA,IAAIrtE,IAAI,GAAGJ,cAAc,CAACD,KAAD,EAAQ,KAAKK,IAAL,GAAYs2B,OAApB,EAA6B,KAAKr2B,KAAL,GAAa,KAAK4sE,UAAL,CAAgBQ,GAAhB,CAA1C,CAAzB;;QACA,KAAK,MAAMQ,MAAX,IAAqBV,QAArB,EAA+B;UAC7B,IAAIE,GAAG,KAAKQ,MAAM,CAACR,GAAnB,EAAwB;YACtBA,GAAG,GAAGQ,MAAM,CAACR,GAAb;YACArtE,IAAI,GAAGJ,cAAc,CAACD,KAAD,EAAQ,KAAKK,IAAL,GAAYs2B,OAApB,EAA6B,KAAKr2B,KAAL,GAAa,KAAK4sE,UAAL,CAAgBQ,GAAhB,CAA1C,CAArB;UACD;;UACDQ,MAAM,CAAC3oD,GAAP,IAAc,KAAKA,GAAL,GAAWs8B,WAAX,GAAyBlrB,OAAvC;UACAu3C,MAAM,CAAC7tE,IAAP,GAAc4tE,SAAS,CAACpsC,UAAV,CAAqBosC,SAAS,CAAC7lE,CAAV,CAAY/H,IAAZ,CAArB,EAAwC6tE,MAAM,CAAC3rD,KAA/C,CAAd;UACAliB,IAAI,IAAI6tE,MAAM,CAAC3rD,KAAP,GAAeoU,OAAvB;QACD;MACF,CAZD,MAYO;QACL,IAAIo3C,GAAG,GAAG,CAAV;;QACA,IAAIxoD,GAAG,GAAGtlB,cAAc,CAACD,KAAD,EAAQ,KAAKulB,GAAL,GAAWs8B,WAAX,GAAyBlrB,OAAjC,EAA0C,KAAKnR,MAAL,GAAc,KAAKynD,WAAL,CAAiBc,GAAjB,EAAsBnqD,MAA9E,CAAxB;;QACA,KAAK,MAAMsqD,MAAX,IAAqBV,QAArB,EAA+B;UAC7B,IAAIU,MAAM,CAACH,GAAP,KAAeA,GAAnB,EAAwB;YACtBA,GAAG,GAAGG,MAAM,CAACH,GAAb;YACAxoD,GAAG,GAAGtlB,cAAc,CAACD,KAAD,EAAQ,KAAKulB,GAAL,GAAWs8B,WAAX,GAAyBlrB,OAAjC,EAA0C,KAAKnR,MAAL,GAAc,KAAKynD,WAAL,CAAiBc,GAAjB,EAAsBnqD,MAA9E,CAApB;UACD;;UACDsqD,MAAM,CAAC3oD,GAAP,GAAaA,GAAb;UACA2oD,MAAM,CAAC7tE,IAAP,IAAe,KAAKA,IAAL,GAAYs2B,OAA3B;UACAu3C,MAAM,CAAC7tE,IAAP,GAAc4tE,SAAS,CAACpsC,UAAV,CAAqBosC,SAAS,CAAC7lE,CAAV,CAAY8lE,MAAM,CAAC7tE,IAAnB,CAArB,EAA+C6tE,MAAM,CAAC3rD,KAAtD,CAAd;UACAgD,GAAG,IAAI2oD,MAAM,CAACtqD,MAAP,GAAgB+S,OAAvB;QACD;MACF;IACF;;IACDnD,YAAY,GAAG;MACb,OAAO,KAAK9a,OAAL,CAAawW,QAAb,KAA0B,KAA1B,IAAmC,KAAKxW,OAAL,CAAawW,QAAb,KAA0B,QAApE;IACD;;IACD1sB,IAAI,GAAG;MACL,IAAI,KAAKkW,OAAL,CAAa+e,OAAjB,EAA0B;QACxB,MAAM1b,GAAG,GAAG,KAAKA,GAAjB;QACA0J,QAAQ,CAAC1J,GAAD,EAAM,IAAN,CAAR;;QACA,KAAKoyD,KAAL;;QACAxoD,UAAU,CAAC5J,GAAD,CAAV;MACD;IACF;;IACDoyD,KAAK,GAAG;MACN,MAAM;QAACz1D,OAAO,EAAE6N,IAAV;QAAgB0mD,WAAhB;QAA6BC,UAA7B;QAAyCnxD;MAAzC,IAAgD,IAAtD;MACA,MAAM;QAAC/b,KAAD;QAAQ+zC,MAAM,EAAEs4B;MAAhB,IAA6B9lD,IAAnC;MACA,MAAM6nD,YAAY,GAAGvwD,QAAQ,CAACjJ,KAA9B;MACA,MAAMq5D,SAAS,GAAGhsC,aAAa,CAAC1b,IAAI,CAAChmB,GAAN,EAAW,KAAKF,IAAhB,EAAsB,KAAKkiB,KAA3B,CAA/B;MACA,MAAM6qD,SAAS,GAAGr7C,MAAM,CAACs6C,SAAS,CAAC5wD,IAAX,CAAxB;MACA,MAAM;QAAC7G,KAAK,EAAEy5D,SAAR;QAAmB13C;MAAnB,IAA8B01C,SAApC;MACA,MAAM1lB,QAAQ,GAAGymB,SAAS,CAAChzD,IAA3B;MACA,MAAMk0D,YAAY,GAAG3nB,QAAQ,GAAG,CAAhC;MACA,IAAI4nB,MAAJ;MACA,KAAKjoB,SAAL;MACAvqC,GAAG,CAACsL,SAAJ,GAAgB4mD,SAAS,CAAC5mD,SAAV,CAAoB,MAApB,CAAhB;MACAtL,GAAG,CAACuL,YAAJ,GAAmB,QAAnB;MACAvL,GAAG,CAAC+K,SAAJ,GAAgB,GAAhB;MACA/K,GAAG,CAACN,IAAJ,GAAW2xD,SAAS,CAAChrD,MAArB;MACA,MAAM;QAACmqD,QAAD;QAAWD,SAAX;QAAsBG;MAAtB,IAAoCL,UAAU,CAACC,SAAD,EAAY1lB,QAAZ,CAApD;;MACA,MAAM6nB,aAAa,GAAG,UAASpmE,CAAT,EAAYuX,CAAZ,EAAe28C,UAAf,EAA2B;QAC/C,IAAI58C,KAAK,CAAC6sD,QAAD,CAAL,IAAmBA,QAAQ,IAAI,CAA/B,IAAoC7sD,KAAK,CAAC4sD,SAAD,CAAzC,IAAwDA,SAAS,GAAG,CAAxE,EAA2E;UACzE;QACD;;QACDvwD,GAAG,CAAC6G,IAAJ;QACA,MAAMkE,SAAS,GAAG7P,cAAc,CAACqlD,UAAU,CAACx1C,SAAZ,EAAuB,CAAvB,CAAhC;QACA/K,GAAG,CAACqL,SAAJ,GAAgBnQ,cAAc,CAACqlD,UAAU,CAACl1C,SAAZ,EAAuBgnD,YAAvB,CAA9B;QACAryD,GAAG,CAACumD,OAAJ,GAAcrrD,cAAc,CAACqlD,UAAU,CAACgG,OAAZ,EAAqB,MAArB,CAA5B;QACAvmD,GAAG,CAACoqC,cAAJ,GAAqBlvC,cAAc,CAACqlD,UAAU,CAACnW,cAAZ,EAA4B,CAA5B,CAAnC;QACApqC,GAAG,CAAC4lD,QAAJ,GAAe1qD,cAAc,CAACqlD,UAAU,CAACqF,QAAZ,EAAsB,OAAtB,CAA7B;QACA5lD,GAAG,CAAC+K,SAAJ,GAAgBA,SAAhB;QACA/K,GAAG,CAAC8K,WAAJ,GAAkB5P,cAAc,CAACqlD,UAAU,CAACz1C,WAAZ,EAAyBunD,YAAzB,CAAhC;QACAryD,GAAG,CAACmqC,WAAJ,CAAgBjvC,cAAc,CAACqlD,UAAU,CAACmS,QAAZ,EAAsB,EAAtB,CAA9B;;QACA,IAAIpC,SAAS,CAACG,aAAd,EAA6B;UAC3B,MAAMkC,WAAW,GAAG;YAClBvqD,MAAM,EAAEooD,QAAQ,GAAG1qE,IAAI,CAAC8sE,KAAhB,GAAwB,CADd;YAElB1qD,UAAU,EAAEq4C,UAAU,CAACr4C,UAFL;YAGlBC,QAAQ,EAAEo4C,UAAU,CAACp4C,QAHH;YAIlBe,WAAW,EAAE6B;UAJK,CAApB;UAMA,MAAM80C,OAAO,GAAGqS,SAAS,CAACrsC,KAAV,CAAgBx5B,CAAhB,EAAmBmkE,QAAQ,GAAG,CAA9B,CAAhB;UACA,MAAM1Q,OAAO,GAAGl8C,CAAC,GAAG2uD,YAApB;UACAzqD,SAAS,CAAC9H,GAAD,EAAM2yD,WAAN,EAAmB9S,OAAnB,EAA4BC,OAA5B,CAAT;QACD,CAVD,MAUO;UACL,MAAM+S,OAAO,GAAGjvD,CAAC,GAAG9d,IAAI,CAACgC,GAAL,CAAS,CAAC8iD,QAAQ,GAAG2lB,SAAZ,IAAyB,CAAlC,EAAqC,CAArC,CAApB;UACA,MAAMuC,QAAQ,GAAGZ,SAAS,CAACpsC,UAAV,CAAqBz5B,CAArB,EAAwBmkE,QAAxB,CAAjB;UACA,MAAM/M,YAAY,GAAG3tC,aAAa,CAACyqC,UAAU,CAACkD,YAAZ,CAAlC;UACAzjD,GAAG,CAACwI,SAAJ;;UACA,IAAItR,MAAM,CAAC2H,MAAP,CAAc4kD,YAAd,EAA4BtV,IAA5B,CAAiC5kD,CAAC,IAAIA,CAAC,KAAK,CAA5C,CAAJ,EAAoD;YAClD0iB,kBAAkB,CAACjM,GAAD,EAAM;cACtB3T,CAAC,EAAEymE,QADmB;cAEtBlvD,CAAC,EAAEivD,OAFmB;cAGtB1nE,CAAC,EAAEqlE,QAHmB;cAItBtmE,CAAC,EAAEqmE,SAJmB;cAKtBnoD,MAAM,EAAEq7C;YALc,CAAN,CAAlB;UAOD,CARD,MAQO;YACLzjD,GAAG,CAACgJ,IAAJ,CAAS8pD,QAAT,EAAmBD,OAAnB,EAA4BrC,QAA5B,EAAsCD,SAAtC;UACD;;UACDvwD,GAAG,CAACiJ,IAAJ;;UACA,IAAI8B,SAAS,KAAK,CAAlB,EAAqB;YACnB/K,GAAG,CAACmJ,MAAJ;UACD;QACF;;QACDnJ,GAAG,CAACiH,OAAJ;MACD,CA7CD;;MA8CA,MAAMiE,QAAQ,GAAG,UAAS7e,CAAT,EAAYuX,CAAZ,EAAe28C,UAAf,EAA2B;QAC1Cj2C,UAAU,CAACtK,GAAD,EAAMugD,UAAU,CAACh2C,IAAjB,EAAuBle,CAAvB,EAA0BuX,CAAC,GAAI8sD,UAAU,GAAG,CAA5C,EAAgDW,SAAhD,EAA2D;UACnE7lD,aAAa,EAAE+0C,UAAU,CAAC9rB,MADyC;UAEnEnpB,SAAS,EAAE4mD,SAAS,CAAC5mD,SAAV,CAAoBi1C,UAAU,CAACj1C,SAA/B;QAFwD,CAA3D,CAAV;MAID,CALD;;MAMA,MAAMmM,YAAY,GAAG,KAAKA,YAAL,EAArB;;MACA,MAAMquB,WAAW,GAAG,KAAKwrB,mBAAL,EAApB;;MACA,IAAI75C,YAAJ,EAAkB;QAChB+6C,MAAM,GAAG;UACPnmE,CAAC,EAAEnI,cAAc,CAACD,KAAD,EAAQ,KAAKK,IAAL,GAAYs2B,OAApB,EAA6B,KAAKr2B,KAAL,GAAa4sE,UAAU,CAAC,CAAD,CAApD,CADV;UAEPvtD,CAAC,EAAE,KAAK4F,GAAL,GAAWoR,OAAX,GAAqBkrB,WAFjB;UAGPl7B,IAAI,EAAE;QAHC,CAAT;MAKD,CAND,MAMO;QACL4nD,MAAM,GAAG;UACPnmE,CAAC,EAAE,KAAK/H,IAAL,GAAYs2B,OADR;UAEPhX,CAAC,EAAE1f,cAAc,CAACD,KAAD,EAAQ,KAAKulB,GAAL,GAAWs8B,WAAX,GAAyBlrB,OAAjC,EAA0C,KAAKnR,MAAL,GAAcynD,WAAW,CAAC,CAAD,CAAX,CAAerpD,MAAvE,CAFV;UAGP+C,IAAI,EAAE;QAHC,CAAT;MAKD;;MACDub,qBAAqB,CAAC,KAAKnmB,GAAN,EAAWwK,IAAI,CAACuoD,aAAhB,CAArB;MACA,MAAMlzD,UAAU,GAAG6wD,UAAU,GAAG91C,OAAhC;MACA,KAAKq2C,WAAL,CAAiBtrE,OAAjB,CAAyB,CAAC46D,UAAD,EAAa/5D,CAAb,KAAmB;QAC1CwZ,GAAG,CAAC8K,WAAJ,GAAkBy1C,UAAU,CAAC+R,SAAX,IAAwBA,SAA1C;QACAtyD,GAAG,CAACqL,SAAJ,GAAgBk1C,UAAU,CAAC+R,SAAX,IAAwBA,SAAxC;QACA,MAAMhsD,SAAS,GAAGtG,GAAG,CAACuG,WAAJ,CAAgBg6C,UAAU,CAACh2C,IAA3B,EAAiC/D,KAAnD;QACA,MAAM8E,SAAS,GAAG4mD,SAAS,CAAC5mD,SAAV,CAAoBi1C,UAAU,CAACj1C,SAAX,KAAyBi1C,UAAU,CAACj1C,SAAX,GAAuBglD,SAAS,CAAChlD,SAA1D,CAApB,CAAlB;QACA,MAAM9E,KAAK,GAAGgqD,QAAQ,GAAG+B,YAAX,GAA0BjsD,SAAxC;QACA,IAAIja,CAAC,GAAGmmE,MAAM,CAACnmE,CAAf;QACA,IAAIuX,CAAC,GAAG4uD,MAAM,CAAC5uD,CAAf;QACAsuD,SAAS,CAACtsC,QAAV,CAAmB,KAAKpf,KAAxB;;QACA,IAAIiR,YAAJ,EAAkB;UAChB,IAAIjxB,CAAC,GAAG,CAAJ,IAAS6F,CAAC,GAAGma,KAAJ,GAAYoU,OAAZ,GAAsB,KAAKr2B,KAAxC,EAA+C;YAC7Cqf,CAAC,GAAG4uD,MAAM,CAAC5uD,CAAP,IAAY/D,UAAhB;YACA2yD,MAAM,CAAC5nD,IAAP;YACAve,CAAC,GAAGmmE,MAAM,CAACnmE,CAAP,GAAWnI,cAAc,CAACD,KAAD,EAAQ,KAAKK,IAAL,GAAYs2B,OAApB,EAA6B,KAAKr2B,KAAL,GAAa4sE,UAAU,CAACqB,MAAM,CAAC5nD,IAAR,CAApD,CAA7B;UACD;QACF,CAND,MAMO,IAAIpkB,CAAC,GAAG,CAAJ,IAASod,CAAC,GAAG/D,UAAJ,GAAiB,KAAK4J,MAAnC,EAA2C;UAChDpd,CAAC,GAAGmmE,MAAM,CAACnmE,CAAP,GAAWA,CAAC,GAAG6kE,WAAW,CAACsB,MAAM,CAAC5nD,IAAR,CAAX,CAAyBpE,KAA7B,GAAqCoU,OAApD;UACA43C,MAAM,CAAC5nD,IAAP;UACAhH,CAAC,GAAG4uD,MAAM,CAAC5uD,CAAP,GAAW1f,cAAc,CAACD,KAAD,EAAQ,KAAKulB,GAAL,GAAWs8B,WAAX,GAAyBlrB,OAAjC,EAA0C,KAAKnR,MAAL,GAAcynD,WAAW,CAACsB,MAAM,CAAC5nD,IAAR,CAAX,CAAyB/C,MAAjF,CAA7B;QACD;;QACD,MAAMmrD,KAAK,GAAGd,SAAS,CAAC7lE,CAAV,CAAYA,CAAZ,CAAd;QACAomE,aAAa,CAACO,KAAD,EAAQpvD,CAAR,EAAW28C,UAAX,CAAb;QACAl0D,CAAC,GAAGhI,MAAM,CAACinB,SAAD,EAAYjf,CAAC,GAAGmkE,QAAJ,GAAe+B,YAA3B,EAAyC96C,YAAY,GAAGprB,CAAC,GAAGma,KAAP,GAAe,KAAKjiB,KAAzE,EAAgFimB,IAAI,CAAChmB,GAArF,CAAV;QACA0mB,QAAQ,CAACgnD,SAAS,CAAC7lE,CAAV,CAAYA,CAAZ,CAAD,EAAiBuX,CAAjB,EAAoB28C,UAApB,CAAR;;QACA,IAAI9oC,YAAJ,EAAkB;UAChB+6C,MAAM,CAACnmE,CAAP,IAAYma,KAAK,GAAGoU,OAApB;QACD,CAFD,MAEO;UACL43C,MAAM,CAAC5uD,CAAP,IAAY/D,UAAZ;QACD;MACF,CA7BD;MA8BA4mB,oBAAoB,CAAC,KAAKzmB,GAAN,EAAWwK,IAAI,CAACuoD,aAAhB,CAApB;IACD;;IACDxoB,SAAS,GAAG;MACV,MAAM//B,IAAI,GAAG,KAAK7N,OAAlB;MACA,MAAMipC,SAAS,GAAGp7B,IAAI,CAAC+yB,KAAvB;MACA,MAAM01B,SAAS,GAAGj9C,MAAM,CAAC4vB,SAAS,CAAClmC,IAAX,CAAxB;MACA,MAAMwzD,YAAY,GAAGn9C,SAAS,CAAC6vB,SAAS,CAAChrB,OAAX,CAA9B;;MACA,IAAI,CAACgrB,SAAS,CAAClqB,OAAf,EAAwB;QACtB;MACD;;MACD,MAAMw2C,SAAS,GAAGhsC,aAAa,CAAC1b,IAAI,CAAChmB,GAAN,EAAW,KAAKF,IAAhB,EAAsB,KAAKkiB,KAA3B,CAA/B;MACA,MAAMxG,GAAG,GAAG,KAAKA,GAAjB;MACA,MAAMmT,QAAQ,GAAGyyB,SAAS,CAACzyB,QAA3B;MACA,MAAMo/C,YAAY,GAAGU,SAAS,CAAC50D,IAAV,GAAiB,CAAtC;MACA,MAAM80D,0BAA0B,GAAGD,YAAY,CAAC1pD,GAAb,GAAmB+oD,YAAtD;MACA,IAAI3uD,CAAJ;MACA,IAAItf,IAAI,GAAG,KAAKA,IAAhB;MACA,IAAI2mB,QAAQ,GAAG,KAAKzE,KAApB;;MACA,IAAI,KAAKiR,YAAL,EAAJ,EAAyB;QACvBxM,QAAQ,GAAGnlB,IAAI,CAACgC,GAAL,CAAS,GAAG,KAAKqpE,UAAjB,CAAX;QACAvtD,CAAC,GAAG,KAAK4F,GAAL,GAAW2pD,0BAAf;QACA7uE,IAAI,GAAGJ,cAAc,CAACsmB,IAAI,CAACvmB,KAAN,EAAaK,IAAb,EAAmB,KAAKC,KAAL,GAAa0mB,QAAhC,CAArB;MACD,CAJD,MAIO;QACL,MAAMmF,SAAS,GAAG,KAAK8gD,WAAL,CAAiBvpE,MAAjB,CAAwB,CAACC,GAAD,EAAMyW,IAAN,KAAevY,IAAI,CAACgC,GAAL,CAASF,GAAT,EAAcyW,IAAI,CAACwJ,MAAnB,CAAvC,EAAmE,CAAnE,CAAlB;QACAjE,CAAC,GAAGuvD,0BAA0B,GAAGjvE,cAAc,CAACsmB,IAAI,CAACvmB,KAAN,EAAa,KAAKulB,GAAlB,EAAuB,KAAKC,MAAL,GAAc2G,SAAd,GAA0B5F,IAAI,CAACwtB,MAAL,CAAYpd,OAAtC,GAAgD,KAAK02C,mBAAL,EAAvE,CAA/C;MACD;;MACD,MAAMjlE,CAAC,GAAGnI,cAAc,CAACivB,QAAD,EAAW7uB,IAAX,EAAiBA,IAAI,GAAG2mB,QAAxB,CAAxB;;MACAjL,GAAG,CAACsL,SAAJ,GAAgB4mD,SAAS,CAAC5mD,SAAV,CAAoBtnB,kBAAkB,CAACmvB,QAAD,CAAtC,CAAhB;MACAnT,GAAG,CAACuL,YAAJ,GAAmB,QAAnB;MACAvL,GAAG,CAAC8K,WAAJ,GAAkB86B,SAAS,CAAC/sC,KAA5B;MACAmH,GAAG,CAACqL,SAAJ,GAAgBu6B,SAAS,CAAC/sC,KAA1B;MACAmH,GAAG,CAACN,IAAJ,GAAWuzD,SAAS,CAAC5sD,MAArB;MACAiE,UAAU,CAACtK,GAAD,EAAM4lC,SAAS,CAACr7B,IAAhB,EAAsBle,CAAtB,EAAyBuX,CAAzB,EAA4BqvD,SAA5B,CAAV;IACD;;IACD3B,mBAAmB,GAAG;MACpB,MAAM1rB,SAAS,GAAG,KAAKjpC,OAAL,CAAa4gC,KAA/B;MACA,MAAM01B,SAAS,GAAGj9C,MAAM,CAAC4vB,SAAS,CAAClmC,IAAX,CAAxB;MACA,MAAMwzD,YAAY,GAAGn9C,SAAS,CAAC6vB,SAAS,CAAChrB,OAAX,CAA9B;MACA,OAAOgrB,SAAS,CAAClqB,OAAV,GAAoBu3C,SAAS,CAACpzD,UAAV,GAAuBqzD,YAAY,CAACrrD,MAAxD,GAAiE,CAAxE;IACD;;IACDurD,gBAAgB,CAAC/mE,CAAD,EAAIuX,CAAJ,EAAO;MACrB,IAAIpd,CAAJ,EAAO6sE,MAAP,EAAeC,EAAf;;MACA,IAAIvtD,UAAU,CAAC1Z,CAAD,EAAI,KAAK/H,IAAT,EAAe,KAAKC,KAApB,CAAV,IACCwhB,UAAU,CAACnC,CAAD,EAAI,KAAK4F,GAAT,EAAc,KAAKC,MAAnB,CADf,EAC2C;QACzC6pD,EAAE,GAAG,KAAKxC,cAAV;;QACA,KAAKtqE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG8sE,EAAE,CAAC/sE,MAAnB,EAA2B,EAAEC,CAA7B,EAAgC;UAC9B6sE,MAAM,GAAGC,EAAE,CAAC9sE,CAAD,CAAX;;UACA,IAAIuf,UAAU,CAAC1Z,CAAD,EAAIgnE,MAAM,CAAC/uE,IAAX,EAAiB+uE,MAAM,CAAC/uE,IAAP,GAAc+uE,MAAM,CAAC7sD,KAAtC,CAAV,IACCT,UAAU,CAACnC,CAAD,EAAIyvD,MAAM,CAAC7pD,GAAX,EAAgB6pD,MAAM,CAAC7pD,GAAP,GAAa6pD,MAAM,CAACxrD,MAApC,CADf,EAC4D;YAC1D,OAAO,KAAKopD,WAAL,CAAiBzqE,CAAjB,CAAP;UACD;QACF;MACF;;MACD,OAAO,IAAP;IACD;;IACD+sE,WAAW,CAACvqE,CAAD,EAAI;MACb,MAAMwhB,IAAI,GAAG,KAAK7N,OAAlB;;MACA,IAAI,CAAC62D,UAAU,CAACxqE,CAAC,CAAC1D,IAAH,EAASklB,IAAT,CAAf,EAA+B;QAC7B;MACD;;MACD,MAAMipD,WAAW,GAAG,KAAKL,gBAAL,CAAsBpqE,CAAC,CAACqD,CAAxB,EAA2BrD,CAAC,CAAC4a,CAA7B,CAApB;;MACA,IAAI5a,CAAC,CAAC1D,IAAF,KAAW,WAAf,EAA4B;QAC1B,MAAMgY,QAAQ,GAAG,KAAKyzD,YAAtB;QACA,MAAM2C,QAAQ,GAAG/C,UAAU,CAACrzD,QAAD,EAAWm2D,WAAX,CAA3B;;QACA,IAAIn2D,QAAQ,IAAI,CAACo2D,QAAjB,EAA2B;UACzB9wE,QAAQ,CAAC4nB,IAAI,CAACmpD,OAAN,EAAe,CAAC3qE,CAAD,EAAIsU,QAAJ,EAAc,IAAd,CAAf,EAAoC,IAApC,CAAR;QACD;;QACD,KAAKyzD,YAAL,GAAoB0C,WAApB;;QACA,IAAIA,WAAW,IAAI,CAACC,QAApB,EAA8B;UAC5B9wE,QAAQ,CAAC4nB,IAAI,CAAChK,OAAN,EAAe,CAACxX,CAAD,EAAIyqE,WAAJ,EAAiB,IAAjB,CAAf,EAAuC,IAAvC,CAAR;QACD;MACF,CAVD,MAUO,IAAIA,WAAJ,EAAiB;QACtB7wE,QAAQ,CAAC4nB,IAAI,CAAC/J,OAAN,EAAe,CAACzX,CAAD,EAAIyqE,WAAJ,EAAiB,IAAjB,CAAf,EAAuC,IAAvC,CAAR;MACD;IACF;;EA9W0B;;EAgX7B,SAASD,UAAT,CAAoBluE,IAApB,EAA0BklB,IAA1B,EAAgC;IAC9B,IAAIllB,IAAI,KAAK,WAAT,KAAyBklB,IAAI,CAAChK,OAAL,IAAgBgK,IAAI,CAACmpD,OAA9C,CAAJ,EAA4D;MAC1D,OAAO,IAAP;IACD;;IACD,IAAInpD,IAAI,CAAC/J,OAAL,KAAiBnb,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,SAA9C,CAAJ,EAA8D;MAC5D,OAAO,IAAP;IACD;;IACD,OAAO,KAAP;EACD;;EACD,IAAIsuE,aAAa,GAAG;IAClBp5D,EAAE,EAAE,QADc;IAElBq5D,QAAQ,EAAEjD,MAFQ;;IAGlBzsE,KAAK,CAACgB,KAAD,EAAQ4qE,KAAR,EAAepzD,OAAf,EAAwB;MAC3B,MAAM0jD,MAAM,GAAGl7D,KAAK,CAACk7D,MAAN,GAAe,IAAIuQ,MAAJ,CAAW;QAAC5wD,GAAG,EAAE7a,KAAK,CAAC6a,GAAZ;QAAiBrD,OAAjB;QAA0BxX;MAA1B,CAAX,CAA9B;MACAwyB,OAAO,CAACwD,SAAR,CAAkBh2B,KAAlB,EAAyBk7D,MAAzB,EAAiC1jD,OAAjC;MACAgb,OAAO,CAACmD,MAAR,CAAe31B,KAAf,EAAsBk7D,MAAtB;IACD,CAPiB;;IAQlBr4D,IAAI,CAAC7C,KAAD,EAAQ;MACVwyB,OAAO,CAACsD,SAAR,CAAkB91B,KAAlB,EAAyBA,KAAK,CAACk7D,MAA/B;MACA,OAAOl7D,KAAK,CAACk7D,MAAb;IACD,CAXiB;;IAYlBld,YAAY,CAACh+C,KAAD,EAAQ4qE,KAAR,EAAepzD,OAAf,EAAwB;MAClC,MAAM0jD,MAAM,GAAGl7D,KAAK,CAACk7D,MAArB;MACA1oC,OAAO,CAACwD,SAAR,CAAkBh2B,KAAlB,EAAyBk7D,MAAzB,EAAiC1jD,OAAjC;MACA0jD,MAAM,CAAC1jD,OAAP,GAAiBA,OAAjB;IACD,CAhBiB;;IAiBlB2nC,WAAW,CAACn/C,KAAD,EAAQ;MACjB,MAAMk7D,MAAM,GAAGl7D,KAAK,CAACk7D,MAArB;MACAA,MAAM,CAAC+Q,WAAP;MACA/Q,MAAM,CAAC4R,cAAP;IACD,CArBiB;;IAsBlB6B,UAAU,CAAC3uE,KAAD,EAAQhC,IAAR,EAAc;MACtB,IAAI,CAACA,IAAI,CAAC60D,MAAV,EAAkB;QAChB7yD,KAAK,CAACk7D,MAAN,CAAakT,WAAb,CAAyBpwE,IAAI,CAACmE,KAA9B;MACD;IACF,CA1BiB;;IA2BlBwa,QAAQ,EAAE;MACR4Z,OAAO,EAAE,IADD;MAERvI,QAAQ,EAAE,KAFF;MAGRlvB,KAAK,EAAE,QAHC;MAIRs0B,QAAQ,EAAE,IAJF;MAKR7c,OAAO,EAAE,KALD;MAMR5C,MAAM,EAAE,IANA;;MAOR2H,OAAO,CAACzX,CAAD,EAAIu3D,UAAJ,EAAgBF,MAAhB,EAAwB;QAC7B,MAAMnkD,KAAK,GAAGqkD,UAAU,CAACtkD,YAAzB;QACA,MAAM83D,EAAE,GAAG1T,MAAM,CAACl7D,KAAlB;;QACA,IAAI4uE,EAAE,CAAC7e,gBAAH,CAAoBh5C,KAApB,CAAJ,EAAgC;UAC9B63D,EAAE,CAAC7jC,IAAH,CAAQh0B,KAAR;UACAqkD,UAAU,CAAC9rB,MAAX,GAAoB,IAApB;QACD,CAHD,MAGO;UACLs/B,EAAE,CAAChkC,IAAH,CAAQ7zB,KAAR;UACAqkD,UAAU,CAAC9rB,MAAX,GAAoB,KAApB;QACD;MACF,CAjBO;;MAkBRj0B,OAAO,EAAE,IAlBD;MAmBRmzD,OAAO,EAAE,IAnBD;MAoBR37B,MAAM,EAAE;QACNn/B,KAAK,EAAGmH,GAAD,IAASA,GAAG,CAAC7a,KAAJ,CAAUwX,OAAV,CAAkB9D,KAD5B;QAEN23D,QAAQ,EAAE,EAFJ;QAGN51C,OAAO,EAAE,EAHH;;QAIN0lC,cAAc,CAACn7D,KAAD,EAAQ;UACpB,MAAMga,QAAQ,GAAGha,KAAK,CAAC+gB,IAAN,CAAW/G,QAA5B;UACA,MAAM;YAAC64B,MAAM,EAAE;cAACy4B,aAAD;cAAgBvoD,UAAhB;cAA4BoD,SAA5B;cAAuCzS;YAAvC;UAAT,IAA0D1T,KAAK,CAACk7D,MAAN,CAAa1jD,OAA7E;UACA,OAAOxX,KAAK,CAACwsC,sBAAN,GAA+BlmC,GAA/B,CAAoCspB,IAAD,IAAU;YAClD,MAAMnV,KAAK,GAAGmV,IAAI,CAACrC,UAAL,CAAgB/D,QAAhB,CAAyB8hD,aAAa,GAAG,CAAH,GAAOxrE,SAA7C,CAAd;YACA,MAAMikB,WAAW,GAAG6M,SAAS,CAACnW,KAAK,CAACsJ,WAAP,CAA7B;YACA,OAAO;cACLqB,IAAI,EAAEpL,QAAQ,CAAC4V,IAAI,CAAC7Y,KAAN,CAAR,CAAqBg9B,KADtB;cAEL7tB,SAAS,EAAEzL,KAAK,CAACX,eAFZ;cAGLqzD,SAAS,EAAEz5D,KAHN;cAIL47B,MAAM,EAAE,CAAC1f,IAAI,CAACkb,OAJT;cAKLs2B,OAAO,EAAE3mD,KAAK,CAAC0pB,cALV;cAMLopC,QAAQ,EAAE9yD,KAAK,CAAC2pB,UANX;cAOL6gB,cAAc,EAAExqC,KAAK,CAAC4pB,gBAPjB;cAQLo8B,QAAQ,EAAEhmD,KAAK,CAAC6pB,eARX;cASL1e,SAAS,EAAE,CAAC7B,WAAW,CAAC1C,KAAZ,GAAoB0C,WAAW,CAACrB,MAAjC,IAA2C,CATjD;cAULiD,WAAW,EAAElL,KAAK,CAACV,WAVd;cAWLgJ,UAAU,EAAEA,UAAU,IAAItI,KAAK,CAACsI,UAX3B;cAYLC,QAAQ,EAAEvI,KAAK,CAACuI,QAZX;cAaLmD,SAAS,EAAEA,SAAS,IAAI1L,KAAK,CAAC0L,SAbzB;cAcLm4C,YAAY,EAAE,CAdT;cAeLxnD,YAAY,EAAE8Y,IAAI,CAAC7Y;YAfd,CAAP;UAiBD,CApBM,EAoBJ,IApBI,CAAP;QAqBD;;MA5BK,CApBA;MAkDRqhC,KAAK,EAAE;QACL1kC,KAAK,EAAGmH,GAAD,IAASA,GAAG,CAAC7a,KAAJ,CAAUwX,OAAV,CAAkB9D,KAD7B;QAEL6iB,OAAO,EAAE,KAFJ;QAGLvI,QAAQ,EAAE,QAHL;QAIL5I,IAAI,EAAE;MAJD;IAlDC,CA3BQ;IAoFlB/L,WAAW,EAAE;MACXuD,WAAW,EAAGX,IAAD,IAAU,CAACA,IAAI,CAACY,UAAL,CAAgB,IAAhB,CADb;MAEXg2B,MAAM,EAAE;QACNj2B,WAAW,EAAGX,IAAD,IAAU,CAAC,CAAC,gBAAD,EAAmB,QAAnB,EAA6B,MAA7B,EAAqC0W,QAArC,CAA8C1W,IAA9C;MADlB;IAFG;EApFK,CAApB;;EA4FA,MAAM4yD,KAAN,SAAoBn4B,OAApB,CAA4B;IAC1Bl3C,WAAW,CAACulC,MAAD,EAAS;MAClB;MACA,KAAK/kC,KAAL,GAAa+kC,MAAM,CAAC/kC,KAApB;MACA,KAAKwX,OAAL,GAAeutB,MAAM,CAACvtB,OAAtB;MACA,KAAKqD,GAAL,GAAWkqB,MAAM,CAAClqB,GAAlB;MACA,KAAKi0D,QAAL,GAAgBhvE,SAAhB;MACA,KAAKukB,GAAL,GAAWvkB,SAAX;MACA,KAAKwkB,MAAL,GAAcxkB,SAAd;MACA,KAAKX,IAAL,GAAYW,SAAZ;MACA,KAAKV,KAAL,GAAaU,SAAb;MACA,KAAKuhB,KAAL,GAAavhB,SAAb;MACA,KAAK4iB,MAAL,GAAc5iB,SAAd;MACA,KAAKkuB,QAAL,GAAgBluB,SAAhB;MACA,KAAK6T,MAAL,GAAc7T,SAAd;MACA,KAAKszB,QAAL,GAAgBtzB,SAAhB;IACD;;IACDu1B,MAAM,CAACvP,QAAD,EAAWmF,SAAX,EAAsB;MAC1B,MAAM5F,IAAI,GAAG,KAAK7N,OAAlB;MACA,KAAKrY,IAAL,GAAY,CAAZ;MACA,KAAKklB,GAAL,GAAW,CAAX;;MACA,IAAI,CAACgB,IAAI,CAACkR,OAAV,EAAmB;QACjB,KAAKlV,KAAL,GAAa,KAAKqB,MAAL,GAAc,KAAKtjB,KAAL,GAAa,KAAKklB,MAAL,GAAc,CAAtD;QACA;MACD;;MACD,KAAKjD,KAAL,GAAa,KAAKjiB,KAAL,GAAa0mB,QAA1B;MACA,KAAKpD,MAAL,GAAc,KAAK4B,MAAL,GAAc2G,SAA5B;MACA,MAAMi5B,SAAS,GAAG79C,OAAO,CAACgf,IAAI,CAACD,IAAN,CAAP,GAAqBC,IAAI,CAACD,IAAL,CAAUhkB,MAA/B,GAAwC,CAA1D;MACA,KAAK0tE,QAAL,GAAgBl+C,SAAS,CAACvL,IAAI,CAACoQ,OAAN,CAAzB;;MACA,MAAMs5C,QAAQ,GAAG7qB,SAAS,GAAGrzB,MAAM,CAACxL,IAAI,CAAC9K,IAAN,CAAN,CAAkBG,UAA9B,GAA2C,KAAKo0D,QAAL,CAAcpsD,MAA1E;;MACA,IAAI,KAAK4P,YAAL,EAAJ,EAAyB;QACvB,KAAK5P,MAAL,GAAcqsD,QAAd;MACD,CAFD,MAEO;QACL,KAAK1tD,KAAL,GAAa0tD,QAAb;MACD;IACF;;IACDz8C,YAAY,GAAG;MACb,MAAM1Z,GAAG,GAAG,KAAKpB,OAAL,CAAawW,QAAzB;MACA,OAAOpV,GAAG,KAAK,KAAR,IAAiBA,GAAG,KAAK,QAAhC;IACD;;IACDo2D,SAAS,CAACp3B,MAAD,EAAS;MAChB,MAAM;QAACvzB,GAAD;QAAMllB,IAAN;QAAYmlB,MAAZ;QAAoBllB,KAApB;QAA2BoY;MAA3B,IAAsC,IAA5C;MACA,MAAM1Y,KAAK,GAAG0Y,OAAO,CAAC1Y,KAAtB;MACA,IAAIkkB,QAAQ,GAAG,CAAf;MACA,IAAI8C,QAAJ,EAAcm2B,MAAd,EAAsBC,MAAtB;;MACA,IAAI,KAAK5pB,YAAL,EAAJ,EAAyB;QACvB2pB,MAAM,GAAGl9C,cAAc,CAACD,KAAD,EAAQK,IAAR,EAAcC,KAAd,CAAvB;QACA88C,MAAM,GAAG73B,GAAG,GAAGuzB,MAAf;QACA9xB,QAAQ,GAAG1mB,KAAK,GAAGD,IAAnB;MACD,CAJD,MAIO;QACL,IAAIqY,OAAO,CAACwW,QAAR,KAAqB,MAAzB,EAAiC;UAC/BiuB,MAAM,GAAG98C,IAAI,GAAGy4C,MAAhB;UACAsE,MAAM,GAAGn9C,cAAc,CAACD,KAAD,EAAQwlB,MAAR,EAAgBD,GAAhB,CAAvB;UACArB,QAAQ,GAAGhG,EAAE,GAAG,CAAC,GAAjB;QACD,CAJD,MAIO;UACLi/B,MAAM,GAAG78C,KAAK,GAAGw4C,MAAjB;UACAsE,MAAM,GAAGn9C,cAAc,CAACD,KAAD,EAAQulB,GAAR,EAAaC,MAAb,CAAvB;UACAtB,QAAQ,GAAGhG,EAAE,GAAG,GAAhB;QACD;;QACD8I,QAAQ,GAAGxB,MAAM,GAAGD,GAApB;MACD;;MACD,OAAO;QAAC43B,MAAD;QAASC,MAAT;QAAiBp2B,QAAjB;QAA2B9C;MAA3B,CAAP;IACD;;IACD1hB,IAAI,GAAG;MACL,MAAMuZ,GAAG,GAAG,KAAKA,GAAjB;MACA,MAAMwK,IAAI,GAAG,KAAK7N,OAAlB;;MACA,IAAI,CAAC6N,IAAI,CAACkR,OAAV,EAAmB;QACjB;MACD;;MACD,MAAM04C,QAAQ,GAAGp+C,MAAM,CAACxL,IAAI,CAAC9K,IAAN,CAAvB;MACA,MAAMG,UAAU,GAAGu0D,QAAQ,CAACv0D,UAA5B;MACA,MAAMk9B,MAAM,GAAGl9B,UAAU,GAAG,CAAb,GAAiB,KAAKo0D,QAAL,CAAczqD,GAA9C;;MACA,MAAM;QAAC43B,MAAD;QAASC,MAAT;QAAiBp2B,QAAjB;QAA2B9C;MAA3B,IAAuC,KAAKgsD,SAAL,CAAep3B,MAAf,CAA7C;;MACAzyB,UAAU,CAACtK,GAAD,EAAMwK,IAAI,CAACD,IAAX,EAAiB,CAAjB,EAAoB,CAApB,EAAuB6pD,QAAvB,EAAiC;QACzCv7D,KAAK,EAAE2R,IAAI,CAAC3R,KAD6B;QAEzCoS,QAFyC;QAGzC9C,QAHyC;QAIzCmD,SAAS,EAAEtnB,kBAAkB,CAACwmB,IAAI,CAACvmB,KAAN,CAJY;QAKzCsnB,YAAY,EAAE,QAL2B;QAMzCH,WAAW,EAAE,CAACg2B,MAAD,EAASC,MAAT;MAN4B,CAAjC,CAAV;IAQD;;EAjFyB;;EAmF5B,SAASgzB,WAAT,CAAqBlvE,KAArB,EAA4BygD,SAA5B,EAAuC;IACrC,MAAMrI,KAAK,GAAG,IAAIy2B,KAAJ,CAAU;MACtBh0D,GAAG,EAAE7a,KAAK,CAAC6a,GADW;MAEtBrD,OAAO,EAAEipC,SAFa;MAGtBzgD;IAHsB,CAAV,CAAd;IAKAwyB,OAAO,CAACwD,SAAR,CAAkBh2B,KAAlB,EAAyBo4C,KAAzB,EAAgCqI,SAAhC;IACAjuB,OAAO,CAACmD,MAAR,CAAe31B,KAAf,EAAsBo4C,KAAtB;IACAp4C,KAAK,CAACmvE,UAAN,GAAmB/2B,KAAnB;EACD;;EACD,IAAIg3B,YAAY,GAAG;IACjB/5D,EAAE,EAAE,OADa;IAEjBq5D,QAAQ,EAAEG,KAFO;;IAGjB7vE,KAAK,CAACgB,KAAD,EAAQ4qE,KAAR,EAAepzD,OAAf,EAAwB;MAC3B03D,WAAW,CAAClvE,KAAD,EAAQwX,OAAR,CAAX;IACD,CALgB;;IAMjB3U,IAAI,CAAC7C,KAAD,EAAQ;MACV,MAAMmvE,UAAU,GAAGnvE,KAAK,CAACmvE,UAAzB;MACA38C,OAAO,CAACsD,SAAR,CAAkB91B,KAAlB,EAAyBmvE,UAAzB;MACA,OAAOnvE,KAAK,CAACmvE,UAAb;IACD,CAVgB;;IAWjBnxB,YAAY,CAACh+C,KAAD,EAAQ4qE,KAAR,EAAepzD,OAAf,EAAwB;MAClC,MAAM4gC,KAAK,GAAGp4C,KAAK,CAACmvE,UAApB;MACA38C,OAAO,CAACwD,SAAR,CAAkBh2B,KAAlB,EAAyBo4C,KAAzB,EAAgC5gC,OAAhC;MACA4gC,KAAK,CAAC5gC,OAAN,GAAgBA,OAAhB;IACD,CAfgB;;IAgBjBmF,QAAQ,EAAE;MACR7d,KAAK,EAAE,QADC;MAERy3B,OAAO,EAAE,KAFD;MAGRhc,IAAI,EAAE;QACJ5G,MAAM,EAAE;MADJ,CAHE;MAMRyf,QAAQ,EAAE,IANF;MAORqC,OAAO,EAAE,EAPD;MAQRzH,QAAQ,EAAE,KARF;MASR5I,IAAI,EAAE,EATE;MAURzR,MAAM,EAAE;IAVA,CAhBO;IA4BjBmjC,aAAa,EAAE;MACbpjC,KAAK,EAAE;IADM,CA5BE;IA+BjB2F,WAAW,EAAE;MACXuD,WAAW,EAAE,IADF;MAEXE,UAAU,EAAE;IAFD;EA/BI,CAAnB;EAqCA,MAAMxW,GAAG,GAAG,IAAI+oE,OAAJ,EAAZ;EACA,IAAIC,eAAe,GAAG;IACpBj6D,EAAE,EAAE,UADgB;;IAEpBrW,KAAK,CAACgB,KAAD,EAAQ4qE,KAAR,EAAepzD,OAAf,EAAwB;MAC3B,MAAM4gC,KAAK,GAAG,IAAIy2B,KAAJ,CAAU;QACtBh0D,GAAG,EAAE7a,KAAK,CAAC6a,GADW;QAEtBrD,OAFsB;QAGtBxX;MAHsB,CAAV,CAAd;MAKAwyB,OAAO,CAACwD,SAAR,CAAkBh2B,KAAlB,EAAyBo4C,KAAzB,EAAgC5gC,OAAhC;MACAgb,OAAO,CAACmD,MAAR,CAAe31B,KAAf,EAAsBo4C,KAAtB;MACA9xC,GAAG,CAACrE,GAAJ,CAAQjC,KAAR,EAAeo4C,KAAf;IACD,CAXmB;;IAYpBv1C,IAAI,CAAC7C,KAAD,EAAQ;MACVwyB,OAAO,CAACsD,SAAR,CAAkB91B,KAAlB,EAAyBsG,GAAG,CAACxE,GAAJ,CAAQ9B,KAAR,CAAzB;MACAsG,GAAG,CAACtD,MAAJ,CAAWhD,KAAX;IACD,CAfmB;;IAgBpBg+C,YAAY,CAACh+C,KAAD,EAAQ4qE,KAAR,EAAepzD,OAAf,EAAwB;MAClC,MAAM4gC,KAAK,GAAG9xC,GAAG,CAACxE,GAAJ,CAAQ9B,KAAR,CAAd;MACAwyB,OAAO,CAACwD,SAAR,CAAkBh2B,KAAlB,EAAyBo4C,KAAzB,EAAgC5gC,OAAhC;MACA4gC,KAAK,CAAC5gC,OAAN,GAAgBA,OAAhB;IACD,CApBmB;;IAqBpBmF,QAAQ,EAAE;MACR7d,KAAK,EAAE,QADC;MAERy3B,OAAO,EAAE,KAFD;MAGRhc,IAAI,EAAE;QACJ5G,MAAM,EAAE;MADJ,CAHE;MAMRyf,QAAQ,EAAE,IANF;MAORqC,OAAO,EAAE,CAPD;MAQRzH,QAAQ,EAAE,KARF;MASR5I,IAAI,EAAE,EATE;MAURzR,MAAM,EAAE;IAVA,CArBU;IAiCpBmjC,aAAa,EAAE;MACbpjC,KAAK,EAAE;IADM,CAjCK;IAoCpB2F,WAAW,EAAE;MACXuD,WAAW,EAAE,IADF;MAEXE,UAAU,EAAE;IAFD;EApCO,CAAtB;EA0CA,MAAMyyD,WAAW,GAAG;IAClBC,OAAO,CAACruE,KAAD,EAAQ;MACb,IAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;QACjB,OAAO,KAAP;MACD;;MACD,IAAIC,CAAJ,EAAOoD,GAAP;MACA,IAAIyC,CAAC,GAAG,CAAR;MACA,IAAIuX,CAAC,GAAG,CAAR;MACA,IAAIoU,KAAK,GAAG,CAAZ;;MACA,KAAKxxB,CAAC,GAAG,CAAJ,EAAOoD,GAAG,GAAGtD,KAAK,CAACC,MAAxB,EAAgCC,CAAC,GAAGoD,GAApC,EAAyC,EAAEpD,CAA3C,EAA8C;QAC5C,MAAMooB,EAAE,GAAGtoB,KAAK,CAACE,CAAD,CAAL,CAASkoB,OAApB;;QACA,IAAIE,EAAE,IAAIA,EAAE,CAACmtB,QAAH,EAAV,EAAyB;UACvB,MAAMh+B,GAAG,GAAG6Q,EAAE,CAACktB,eAAH,EAAZ;UACAzvC,CAAC,IAAI0R,GAAG,CAAC1R,CAAT;UACAuX,CAAC,IAAI7F,GAAG,CAAC6F,CAAT;UACA,EAAEoU,KAAF;QACD;MACF;;MACD,OAAO;QACL3rB,CAAC,EAAEA,CAAC,GAAG2rB,KADF;QAELpU,CAAC,EAAEA,CAAC,GAAGoU;MAFF,CAAP;IAID,CAtBiB;;IAuBlB9C,OAAO,CAAC5uB,KAAD,EAAQsuE,aAAR,EAAuB;MAC5B,IAAI,CAACtuE,KAAK,CAACC,MAAX,EAAmB;QACjB,OAAO,KAAP;MACD;;MACD,IAAI8F,CAAC,GAAGuoE,aAAa,CAACvoE,CAAtB;MACA,IAAIuX,CAAC,GAAGgxD,aAAa,CAAChxD,CAAtB;MACA,IAAIyQ,WAAW,GAAGvZ,MAAM,CAACyH,iBAAzB;MACA,IAAI/b,CAAJ,EAAOoD,GAAP,EAAYirE,cAAZ;;MACA,KAAKruE,CAAC,GAAG,CAAJ,EAAOoD,GAAG,GAAGtD,KAAK,CAACC,MAAxB,EAAgCC,CAAC,GAAGoD,GAApC,EAAyC,EAAEpD,CAA3C,EAA8C;QAC5C,MAAMooB,EAAE,GAAGtoB,KAAK,CAACE,CAAD,CAAL,CAASkoB,OAApB;;QACA,IAAIE,EAAE,IAAIA,EAAE,CAACmtB,QAAH,EAAV,EAAyB;UACvB,MAAMznB,MAAM,GAAG1F,EAAE,CAAC2F,cAAH,EAAf;UACA,MAAMxrB,CAAC,GAAGmc,qBAAqB,CAAC0vD,aAAD,EAAgBtgD,MAAhB,CAA/B;;UACA,IAAIvrB,CAAC,GAAGsrB,WAAR,EAAqB;YACnBA,WAAW,GAAGtrB,CAAd;YACA8rE,cAAc,GAAGjmD,EAAjB;UACD;QACF;MACF;;MACD,IAAIimD,cAAJ,EAAoB;QAClB,MAAMC,EAAE,GAAGD,cAAc,CAAC/4B,eAAf,EAAX;QACAzvC,CAAC,GAAGyoE,EAAE,CAACzoE,CAAP;QACAuX,CAAC,GAAGkxD,EAAE,CAAClxD,CAAP;MACD;;MACD,OAAO;QACLvX,CADK;QAELuX;MAFK,CAAP;IAID;;EAnDiB,CAApB;;EAqDA,SAASmxD,YAAT,CAAsBznD,IAAtB,EAA4B0nD,MAA5B,EAAoC;IAClC,IAAIA,MAAJ,EAAY;MACV,IAAIxpE,OAAO,CAACwpE,MAAD,CAAX,EAAqB;QACnB5xE,KAAK,CAACC,SAAN,CAAgBmE,IAAhB,CAAqB9D,KAArB,CAA2B4pB,IAA3B,EAAiC0nD,MAAjC;MACD,CAFD,MAEO;QACL1nD,IAAI,CAAC9lB,IAAL,CAAUwtE,MAAV;MACD;IACF;;IACD,OAAO1nD,IAAP;EACD;;EACD,SAAS2nD,aAAT,CAAuBtrE,GAAvB,EAA4B;IAC1B,IAAI,CAAC,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,YAAYurE,MAA3C,KAAsDvrE,GAAG,CAAC8S,OAAJ,CAAY,IAAZ,IAAoB,CAAC,CAA/E,EAAkF;MAChF,OAAO9S,GAAG,CAACgV,KAAJ,CAAU,IAAV,CAAP;IACD;;IACD,OAAOhV,GAAP;EACD;;EACD,SAASwrE,iBAAT,CAA2BhwE,KAA3B,EAAkCuB,IAAlC,EAAwC;IACtC,MAAM;MAACgoB,OAAD;MAAUzS,YAAV;MAAwBC;IAAxB,IAAiCxV,IAAvC;IACA,MAAMgsB,UAAU,GAAGvtB,KAAK,CAAC8vB,cAAN,CAAqBhZ,YAArB,EAAmCyW,UAAtD;IACA,MAAM;MAACwmB,KAAD;MAAQh/B;IAAR,IAAiBwY,UAAU,CAACumB,gBAAX,CAA4B/8B,KAA5B,CAAvB;IACA,OAAO;MACL/W,KADK;MAEL+zC,KAFK;MAGL9F,MAAM,EAAE1gB,UAAU,CAAC2lB,SAAX,CAAqBn8B,KAArB,CAHH;MAIL83B,GAAG,EAAE7uC,KAAK,CAAC+gB,IAAN,CAAW/G,QAAX,CAAoBlD,YAApB,EAAkCiK,IAAlC,CAAuChK,KAAvC,CAJA;MAKLwkD,cAAc,EAAExmD,KALX;MAML8a,OAAO,EAAEtC,UAAU,CAACkjB,UAAX,EANJ;MAOL7B,SAAS,EAAE73B,KAPN;MAQLD,YARK;MASLyS;IATK,CAAP;EAWD;;EACD,SAAS0mD,cAAT,CAAwB7X,OAAxB,EAAiC5gD,OAAjC,EAA0C;IACxC,MAAMqD,GAAG,GAAGu9C,OAAO,CAACp4D,KAAR,CAAc6a,GAA1B;IACA,MAAM;MAACq1D,IAAD;MAAOC,MAAP;MAAe/3B;IAAf,IAAwBggB,OAA9B;IACA,MAAM;MAACiT,QAAD;MAAWD;IAAX,IAAwB5zD,OAA9B;IACA,MAAM44D,QAAQ,GAAGv/C,MAAM,CAACrZ,OAAO,CAAC44D,QAAT,CAAvB;IACA,MAAMtC,SAAS,GAAGj9C,MAAM,CAACrZ,OAAO,CAACs2D,SAAT,CAAxB;IACA,MAAMuC,UAAU,GAAGx/C,MAAM,CAACrZ,OAAO,CAAC64D,UAAT,CAAzB;IACA,MAAMC,cAAc,GAAGl4B,KAAK,CAACh3C,MAA7B;IACA,MAAMmvE,eAAe,GAAGJ,MAAM,CAAC/uE,MAA/B;IACA,MAAMovE,iBAAiB,GAAGN,IAAI,CAAC9uE,MAA/B;IACA,MAAMq0B,OAAO,GAAG7E,SAAS,CAACpZ,OAAO,CAACie,OAAT,CAAzB;IACA,IAAI/S,MAAM,GAAG+S,OAAO,CAAC/S,MAArB;IACA,IAAIrB,KAAK,GAAG,CAAZ;IACA,IAAIovD,kBAAkB,GAAGP,IAAI,CAAC1tE,MAAL,CAAY,CAACqwB,KAAD,EAAQ69C,QAAR,KAAqB79C,KAAK,GAAG69C,QAAQ,CAACC,MAAT,CAAgBvvE,MAAxB,GAAiCsvE,QAAQ,CAACprD,KAAT,CAAelkB,MAAhD,GAAyDsvE,QAAQ,CAACE,KAAT,CAAexvE,MAAzG,EAAiH,CAAjH,CAAzB;IACAqvE,kBAAkB,IAAIrY,OAAO,CAACyY,UAAR,CAAmBzvE,MAAnB,GAA4Bg3D,OAAO,CAAC0Y,SAAR,CAAkB1vE,MAApE;;IACA,IAAIkvE,cAAJ,EAAoB;MAClB5tD,MAAM,IAAI4tD,cAAc,GAAGxC,SAAS,CAACpzD,UAA3B,GACT,CAAC41D,cAAc,GAAG,CAAlB,IAAuB94D,OAAO,CAACu5D,YADtB,GAETv5D,OAAO,CAACw5D,iBAFT;IAGD;;IACD,IAAIP,kBAAJ,EAAwB;MACtB,MAAMQ,cAAc,GAAGz5D,OAAO,CAAC05D,aAAR,GAAwBvwE,IAAI,CAACgC,GAAL,CAASyoE,SAAT,EAAoBgF,QAAQ,CAAC11D,UAA7B,CAAxB,GAAmE01D,QAAQ,CAAC11D,UAAnG;MACAgI,MAAM,IAAI8tD,iBAAiB,GAAGS,cAApB,GACT,CAACR,kBAAkB,GAAGD,iBAAtB,IAA2CJ,QAAQ,CAAC11D,UAD3C,GAET,CAAC+1D,kBAAkB,GAAG,CAAtB,IAA2Bj5D,OAAO,CAAC25D,WAFpC;IAGD;;IACD,IAAIZ,eAAJ,EAAqB;MACnB7tD,MAAM,IAAIlL,OAAO,CAAC45D,eAAR,GACTb,eAAe,GAAGF,UAAU,CAAC31D,UADpB,GAET,CAAC61D,eAAe,GAAG,CAAnB,IAAwB/4D,OAAO,CAAC65D,aAFjC;IAGD;;IACD,IAAIC,YAAY,GAAG,CAAnB;;IACA,MAAMC,YAAY,GAAG,UAAS9rD,IAAT,EAAe;MAClCpE,KAAK,GAAG1gB,IAAI,CAACgC,GAAL,CAAS0e,KAAT,EAAgBxG,GAAG,CAACuG,WAAJ,CAAgBqE,IAAhB,EAAsBpE,KAAtB,GAA8BiwD,YAA9C,CAAR;IACD,CAFD;;IAGAz2D,GAAG,CAAC6G,IAAJ;IACA7G,GAAG,CAACN,IAAJ,GAAWuzD,SAAS,CAAC5sD,MAArB;IACA7K,IAAI,CAAC+hD,OAAO,CAAChgB,KAAT,EAAgBm5B,YAAhB,CAAJ;IACA12D,GAAG,CAACN,IAAJ,GAAW61D,QAAQ,CAAClvD,MAApB;IACA7K,IAAI,CAAC+hD,OAAO,CAACyY,UAAR,CAAmBj9C,MAAnB,CAA0BwkC,OAAO,CAAC0Y,SAAlC,CAAD,EAA+CS,YAA/C,CAAJ;IACAD,YAAY,GAAG95D,OAAO,CAAC05D,aAAR,GAAyB7F,QAAQ,GAAG,CAAX,GAAe7zD,OAAO,CAAC0c,UAAhD,GAA8D,CAA7E;IACA7d,IAAI,CAAC65D,IAAD,EAAQQ,QAAD,IAAc;MACvBr6D,IAAI,CAACq6D,QAAQ,CAACC,MAAV,EAAkBY,YAAlB,CAAJ;MACAl7D,IAAI,CAACq6D,QAAQ,CAACprD,KAAV,EAAiBisD,YAAjB,CAAJ;MACAl7D,IAAI,CAACq6D,QAAQ,CAACE,KAAV,EAAiBW,YAAjB,CAAJ;IACD,CAJG,CAAJ;IAKAD,YAAY,GAAG,CAAf;IACAz2D,GAAG,CAACN,IAAJ,GAAW81D,UAAU,CAACnvD,MAAtB;IACA7K,IAAI,CAAC+hD,OAAO,CAAC+X,MAAT,EAAiBoB,YAAjB,CAAJ;IACA12D,GAAG,CAACiH,OAAJ;IACAT,KAAK,IAAIoU,OAAO,CAACpU,KAAjB;IACA,OAAO;MAACA,KAAD;MAAQqB;IAAR,CAAP;EACD;;EACD,SAAS8uD,eAAT,CAAyBxxE,KAAzB,EAAgCkZ,IAAhC,EAAsC;IACpC,MAAM;MAACuF,CAAD;MAAIiE;IAAJ,IAAcxJ,IAApB;;IACA,IAAIuF,CAAC,GAAGiE,MAAM,GAAG,CAAjB,EAAoB;MAClB,OAAO,KAAP;IACD,CAFD,MAEO,IAAIjE,CAAC,GAAIze,KAAK,CAAC0iB,MAAN,GAAeA,MAAM,GAAG,CAAjC,EAAqC;MAC1C,OAAO,QAAP;IACD;;IACD,OAAO,QAAP;EACD;;EACD,SAAS+uD,mBAAT,CAA6BC,MAA7B,EAAqC1xE,KAArC,EAA4CwX,OAA5C,EAAqD0B,IAArD,EAA2D;IACzD,MAAM;MAAChS,CAAD;MAAIma;IAAJ,IAAanI,IAAnB;IACA,MAAMy4D,KAAK,GAAGn6D,OAAO,CAACo6D,SAAR,GAAoBp6D,OAAO,CAACq6D,YAA1C;;IACA,IAAIH,MAAM,KAAK,MAAX,IAAqBxqE,CAAC,GAAGma,KAAJ,GAAYswD,KAAZ,GAAoB3xE,KAAK,CAACqhB,KAAnD,EAA0D;MACxD,OAAO,IAAP;IACD;;IACD,IAAIqwD,MAAM,KAAK,OAAX,IAAsBxqE,CAAC,GAAGma,KAAJ,GAAYswD,KAAZ,GAAoB,CAA9C,EAAiD;MAC/C,OAAO,IAAP;IACD;EACF;;EACD,SAASG,eAAT,CAAyB9xE,KAAzB,EAAgCwX,OAAhC,EAAyC0B,IAAzC,EAA+C64D,MAA/C,EAAuD;IACrD,MAAM;MAAC7qE,CAAD;MAAIma;IAAJ,IAAanI,IAAnB;IACA,MAAM;MAACmI,KAAK,EAAE2wD,UAAR;MAAoBxjD,SAAS,EAAE;QAACrvB,IAAD;QAAOC;MAAP;IAA/B,IAAgDY,KAAtD;IACA,IAAI0xE,MAAM,GAAG,QAAb;;IACA,IAAIK,MAAM,KAAK,QAAf,EAAyB;MACvBL,MAAM,GAAGxqE,CAAC,IAAI,CAAC/H,IAAI,GAAGC,KAAR,IAAiB,CAAtB,GAA0B,MAA1B,GAAmC,OAA5C;IACD,CAFD,MAEO,IAAI8H,CAAC,IAAIma,KAAK,GAAG,CAAjB,EAAoB;MACzBqwD,MAAM,GAAG,MAAT;IACD,CAFM,MAEA,IAAIxqE,CAAC,IAAI8qE,UAAU,GAAG3wD,KAAK,GAAG,CAA9B,EAAiC;MACtCqwD,MAAM,GAAG,OAAT;IACD;;IACD,IAAID,mBAAmB,CAACC,MAAD,EAAS1xE,KAAT,EAAgBwX,OAAhB,EAAyB0B,IAAzB,CAAvB,EAAuD;MACrDw4D,MAAM,GAAG,QAAT;IACD;;IACD,OAAOA,MAAP;EACD;;EACD,SAASO,kBAAT,CAA4BjyE,KAA5B,EAAmCwX,OAAnC,EAA4C0B,IAA5C,EAAkD;IAChD,MAAM64D,MAAM,GAAG74D,IAAI,CAAC64D,MAAL,IAAev6D,OAAO,CAACu6D,MAAvB,IAAiCP,eAAe,CAACxxE,KAAD,EAAQkZ,IAAR,CAA/D;IACA,OAAO;MACLw4D,MAAM,EAAEx4D,IAAI,CAACw4D,MAAL,IAAel6D,OAAO,CAACk6D,MAAvB,IAAiCI,eAAe,CAAC9xE,KAAD,EAAQwX,OAAR,EAAiB0B,IAAjB,EAAuB64D,MAAvB,CADnD;MAELA;IAFK,CAAP;EAID;;EACD,SAASG,MAAT,CAAgBh5D,IAAhB,EAAsBw4D,MAAtB,EAA8B;IAC5B,IAAI;MAACxqE,CAAD;MAAIma;IAAJ,IAAanI,IAAjB;;IACA,IAAIw4D,MAAM,KAAK,OAAf,EAAwB;MACtBxqE,CAAC,IAAIma,KAAL;IACD,CAFD,MAEO,IAAIqwD,MAAM,KAAK,QAAf,EAAyB;MAC9BxqE,CAAC,IAAKma,KAAK,GAAG,CAAd;IACD;;IACD,OAAOna,CAAP;EACD;;EACD,SAASirE,MAAT,CAAgBj5D,IAAhB,EAAsB64D,MAAtB,EAA8BK,cAA9B,EAA8C;IAC5C,IAAI;MAAC3zD,CAAD;MAAIiE;IAAJ,IAAcxJ,IAAlB;;IACA,IAAI64D,MAAM,KAAK,KAAf,EAAsB;MACpBtzD,CAAC,IAAI2zD,cAAL;IACD,CAFD,MAEO,IAAIL,MAAM,KAAK,QAAf,EAAyB;MAC9BtzD,CAAC,IAAIiE,MAAM,GAAG0vD,cAAd;IACD,CAFM,MAEA;MACL3zD,CAAC,IAAKiE,MAAM,GAAG,CAAf;IACD;;IACD,OAAOjE,CAAP;EACD;;EACD,SAAS4zD,kBAAT,CAA4B76D,OAA5B,EAAqC0B,IAArC,EAA2Co5D,SAA3C,EAAsDtyE,KAAtD,EAA6D;IAC3D,MAAM;MAAC4xE,SAAD;MAAYC,YAAZ;MAA0B/uD;IAA1B,IAA0CtL,OAAhD;IACA,MAAM;MAACk6D,MAAD;MAASK;IAAT,IAAmBO,SAAzB;IACA,MAAMF,cAAc,GAAGR,SAAS,GAAGC,YAAnC;IACA,MAAM;MAAC9qD,OAAD;MAAUG,QAAV;MAAoBF,UAApB;MAAgCC;IAAhC,IAA+C0J,aAAa,CAAC7N,YAAD,CAAlE;IACA,IAAI5b,CAAC,GAAGgrE,MAAM,CAACh5D,IAAD,EAAOw4D,MAAP,CAAd;IACA,MAAMjzD,CAAC,GAAG0zD,MAAM,CAACj5D,IAAD,EAAO64D,MAAP,EAAeK,cAAf,CAAhB;;IACA,IAAIL,MAAM,KAAK,QAAf,EAAyB;MACvB,IAAIL,MAAM,KAAK,MAAf,EAAuB;QACrBxqE,CAAC,IAAIkrE,cAAL;MACD,CAFD,MAEO,IAAIV,MAAM,KAAK,OAAf,EAAwB;QAC7BxqE,CAAC,IAAIkrE,cAAL;MACD;IACF,CAND,MAMO,IAAIV,MAAM,KAAK,MAAf,EAAuB;MAC5BxqE,CAAC,IAAIvG,IAAI,CAACgC,GAAL,CAASokB,OAAT,EAAkBC,UAAlB,IAAgC4qD,SAArC;IACD,CAFM,MAEA,IAAIF,MAAM,KAAK,OAAf,EAAwB;MAC7BxqE,CAAC,IAAIvG,IAAI,CAACgC,GAAL,CAASukB,QAAT,EAAmBD,WAAnB,IAAkC2qD,SAAvC;IACD;;IACD,OAAO;MACL1qE,CAAC,EAAEwZ,WAAW,CAACxZ,CAAD,EAAI,CAAJ,EAAOlH,KAAK,CAACqhB,KAAN,GAAcnI,IAAI,CAACmI,KAA1B,CADT;MAEL5C,CAAC,EAAEiC,WAAW,CAACjC,CAAD,EAAI,CAAJ,EAAOze,KAAK,CAAC0iB,MAAN,GAAexJ,IAAI,CAACwJ,MAA3B;IAFT,CAAP;EAID;;EACD,SAAS6vD,WAAT,CAAqBna,OAArB,EAA8Bt5D,KAA9B,EAAqC0Y,OAArC,EAA8C;IAC5C,MAAMie,OAAO,GAAG7E,SAAS,CAACpZ,OAAO,CAACie,OAAT,CAAzB;IACA,OAAO32B,KAAK,KAAK,QAAV,GACHs5D,OAAO,CAAClxD,CAAR,GAAYkxD,OAAO,CAAC/2C,KAAR,GAAgB,CADzB,GAEHviB,KAAK,KAAK,OAAV,GACEs5D,OAAO,CAAClxD,CAAR,GAAYkxD,OAAO,CAAC/2C,KAApB,GAA4BoU,OAAO,CAACr2B,KADtC,GAEEg5D,OAAO,CAAClxD,CAAR,GAAYuuB,OAAO,CAACt2B,IAJ1B;EAKD;;EACD,SAASqzE,uBAAT,CAAiC/0E,QAAjC,EAA2C;IACzC,OAAOmyE,YAAY,CAAC,EAAD,EAAKE,aAAa,CAACryE,QAAD,CAAlB,CAAnB;EACD;;EACD,SAASg1E,oBAAT,CAA8B1pD,MAA9B,EAAsCqvC,OAAtC,EAA+Csa,YAA/C,EAA6D;IAC3D,OAAOjhD,aAAa,CAAC1I,MAAD,EAAS;MAC3BqvC,OAD2B;MAE3Bsa,YAF2B;MAG3BvyE,IAAI,EAAE;IAHqB,CAAT,CAApB;EAKD;;EACD,SAASwyE,iBAAT,CAA2BvyE,SAA3B,EAAsC8Z,OAAtC,EAA+C;IAC7C,MAAM6B,QAAQ,GAAG7B,OAAO,IAAIA,OAAO,CAAC2V,OAAnB,IAA8B3V,OAAO,CAAC2V,OAAR,CAAgBuoC,OAA9C,IAAyDl+C,OAAO,CAAC2V,OAAR,CAAgBuoC,OAAhB,CAAwBh4D,SAAlG;IACA,OAAO2b,QAAQ,GAAG3b,SAAS,CAAC2b,QAAV,CAAmBA,QAAnB,CAAH,GAAkC3b,SAAjD;EACD;;EACD,MAAMwyE,OAAN,SAAsBl8B,OAAtB,CAA8B;IAC5Bl3C,WAAW,CAACulC,MAAD,EAAS;MAClB;MACA,KAAK8tC,OAAL,GAAe,CAAf;MACA,KAAKrxE,OAAL,GAAe,EAAf;MACA,KAAKsxE,cAAL,GAAsBhzE,SAAtB;MACA,KAAKizE,KAAL,GAAajzE,SAAb;MACA,KAAKkzE,iBAAL,GAAyBlzE,SAAzB;MACA,KAAKmzE,aAAL,GAAqB,EAArB;MACA,KAAKtnC,WAAL,GAAmB7rC,SAAnB;MACA,KAAKqwC,QAAL,GAAgBrwC,SAAhB;MACA,KAAKE,KAAL,GAAa+kC,MAAM,CAAC/kC,KAAP,IAAgB+kC,MAAM,CAACxB,MAApC;MACA,KAAKA,MAAL,GAAc,KAAKvjC,KAAnB;MACA,KAAKwX,OAAL,GAAeutB,MAAM,CAACvtB,OAAtB;MACA,KAAK07D,UAAL,GAAkBpzE,SAAlB;MACA,KAAKs4C,KAAL,GAAat4C,SAAb;MACA,KAAK+wE,UAAL,GAAkB/wE,SAAlB;MACA,KAAKowE,IAAL,GAAYpwE,SAAZ;MACA,KAAKgxE,SAAL,GAAiBhxE,SAAjB;MACA,KAAKqwE,MAAL,GAAcrwE,SAAd;MACA,KAAK4xE,MAAL,GAAc5xE,SAAd;MACA,KAAKiyE,MAAL,GAAcjyE,SAAd;MACA,KAAKoH,CAAL,GAASpH,SAAT;MACA,KAAK2e,CAAL,GAAS3e,SAAT;MACA,KAAK4iB,MAAL,GAAc5iB,SAAd;MACA,KAAKuhB,KAAL,GAAavhB,SAAb;MACA,KAAKqzE,MAAL,GAAcrzE,SAAd;MACA,KAAKszE,MAAL,GAActzE,SAAd;MACA,KAAKuzE,WAAL,GAAmBvzE,SAAnB;MACA,KAAKwzE,gBAAL,GAAwBxzE,SAAxB;MACA,KAAKyzE,eAAL,GAAuBzzE,SAAvB;IACD;;IACDuwC,UAAU,CAAC74B,OAAD,EAAU;MAClB,KAAKA,OAAL,GAAeA,OAAf;MACA,KAAKw7D,iBAAL,GAAyBlzE,SAAzB;MACA,KAAKqwC,QAAL,GAAgBrwC,SAAhB;IACD;;IACD40C,kBAAkB,GAAG;MACnB,MAAMxF,MAAM,GAAG,KAAK8jC,iBAApB;;MACA,IAAI9jC,MAAJ,EAAY;QACV,OAAOA,MAAP;MACD;;MACD,MAAMlvC,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAMwX,OAAO,GAAG,KAAKA,OAAL,CAAaghB,UAAb,CAAwB,KAAKjW,UAAL,EAAxB,CAAhB;MACA,MAAM8C,IAAI,GAAG7N,OAAO,CAACgiC,OAAR,IAAmBx5C,KAAK,CAACwX,OAAN,CAAcqC,SAAjC,IAA8CrC,OAAO,CAACqzB,UAAnE;MACA,MAAMA,UAAU,GAAG,IAAIG,UAAJ,CAAe,KAAKhrC,KAApB,EAA2BqlB,IAA3B,CAAnB;;MACA,IAAIA,IAAI,CAAC4R,UAAT,EAAqB;QACnB,KAAK+7C,iBAAL,GAAyBjhE,MAAM,CAACykB,MAAP,CAAcqU,UAAd,CAAzB;MACD;;MACD,OAAOA,UAAP;IACD;;IACDtoB,UAAU,GAAG;MACX,OAAO,KAAK4tB,QAAL,KACP,KAAKA,QAAL,GAAgBsiC,oBAAoB,CAAC,KAAKzyE,KAAL,CAAWuiB,UAAX,EAAD,EAA0B,IAA1B,EAAgC,KAAK0wD,aAArC,CAD7B,CAAP;IAED;;IACDO,QAAQ,CAACt5D,OAAD,EAAU1C,OAAV,EAAmB;MACzB,MAAM;QAACpX;MAAD,IAAcoX,OAApB;MACA,MAAMi8D,WAAW,GAAGrzE,SAAS,CAACqzE,WAAV,CAAsBl1E,KAAtB,CAA4B,IAA5B,EAAkC,CAAC2b,OAAD,CAAlC,CAApB;MACA,MAAMk+B,KAAK,GAAGh4C,SAAS,CAACg4C,KAAV,CAAgB75C,KAAhB,CAAsB,IAAtB,EAA4B,CAAC2b,OAAD,CAA5B,CAAd;MACA,MAAMw5D,UAAU,GAAGtzE,SAAS,CAACszE,UAAV,CAAqBn1E,KAArB,CAA2B,IAA3B,EAAiC,CAAC2b,OAAD,CAAjC,CAAnB;MACA,IAAIoL,KAAK,GAAG,EAAZ;MACAA,KAAK,GAAGsqD,YAAY,CAACtqD,KAAD,EAAQwqD,aAAa,CAAC2D,WAAD,CAArB,CAApB;MACAnuD,KAAK,GAAGsqD,YAAY,CAACtqD,KAAD,EAAQwqD,aAAa,CAAC13B,KAAD,CAArB,CAApB;MACA9yB,KAAK,GAAGsqD,YAAY,CAACtqD,KAAD,EAAQwqD,aAAa,CAAC4D,UAAD,CAArB,CAApB;MACA,OAAOpuD,KAAP;IACD;;IACDquD,aAAa,CAACjB,YAAD,EAAel7D,OAAf,EAAwB;MACnC,OAAOg7D,uBAAuB,CAACh7D,OAAO,CAACpX,SAAR,CAAkBywE,UAAlB,CAA6BtyE,KAA7B,CAAmC,IAAnC,EAAyC,CAACm0E,YAAD,CAAzC,CAAD,CAA9B;IACD;;IACDkB,OAAO,CAAClB,YAAD,EAAel7D,OAAf,EAAwB;MAC7B,MAAM;QAACpX;MAAD,IAAcoX,OAApB;MACA,MAAMq8D,SAAS,GAAG,EAAlB;MACAx9D,IAAI,CAACq8D,YAAD,EAAgBx4D,OAAD,IAAa;QAC9B,MAAMw2D,QAAQ,GAAG;UACfC,MAAM,EAAE,EADO;UAEfrrD,KAAK,EAAE,EAFQ;UAGfsrD,KAAK,EAAE;QAHQ,CAAjB;QAKA,MAAMkD,MAAM,GAAGnB,iBAAiB,CAACvyE,SAAD,EAAY8Z,OAAZ,CAAhC;QACA01D,YAAY,CAACc,QAAQ,CAACC,MAAV,EAAkBb,aAAa,CAACgE,MAAM,CAACC,WAAP,CAAmB31E,IAAnB,CAAwB,IAAxB,EAA8B8b,OAA9B,CAAD,CAA/B,CAAZ;QACA01D,YAAY,CAACc,QAAQ,CAACprD,KAAV,EAAiBwuD,MAAM,CAAC//B,KAAP,CAAa31C,IAAb,CAAkB,IAAlB,EAAwB8b,OAAxB,CAAjB,CAAZ;QACA01D,YAAY,CAACc,QAAQ,CAACE,KAAV,EAAiBd,aAAa,CAACgE,MAAM,CAACE,UAAP,CAAkB51E,IAAlB,CAAuB,IAAvB,EAA6B8b,OAA7B,CAAD,CAA9B,CAAZ;QACA25D,SAAS,CAACxxE,IAAV,CAAequE,QAAf;MACD,CAXG,CAAJ;MAYA,OAAOmD,SAAP;IACD;;IACDI,YAAY,CAACvB,YAAD,EAAel7D,OAAf,EAAwB;MAClC,OAAOg7D,uBAAuB,CAACh7D,OAAO,CAACpX,SAAR,CAAkB0wE,SAAlB,CAA4BvyE,KAA5B,CAAkC,IAAlC,EAAwC,CAACm0E,YAAD,CAAxC,CAAD,CAA9B;IACD;;IACDwB,SAAS,CAACxB,YAAD,EAAel7D,OAAf,EAAwB;MAC/B,MAAM;QAACpX;MAAD,IAAcoX,OAApB;MACA,MAAM28D,YAAY,GAAG/zE,SAAS,CAAC+zE,YAAV,CAAuB51E,KAAvB,CAA6B,IAA7B,EAAmC,CAACm0E,YAAD,CAAnC,CAArB;MACA,MAAMvC,MAAM,GAAG/vE,SAAS,CAAC+vE,MAAV,CAAiB5xE,KAAjB,CAAuB,IAAvB,EAA6B,CAACm0E,YAAD,CAA7B,CAAf;MACA,MAAM0B,WAAW,GAAGh0E,SAAS,CAACg0E,WAAV,CAAsB71E,KAAtB,CAA4B,IAA5B,EAAkC,CAACm0E,YAAD,CAAlC,CAApB;MACA,IAAIptD,KAAK,GAAG,EAAZ;MACAA,KAAK,GAAGsqD,YAAY,CAACtqD,KAAD,EAAQwqD,aAAa,CAACqE,YAAD,CAArB,CAApB;MACA7uD,KAAK,GAAGsqD,YAAY,CAACtqD,KAAD,EAAQwqD,aAAa,CAACK,MAAD,CAArB,CAApB;MACA7qD,KAAK,GAAGsqD,YAAY,CAACtqD,KAAD,EAAQwqD,aAAa,CAACsE,WAAD,CAArB,CAApB;MACA,OAAO9uD,KAAP;IACD;;IACD+uD,YAAY,CAAC78D,OAAD,EAAU;MACpB,MAAMwyB,MAAM,GAAG,KAAKxoC,OAApB;MACA,MAAMuf,IAAI,GAAG,KAAK/gB,KAAL,CAAW+gB,IAAxB;MACA,MAAMsyD,WAAW,GAAG,EAApB;MACA,MAAMC,gBAAgB,GAAG,EAAzB;MACA,MAAMC,eAAe,GAAG,EAAxB;MACA,IAAIb,YAAY,GAAG,EAAnB;MACA,IAAIrxE,CAAJ,EAAOoD,GAAP;;MACA,KAAKpD,CAAC,GAAG,CAAJ,EAAOoD,GAAG,GAAGulC,MAAM,CAAC5oC,MAAzB,EAAiCC,CAAC,GAAGoD,GAArC,EAA0C,EAAEpD,CAA5C,EAA+C;QAC7CqxE,YAAY,CAACrwE,IAAb,CAAkB2tE,iBAAiB,CAAC,KAAKhwE,KAAN,EAAagqC,MAAM,CAAC3oC,CAAD,CAAnB,CAAnC;MACD;;MACD,IAAImW,OAAO,CAACqa,MAAZ,EAAoB;QAClB6gD,YAAY,GAAGA,YAAY,CAAC7gD,MAAb,CAAoB,CAACtI,OAAD,EAAUxS,KAAV,EAAiBgI,KAAjB,KAA2BvH,OAAO,CAACqa,MAAR,CAAetI,OAAf,EAAwBxS,KAAxB,EAA+BgI,KAA/B,EAAsCgC,IAAtC,CAA/C,CAAf;MACD;;MACD,IAAIvJ,OAAO,CAAC88D,QAAZ,EAAsB;QACpB5B,YAAY,GAAGA,YAAY,CAACp0D,IAAb,CAAkB,CAAC7a,CAAD,EAAIC,CAAJ,KAAU8T,OAAO,CAAC88D,QAAR,CAAiB7wE,CAAjB,EAAoBC,CAApB,EAAuBqd,IAAvB,CAA5B,CAAf;MACD;;MACD1K,IAAI,CAACq8D,YAAD,EAAgBx4D,OAAD,IAAa;QAC9B,MAAM45D,MAAM,GAAGnB,iBAAiB,CAACn7D,OAAO,CAACpX,SAAT,EAAoB8Z,OAApB,CAAhC;QACAm5D,WAAW,CAAChxE,IAAZ,CAAiByxE,MAAM,CAACS,UAAP,CAAkBn2E,IAAlB,CAAuB,IAAvB,EAA6B8b,OAA7B,CAAjB;QACAo5D,gBAAgB,CAACjxE,IAAjB,CAAsByxE,MAAM,CAACU,eAAP,CAAuBp2E,IAAvB,CAA4B,IAA5B,EAAkC8b,OAAlC,CAAtB;QACAq5D,eAAe,CAAClxE,IAAhB,CAAqByxE,MAAM,CAACW,cAAP,CAAsBr2E,IAAtB,CAA2B,IAA3B,EAAiC8b,OAAjC,CAArB;MACD,CALG,CAAJ;MAMA,KAAKm5D,WAAL,GAAmBA,WAAnB;MACA,KAAKC,gBAAL,GAAwBA,gBAAxB;MACA,KAAKC,eAAL,GAAuBA,eAAvB;MACA,KAAKL,UAAL,GAAkBR,YAAlB;MACA,OAAOA,YAAP;IACD;;IACDr9C,MAAM,CAACD,OAAD,EAAUy9B,MAAV,EAAkB;MACtB,MAAMr7C,OAAO,GAAG,KAAKA,OAAL,CAAaghB,UAAb,CAAwB,KAAKjW,UAAL,EAAxB,CAAhB;MACA,MAAMynB,MAAM,GAAG,KAAKxoC,OAApB;MACA,IAAImpC,UAAJ;MACA,IAAI+nC,YAAY,GAAG,EAAnB;;MACA,IAAI,CAAC1oC,MAAM,CAAC5oC,MAAZ,EAAoB;QAClB,IAAI,KAAKyxE,OAAL,KAAiB,CAArB,EAAwB;UACtBloC,UAAU,GAAG;YACXkoC,OAAO,EAAE;UADE,CAAb;QAGD;MACF,CAND,MAMO;QACL,MAAM7kD,QAAQ,GAAGuhD,WAAW,CAAC/3D,OAAO,CAACwW,QAAT,CAAX,CAA8B5vB,IAA9B,CAAmC,IAAnC,EAAyC4rC,MAAzC,EAAiD,KAAK8oC,cAAtD,CAAjB;QACAJ,YAAY,GAAG,KAAK2B,YAAL,CAAkB78D,OAAlB,CAAf;QACA,KAAK4gC,KAAL,GAAa,KAAKo7B,QAAL,CAAcd,YAAd,EAA4Bl7D,OAA5B,CAAb;QACA,KAAKq5D,UAAL,GAAkB,KAAK8C,aAAL,CAAmBjB,YAAnB,EAAiCl7D,OAAjC,CAAlB;QACA,KAAK04D,IAAL,GAAY,KAAK0D,OAAL,CAAalB,YAAb,EAA2Bl7D,OAA3B,CAAZ;QACA,KAAKs5D,SAAL,GAAiB,KAAKmD,YAAL,CAAkBvB,YAAlB,EAAgCl7D,OAAhC,CAAjB;QACA,KAAK24D,MAAL,GAAc,KAAK+D,SAAL,CAAexB,YAAf,EAA6Bl7D,OAA7B,CAAd;QACA,MAAM0B,IAAI,GAAG,KAAK65D,KAAL,GAAa9C,cAAc,CAAC,IAAD,EAAOz4D,OAAP,CAAxC;QACA,MAAMk9D,eAAe,GAAG3iE,MAAM,CAACgB,MAAP,CAAc,EAAd,EAAkBib,QAAlB,EAA4B9U,IAA5B,CAAxB;QACA,MAAMo5D,SAAS,GAAGL,kBAAkB,CAAC,KAAKjyE,KAAN,EAAawX,OAAb,EAAsBk9D,eAAtB,CAApC;QACA,MAAMC,eAAe,GAAGtC,kBAAkB,CAAC76D,OAAD,EAAUk9D,eAAV,EAA2BpC,SAA3B,EAAsC,KAAKtyE,KAA3C,CAA1C;QACA,KAAK0xE,MAAL,GAAcY,SAAS,CAACZ,MAAxB;QACA,KAAKK,MAAL,GAAcO,SAAS,CAACP,MAAxB;QACApnC,UAAU,GAAG;UACXkoC,OAAO,EAAE,CADE;UAEX3rE,CAAC,EAAEytE,eAAe,CAACztE,CAFR;UAGXuX,CAAC,EAAEk2D,eAAe,CAACl2D,CAHR;UAIX4C,KAAK,EAAEnI,IAAI,CAACmI,KAJD;UAKXqB,MAAM,EAAExJ,IAAI,CAACwJ,MALF;UAMXywD,MAAM,EAAEnlD,QAAQ,CAAC9mB,CANN;UAOXksE,MAAM,EAAEplD,QAAQ,CAACvP;QAPN,CAAb;MASD;;MACD,KAAKw0D,aAAL,GAAqBP,YAArB;MACA,KAAKviC,QAAL,GAAgBrwC,SAAhB;;MACA,IAAI6qC,UAAJ,EAAgB;QACd,KAAK+J,kBAAL,GAA0Brf,MAA1B,CAAiC,IAAjC,EAAuCsV,UAAvC;MACD;;MACD,IAAIvV,OAAO,IAAI5d,OAAO,CAACo9D,QAAvB,EAAiC;QAC/Bp9D,OAAO,CAACo9D,QAAR,CAAiBx2E,IAAjB,CAAsB,IAAtB,EAA4B;UAAC4B,KAAK,EAAE,KAAKA,KAAb;UAAoBo4D,OAAO,EAAE,IAA7B;UAAmCvF;QAAnC,CAA5B;MACD;IACF;;IACDgiB,SAAS,CAACC,YAAD,EAAej6D,GAAf,EAAoB3B,IAApB,EAA0B1B,OAA1B,EAAmC;MAC1C,MAAMu9D,aAAa,GAAG,KAAKC,gBAAL,CAAsBF,YAAtB,EAAoC57D,IAApC,EAA0C1B,OAA1C,CAAtB;MACAqD,GAAG,CAAC8I,MAAJ,CAAWoxD,aAAa,CAAC1xB,EAAzB,EAA6B0xB,aAAa,CAACzxB,EAA3C;MACAzoC,GAAG,CAAC8I,MAAJ,CAAWoxD,aAAa,CAACxxB,EAAzB,EAA6BwxB,aAAa,CAACvxB,EAA3C;MACA3oC,GAAG,CAAC8I,MAAJ,CAAWoxD,aAAa,CAACE,EAAzB,EAA6BF,aAAa,CAACG,EAA3C;IACD;;IACDF,gBAAgB,CAACF,YAAD,EAAe57D,IAAf,EAAqB1B,OAArB,EAA8B;MAC5C,MAAM;QAACk6D,MAAD;QAASK;MAAT,IAAmB,IAAzB;MACA,MAAM;QAACH,SAAD;QAAY9uD;MAAZ,IAA4BtL,OAAlC;MACA,MAAM;QAACuP,OAAD;QAAUG,QAAV;QAAoBF,UAApB;QAAgCC;MAAhC,IAA+C0J,aAAa,CAAC7N,YAAD,CAAlE;MACA,MAAM;QAAC5b,CAAC,EAAEiuE,GAAJ;QAAS12D,CAAC,EAAE22D;MAAZ,IAAmBN,YAAzB;MACA,MAAM;QAACzzD,KAAD;QAAQqB;MAAR,IAAkBxJ,IAAxB;MACA,IAAImqC,EAAJ,EAAQE,EAAR,EAAY0xB,EAAZ,EAAgB3xB,EAAhB,EAAoBE,EAApB,EAAwB0xB,EAAxB;;MACA,IAAInD,MAAM,KAAK,QAAf,EAAyB;QACvBvuB,EAAE,GAAG4xB,GAAG,GAAI1yD,MAAM,GAAG,CAArB;;QACA,IAAIgvD,MAAM,KAAK,MAAf,EAAuB;UACrBruB,EAAE,GAAG8xB,GAAL;UACA5xB,EAAE,GAAGF,EAAE,GAAGuuB,SAAV;UACAtuB,EAAE,GAAGE,EAAE,GAAGouB,SAAV;UACAsD,EAAE,GAAG1xB,EAAE,GAAGouB,SAAV;QACD,CALD,MAKO;UACLvuB,EAAE,GAAG8xB,GAAG,GAAG9zD,KAAX;UACAkiC,EAAE,GAAGF,EAAE,GAAGuuB,SAAV;UACAtuB,EAAE,GAAGE,EAAE,GAAGouB,SAAV;UACAsD,EAAE,GAAG1xB,EAAE,GAAGouB,SAAV;QACD;;QACDqD,EAAE,GAAG5xB,EAAL;MACD,CAdD,MAcO;QACL,IAAIquB,MAAM,KAAK,MAAf,EAAuB;UACrBnuB,EAAE,GAAG4xB,GAAG,GAAGx0E,IAAI,CAACgC,GAAL,CAASokB,OAAT,EAAkBC,UAAlB,CAAN,GAAuC4qD,SAA5C;QACD,CAFD,MAEO,IAAIF,MAAM,KAAK,OAAf,EAAwB;UAC7BnuB,EAAE,GAAG4xB,GAAG,GAAG9zD,KAAN,GAAc1gB,IAAI,CAACgC,GAAL,CAASukB,QAAT,EAAmBD,WAAnB,CAAd,GAAgD2qD,SAArD;QACD,CAFM,MAEA;UACLruB,EAAE,GAAG,KAAK4vB,MAAV;QACD;;QACD,IAAIpB,MAAM,KAAK,KAAf,EAAsB;UACpBzuB,EAAE,GAAG8xB,GAAL;UACA5xB,EAAE,GAAGF,EAAE,GAAGsuB,SAAV;UACAvuB,EAAE,GAAGE,EAAE,GAAGquB,SAAV;UACAqD,EAAE,GAAG1xB,EAAE,GAAGquB,SAAV;QACD,CALD,MAKO;UACLtuB,EAAE,GAAG8xB,GAAG,GAAG1yD,MAAX;UACA8gC,EAAE,GAAGF,EAAE,GAAGsuB,SAAV;UACAvuB,EAAE,GAAGE,EAAE,GAAGquB,SAAV;UACAqD,EAAE,GAAG1xB,EAAE,GAAGquB,SAAV;QACD;;QACDsD,EAAE,GAAG5xB,EAAL;MACD;;MACD,OAAO;QAACD,EAAD;QAAKE,EAAL;QAAS0xB,EAAT;QAAa3xB,EAAb;QAAiBE,EAAjB;QAAqB0xB;MAArB,CAAP;IACD;;IACD9vB,SAAS,CAAC7oB,EAAD,EAAK1hB,GAAL,EAAUrD,OAAV,EAAmB;MAC1B,MAAM4gC,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAMh3C,MAAM,GAAGg3C,KAAK,CAACh3C,MAArB;MACA,IAAI0sE,SAAJ,EAAeiD,YAAf,EAA6B1vE,CAA7B;;MACA,IAAID,MAAJ,EAAY;QACV,MAAM2rE,SAAS,GAAGhsC,aAAa,CAACvpB,OAAO,CAACnY,GAAT,EAAc,KAAK6H,CAAnB,EAAsB,KAAKma,KAA3B,CAA/B;QACAkb,EAAE,CAACr1B,CAAH,GAAOqrE,WAAW,CAAC,IAAD,EAAO/6D,OAAO,CAACukC,UAAf,EAA2BvkC,OAA3B,CAAlB;QACAqD,GAAG,CAACsL,SAAJ,GAAgB4mD,SAAS,CAAC5mD,SAAV,CAAoB3O,OAAO,CAACukC,UAA5B,CAAhB;QACAlhC,GAAG,CAACuL,YAAJ,GAAmB,QAAnB;QACA0nD,SAAS,GAAGj9C,MAAM,CAACrZ,OAAO,CAACs2D,SAAT,CAAlB;QACAiD,YAAY,GAAGv5D,OAAO,CAACu5D,YAAvB;QACAl2D,GAAG,CAACqL,SAAJ,GAAgB1O,OAAO,CAAC69D,UAAxB;QACAx6D,GAAG,CAACN,IAAJ,GAAWuzD,SAAS,CAAC5sD,MAArB;;QACA,KAAK7f,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,MAAhB,EAAwB,EAAEC,CAA1B,EAA6B;UAC3BwZ,GAAG,CAACkL,QAAJ,CAAaqyB,KAAK,CAAC/2C,CAAD,CAAlB,EAAuB0rE,SAAS,CAAC7lE,CAAV,CAAYq1B,EAAE,CAACr1B,CAAf,CAAvB,EAA0Cq1B,EAAE,CAAC9d,CAAH,GAAOqvD,SAAS,CAACpzD,UAAV,GAAuB,CAAxE;UACA6hB,EAAE,CAAC9d,CAAH,IAAQqvD,SAAS,CAACpzD,UAAV,GAAuBq2D,YAA/B;;UACA,IAAI1vE,CAAC,GAAG,CAAJ,KAAUD,MAAd,EAAsB;YACpBm7B,EAAE,CAAC9d,CAAH,IAAQjH,OAAO,CAACw5D,iBAAR,GAA4BD,YAApC;UACD;QACF;MACF;IACF;;IACDuE,aAAa,CAACz6D,GAAD,EAAM0hB,EAAN,EAAUl7B,CAAV,EAAa0rE,SAAb,EAAwBv1D,OAAxB,EAAiC;MAC5C,MAAM67D,WAAW,GAAG,KAAKA,WAAL,CAAiBhyE,CAAjB,CAApB;MACA,MAAMmzE,eAAe,GAAG,KAAKlB,gBAAL,CAAsBjyE,CAAtB,CAAxB;MACA,MAAM;QAAC+pE,SAAD;QAAYC,QAAZ;QAAsBn3C;MAAtB,IAAoC1c,OAA1C;MACA,MAAM44D,QAAQ,GAAGv/C,MAAM,CAACrZ,OAAO,CAAC44D,QAAT,CAAvB;MACA,MAAMmF,MAAM,GAAGhD,WAAW,CAAC,IAAD,EAAO,MAAP,EAAe/6D,OAAf,CAA1B;MACA,MAAMg+D,SAAS,GAAGzI,SAAS,CAAC7lE,CAAV,CAAYquE,MAAZ,CAAlB;MACA,MAAME,OAAO,GAAGrK,SAAS,GAAGgF,QAAQ,CAAC11D,UAArB,GAAkC,CAAC01D,QAAQ,CAAC11D,UAAT,GAAsB0wD,SAAvB,IAAoC,CAAtE,GAA0E,CAA1F;MACA,MAAMsK,MAAM,GAAGn5C,EAAE,CAAC9d,CAAH,GAAOg3D,OAAtB;;MACA,IAAIj+D,OAAO,CAAC8zD,aAAZ,EAA2B;QACzB,MAAMkC,WAAW,GAAG;UAClBvqD,MAAM,EAAEtiB,IAAI,CAACC,GAAL,CAASyqE,QAAT,EAAmBD,SAAnB,IAAgC,CADtB;UAElBroD,UAAU,EAAEyxD,eAAe,CAACzxD,UAFV;UAGlBC,QAAQ,EAAEwxD,eAAe,CAACxxD,QAHR;UAIlBe,WAAW,EAAE;QAJK,CAApB;QAMA,MAAM22C,OAAO,GAAGqS,SAAS,CAACpsC,UAAV,CAAqB60C,SAArB,EAAgCnK,QAAhC,IAA4CA,QAAQ,GAAG,CAAvE;QACA,MAAM1Q,OAAO,GAAG+a,MAAM,GAAGtK,SAAS,GAAG,CAArC;QACAvwD,GAAG,CAAC8K,WAAJ,GAAkBnO,OAAO,CAACm+D,kBAA1B;QACA96D,GAAG,CAACqL,SAAJ,GAAgB1O,OAAO,CAACm+D,kBAAxB;QACAhzD,SAAS,CAAC9H,GAAD,EAAM2yD,WAAN,EAAmB9S,OAAnB,EAA4BC,OAA5B,CAAT;QACA9/C,GAAG,CAAC8K,WAAJ,GAAkB0tD,WAAW,CAACt5D,WAA9B;QACAc,GAAG,CAACqL,SAAJ,GAAgBmtD,WAAW,CAACv5D,eAA5B;QACA6I,SAAS,CAAC9H,GAAD,EAAM2yD,WAAN,EAAmB9S,OAAnB,EAA4BC,OAA5B,CAAT;MACD,CAfD,MAeO;QACL9/C,GAAG,CAAC+K,SAAJ,GAAgBytD,WAAW,CAACtvD,WAAZ,IAA2B,CAA3C;QACAlJ,GAAG,CAAC8K,WAAJ,GAAkB0tD,WAAW,CAACt5D,WAA9B;QACAc,GAAG,CAACmqC,WAAJ,CAAgBquB,WAAW,CAACjvC,UAAZ,IAA0B,EAA1C;QACAvpB,GAAG,CAACoqC,cAAJ,GAAqBouB,WAAW,CAAChvC,gBAAZ,IAAgC,CAArD;QACA,MAAMuxC,MAAM,GAAG7I,SAAS,CAACpsC,UAAV,CAAqB60C,SAArB,EAAgCnK,QAAQ,GAAGn3C,UAA3C,CAAf;QACA,MAAM2hD,MAAM,GAAG9I,SAAS,CAACpsC,UAAV,CAAqBosC,SAAS,CAACrsC,KAAV,CAAgB80C,SAAhB,EAA2B,CAA3B,CAArB,EAAoDnK,QAAQ,GAAGn3C,UAAX,GAAwB,CAA5E,CAAf;QACA,MAAMoqC,YAAY,GAAG3tC,aAAa,CAAC0iD,WAAW,CAAC/U,YAAb,CAAlC;;QACA,IAAIvsD,MAAM,CAAC2H,MAAP,CAAc4kD,YAAd,EAA4BtV,IAA5B,CAAiC5kD,CAAC,IAAIA,CAAC,KAAK,CAA5C,CAAJ,EAAoD;UAClDyW,GAAG,CAACwI,SAAJ;UACAxI,GAAG,CAACqL,SAAJ,GAAgB1O,OAAO,CAACm+D,kBAAxB;UACA7uD,kBAAkB,CAACjM,GAAD,EAAM;YACtB3T,CAAC,EAAE0uE,MADmB;YAEtBn3D,CAAC,EAAEi3D,MAFmB;YAGtB1vE,CAAC,EAAEqlE,QAHmB;YAItBtmE,CAAC,EAAEqmE,SAJmB;YAKtBnoD,MAAM,EAAEq7C;UALc,CAAN,CAAlB;UAOAzjD,GAAG,CAACiJ,IAAJ;UACAjJ,GAAG,CAACmJ,MAAJ;UACAnJ,GAAG,CAACqL,SAAJ,GAAgBmtD,WAAW,CAACv5D,eAA5B;UACAe,GAAG,CAACwI,SAAJ;UACAyD,kBAAkB,CAACjM,GAAD,EAAM;YACtB3T,CAAC,EAAE2uE,MADmB;YAEtBp3D,CAAC,EAAEi3D,MAAM,GAAG,CAFU;YAGtB1vE,CAAC,EAAEqlE,QAAQ,GAAG,CAHQ;YAItBtmE,CAAC,EAAEqmE,SAAS,GAAG,CAJO;YAKtBnoD,MAAM,EAAEq7C;UALc,CAAN,CAAlB;UAOAzjD,GAAG,CAACiJ,IAAJ;QACD,CAtBD,MAsBO;UACLjJ,GAAG,CAACqL,SAAJ,GAAgB1O,OAAO,CAACm+D,kBAAxB;UACA96D,GAAG,CAAC8pC,QAAJ,CAAaixB,MAAb,EAAqBF,MAArB,EAA6BrK,QAA7B,EAAuCD,SAAvC;UACAvwD,GAAG,CAACi7D,UAAJ,CAAeF,MAAf,EAAuBF,MAAvB,EAA+BrK,QAA/B,EAAyCD,SAAzC;UACAvwD,GAAG,CAACqL,SAAJ,GAAgBmtD,WAAW,CAACv5D,eAA5B;UACAe,GAAG,CAAC8pC,QAAJ,CAAakxB,MAAb,EAAqBH,MAAM,GAAG,CAA9B,EAAiCrK,QAAQ,GAAG,CAA5C,EAA+CD,SAAS,GAAG,CAA3D;QACD;MACF;;MACDvwD,GAAG,CAACqL,SAAJ,GAAgB,KAAKqtD,eAAL,CAAqBlyE,CAArB,CAAhB;IACD;;IACD00E,QAAQ,CAACx5C,EAAD,EAAK1hB,GAAL,EAAUrD,OAAV,EAAmB;MACzB,MAAM;QAAC04D;MAAD,IAAS,IAAf;MACA,MAAM;QAACiB,WAAD;QAAc6E,SAAd;QAAyB9E,aAAzB;QAAwC9F,SAAxC;QAAmDC,QAAnD;QAA6Dn3C;MAA7D,IAA2E1c,OAAjF;MACA,MAAM44D,QAAQ,GAAGv/C,MAAM,CAACrZ,OAAO,CAAC44D,QAAT,CAAvB;MACA,IAAIa,cAAc,GAAGb,QAAQ,CAAC11D,UAA9B;MACA,IAAIu7D,YAAY,GAAG,CAAnB;MACA,MAAMlJ,SAAS,GAAGhsC,aAAa,CAACvpB,OAAO,CAACnY,GAAT,EAAc,KAAK6H,CAAnB,EAAsB,KAAKma,KAA3B,CAA/B;;MACA,MAAM60D,cAAc,GAAG,UAASzwD,IAAT,EAAe;QACpC5K,GAAG,CAACkL,QAAJ,CAAaN,IAAb,EAAmBsnD,SAAS,CAAC7lE,CAAV,CAAYq1B,EAAE,CAACr1B,CAAH,GAAO+uE,YAAnB,CAAnB,EAAqD15C,EAAE,CAAC9d,CAAH,GAAOwyD,cAAc,GAAG,CAA7E;QACA10C,EAAE,CAAC9d,CAAH,IAAQwyD,cAAc,GAAGE,WAAzB;MACD,CAHD;;MAIA,MAAMgF,uBAAuB,GAAGpJ,SAAS,CAAC5mD,SAAV,CAAoB6vD,SAApB,CAAhC;MACA,IAAItF,QAAJ,EAAc0F,SAAd,EAAyB9wD,KAAzB,EAAgCjkB,CAAhC,EAAmC4Q,CAAnC,EAAsC0E,IAAtC,EAA4CgL,IAA5C;MACA9G,GAAG,CAACsL,SAAJ,GAAgB6vD,SAAhB;MACAn7D,GAAG,CAACuL,YAAJ,GAAmB,QAAnB;MACAvL,GAAG,CAACN,IAAJ,GAAW61D,QAAQ,CAAClvD,MAApB;MACAqb,EAAE,CAACr1B,CAAH,GAAOqrE,WAAW,CAAC,IAAD,EAAO4D,uBAAP,EAAgC3+D,OAAhC,CAAlB;MACAqD,GAAG,CAACqL,SAAJ,GAAgB1O,OAAO,CAAC6+D,SAAxB;MACAhgE,IAAI,CAAC,KAAKw6D,UAAN,EAAkBqF,cAAlB,CAAJ;MACAD,YAAY,GAAG/E,aAAa,IAAIiF,uBAAuB,KAAK,OAA7C,GACXH,SAAS,KAAK,QAAd,GAA0B3K,QAAQ,GAAG,CAAX,GAAen3C,UAAzC,GAAwDm3C,QAAQ,GAAG,CAAX,GAAen3C,UAD5D,GAEX,CAFJ;;MAGA,KAAK7yB,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGu5D,IAAI,CAAC9uE,MAAxB,EAAgCC,CAAC,GAAGsV,IAApC,EAA0C,EAAEtV,CAA5C,EAA+C;QAC7CqvE,QAAQ,GAAGR,IAAI,CAAC7uE,CAAD,CAAf;QACA+0E,SAAS,GAAG,KAAK7C,eAAL,CAAqBlyE,CAArB,CAAZ;QACAwZ,GAAG,CAACqL,SAAJ,GAAgBkwD,SAAhB;QACA//D,IAAI,CAACq6D,QAAQ,CAACC,MAAV,EAAkBuF,cAAlB,CAAJ;QACA5wD,KAAK,GAAGorD,QAAQ,CAACprD,KAAjB;;QACA,IAAI4rD,aAAa,IAAI5rD,KAAK,CAAClkB,MAA3B,EAAmC;UACjC,KAAKk0E,aAAL,CAAmBz6D,GAAnB,EAAwB0hB,EAAxB,EAA4Bl7B,CAA5B,EAA+B0rE,SAA/B,EAA0Cv1D,OAA1C;;UACAy5D,cAAc,GAAGtwE,IAAI,CAACgC,GAAL,CAASytE,QAAQ,CAAC11D,UAAlB,EAA8B0wD,SAA9B,CAAjB;QACD;;QACD,KAAKn5D,CAAC,GAAG,CAAJ,EAAO0P,IAAI,GAAG2D,KAAK,CAAClkB,MAAzB,EAAiC6Q,CAAC,GAAG0P,IAArC,EAA2C,EAAE1P,CAA7C,EAAgD;UAC9CikE,cAAc,CAAC5wD,KAAK,CAACrT,CAAD,CAAN,CAAd;UACAg/D,cAAc,GAAGb,QAAQ,CAAC11D,UAA1B;QACD;;QACDrE,IAAI,CAACq6D,QAAQ,CAACE,KAAV,EAAiBsF,cAAjB,CAAJ;MACD;;MACDD,YAAY,GAAG,CAAf;MACAhF,cAAc,GAAGb,QAAQ,CAAC11D,UAA1B;MACArE,IAAI,CAAC,KAAKy6D,SAAN,EAAiBoF,cAAjB,CAAJ;MACA35C,EAAE,CAAC9d,CAAH,IAAQ0yD,WAAR;IACD;;IACDmF,UAAU,CAAC/5C,EAAD,EAAK1hB,GAAL,EAAUrD,OAAV,EAAmB;MAC3B,MAAM24D,MAAM,GAAG,KAAKA,MAApB;MACA,MAAM/uE,MAAM,GAAG+uE,MAAM,CAAC/uE,MAAtB;MACA,IAAIivE,UAAJ,EAAgBhvE,CAAhB;;MACA,IAAID,MAAJ,EAAY;QACV,MAAM2rE,SAAS,GAAGhsC,aAAa,CAACvpB,OAAO,CAACnY,GAAT,EAAc,KAAK6H,CAAnB,EAAsB,KAAKma,KAA3B,CAA/B;QACAkb,EAAE,CAACr1B,CAAH,GAAOqrE,WAAW,CAAC,IAAD,EAAO/6D,OAAO,CAAC++D,WAAf,EAA4B/+D,OAA5B,CAAlB;QACA+kB,EAAE,CAAC9d,CAAH,IAAQjH,OAAO,CAAC45D,eAAhB;QACAv2D,GAAG,CAACsL,SAAJ,GAAgB4mD,SAAS,CAAC5mD,SAAV,CAAoB3O,OAAO,CAAC++D,WAA5B,CAAhB;QACA17D,GAAG,CAACuL,YAAJ,GAAmB,QAAnB;QACAiqD,UAAU,GAAGx/C,MAAM,CAACrZ,OAAO,CAAC64D,UAAT,CAAnB;QACAx1D,GAAG,CAACqL,SAAJ,GAAgB1O,OAAO,CAACg/D,WAAxB;QACA37D,GAAG,CAACN,IAAJ,GAAW81D,UAAU,CAACnvD,MAAtB;;QACA,KAAK7f,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,MAAhB,EAAwB,EAAEC,CAA1B,EAA6B;UAC3BwZ,GAAG,CAACkL,QAAJ,CAAaoqD,MAAM,CAAC9uE,CAAD,CAAnB,EAAwB0rE,SAAS,CAAC7lE,CAAV,CAAYq1B,EAAE,CAACr1B,CAAf,CAAxB,EAA2Cq1B,EAAE,CAAC9d,CAAH,GAAO4xD,UAAU,CAAC31D,UAAX,GAAwB,CAA1E;UACA6hB,EAAE,CAAC9d,CAAH,IAAQ4xD,UAAU,CAAC31D,UAAX,GAAwBlD,OAAO,CAAC65D,aAAxC;QACD;MACF;IACF;;IACD3sB,cAAc,CAACnoB,EAAD,EAAK1hB,GAAL,EAAU47D,WAAV,EAAuBj/D,OAAvB,EAAgC;MAC5C,MAAM;QAACk6D,MAAD;QAASK;MAAT,IAAmB,IAAzB;MACA,MAAM;QAAC7qE,CAAD;QAAIuX;MAAJ,IAAS8d,EAAf;MACA,MAAM;QAAClb,KAAD;QAAQqB;MAAR,IAAkB+zD,WAAxB;MACA,MAAM;QAAC1vD,OAAD;QAAUG,QAAV;QAAoBF,UAApB;QAAgCC;MAAhC,IAA+C0J,aAAa,CAACnZ,OAAO,CAACsL,YAAT,CAAlE;MACAjI,GAAG,CAACqL,SAAJ,GAAgB1O,OAAO,CAACsC,eAAxB;MACAe,GAAG,CAAC8K,WAAJ,GAAkBnO,OAAO,CAACuC,WAA1B;MACAc,GAAG,CAAC+K,SAAJ,GAAgBpO,OAAO,CAACuM,WAAxB;MACAlJ,GAAG,CAACwI,SAAJ;MACAxI,GAAG,CAAC2I,MAAJ,CAAWtc,CAAC,GAAG6f,OAAf,EAAwBtI,CAAxB;;MACA,IAAIszD,MAAM,KAAK,KAAf,EAAsB;QACpB,KAAK8C,SAAL,CAAet4C,EAAf,EAAmB1hB,GAAnB,EAAwB47D,WAAxB,EAAqCj/D,OAArC;MACD;;MACDqD,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAGma,KAAJ,GAAY6F,QAAvB,EAAiCzI,CAAjC;MACA5D,GAAG,CAAC67D,gBAAJ,CAAqBxvE,CAAC,GAAGma,KAAzB,EAAgC5C,CAAhC,EAAmCvX,CAAC,GAAGma,KAAvC,EAA8C5C,CAAC,GAAGyI,QAAlD;;MACA,IAAI6qD,MAAM,KAAK,QAAX,IAAuBL,MAAM,KAAK,OAAtC,EAA+C;QAC7C,KAAKmD,SAAL,CAAet4C,EAAf,EAAmB1hB,GAAnB,EAAwB47D,WAAxB,EAAqCj/D,OAArC;MACD;;MACDqD,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAGma,KAAf,EAAsB5C,CAAC,GAAGiE,MAAJ,GAAauE,WAAnC;MACApM,GAAG,CAAC67D,gBAAJ,CAAqBxvE,CAAC,GAAGma,KAAzB,EAAgC5C,CAAC,GAAGiE,MAApC,EAA4Cxb,CAAC,GAAGma,KAAJ,GAAY4F,WAAxD,EAAqExI,CAAC,GAAGiE,MAAzE;;MACA,IAAIqvD,MAAM,KAAK,QAAf,EAAyB;QACvB,KAAK8C,SAAL,CAAet4C,EAAf,EAAmB1hB,GAAnB,EAAwB47D,WAAxB,EAAqCj/D,OAArC;MACD;;MACDqD,GAAG,CAAC8I,MAAJ,CAAWzc,CAAC,GAAG8f,UAAf,EAA2BvI,CAAC,GAAGiE,MAA/B;MACA7H,GAAG,CAAC67D,gBAAJ,CAAqBxvE,CAArB,EAAwBuX,CAAC,GAAGiE,MAA5B,EAAoCxb,CAApC,EAAuCuX,CAAC,GAAGiE,MAAJ,GAAasE,UAApD;;MACA,IAAI+qD,MAAM,KAAK,QAAX,IAAuBL,MAAM,KAAK,MAAtC,EAA8C;QAC5C,KAAKmD,SAAL,CAAet4C,EAAf,EAAmB1hB,GAAnB,EAAwB47D,WAAxB,EAAqCj/D,OAArC;MACD;;MACDqD,GAAG,CAAC8I,MAAJ,CAAWzc,CAAX,EAAcuX,CAAC,GAAGsI,OAAlB;MACAlM,GAAG,CAAC67D,gBAAJ,CAAqBxvE,CAArB,EAAwBuX,CAAxB,EAA2BvX,CAAC,GAAG6f,OAA/B,EAAwCtI,CAAxC;MACA5D,GAAG,CAAC0I,SAAJ;MACA1I,GAAG,CAACiJ,IAAJ;;MACA,IAAItM,OAAO,CAACuM,WAAR,GAAsB,CAA1B,EAA6B;QAC3BlJ,GAAG,CAACmJ,MAAJ;MACD;IACF;;IACD2yD,sBAAsB,CAACn/D,OAAD,EAAU;MAC9B,MAAMxX,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAMC,KAAK,GAAG,KAAK0rC,WAAnB;MACA,MAAMirC,KAAK,GAAG32E,KAAK,IAAIA,KAAK,CAACiH,CAA7B;MACA,MAAM2vE,KAAK,GAAG52E,KAAK,IAAIA,KAAK,CAACwe,CAA7B;;MACA,IAAIm4D,KAAK,IAAIC,KAAb,EAAoB;QAClB,MAAM7oD,QAAQ,GAAGuhD,WAAW,CAAC/3D,OAAO,CAACwW,QAAT,CAAX,CAA8B5vB,IAA9B,CAAmC,IAAnC,EAAyC,KAAKoD,OAA9C,EAAuD,KAAKsxE,cAA5D,CAAjB;;QACA,IAAI,CAAC9kD,QAAL,EAAe;UACb;QACD;;QACD,MAAM9U,IAAI,GAAG,KAAK65D,KAAL,GAAa9C,cAAc,CAAC,IAAD,EAAOz4D,OAAP,CAAxC;QACA,MAAMk9D,eAAe,GAAG3iE,MAAM,CAACgB,MAAP,CAAc,EAAd,EAAkBib,QAAlB,EAA4B,KAAK+kD,KAAjC,CAAxB;QACA,MAAMT,SAAS,GAAGL,kBAAkB,CAACjyE,KAAD,EAAQwX,OAAR,EAAiBk9D,eAAjB,CAApC;QACA,MAAMxwD,KAAK,GAAGmuD,kBAAkB,CAAC76D,OAAD,EAAUk9D,eAAV,EAA2BpC,SAA3B,EAAsCtyE,KAAtC,CAAhC;;QACA,IAAI42E,KAAK,CAAC9sC,GAAN,KAAc5lB,KAAK,CAAChd,CAApB,IAAyB2vE,KAAK,CAAC/sC,GAAN,KAAc5lB,KAAK,CAACzF,CAAjD,EAAoD;UAClD,KAAKizD,MAAL,GAAcY,SAAS,CAACZ,MAAxB;UACA,KAAKK,MAAL,GAAcO,SAAS,CAACP,MAAxB;UACA,KAAK1wD,KAAL,GAAanI,IAAI,CAACmI,KAAlB;UACA,KAAKqB,MAAL,GAAcxJ,IAAI,CAACwJ,MAAnB;UACA,KAAKywD,MAAL,GAAcnlD,QAAQ,CAAC9mB,CAAvB;UACA,KAAKksE,MAAL,GAAcplD,QAAQ,CAACvP,CAAvB;;UACA,KAAKi2B,kBAAL,GAA0Brf,MAA1B,CAAiC,IAAjC,EAAuCnR,KAAvC;QACD;MACF;IACF;;IACD5iB,IAAI,CAACuZ,GAAD,EAAM;MACR,MAAMrD,OAAO,GAAG,KAAKA,OAAL,CAAaghB,UAAb,CAAwB,KAAKjW,UAAL,EAAxB,CAAhB;MACA,IAAIswD,OAAO,GAAG,KAAKA,OAAnB;;MACA,IAAI,CAACA,OAAL,EAAc;QACZ;MACD;;MACD,KAAK8D,sBAAL,CAA4Bn/D,OAA5B;;MACA,MAAMi/D,WAAW,GAAG;QAClBp1D,KAAK,EAAE,KAAKA,KADM;QAElBqB,MAAM,EAAE,KAAKA;MAFK,CAApB;MAIA,MAAM6Z,EAAE,GAAG;QACTr1B,CAAC,EAAE,KAAKA,CADC;QAETuX,CAAC,EAAE,KAAKA;MAFC,CAAX;MAIAo0D,OAAO,GAAGlyE,IAAI,CAACge,GAAL,CAASk0D,OAAT,IAAoB,IAApB,GAA2B,CAA3B,GAA+BA,OAAzC;MACA,MAAMp9C,OAAO,GAAG7E,SAAS,CAACpZ,OAAO,CAACie,OAAT,CAAzB;MACA,MAAMqhD,iBAAiB,GAAG,KAAK1+B,KAAL,CAAWh3C,MAAX,IAAqB,KAAKyvE,UAAL,CAAgBzvE,MAArC,IAA+C,KAAK8uE,IAAL,CAAU9uE,MAAzD,IAAmE,KAAK0vE,SAAL,CAAe1vE,MAAlF,IAA4F,KAAK+uE,MAAL,CAAY/uE,MAAlI;;MACA,IAAIoW,OAAO,CAACgiC,OAAR,IAAmBs9B,iBAAvB,EAA0C;QACxCj8D,GAAG,CAAC6G,IAAJ;QACA7G,GAAG,CAACk8D,WAAJ,GAAkBlE,OAAlB;QACA,KAAKnuB,cAAL,CAAoBnoB,EAApB,EAAwB1hB,GAAxB,EAA6B47D,WAA7B,EAA0Cj/D,OAA1C;QACAwpB,qBAAqB,CAACnmB,GAAD,EAAMrD,OAAO,CAACo2D,aAAd,CAArB;QACArxC,EAAE,CAAC9d,CAAH,IAAQgX,OAAO,CAACpR,GAAhB;QACA,KAAK+gC,SAAL,CAAe7oB,EAAf,EAAmB1hB,GAAnB,EAAwBrD,OAAxB;QACA,KAAKu+D,QAAL,CAAcx5C,EAAd,EAAkB1hB,GAAlB,EAAuBrD,OAAvB;QACA,KAAK8+D,UAAL,CAAgB/5C,EAAhB,EAAoB1hB,GAApB,EAAyBrD,OAAzB;QACA8pB,oBAAoB,CAACzmB,GAAD,EAAMrD,OAAO,CAACo2D,aAAd,CAApB;QACA/yD,GAAG,CAACiH,OAAJ;MACD;IACF;;IACD2wC,iBAAiB,GAAG;MAClB,OAAO,KAAKjxD,OAAL,IAAgB,EAAvB;IACD;;IACDkxD,iBAAiB,CAACC,cAAD,EAAiB8c,aAAjB,EAAgC;MAC/C,MAAM7c,UAAU,GAAG,KAAKpxD,OAAxB;MACA,MAAMwoC,MAAM,GAAG2oB,cAAc,CAACrsD,GAAf,CAAmB,SAA2B;QAAA,IAA1B;UAACwQ,YAAD;UAAeC;QAAf,CAA0B;QAC3D,MAAM6Y,IAAI,GAAG,KAAK5vB,KAAL,CAAW8vB,cAAX,CAA0BhZ,YAA1B,CAAb;;QACA,IAAI,CAAC8Y,IAAL,EAAW;UACT,MAAM,IAAI0J,KAAJ,CAAU,oCAAoCxiB,YAA9C,CAAN;QACD;;QACD,OAAO;UACLA,YADK;UAELyS,OAAO,EAAEqG,IAAI,CAAC7O,IAAL,CAAUhK,KAAV,CAFJ;UAGLA;QAHK,CAAP;MAKD,CAVc,CAAf;MAWA,MAAMqe,OAAO,GAAG,CAAC5e,cAAc,CAACo8C,UAAD,EAAa5oB,MAAb,CAA/B;;MACA,MAAMgtC,eAAe,GAAG,KAAKC,gBAAL,CAAsBjtC,MAAtB,EAA8BylC,aAA9B,CAAxB;;MACA,IAAIr6C,OAAO,IAAI4hD,eAAf,EAAgC;QAC9B,KAAKx1E,OAAL,GAAewoC,MAAf;QACA,KAAK8oC,cAAL,GAAsBrD,aAAtB;QACA,KAAKyH,mBAAL,GAA2B,IAA3B;QACA,KAAK7hD,MAAL,CAAY,IAAZ;MACD;IACF;;IACD+4C,WAAW,CAACvqE,CAAD,EAAIgvD,MAAJ,EAAgC;MAAA,IAApB1F,WAAoB,uEAAN,IAAM;;MACzC,IAAI0F,MAAM,IAAI,KAAKqkB,mBAAnB,EAAwC;QACtC,OAAO,KAAP;MACD;;MACD,KAAKA,mBAAL,GAA2B,KAA3B;MACA,MAAM1/D,OAAO,GAAG,KAAKA,OAArB;MACA,MAAMo7C,UAAU,GAAG,KAAKpxD,OAAL,IAAgB,EAAnC;;MACA,MAAMwoC,MAAM,GAAG,KAAKmpB,kBAAL,CAAwBtvD,CAAxB,EAA2B+uD,UAA3B,EAAuCC,MAAvC,EAA+C1F,WAA/C,CAAf;;MACA,MAAM6pB,eAAe,GAAG,KAAKC,gBAAL,CAAsBjtC,MAAtB,EAA8BnmC,CAA9B,CAAxB;;MACA,MAAMuxB,OAAO,GAAGy9B,MAAM,IAAI,CAACr8C,cAAc,CAACwzB,MAAD,EAAS4oB,UAAT,CAAzB,IAAiDokB,eAAjE;;MACA,IAAI5hD,OAAJ,EAAa;QACX,KAAK5zB,OAAL,GAAewoC,MAAf;;QACA,IAAIxyB,OAAO,CAACgiC,OAAR,IAAmBhiC,OAAO,CAACo9D,QAA/B,EAAyC;UACvC,KAAK9B,cAAL,GAAsB;YACpB5rE,CAAC,EAAErD,CAAC,CAACqD,CADe;YAEpBuX,CAAC,EAAE5a,CAAC,CAAC4a;UAFe,CAAtB;UAIA,KAAK4W,MAAL,CAAY,IAAZ,EAAkBw9B,MAAlB;QACD;MACF;;MACD,OAAOz9B,OAAP;IACD;;IACD+9B,kBAAkB,CAACtvD,CAAD,EAAI+uD,UAAJ,EAAgBC,MAAhB,EAAwB1F,WAAxB,EAAqC;MACrD,MAAM31C,OAAO,GAAG,KAAKA,OAArB;;MACA,IAAI3T,CAAC,CAAC1D,IAAF,KAAW,UAAf,EAA2B;QACzB,OAAO,EAAP;MACD;;MACD,IAAI,CAACgtD,WAAL,EAAkB;QAChB,OAAOyF,UAAP;MACD;;MACD,MAAM5oB,MAAM,GAAG,KAAKhqC,KAAL,CAAWyxD,yBAAX,CAAqC5tD,CAArC,EAAwC2T,OAAO,CAAC0D,IAAhD,EAAsD1D,OAAtD,EAA+Dq7C,MAA/D,CAAf;;MACA,IAAIr7C,OAAO,CAACjB,OAAZ,EAAqB;QACnByzB,MAAM,CAACzzB,OAAP;MACD;;MACD,OAAOyzB,MAAP;IACD;;IACDitC,gBAAgB,CAACjtC,MAAD,EAASnmC,CAAT,EAAY;MAC1B,MAAM;QAACsvE,MAAD;QAASC,MAAT;QAAiB57D;MAAjB,IAA4B,IAAlC;MACA,MAAMwW,QAAQ,GAAGuhD,WAAW,CAAC/3D,OAAO,CAACwW,QAAT,CAAX,CAA8B5vB,IAA9B,CAAmC,IAAnC,EAAyC4rC,MAAzC,EAAiDnmC,CAAjD,CAAjB;MACA,OAAOmqB,QAAQ,KAAK,KAAb,KAAuBmlD,MAAM,KAAKnlD,QAAQ,CAAC9mB,CAApB,IAAyBksE,MAAM,KAAKplD,QAAQ,CAACvP,CAApE,CAAP;IACD;;EAhhB2B;;EAkhB9Bm0D,OAAO,CAACrD,WAAR,GAAsBA,WAAtB;EACA,IAAI4H,cAAc,GAAG;IACnB9hE,EAAE,EAAE,SADe;IAEnBq5D,QAAQ,EAAEkE,OAFS;IAGnBrD,WAHmB;;IAInB6H,SAAS,CAACp3E,KAAD,EAAQ4qE,KAAR,EAAepzD,OAAf,EAAwB;MAC/B,IAAIA,OAAJ,EAAa;QACXxX,KAAK,CAACo4D,OAAN,GAAgB,IAAIwa,OAAJ,CAAY;UAAC5yE,KAAD;UAAQwX;QAAR,CAAZ,CAAhB;MACD;IACF,CARkB;;IASnBwmC,YAAY,CAACh+C,KAAD,EAAQ4qE,KAAR,EAAepzD,OAAf,EAAwB;MAClC,IAAIxX,KAAK,CAACo4D,OAAV,EAAmB;QACjBp4D,KAAK,CAACo4D,OAAN,CAAc/nB,UAAd,CAAyB74B,OAAzB;MACD;IACF,CAbkB;;IAcnBi6B,KAAK,CAACzxC,KAAD,EAAQ4qE,KAAR,EAAepzD,OAAf,EAAwB;MAC3B,IAAIxX,KAAK,CAACo4D,OAAV,EAAmB;QACjBp4D,KAAK,CAACo4D,OAAN,CAAc/nB,UAAd,CAAyB74B,OAAzB;MACD;IACF,CAlBkB;;IAmBnB6/D,SAAS,CAACr3E,KAAD,EAAQ;MACf,MAAMo4D,OAAO,GAAGp4D,KAAK,CAACo4D,OAAtB;MACA,MAAMp6D,IAAI,GAAG;QACXo6D;MADW,CAAb;;MAGA,IAAIp4D,KAAK,CAAC0/C,aAAN,CAAoB,mBAApB,EAAyC1hD,IAAzC,MAAmD,KAAvD,EAA8D;QAC5D;MACD;;MACD,IAAIo6D,OAAJ,EAAa;QACXA,OAAO,CAAC92D,IAAR,CAAatB,KAAK,CAAC6a,GAAnB;MACD;;MACD7a,KAAK,CAAC0/C,aAAN,CAAoB,kBAApB,EAAwC1hD,IAAxC;IACD,CA/BkB;;IAgCnB2wE,UAAU,CAAC3uE,KAAD,EAAQhC,IAAR,EAAc;MACtB,IAAIgC,KAAK,CAACo4D,OAAV,EAAmB;QACjB,MAAM7pC,gBAAgB,GAAGvwB,IAAI,CAAC60D,MAA9B;;QACA,IAAI7yD,KAAK,CAACo4D,OAAN,CAAcgW,WAAd,CAA0BpwE,IAAI,CAACmE,KAA/B,EAAsCosB,gBAAtC,EAAwDvwB,IAAI,CAACmvD,WAA7D,CAAJ,EAA+E;UAC7EnvD,IAAI,CAACo3B,OAAL,GAAe,IAAf;QACD;MACF;IACF,CAvCkB;;IAwCnBzY,QAAQ,EAAE;MACR68B,OAAO,EAAE,IADD;MAERo7B,QAAQ,EAAE,IAFF;MAGR5mD,QAAQ,EAAE,SAHF;MAIRlU,eAAe,EAAE,iBAJT;MAKRu7D,UAAU,EAAE,MALJ;MAMRvH,SAAS,EAAE;QACTn6D,MAAM,EAAE;MADC,CANH;MASRo9D,YAAY,EAAE,CATN;MAURC,iBAAiB,EAAE,CAVX;MAWRj1B,UAAU,EAAE,MAXJ;MAYRs6B,SAAS,EAAE,MAZH;MAaRlF,WAAW,EAAE,CAbL;MAcRf,QAAQ,EAAE,EAdF;MAgBR4F,SAAS,EAAE,MAhBH;MAiBRQ,WAAW,EAAE,MAjBL;MAkBRnF,aAAa,EAAE,CAlBP;MAmBRD,eAAe,EAAE,CAnBT;MAoBRf,UAAU,EAAE;QACV18D,MAAM,EAAE;MADE,CApBJ;MAuBR4iE,WAAW,EAAE,MAvBL;MAwBR9gD,OAAO,EAAE,CAxBD;MAyBRo8C,YAAY,EAAE,CAzBN;MA0BRD,SAAS,EAAE,CA1BH;MA2BR9uD,YAAY,EAAE,CA3BN;MA4BRsoD,SAAS,EAAE,CAACvwD,GAAD,EAAMwK,IAAN,KAAeA,IAAI,CAAC+qD,QAAL,CAAcl3D,IA5BhC;MA6BRmyD,QAAQ,EAAE,CAACxwD,GAAD,EAAMwK,IAAN,KAAeA,IAAI,CAAC+qD,QAAL,CAAcl3D,IA7B/B;MA8BRy8D,kBAAkB,EAAE,MA9BZ;MA+BRzE,aAAa,EAAE,IA/BP;MAgCRh9C,UAAU,EAAE,CAhCJ;MAiCRna,WAAW,EAAE,eAjCL;MAkCRgK,WAAW,EAAE,CAlCL;MAmCRlK,SAAS,EAAE;QACTtZ,QAAQ,EAAE,GADD;QAETkpC,MAAM,EAAE;MAFC,CAnCH;MAuCRoB,UAAU,EAAE;QACVL,OAAO,EAAE;UACPrqC,IAAI,EAAE,QADC;UAEPwqC,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,EAAoB,QAApB,EAA8B,QAA9B,EAAwC,QAAxC;QAFL,CADC;QAKVkoC,OAAO,EAAE;UACPppC,MAAM,EAAE,QADD;UAEPlpC,QAAQ,EAAE;QAFH;MALC,CAvCJ;MAiDRH,SAAS,EAAE;QACTqzE,WAAW,EAAEt+D,IADJ;;QAETijC,KAAK,CAACs6B,YAAD,EAAe;UAClB,IAAIA,YAAY,CAACtxE,MAAb,GAAsB,CAA1B,EAA6B;YAC3B,MAAMG,IAAI,GAAGmxE,YAAY,CAAC,CAAD,CAAzB;YACA,MAAM7/B,MAAM,GAAGtxC,IAAI,CAACvB,KAAL,CAAW+gB,IAAX,CAAgB8xB,MAA/B;YACA,MAAMykC,UAAU,GAAGzkC,MAAM,GAAGA,MAAM,CAACzxC,MAAV,GAAmB,CAA5C;;YACA,IAAI,QAAQ,KAAKoW,OAAb,IAAwB,KAAKA,OAAL,CAAa0D,IAAb,KAAsB,SAAlD,EAA6D;cAC3D,OAAO3Z,IAAI,CAACsuB,OAAL,CAAakkB,KAAb,IAAsB,EAA7B;YACD,CAFD,MAEO,IAAIxyC,IAAI,CAACwyC,KAAT,EAAgB;cACrB,OAAOxyC,IAAI,CAACwyC,KAAZ;YACD,CAFM,MAEA,IAAIujC,UAAU,GAAG,CAAb,IAAkB/1E,IAAI,CAACqtC,SAAL,GAAiB0oC,UAAvC,EAAmD;cACxD,OAAOzkC,MAAM,CAACtxC,IAAI,CAACqtC,SAAN,CAAb;YACD;UACF;;UACD,OAAO,EAAP;QACD,CAhBQ;;QAiBT8kC,UAAU,EAAEv+D,IAjBH;QAkBT07D,UAAU,EAAE17D,IAlBH;QAmBT4+D,WAAW,EAAE5+D,IAnBJ;;QAoBT4+B,KAAK,CAACsnB,WAAD,EAAc;UACjB,IAAI,QAAQ,KAAK7jD,OAAb,IAAwB,KAAKA,OAAL,CAAa0D,IAAb,KAAsB,SAAlD,EAA6D;YAC3D,OAAOmgD,WAAW,CAACtnB,KAAZ,GAAoB,IAApB,GAA2BsnB,WAAW,CAACE,cAAvC,IAAyDF,WAAW,CAACE,cAA5E;UACD;;UACD,IAAIxnB,KAAK,GAAGsnB,WAAW,CAACxrC,OAAZ,CAAoBkkB,KAApB,IAA6B,EAAzC;;UACA,IAAIA,KAAJ,EAAW;YACTA,KAAK,IAAI,IAAT;UACD;;UACD,MAAMh/B,KAAK,GAAGsmD,WAAW,CAACE,cAA1B;;UACA,IAAI,CAACjmD,aAAa,CAACP,KAAD,CAAlB,EAA2B;YACzBg/B,KAAK,IAAIh/B,KAAT;UACD;;UACD,OAAOg/B,KAAP;QACD,CAjCQ;;QAkCTwgC,UAAU,CAAClZ,WAAD,EAAc;UACtB,MAAMzrC,IAAI,GAAGyrC,WAAW,CAACr7D,KAAZ,CAAkB8vB,cAAlB,CAAiCurC,WAAW,CAACvkD,YAA7C,CAAb;UACA,MAAMU,OAAO,GAAGoY,IAAI,CAACrC,UAAL,CAAgB/D,QAAhB,CAAyB6xC,WAAW,CAACzsB,SAArC,CAAhB;UACA,OAAO;YACL70B,WAAW,EAAEvC,OAAO,CAACuC,WADhB;YAELD,eAAe,EAAEtC,OAAO,CAACsC,eAFpB;YAGLiK,WAAW,EAAEvM,OAAO,CAACuM,WAHhB;YAILqgB,UAAU,EAAE5sB,OAAO,CAAC4sB,UAJf;YAKLC,gBAAgB,EAAE7sB,OAAO,CAAC6sB,gBALrB;YAMLi6B,YAAY,EAAE;UANT,CAAP;QAQD,CA7CQ;;QA8CTmW,cAAc,GAAG;UACf,OAAO,KAAKj9D,OAAL,CAAa6+D,SAApB;QACD,CAhDQ;;QAiDT7B,eAAe,CAACnZ,WAAD,EAAc;UAC3B,MAAMzrC,IAAI,GAAGyrC,WAAW,CAACr7D,KAAZ,CAAkB8vB,cAAlB,CAAiCurC,WAAW,CAACvkD,YAA7C,CAAb;UACA,MAAMU,OAAO,GAAGoY,IAAI,CAACrC,UAAL,CAAgB/D,QAAhB,CAAyB6xC,WAAW,CAACzsB,SAArC,CAAhB;UACA,OAAO;YACL7rB,UAAU,EAAEvL,OAAO,CAACuL,UADf;YAELC,QAAQ,EAAExL,OAAO,CAACwL;UAFb,CAAP;QAID,CAxDQ;;QAyDTgxD,UAAU,EAAE7+D,IAzDH;QA0DT27D,SAAS,EAAE37D,IA1DF;QA2DTg/D,YAAY,EAAEh/D,IA3DL;QA4DTg7D,MAAM,EAAEh7D,IA5DC;QA6DTi/D,WAAW,EAAEj/D;MA7DJ;IAjDH,CAxCS;IAyJnB2hC,aAAa,EAAE;MACbs5B,QAAQ,EAAE,MADG;MAEbC,UAAU,EAAE,MAFC;MAGbvC,SAAS,EAAE;IAHE,CAzJI;IA8JnBz0D,WAAW,EAAE;MACXuD,WAAW,EAAGX,IAAD,IAAUA,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,UAA9B,IAA4CA,IAAI,KAAK,UADjE;MAEXa,UAAU,EAAE,KAFD;MAGX1c,SAAS,EAAE;QACTwc,WAAW,EAAE,KADJ;QAETE,UAAU,EAAE;MAFH,CAHA;MAOXjD,SAAS,EAAE;QACTkD,SAAS,EAAE;MADF,CAPA;MAUX8tB,UAAU,EAAE;QACV9tB,SAAS,EAAE;MADD;IAVD,CA9JM;IA4KnBsuC,sBAAsB,EAAE,CAAC,aAAD;EA5KL,CAArB;EA+KA,IAAI7vC,OAAO,GAAG,aAAazJ,MAAM,CAACykB,MAAP,CAAc;IACzCgO,SAAS,EAAE,IAD8B;IAEzC+yC,UAAU,EAAEpQ,iBAF6B;IAGzCqQ,MAAM,EAAE9M,aAHiC;IAIzCe,MAAM,EAAEgD,aAJiC;IAKzCgJ,QAAQ,EAAEnI,eAL+B;IAMzCT,KAAK,EAAEO,YANkC;IAOzCwD,OAAO,EAAEuE;EAPgC,CAAd,CAA3B;;EAUA,MAAMO,WAAW,GAAG,CAAC7kC,MAAD,EAAShE,GAAT,EAAc93B,KAAd,EAAqB4gE,WAArB,KAAqC;IACvD,IAAI,OAAO9oC,GAAP,KAAe,QAAnB,EAA6B;MAC3B93B,KAAK,GAAG87B,MAAM,CAACxwC,IAAP,CAAYwsC,GAAZ,IAAmB,CAA3B;MACA8oC,WAAW,CAAChP,OAAZ,CAAoB;QAAC5xD,KAAD;QAAQg9B,KAAK,EAAElF;MAAf,CAApB;IACD,CAHD,MAGO,IAAIrwB,KAAK,CAACqwB,GAAD,CAAT,EAAgB;MACrB93B,KAAK,GAAG,IAAR;IACD;;IACD,OAAOA,KAAP;EACD,CARD;;EASA,SAAS6gE,cAAT,CAAwB/kC,MAAxB,EAAgChE,GAAhC,EAAqC93B,KAArC,EAA4C4gE,WAA5C,EAAyD;IACvD,MAAMh+B,KAAK,GAAG9G,MAAM,CAACv7B,OAAP,CAAeu3B,GAAf,CAAd;;IACA,IAAI8K,KAAK,KAAK,CAAC,CAAf,EAAkB;MAChB,OAAO+9B,WAAW,CAAC7kC,MAAD,EAAShE,GAAT,EAAc93B,KAAd,EAAqB4gE,WAArB,CAAlB;IACD;;IACD,MAAM70C,IAAI,GAAG+P,MAAM,CAACglC,WAAP,CAAmBhpC,GAAnB,CAAb;IACA,OAAO8K,KAAK,KAAK7W,IAAV,GAAiB/rB,KAAjB,GAAyB4iC,KAAhC;EACD;;EACD,MAAM0B,UAAU,GAAG,CAACtkC,KAAD,EAAQpU,GAAR,KAAgBoU,KAAK,KAAK,IAAV,GAAiB,IAAjB,GAAwB2J,WAAW,CAAC/f,IAAI,CAACiE,KAAL,CAAWmS,KAAX,CAAD,EAAoB,CAApB,EAAuBpU,GAAvB,CAAtE;;EACA,MAAMm1E,aAAN,SAA4Bz7B,KAA5B,CAAkC;IAChC78C,WAAW,CAAC6pC,GAAD,EAAM;MACf,MAAMA,GAAN;MACA,KAAK0uC,WAAL,GAAmBj4E,SAAnB;MACA,KAAKk4E,WAAL,GAAmB,CAAnB;MACA,KAAKC,YAAL,GAAoB,EAApB;IACD;;IACDx6B,IAAI,CAACkM,YAAD,EAAe;MACjB,MAAMuuB,KAAK,GAAG,KAAKD,YAAnB;;MACA,IAAIC,KAAK,CAAC92E,MAAV,EAAkB;QAChB,MAAMyxC,MAAM,GAAG,KAAKC,SAAL,EAAf;;QACA,KAAK,MAAM;UAAC/7B,KAAD;UAAQg9B;QAAR,CAAX,IAA6BmkC,KAA7B,EAAoC;UAClC,IAAIrlC,MAAM,CAAC97B,KAAD,CAAN,KAAkBg9B,KAAtB,EAA6B;YAC3BlB,MAAM,CAAC7wB,MAAP,CAAcjL,KAAd,EAAqB,CAArB;UACD;QACF;;QACD,KAAKkhE,YAAL,GAAoB,EAApB;MACD;;MACD,MAAMx6B,IAAN,CAAWkM,YAAX;IACD;;IACDpX,KAAK,CAAC1D,GAAD,EAAM93B,KAAN,EAAa;MAChB,IAAIzB,aAAa,CAACu5B,GAAD,CAAjB,EAAwB;QACtB,OAAO,IAAP;MACD;;MACD,MAAMgE,MAAM,GAAG,KAAKC,SAAL,EAAf;MACA/7B,KAAK,GAAGnB,QAAQ,CAACmB,KAAD,CAAR,IAAmB87B,MAAM,CAAC97B,KAAD,CAAN,KAAkB83B,GAArC,GAA2C93B,KAA3C,GACJ6gE,cAAc,CAAC/kC,MAAD,EAAShE,GAAT,EAAc94B,cAAc,CAACgB,KAAD,EAAQ83B,GAAR,CAA5B,EAA0C,KAAKopC,YAA/C,CADlB;MAEA,OAAO58B,UAAU,CAACtkC,KAAD,EAAQ87B,MAAM,CAACzxC,MAAP,GAAgB,CAAxB,CAAjB;IACD;;IACDk9C,mBAAmB,GAAG;MACpB,MAAM;QAACjR,UAAD;QAAaC;MAAb,IAA2B,KAAKF,aAAL,EAAjC;MACA,IAAI;QAACxsC,GAAD;QAAM+B;MAAN,IAAa,KAAK4wC,SAAL,CAAe,IAAf,CAAjB;;MACA,IAAI,KAAK/7B,OAAL,CAAasqB,MAAb,KAAwB,OAA5B,EAAqC;QACnC,IAAI,CAACuL,UAAL,EAAiB;UACfzsC,GAAG,GAAG,CAAN;QACD;;QACD,IAAI,CAAC0sC,UAAL,EAAiB;UACf3qC,GAAG,GAAG,KAAKmwC,SAAL,GAAiB1xC,MAAjB,GAA0B,CAAhC;QACD;MACF;;MACD,KAAKR,GAAL,GAAWA,GAAX;MACA,KAAK+B,GAAL,GAAWA,GAAX;IACD;;IACD87C,UAAU,GAAG;MACX,MAAM79C,GAAG,GAAG,KAAKA,GAAjB;MACA,MAAM+B,GAAG,GAAG,KAAKA,GAAjB;MACA,MAAMi1C,MAAM,GAAG,KAAKpgC,OAAL,CAAaogC,MAA5B;MACA,MAAMV,KAAK,GAAG,EAAd;MACA,IAAIrE,MAAM,GAAG,KAAKC,SAAL,EAAb;MACAD,MAAM,GAAIjyC,GAAG,KAAK,CAAR,IAAa+B,GAAG,KAAKkwC,MAAM,CAACzxC,MAAP,GAAgB,CAAtC,GAA2CyxC,MAA3C,GAAoDA,MAAM,CAAC10C,KAAP,CAAayC,GAAb,EAAkB+B,GAAG,GAAG,CAAxB,CAA7D;MACA,KAAKq1E,WAAL,GAAmBr3E,IAAI,CAACgC,GAAL,CAASkwC,MAAM,CAACzxC,MAAP,IAAiBw2C,MAAM,GAAG,CAAH,GAAO,CAA9B,CAAT,EAA2C,CAA3C,CAAnB;MACA,KAAKmgC,WAAL,GAAmB,KAAKn3E,GAAL,IAAYg3C,MAAM,GAAG,GAAH,GAAS,CAA3B,CAAnB;;MACA,KAAK,IAAI7iC,KAAK,GAAGnU,GAAjB,EAAsBmU,KAAK,IAAIpS,GAA/B,EAAoCoS,KAAK,EAAzC,EAA6C;QAC3CmiC,KAAK,CAAC70C,IAAN,CAAW;UAAC0S;QAAD,CAAX;MACD;;MACD,OAAOmiC,KAAP;IACD;;IACDlD,gBAAgB,CAACj/B,KAAD,EAAQ;MACtB,MAAM89B,MAAM,GAAG,KAAKC,SAAL,EAAf;;MACA,IAAI/9B,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG89B,MAAM,CAACzxC,MAAjC,EAAyC;QACvC,OAAOyxC,MAAM,CAAC99B,KAAD,CAAb;MACD;;MACD,OAAOA,KAAP;IACD;;IACDihB,SAAS,GAAG;MACV,MAAMA,SAAN;;MACA,IAAI,CAAC,KAAK1D,YAAL,EAAL,EAA0B;QACxB,KAAK1E,cAAL,GAAsB,CAAC,KAAKA,cAA5B;MACD;IACF;;IACDwuB,gBAAgB,CAACrnC,KAAD,EAAQ;MACtB,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;QAC7BA,KAAK,GAAG,KAAKw9B,KAAL,CAAWx9B,KAAX,CAAR;MACD;;MACD,OAAOA,KAAK,KAAK,IAAV,GAAiBu+B,GAAjB,GAAuB,KAAK2O,kBAAL,CAAwB,CAACltC,KAAK,GAAG,KAAKgjE,WAAd,IAA6B,KAAKC,WAA1D,CAA9B;IACD;;IACDv8B,eAAe,CAAC1kC,KAAD,EAAQ;MACrB,MAAMmgC,KAAK,GAAG,KAAKA,KAAnB;;MACA,IAAIngC,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGmgC,KAAK,CAAC91C,MAAN,GAAe,CAAxC,EAA2C;QACzC,OAAO,IAAP;MACD;;MACD,OAAO,KAAKg7C,gBAAL,CAAsBlF,KAAK,CAACngC,KAAD,CAAL,CAAahC,KAAnC,CAAP;IACD;;IACDitC,gBAAgB,CAAC9/B,KAAD,EAAQ;MACtB,OAAOvhB,IAAI,CAACiE,KAAL,CAAW,KAAKmzE,WAAL,GAAmB,KAAK51B,kBAAL,CAAwBjgC,KAAxB,IAAiC,KAAK81D,WAApE,CAAP;IACD;;IACD51B,YAAY,GAAG;MACb,OAAO,KAAK99B,MAAZ;IACD;;EAxF+B;;EA0FlCwzD,aAAa,CAACziE,EAAd,GAAmB,UAAnB;EACAyiE,aAAa,CAACn7D,QAAd,GAAyB;IACvBu6B,KAAK,EAAE;MACLz5C,QAAQ,EAAEq6E,aAAa,CAAC55E,SAAd,CAAwB81C;IAD7B;EADgB,CAAzB;;EAMA,SAASmkC,eAAT,CAAyBC,iBAAzB,EAA4CC,SAA5C,EAAuD;IACrD,MAAMnhC,KAAK,GAAG,EAAd;IACA,MAAMohC,WAAW,GAAG,KAApB;IACA,MAAM;MAACx2C,MAAD;MAAS4hB,IAAT;MAAe9iD,GAAf;MAAoB+B,GAApB;MAAyB41E,SAAzB;MAAoC1lD,KAApC;MAA2C2lD,QAA3C;MAAqDC,SAArD;MAAgEC;IAAhE,IAAiFN,iBAAvF;IACA,MAAM1kB,IAAI,GAAGhQ,IAAI,IAAI,CAArB;IACA,MAAMi1B,SAAS,GAAGH,QAAQ,GAAG,CAA7B;IACA,MAAM;MAAC53E,GAAG,EAAEg4E,IAAN;MAAYj2E,GAAG,EAAEk2E;IAAjB,IAAyBR,SAA/B;IACA,MAAMhrC,UAAU,GAAG,CAAC/3B,aAAa,CAAC1U,GAAD,CAAjC;IACA,MAAM0sC,UAAU,GAAG,CAACh4B,aAAa,CAAC3S,GAAD,CAAjC;IACA,MAAMm2E,YAAY,GAAG,CAACxjE,aAAa,CAACud,KAAD,CAAnC;IACA,MAAMkmD,UAAU,GAAG,CAACF,IAAI,GAAGD,IAAR,KAAiBH,SAAS,GAAG,CAA7B,CAAnB;IACA,IAAI3+B,OAAO,GAAGn8B,OAAO,CAAC,CAACk7D,IAAI,GAAGD,IAAR,IAAgBD,SAAhB,GAA4BjlB,IAA7B,CAAP,GAA4CA,IAA1D;IACA,IAAIrgC,MAAJ,EAAY2lD,OAAZ,EAAqBC,OAArB,EAA8BC,SAA9B;;IACA,IAAIp/B,OAAO,GAAGw+B,WAAV,IAAyB,CAACjrC,UAA1B,IAAwC,CAACC,UAA7C,EAAyD;MACvD,OAAO,CAAC;QAACv4B,KAAK,EAAE6jE;MAAR,CAAD,EAAgB;QAAC7jE,KAAK,EAAE8jE;MAAR,CAAhB,CAAP;IACD;;IACDK,SAAS,GAAGv4E,IAAI,CAAC85C,IAAL,CAAUo+B,IAAI,GAAG/+B,OAAjB,IAA4Bn5C,IAAI,CAACqd,KAAL,CAAW46D,IAAI,GAAG9+B,OAAlB,CAAxC;;IACA,IAAIo/B,SAAS,GAAGP,SAAhB,EAA2B;MACzB7+B,OAAO,GAAGn8B,OAAO,CAACu7D,SAAS,GAAGp/B,OAAZ,GAAsB6+B,SAAtB,GAAkCjlB,IAAnC,CAAP,GAAkDA,IAA5D;IACD;;IACD,IAAI,CAACp+C,aAAa,CAACijE,SAAD,CAAlB,EAA+B;MAC7BllD,MAAM,GAAG1yB,IAAI,CAACod,GAAL,CAAS,EAAT,EAAaw6D,SAAb,CAAT;MACAz+B,OAAO,GAAGn5C,IAAI,CAAC85C,IAAL,CAAUX,OAAO,GAAGzmB,MAApB,IAA8BA,MAAxC;IACD;;IACD,IAAIyO,MAAM,KAAK,OAAf,EAAwB;MACtBk3C,OAAO,GAAGr4E,IAAI,CAACqd,KAAL,CAAW46D,IAAI,GAAG9+B,OAAlB,IAA6BA,OAAvC;MACAm/B,OAAO,GAAGt4E,IAAI,CAAC85C,IAAL,CAAUo+B,IAAI,GAAG/+B,OAAjB,IAA4BA,OAAtC;IACD,CAHD,MAGO;MACLk/B,OAAO,GAAGJ,IAAV;MACAK,OAAO,GAAGJ,IAAV;IACD;;IACD,IAAIxrC,UAAU,IAAIC,UAAd,IAA4BoW,IAA5B,IAAoC9kC,WAAW,CAAC,CAACjc,GAAG,GAAG/B,GAAP,IAAc8iD,IAAf,EAAqB5J,OAAO,GAAG,IAA/B,CAAnD,EAAyF;MACvFo/B,SAAS,GAAGv4E,IAAI,CAACiE,KAAL,CAAWjE,IAAI,CAACC,GAAL,CAAS,CAAC+B,GAAG,GAAG/B,GAAP,IAAck5C,OAAvB,EAAgC0+B,QAAhC,CAAX,CAAZ;MACA1+B,OAAO,GAAG,CAACn3C,GAAG,GAAG/B,GAAP,IAAcs4E,SAAxB;MACAF,OAAO,GAAGp4E,GAAV;MACAq4E,OAAO,GAAGt2E,GAAV;IACD,CALD,MAKO,IAAIm2E,YAAJ,EAAkB;MACvBE,OAAO,GAAG3rC,UAAU,GAAGzsC,GAAH,GAASo4E,OAA7B;MACAC,OAAO,GAAG3rC,UAAU,GAAG3qC,GAAH,GAASs2E,OAA7B;MACAC,SAAS,GAAGrmD,KAAK,GAAG,CAApB;MACAinB,OAAO,GAAG,CAACm/B,OAAO,GAAGD,OAAX,IAAsBE,SAAhC;IACD,CALM,MAKA;MACLA,SAAS,GAAG,CAACD,OAAO,GAAGD,OAAX,IAAsBl/B,OAAlC;;MACA,IAAIj8B,YAAY,CAACq7D,SAAD,EAAYv4E,IAAI,CAACiE,KAAL,CAAWs0E,SAAX,CAAZ,EAAmCp/B,OAAO,GAAG,IAA7C,CAAhB,EAAoE;QAClEo/B,SAAS,GAAGv4E,IAAI,CAACiE,KAAL,CAAWs0E,SAAX,CAAZ;MACD,CAFD,MAEO;QACLA,SAAS,GAAGv4E,IAAI,CAAC85C,IAAL,CAAUy+B,SAAV,CAAZ;MACD;IACF;;IACD,MAAMC,aAAa,GAAGx4E,IAAI,CAACgC,GAAL,CACpB0c,cAAc,CAACy6B,OAAD,CADM,EAEpBz6B,cAAc,CAAC25D,OAAD,CAFM,CAAtB;IAIA3lD,MAAM,GAAG1yB,IAAI,CAACod,GAAL,CAAS,EAAT,EAAazI,aAAa,CAACijE,SAAD,CAAb,GAA2BY,aAA3B,GAA2CZ,SAAxD,CAAT;IACAS,OAAO,GAAGr4E,IAAI,CAACiE,KAAL,CAAWo0E,OAAO,GAAG3lD,MAArB,IAA+BA,MAAzC;IACA4lD,OAAO,GAAGt4E,IAAI,CAACiE,KAAL,CAAWq0E,OAAO,GAAG5lD,MAArB,IAA+BA,MAAzC;IACA,IAAIphB,CAAC,GAAG,CAAR;;IACA,IAAIo7B,UAAJ,EAAgB;MACd,IAAIqrC,aAAa,IAAIM,OAAO,KAAKp4E,GAAjC,EAAsC;QACpCs2C,KAAK,CAAC70C,IAAN,CAAW;UAAC0S,KAAK,EAAEnU;QAAR,CAAX;;QACA,IAAIo4E,OAAO,GAAGp4E,GAAd,EAAmB;UACjBqR,CAAC;QACF;;QACD,IAAI4L,YAAY,CAACld,IAAI,CAACiE,KAAL,CAAW,CAACo0E,OAAO,GAAG/mE,CAAC,GAAG6nC,OAAf,IAA0BzmB,MAArC,IAA+CA,MAAhD,EAAwDzyB,GAAxD,EAA6Dw4E,iBAAiB,CAACx4E,GAAD,EAAMm4E,UAAN,EAAkBX,iBAAlB,CAA9E,CAAhB,EAAqI;UACnInmE,CAAC;QACF;MACF,CARD,MAQO,IAAI+mE,OAAO,GAAGp4E,GAAd,EAAmB;QACxBqR,CAAC;MACF;IACF;;IACD,OAAOA,CAAC,GAAGinE,SAAX,EAAsB,EAAEjnE,CAAxB,EAA2B;MACzBilC,KAAK,CAAC70C,IAAN,CAAW;QAAC0S,KAAK,EAAEpU,IAAI,CAACiE,KAAL,CAAW,CAACo0E,OAAO,GAAG/mE,CAAC,GAAG6nC,OAAf,IAA0BzmB,MAArC,IAA+CA;MAAvD,CAAX;IACD;;IACD,IAAIia,UAAU,IAAIorC,aAAd,IAA+BO,OAAO,KAAKt2E,GAA/C,EAAoD;MAClD,IAAIu0C,KAAK,CAAC91C,MAAN,IAAgByc,YAAY,CAACq5B,KAAK,CAACA,KAAK,CAAC91C,MAAN,GAAe,CAAhB,CAAL,CAAwB2T,KAAzB,EAAgCpS,GAAhC,EAAqCy2E,iBAAiB,CAACz2E,GAAD,EAAMo2E,UAAN,EAAkBX,iBAAlB,CAAtD,CAAhC,EAA6H;QAC3HlhC,KAAK,CAACA,KAAK,CAAC91C,MAAN,GAAe,CAAhB,CAAL,CAAwB2T,KAAxB,GAAgCpS,GAAhC;MACD,CAFD,MAEO;QACLu0C,KAAK,CAAC70C,IAAN,CAAW;UAAC0S,KAAK,EAAEpS;QAAR,CAAX;MACD;IACF,CAND,MAMO,IAAI,CAAC2qC,UAAD,IAAe2rC,OAAO,KAAKt2E,GAA/B,EAAoC;MACzCu0C,KAAK,CAAC70C,IAAN,CAAW;QAAC0S,KAAK,EAAEkkE;MAAR,CAAX;IACD;;IACD,OAAO/hC,KAAP;EACD;;EACD,SAASkiC,iBAAT,CAA2BrkE,KAA3B,EAAkCgkE,UAAlC,SAAyE;IAAA,IAA3B;MAAC1mD,UAAD;MAAagmB;IAAb,CAA2B;IACvE,MAAMn1B,GAAG,GAAGjE,SAAS,CAACo5B,WAAD,CAArB;IACA,MAAM1lC,KAAK,GAAG,CAAC0f,UAAU,GAAG1xB,IAAI,CAAC8iB,GAAL,CAASP,GAAT,CAAH,GAAmBviB,IAAI,CAAC+iB,GAAL,CAASR,GAAT,CAA9B,KAAgD,KAA9D;IACA,MAAM9hB,MAAM,GAAG,OAAO23E,UAAP,GAAoB,CAAC,KAAKhkE,KAAN,EAAa3T,MAAhD;IACA,OAAOT,IAAI,CAACC,GAAL,CAASm4E,UAAU,GAAGpmE,KAAtB,EAA6BvR,MAA7B,CAAP;EACD;;EACD,MAAMi4E,eAAN,SAA8Bh9B,KAA9B,CAAoC;IAClC78C,WAAW,CAAC6pC,GAAD,EAAM;MACf,MAAMA,GAAN;MACA,KAAKrqC,KAAL,GAAac,SAAb;MACA,KAAKb,GAAL,GAAWa,SAAX;MACA,KAAKi4E,WAAL,GAAmBj4E,SAAnB;MACA,KAAKw5E,SAAL,GAAiBx5E,SAAjB;MACA,KAAKk4E,WAAL,GAAmB,CAAnB;IACD;;IACDzlC,KAAK,CAAC1D,GAAD,EAAM93B,KAAN,EAAa;MAChB,IAAIzB,aAAa,CAACu5B,GAAD,CAAjB,EAAwB;QACtB,OAAO,IAAP;MACD;;MACD,IAAI,CAAC,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,YAAYl5B,MAA3C,KAAsD,CAACC,QAAQ,CAAC,CAACi5B,GAAF,CAAnE,EAA2E;QACzE,OAAO,IAAP;MACD;;MACD,OAAO,CAACA,GAAR;IACD;;IACD0qC,sBAAsB,GAAG;MACvB,MAAM;QAACjoD;MAAD,IAAgB,KAAK9Z,OAA3B;MACA,MAAM;QAAC61B,UAAD;QAAaC;MAAb,IAA2B,KAAKF,aAAL,EAAjC;MACA,IAAI;QAACxsC,GAAD;QAAM+B;MAAN,IAAa,IAAjB;;MACA,MAAM62E,MAAM,GAAGp1E,CAAC,IAAKxD,GAAG,GAAGysC,UAAU,GAAGzsC,GAAH,GAASwD,CAA9C;;MACA,MAAMq1E,MAAM,GAAGr1E,CAAC,IAAKzB,GAAG,GAAG2qC,UAAU,GAAG3qC,GAAH,GAASyB,CAA9C;;MACA,IAAIktB,WAAJ,EAAiB;QACf,MAAMooD,OAAO,GAAGh8D,IAAI,CAAC9c,GAAD,CAApB;QACA,MAAM+4E,OAAO,GAAGj8D,IAAI,CAAC/a,GAAD,CAApB;;QACA,IAAI+2E,OAAO,GAAG,CAAV,IAAeC,OAAO,GAAG,CAA7B,EAAgC;UAC9BF,MAAM,CAAC,CAAD,CAAN;QACD,CAFD,MAEO,IAAIC,OAAO,GAAG,CAAV,IAAeC,OAAO,GAAG,CAA7B,EAAgC;UACrCH,MAAM,CAAC,CAAD,CAAN;QACD;MACF;;MACD,IAAI54E,GAAG,KAAK+B,GAAZ,EAAiB;QACf,IAAIi1C,MAAM,GAAG,CAAb;;QACA,IAAIj1C,GAAG,IAAIgT,MAAM,CAACikE,gBAAd,IAAkCh5E,GAAG,IAAI+U,MAAM,CAACkkE,gBAApD,EAAsE;UACpEjiC,MAAM,GAAGj3C,IAAI,CAACge,GAAL,CAAShc,GAAG,GAAG,IAAf,CAAT;QACD;;QACD82E,MAAM,CAAC92E,GAAG,GAAGi1C,MAAP,CAAN;;QACA,IAAI,CAACtmB,WAAL,EAAkB;UAChBkoD,MAAM,CAAC54E,GAAG,GAAGg3C,MAAP,CAAN;QACD;MACF;;MACD,KAAKh3C,GAAL,GAAWA,GAAX;MACA,KAAK+B,GAAL,GAAWA,GAAX;IACD;;IACDm3E,YAAY,GAAG;MACb,MAAM3gC,QAAQ,GAAG,KAAK3hC,OAAL,CAAa0/B,KAA9B;MACA,IAAI;QAACmC,aAAD;QAAgB0gC;MAAhB,IAA4B5gC,QAAhC;MACA,IAAIq/B,QAAJ;;MACA,IAAIuB,QAAJ,EAAc;QACZvB,QAAQ,GAAG73E,IAAI,CAAC85C,IAAL,CAAU,KAAK93C,GAAL,GAAWo3E,QAArB,IAAiCp5E,IAAI,CAACqd,KAAL,CAAW,KAAKpd,GAAL,GAAWm5E,QAAtB,CAAjC,GAAmE,CAA9E;;QACA,IAAIvB,QAAQ,GAAG,IAAf,EAAqB;UACnBngE,OAAO,CAACC,IAAR,CAAc,UAAS,KAAKjD,EAAG,oBAAmB0kE,QAAS,kCAAiCvB,QAAS,2BAArG;UACAA,QAAQ,GAAG,IAAX;QACD;MACF,CAND,MAMO;QACLA,QAAQ,GAAG,KAAKwB,gBAAL,EAAX;QACA3gC,aAAa,GAAGA,aAAa,IAAI,EAAjC;MACD;;MACD,IAAIA,aAAJ,EAAmB;QACjBm/B,QAAQ,GAAG73E,IAAI,CAACC,GAAL,CAASy4C,aAAT,EAAwBm/B,QAAxB,CAAX;MACD;;MACD,OAAOA,QAAP;IACD;;IACDwB,gBAAgB,GAAG;MACjB,OAAOrkE,MAAM,CAACyH,iBAAd;IACD;;IACDqhC,UAAU,GAAG;MACX,MAAMp5B,IAAI,GAAG,KAAK7N,OAAlB;MACA,MAAM2hC,QAAQ,GAAG9zB,IAAI,CAAC6xB,KAAtB;MACA,IAAIshC,QAAQ,GAAG,KAAKsB,YAAL,EAAf;MACAtB,QAAQ,GAAG73E,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAY61E,QAAZ,CAAX;MACA,MAAMyB,uBAAuB,GAAG;QAC9BzB,QAD8B;QAE9B12C,MAAM,EAAEzc,IAAI,CAACyc,MAFiB;QAG9BlhC,GAAG,EAAEykB,IAAI,CAACzkB,GAHoB;QAI9B+B,GAAG,EAAE0iB,IAAI,CAAC1iB,GAJoB;QAK9B41E,SAAS,EAAEp/B,QAAQ,CAACo/B,SALU;QAM9B70B,IAAI,EAAEvK,QAAQ,CAAC4gC,QANe;QAO9BlnD,KAAK,EAAEsmB,QAAQ,CAACtmB,KAPc;QAQ9B4lD,SAAS,EAAE,KAAKjzB,UAAL,EARmB;QAS9BnzB,UAAU,EAAE,KAAKC,YAAL,EATkB;QAU9B+lB,WAAW,EAAEc,QAAQ,CAACd,WAAT,IAAwB,CAVP;QAW9BqgC,aAAa,EAAEv/B,QAAQ,CAACu/B,aAAT,KAA2B;MAXZ,CAAhC;MAaA,MAAML,SAAS,GAAG,KAAKz7B,MAAL,IAAe,IAAjC;MACA,MAAM1F,KAAK,GAAGihC,eAAe,CAAC8B,uBAAD,EAA0B5B,SAA1B,CAA7B;;MACA,IAAIhzD,IAAI,CAACyc,MAAL,KAAgB,OAApB,EAA6B;QAC3BhjB,kBAAkB,CAACo4B,KAAD,EAAQ,IAAR,EAAc,OAAd,CAAlB;MACD;;MACD,IAAI7xB,IAAI,CAAC9O,OAAT,EAAkB;QAChB2gC,KAAK,CAAC3gC,OAAN;QACA,KAAKvX,KAAL,GAAa,KAAK2D,GAAlB;QACA,KAAK1D,GAAL,GAAW,KAAK2B,GAAhB;MACD,CAJD,MAIO;QACL,KAAK5B,KAAL,GAAa,KAAK4B,GAAlB;QACA,KAAK3B,GAAL,GAAW,KAAK0D,GAAhB;MACD;;MACD,OAAOu0C,KAAP;IACD;;IACDlhB,SAAS,GAAG;MACV,MAAMkhB,KAAK,GAAG,KAAKA,KAAnB;MACA,IAAIl4C,KAAK,GAAG,KAAK4B,GAAjB;MACA,IAAI3B,GAAG,GAAG,KAAK0D,GAAf;MACA,MAAMqzB,SAAN;;MACA,IAAI,KAAKxe,OAAL,CAAaogC,MAAb,IAAuBV,KAAK,CAAC91C,MAAjC,EAAyC;QACvC,MAAMw2C,MAAM,GAAG,CAAC34C,GAAG,GAAGD,KAAP,IAAgB2B,IAAI,CAACgC,GAAL,CAASu0C,KAAK,CAAC91C,MAAN,GAAe,CAAxB,EAA2B,CAA3B,CAAhB,GAAgD,CAA/D;QACApC,KAAK,IAAI44C,MAAT;QACA34C,GAAG,IAAI24C,MAAP;MACD;;MACD,KAAKmgC,WAAL,GAAmB/4E,KAAnB;MACA,KAAKs6E,SAAL,GAAiBr6E,GAAjB;MACA,KAAK+4E,WAAL,GAAmB/4E,GAAG,GAAGD,KAAzB;IACD;;IACDg1C,gBAAgB,CAACj/B,KAAD,EAAQ;MACtB,OAAOqrB,YAAY,CAACrrB,KAAD,EAAQ,KAAK/U,KAAL,CAAWwX,OAAX,CAAmBqoB,MAA3B,EAAmC,KAAKroB,OAAL,CAAa0/B,KAAb,CAAmB5W,MAAtD,CAAnB;IACD;;EArHiC;;EAwHpC,MAAM45C,WAAN,SAA0Bb,eAA1B,CAA0C;IACxC/6B,mBAAmB,GAAG;MACpB,MAAM;QAAC19C,GAAD;QAAM+B;MAAN,IAAa,KAAK4wC,SAAL,CAAe,IAAf,CAAnB;MACA,KAAK3yC,GAAL,GAAW8U,cAAc,CAAC9U,GAAD,CAAd,GAAsBA,GAAtB,GAA4B,CAAvC;MACA,KAAK+B,GAAL,GAAW+S,cAAc,CAAC/S,GAAD,CAAd,GAAsBA,GAAtB,GAA4B,CAAvC;MACA,KAAK42E,sBAAL;IACD;;IACDS,gBAAgB,GAAG;MACjB,MAAM3nD,UAAU,GAAG,KAAKC,YAAL,EAAnB;MACA,MAAMlxB,MAAM,GAAGixB,UAAU,GAAG,KAAKhR,KAAR,GAAgB,KAAKqB,MAA9C;MACA,MAAM21B,WAAW,GAAGp5B,SAAS,CAAC,KAAKzH,OAAL,CAAa0/B,KAAb,CAAmBmB,WAApB,CAA7B;MACA,MAAM1lC,KAAK,GAAG,CAAC0f,UAAU,GAAG1xB,IAAI,CAAC8iB,GAAL,CAAS40B,WAAT,CAAH,GAA2B13C,IAAI,CAAC+iB,GAAL,CAAS20B,WAAT,CAAtC,KAAgE,KAA9E;;MACA,MAAMuJ,QAAQ,GAAG,KAAKE,uBAAL,CAA6B,CAA7B,CAAjB;;MACA,OAAOnhD,IAAI,CAAC85C,IAAL,CAAUr5C,MAAM,GAAGT,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaghD,QAAQ,CAAClnC,UAAT,GAAsB/H,KAAnC,CAAnB,CAAP;IACD;;IACDypC,gBAAgB,CAACrnC,KAAD,EAAQ;MACtB,OAAOA,KAAK,KAAK,IAAV,GAAiBu+B,GAAjB,GAAuB,KAAK2O,kBAAL,CAAwB,CAACltC,KAAK,GAAG,KAAKgjE,WAAd,IAA6B,KAAKC,WAA1D,CAA9B;IACD;;IACDh2B,gBAAgB,CAAC9/B,KAAD,EAAQ;MACtB,OAAO,KAAK61D,WAAL,GAAmB,KAAK51B,kBAAL,CAAwBjgC,KAAxB,IAAiC,KAAK81D,WAAhE;IACD;;EApBuC;;EAsB1CkC,WAAW,CAAC7kE,EAAZ,GAAiB,QAAjB;EACA6kE,WAAW,CAACv9D,QAAZ,GAAuB;IACrBu6B,KAAK,EAAE;MACLz5C,QAAQ,EAAEk6C,KAAK,CAACZ,UAAN,CAAiBC;IADtB;EADc,CAAvB;;EAMA,SAASmjC,OAAT,CAAiBC,OAAjB,EAA0B;IACxB,MAAMlwC,MAAM,GAAGkwC,OAAO,GAAIz5E,IAAI,CAACod,GAAL,CAAS,EAAT,EAAapd,IAAI,CAACqd,KAAL,CAAWP,KAAK,CAAC28D,OAAD,CAAhB,CAAb,CAA1B;IACA,OAAOlwC,MAAM,KAAK,CAAlB;EACD;;EACD,SAASmwC,aAAT,CAAuBjC,iBAAvB,EAA0CC,SAA1C,EAAqD;IACnD,MAAMiC,MAAM,GAAG35E,IAAI,CAACqd,KAAL,CAAWP,KAAK,CAAC46D,SAAS,CAAC11E,GAAX,CAAhB,CAAf;IACA,MAAM43E,cAAc,GAAG55E,IAAI,CAAC85C,IAAL,CAAU49B,SAAS,CAAC11E,GAAV,GAAgBhC,IAAI,CAACod,GAAL,CAAS,EAAT,EAAau8D,MAAb,CAA1B,CAAvB;IACA,MAAMpjC,KAAK,GAAG,EAAd;IACA,IAAIkjC,OAAO,GAAGvkE,eAAe,CAACuiE,iBAAiB,CAACx3E,GAAnB,EAAwBD,IAAI,CAACod,GAAL,CAAS,EAAT,EAAapd,IAAI,CAACqd,KAAL,CAAWP,KAAK,CAAC46D,SAAS,CAACz3E,GAAX,CAAhB,CAAb,CAAxB,CAA7B;IACA,IAAI45E,GAAG,GAAG75E,IAAI,CAACqd,KAAL,CAAWP,KAAK,CAAC28D,OAAD,CAAhB,CAAV;IACA,IAAIK,WAAW,GAAG95E,IAAI,CAACqd,KAAL,CAAWo8D,OAAO,GAAGz5E,IAAI,CAACod,GAAL,CAAS,EAAT,EAAay8D,GAAb,CAArB,CAAlB;IACA,IAAIjC,SAAS,GAAGiC,GAAG,GAAG,CAAN,GAAU75E,IAAI,CAACod,GAAL,CAAS,EAAT,EAAapd,IAAI,CAACge,GAAL,CAAS67D,GAAT,CAAb,CAAV,GAAwC,CAAxD;;IACA,GAAG;MACDtjC,KAAK,CAAC70C,IAAN,CAAW;QAAC0S,KAAK,EAAEqlE,OAAR;QAAiBthC,KAAK,EAAEqhC,OAAO,CAACC,OAAD;MAA/B,CAAX;MACA,EAAEK,WAAF;;MACA,IAAIA,WAAW,KAAK,EAApB,EAAwB;QACtBA,WAAW,GAAG,CAAd;QACA,EAAED,GAAF;QACAjC,SAAS,GAAGiC,GAAG,IAAI,CAAP,GAAW,CAAX,GAAejC,SAA3B;MACD;;MACD6B,OAAO,GAAGz5E,IAAI,CAACiE,KAAL,CAAW61E,WAAW,GAAG95E,IAAI,CAACod,GAAL,CAAS,EAAT,EAAay8D,GAAb,CAAd,GAAkCjC,SAA7C,IAA0DA,SAApE;IACD,CATD,QASSiC,GAAG,GAAGF,MAAN,IAAiBE,GAAG,KAAKF,MAAR,IAAkBG,WAAW,GAAGF,cAT1D;;IAUA,MAAMG,QAAQ,GAAG7kE,eAAe,CAACuiE,iBAAiB,CAACz1E,GAAnB,EAAwBy3E,OAAxB,CAAhC;IACAljC,KAAK,CAAC70C,IAAN,CAAW;MAAC0S,KAAK,EAAE2lE,QAAR;MAAkB5hC,KAAK,EAAEqhC,OAAO,CAACC,OAAD;IAAhC,CAAX;IACA,OAAOljC,KAAP;EACD;;EACD,MAAMyjC,gBAAN,SAA+Bt+B,KAA/B,CAAqC;IACnC78C,WAAW,CAAC6pC,GAAD,EAAM;MACf,MAAMA,GAAN;MACA,KAAKrqC,KAAL,GAAac,SAAb;MACA,KAAKb,GAAL,GAAWa,SAAX;MACA,KAAKi4E,WAAL,GAAmBj4E,SAAnB;MACA,KAAKk4E,WAAL,GAAmB,CAAnB;IACD;;IACDzlC,KAAK,CAAC1D,GAAD,EAAM93B,KAAN,EAAa;MAChB,MAAMhC,KAAK,GAAGskE,eAAe,CAACn7E,SAAhB,CAA0Bq0C,KAA1B,CAAgCh0C,KAAhC,CAAsC,IAAtC,EAA4C,CAACswC,GAAD,EAAM93B,KAAN,CAA5C,CAAd;;MACA,IAAIhC,KAAK,KAAK,CAAd,EAAiB;QACf,KAAK6lE,KAAL,GAAa,IAAb;QACA,OAAO96E,SAAP;MACD;;MACD,OAAO4V,cAAc,CAACX,KAAD,CAAd,IAAyBA,KAAK,GAAG,CAAjC,GAAqCA,KAArC,GAA6C,IAApD;IACD;;IACDupC,mBAAmB,GAAG;MACpB,MAAM;QAAC19C,GAAD;QAAM+B;MAAN,IAAa,KAAK4wC,SAAL,CAAe,IAAf,CAAnB;MACA,KAAK3yC,GAAL,GAAW8U,cAAc,CAAC9U,GAAD,CAAd,GAAsBD,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAY/B,GAAZ,CAAtB,GAAyC,IAApD;MACA,KAAK+B,GAAL,GAAW+S,cAAc,CAAC/S,GAAD,CAAd,GAAsBhC,IAAI,CAACgC,GAAL,CAAS,CAAT,EAAYA,GAAZ,CAAtB,GAAyC,IAApD;;MACA,IAAI,KAAK6U,OAAL,CAAa8Z,WAAjB,EAA8B;QAC5B,KAAKspD,KAAL,GAAa,IAAb;MACD;;MACD,KAAKrB,sBAAL;IACD;;IACDA,sBAAsB,GAAG;MACvB,MAAM;QAAClsC,UAAD;QAAaC;MAAb,IAA2B,KAAKF,aAAL,EAAjC;MACA,IAAIxsC,GAAG,GAAG,KAAKA,GAAf;MACA,IAAI+B,GAAG,GAAG,KAAKA,GAAf;;MACA,MAAM62E,MAAM,GAAGp1E,CAAC,IAAKxD,GAAG,GAAGysC,UAAU,GAAGzsC,GAAH,GAASwD,CAA9C;;MACA,MAAMq1E,MAAM,GAAGr1E,CAAC,IAAKzB,GAAG,GAAG2qC,UAAU,GAAG3qC,GAAH,GAASyB,CAA9C;;MACA,MAAMo2E,GAAG,GAAG,CAACp2E,CAAD,EAAIkB,CAAJ,KAAU3E,IAAI,CAACod,GAAL,CAAS,EAAT,EAAapd,IAAI,CAACqd,KAAL,CAAWP,KAAK,CAACrZ,CAAD,CAAhB,IAAuBkB,CAApC,CAAtB;;MACA,IAAI1E,GAAG,KAAK+B,GAAZ,EAAiB;QACf,IAAI/B,GAAG,IAAI,CAAX,EAAc;UACZ44E,MAAM,CAAC,CAAD,CAAN;UACAC,MAAM,CAAC,EAAD,CAAN;QACD,CAHD,MAGO;UACLD,MAAM,CAACgB,GAAG,CAAC55E,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;UACA64E,MAAM,CAACe,GAAG,CAAC73E,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;QACD;MACF;;MACD,IAAI/B,GAAG,IAAI,CAAX,EAAc;QACZ44E,MAAM,CAACgB,GAAG,CAAC73E,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;MACD;;MACD,IAAIA,GAAG,IAAI,CAAX,EAAc;QACZ82E,MAAM,CAACe,GAAG,CAAC55E,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;MACD;;MACD,IAAI,KAAKg6E,KAAL,IAAc,KAAKh6E,GAAL,KAAa,KAAKw8C,aAAhC,IAAiDx8C,GAAG,KAAK45E,GAAG,CAAC,KAAK55E,GAAN,EAAW,CAAX,CAAhE,EAA+E;QAC7E44E,MAAM,CAACgB,GAAG,CAAC55E,GAAD,EAAM,CAAC,CAAP,CAAJ,CAAN;MACD;;MACD,KAAKA,GAAL,GAAWA,GAAX;MACA,KAAK+B,GAAL,GAAWA,GAAX;IACD;;IACD87C,UAAU,GAAG;MACX,MAAMp5B,IAAI,GAAG,KAAK7N,OAAlB;MACA,MAAM4gE,iBAAiB,GAAG;QACxBx3E,GAAG,EAAE,KAAKs8C,QADc;QAExBv6C,GAAG,EAAE,KAAKs6C;MAFc,CAA1B;MAIA,MAAM/F,KAAK,GAAGmjC,aAAa,CAACjC,iBAAD,EAAoB,IAApB,CAA3B;;MACA,IAAI/yD,IAAI,CAACyc,MAAL,KAAgB,OAApB,EAA6B;QAC3BhjB,kBAAkB,CAACo4B,KAAD,EAAQ,IAAR,EAAc,OAAd,CAAlB;MACD;;MACD,IAAI7xB,IAAI,CAAC9O,OAAT,EAAkB;QAChB2gC,KAAK,CAAC3gC,OAAN;QACA,KAAKvX,KAAL,GAAa,KAAK2D,GAAlB;QACA,KAAK1D,GAAL,GAAW,KAAK2B,GAAhB;MACD,CAJD,MAIO;QACL,KAAK5B,KAAL,GAAa,KAAK4B,GAAlB;QACA,KAAK3B,GAAL,GAAW,KAAK0D,GAAhB;MACD;;MACD,OAAOu0C,KAAP;IACD;;IACDlD,gBAAgB,CAACj/B,KAAD,EAAQ;MACtB,OAAOA,KAAK,KAAKjV,SAAV,GACH,GADG,GAEHsgC,YAAY,CAACrrB,KAAD,EAAQ,KAAK/U,KAAL,CAAWwX,OAAX,CAAmBqoB,MAA3B,EAAmC,KAAKroB,OAAL,CAAa0/B,KAAb,CAAmB5W,MAAtD,CAFhB;IAGD;;IACDtK,SAAS,GAAG;MACV,MAAMh3B,KAAK,GAAG,KAAK4B,GAAnB;MACA,MAAMo1B,SAAN;MACA,KAAK+hD,WAAL,GAAmBt6D,KAAK,CAACze,KAAD,CAAxB;MACA,KAAKg5E,WAAL,GAAmBv6D,KAAK,CAAC,KAAK9a,GAAN,CAAL,GAAkB8a,KAAK,CAACze,KAAD,CAA1C;IACD;;IACDo9C,gBAAgB,CAACrnC,KAAD,EAAQ;MACtB,IAAIA,KAAK,KAAKjV,SAAV,IAAuBiV,KAAK,KAAK,CAArC,EAAwC;QACtCA,KAAK,GAAG,KAAKnU,GAAb;MACD;;MACD,IAAImU,KAAK,KAAK,IAAV,IAAkByJ,KAAK,CAACzJ,KAAD,CAA3B,EAAoC;QAClC,OAAOu+B,GAAP;MACD;;MACD,OAAO,KAAK2O,kBAAL,CAAwBltC,KAAK,KAAK,KAAKnU,GAAf,GAC3B,CAD2B,GAE3B,CAAC6c,KAAK,CAAC1I,KAAD,CAAL,GAAe,KAAKgjE,WAArB,IAAoC,KAAKC,WAFtC,CAAP;IAGD;;IACDh2B,gBAAgB,CAAC9/B,KAAD,EAAQ;MACtB,MAAMggC,OAAO,GAAG,KAAKC,kBAAL,CAAwBjgC,KAAxB,CAAhB;MACA,OAAOvhB,IAAI,CAACod,GAAL,CAAS,EAAT,EAAa,KAAKg6D,WAAL,GAAmB71B,OAAO,GAAG,KAAK81B,WAA/C,CAAP;IACD;;EAlGkC;;EAoGrC2C,gBAAgB,CAACtlE,EAAjB,GAAsB,aAAtB;EACAslE,gBAAgB,CAACh+D,QAAjB,GAA4B;IAC1Bu6B,KAAK,EAAE;MACLz5C,QAAQ,EAAEk6C,KAAK,CAACZ,UAAN,CAAiBW,WADtB;MAELoB,KAAK,EAAE;QACLU,OAAO,EAAE;MADJ;IAFF;EADmB,CAA5B;;EASA,SAASqhC,qBAAT,CAA+Bx1D,IAA/B,EAAqC;IACnC,MAAM8zB,QAAQ,GAAG9zB,IAAI,CAAC6xB,KAAtB;;IACA,IAAIiC,QAAQ,CAAC5iB,OAAT,IAAoBlR,IAAI,CAACkR,OAA7B,EAAsC;MACpC,MAAMd,OAAO,GAAG7E,SAAS,CAACuoB,QAAQ,CAACD,eAAV,CAAzB;MACA,OAAOnjC,cAAc,CAACojC,QAAQ,CAAC5+B,IAAT,IAAiB4+B,QAAQ,CAAC5+B,IAAT,CAAcrB,IAAhC,EAAsCyD,QAAQ,CAACpC,IAAT,CAAcrB,IAApD,CAAd,GAA0Euc,OAAO,CAAC/S,MAAzF;IACD;;IACD,OAAO,CAAP;EACD;;EACD,SAASo4D,gBAAT,CAA0BjgE,GAA1B,EAA+BN,IAA/B,EAAqCw5B,KAArC,EAA4C;IAC1CA,KAAK,GAAG1tC,OAAO,CAAC0tC,KAAD,CAAP,GAAiBA,KAAjB,GAAyB,CAACA,KAAD,CAAjC;IACA,OAAO;MACL/tC,CAAC,EAAEsb,YAAY,CAACzG,GAAD,EAAMN,IAAI,CAAC2G,MAAX,EAAmB6yB,KAAnB,CADV;MAELhvC,CAAC,EAAEgvC,KAAK,CAAC3yC,MAAN,GAAemZ,IAAI,CAACG;IAFlB,CAAP;EAID;;EACD,SAASqgE,eAAT,CAAyBn7D,KAAzB,EAAgChH,GAAhC,EAAqCM,IAArC,EAA2CtY,GAA3C,EAAgD+B,GAAhD,EAAqD;IACnD,IAAIid,KAAK,KAAKhf,GAAV,IAAiBgf,KAAK,KAAKjd,GAA/B,EAAoC;MAClC,OAAO;QACL3D,KAAK,EAAE4Z,GAAG,GAAIM,IAAI,GAAG,CADhB;QAELja,GAAG,EAAE2Z,GAAG,GAAIM,IAAI,GAAG;MAFd,CAAP;IAID,CALD,MAKO,IAAI0G,KAAK,GAAGhf,GAAR,IAAegf,KAAK,GAAGjd,GAA3B,EAAgC;MACrC,OAAO;QACL3D,KAAK,EAAE4Z,GAAG,GAAGM,IADR;QAELja,GAAG,EAAE2Z;MAFA,CAAP;IAID;;IACD,OAAO;MACL5Z,KAAK,EAAE4Z,GADF;MAEL3Z,GAAG,EAAE2Z,GAAG,GAAGM;IAFN,CAAP;EAID;;EACD,SAAS8hE,kBAAT,CAA4Bt/D,KAA5B,EAAmC;IACjC,MAAM26C,IAAI,GAAG;MACXvxD,CAAC,EAAE4W,KAAK,CAACvc,IAAN,GAAauc,KAAK,CAACozD,QAAN,CAAe3vE,IADpB;MAEXkF,CAAC,EAAEqX,KAAK,CAACtc,KAAN,GAAcsc,KAAK,CAACozD,QAAN,CAAe1vE,KAFrB;MAGXw7B,CAAC,EAAElf,KAAK,CAAC2I,GAAN,GAAY3I,KAAK,CAACozD,QAAN,CAAezqD,GAHnB;MAIX3gB,CAAC,EAAEgY,KAAK,CAAC4I,MAAN,GAAe5I,KAAK,CAACozD,QAAN,CAAexqD;IAJtB,CAAb;IAMA,MAAM22D,MAAM,GAAGlpE,MAAM,CAACgB,MAAP,CAAc,EAAd,EAAkBsjD,IAAlB,CAAf;IACA,MAAMpW,UAAU,GAAG,EAAnB;IACA,MAAMxqB,OAAO,GAAG,EAAhB;IACA,MAAMylD,UAAU,GAAGx/D,KAAK,CAACy/D,YAAN,CAAmB/5E,MAAtC;IACA,MAAMg6E,cAAc,GAAG1/D,KAAK,CAAClE,OAAN,CAAcimD,WAArC;IACA,MAAM4d,eAAe,GAAGD,cAAc,CAACE,iBAAf,GAAmCt+D,EAAE,GAAGk+D,UAAxC,GAAqD,CAA7E;;IACA,KAAK,IAAI75E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG65E,UAApB,EAAgC75E,CAAC,EAAjC,EAAqC;MACnC,MAAMgkB,IAAI,GAAG+1D,cAAc,CAAC5iD,UAAf,CAA0B9c,KAAK,CAAC6/D,oBAAN,CAA2Bl6E,CAA3B,CAA1B,CAAb;MACAo0B,OAAO,CAACp0B,CAAD,CAAP,GAAagkB,IAAI,CAACoQ,OAAlB;MACA,MAAMmoC,aAAa,GAAGliD,KAAK,CAAC8/D,gBAAN,CAAuBn6E,CAAvB,EAA0Bqa,KAAK,CAAC+/D,WAAN,GAAoBhmD,OAAO,CAACp0B,CAAD,CAArD,EAA0Dg6E,eAA1D,CAAtB;MACA,MAAMK,MAAM,GAAG7qD,MAAM,CAACxL,IAAI,CAAC9K,IAAN,CAArB;MACA,MAAMw0D,QAAQ,GAAG+L,gBAAgB,CAACp/D,KAAK,CAACb,GAAP,EAAY6gE,MAAZ,EAAoBhgE,KAAK,CAACy/D,YAAN,CAAmB95E,CAAnB,CAApB,CAAjC;MACA4+C,UAAU,CAAC5+C,CAAD,CAAV,GAAgB0tE,QAAhB;;MACA,MAAMluB,YAAY,GAAG1gC,eAAe,CAACzE,KAAK,CAACwhD,aAAN,CAAoB77D,CAApB,IAAyBg6E,eAA1B,CAApC;;MACA,MAAMz7D,KAAK,GAAGjf,IAAI,CAACiE,KAAL,CAAWua,SAAS,CAAC0hC,YAAD,CAApB,CAAd;MACA,MAAM86B,OAAO,GAAGZ,eAAe,CAACn7D,KAAD,EAAQg+C,aAAa,CAAC12D,CAAtB,EAAyB6nE,QAAQ,CAAC/oE,CAAlC,EAAqC,CAArC,EAAwC,GAAxC,CAA/B;MACA,MAAM41E,OAAO,GAAGb,eAAe,CAACn7D,KAAD,EAAQg+C,aAAa,CAACn/C,CAAtB,EAAyBswD,QAAQ,CAAChqE,CAAlC,EAAqC,EAArC,EAAyC,GAAzC,CAA/B;MACA82E,YAAY,CAACZ,MAAD,EAAS5kB,IAAT,EAAexV,YAAf,EAA6B86B,OAA7B,EAAsCC,OAAtC,CAAZ;IACD;;IACDlgE,KAAK,CAACogE,cAAN,CACEzlB,IAAI,CAACvxD,CAAL,GAASm2E,MAAM,CAACn2E,CADlB,EAEEm2E,MAAM,CAAC52E,CAAP,GAAWgyD,IAAI,CAAChyD,CAFlB,EAGEgyD,IAAI,CAACz7B,CAAL,GAASqgD,MAAM,CAACrgD,CAHlB,EAIEqgD,MAAM,CAACv3E,CAAP,GAAW2yD,IAAI,CAAC3yD,CAJlB;IAMAgY,KAAK,CAACqgE,gBAAN,GAAyBC,oBAAoB,CAACtgE,KAAD,EAAQukC,UAAR,EAAoBxqB,OAApB,CAA7C;EACD;;EACD,SAASomD,YAAT,CAAsBZ,MAAtB,EAA8B5kB,IAA9B,EAAoCz2C,KAApC,EAA2C+7D,OAA3C,EAAoDC,OAApD,EAA6D;IAC3D,MAAMn4D,GAAG,GAAG9iB,IAAI,CAACge,GAAL,CAAShe,IAAI,CAAC8iB,GAAL,CAAS7D,KAAT,CAAT,CAAZ;IACA,MAAM8D,GAAG,GAAG/iB,IAAI,CAACge,GAAL,CAAShe,IAAI,CAAC+iB,GAAL,CAAS9D,KAAT,CAAT,CAAZ;IACA,IAAI1Y,CAAC,GAAG,CAAR;IACA,IAAIuX,CAAC,GAAG,CAAR;;IACA,IAAIk9D,OAAO,CAAC38E,KAAR,GAAgBq3D,IAAI,CAACvxD,CAAzB,EAA4B;MAC1BoC,CAAC,GAAG,CAACmvD,IAAI,CAACvxD,CAAL,GAAS62E,OAAO,CAAC38E,KAAlB,IAA2BykB,GAA/B;MACAw3D,MAAM,CAACn2E,CAAP,GAAWnE,IAAI,CAACC,GAAL,CAASq6E,MAAM,CAACn2E,CAAhB,EAAmBuxD,IAAI,CAACvxD,CAAL,GAASoC,CAA5B,CAAX;IACD,CAHD,MAGO,IAAIy0E,OAAO,CAAC18E,GAAR,GAAco3D,IAAI,CAAChyD,CAAvB,EAA0B;MAC/B6C,CAAC,GAAG,CAACy0E,OAAO,CAAC18E,GAAR,GAAco3D,IAAI,CAAChyD,CAApB,IAAyBof,GAA7B;MACAw3D,MAAM,CAAC52E,CAAP,GAAW1D,IAAI,CAACgC,GAAL,CAASs4E,MAAM,CAAC52E,CAAhB,EAAmBgyD,IAAI,CAAChyD,CAAL,GAAS6C,CAA5B,CAAX;IACD;;IACD,IAAI00E,OAAO,CAAC58E,KAAR,GAAgBq3D,IAAI,CAACz7B,CAAzB,EAA4B;MAC1Bnc,CAAC,GAAG,CAAC43C,IAAI,CAACz7B,CAAL,GAASghD,OAAO,CAAC58E,KAAlB,IAA2B0kB,GAA/B;MACAu3D,MAAM,CAACrgD,CAAP,GAAWj6B,IAAI,CAACC,GAAL,CAASq6E,MAAM,CAACrgD,CAAhB,EAAmBy7B,IAAI,CAACz7B,CAAL,GAASnc,CAA5B,CAAX;IACD,CAHD,MAGO,IAAIm9D,OAAO,CAAC38E,GAAR,GAAco3D,IAAI,CAAC3yD,CAAvB,EAA0B;MAC/B+a,CAAC,GAAG,CAACm9D,OAAO,CAAC38E,GAAR,GAAco3D,IAAI,CAAC3yD,CAApB,IAAyBggB,GAA7B;MACAu3D,MAAM,CAACv3E,CAAP,GAAW/C,IAAI,CAACgC,GAAL,CAASs4E,MAAM,CAACv3E,CAAhB,EAAmB2yD,IAAI,CAAC3yD,CAAL,GAAS+a,CAA5B,CAAX;IACD;EACF;;EACD,SAASu9D,oBAAT,CAA8BtgE,KAA9B,EAAqCukC,UAArC,EAAiDxqB,OAAjD,EAA0D;IACxD,MAAMt0B,KAAK,GAAG,EAAd;IACA,MAAM+5E,UAAU,GAAGx/D,KAAK,CAACy/D,YAAN,CAAmB/5E,MAAtC;IACA,MAAMikB,IAAI,GAAG3J,KAAK,CAAClE,OAAnB;IACA,MAAMykE,KAAK,GAAGpB,qBAAqB,CAACx1D,IAAD,CAArB,GAA8B,CAA5C;IACA,MAAM62D,aAAa,GAAGxgE,KAAK,CAAC+/D,WAA5B;IACA,MAAMJ,eAAe,GAAGh2D,IAAI,CAACo4C,WAAL,CAAiB6d,iBAAjB,GAAqCt+D,EAAE,GAAGk+D,UAA1C,GAAuD,CAA/E;;IACA,KAAK,IAAI75E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG65E,UAApB,EAAgC75E,CAAC,EAAjC,EAAqC;MACnC,MAAM86E,kBAAkB,GAAGzgE,KAAK,CAAC8/D,gBAAN,CAAuBn6E,CAAvB,EAA0B66E,aAAa,GAAGD,KAAhB,GAAwBxmD,OAAO,CAACp0B,CAAD,CAAzD,EAA8Dg6E,eAA9D,CAA3B;MACA,MAAMz7D,KAAK,GAAGjf,IAAI,CAACiE,KAAL,CAAWua,SAAS,CAACgB,eAAe,CAACg8D,kBAAkB,CAACv8D,KAAnB,GAA2BtC,OAA5B,CAAhB,CAApB,CAAd;MACA,MAAMpE,IAAI,GAAG+mC,UAAU,CAAC5+C,CAAD,CAAvB;MACA,MAAMod,CAAC,GAAG29D,SAAS,CAACD,kBAAkB,CAAC19D,CAApB,EAAuBvF,IAAI,CAACnU,CAA5B,EAA+B6a,KAA/B,CAAnB;MACA,MAAMuG,SAAS,GAAGk2D,oBAAoB,CAACz8D,KAAD,CAAtC;MACA,MAAMzgB,IAAI,GAAGm9E,gBAAgB,CAACH,kBAAkB,CAACj1E,CAApB,EAAuBgS,IAAI,CAAClT,CAA5B,EAA+BmgB,SAA/B,CAA7B;MACAhlB,KAAK,CAACkB,IAAN,CAAW;QACT6E,CAAC,EAAEi1E,kBAAkB,CAACj1E,CADb;QAETuX,CAFS;QAGT0H,SAHS;QAIThnB,IAJS;QAKTklB,GAAG,EAAE5F,CALI;QAMTrf,KAAK,EAAED,IAAI,GAAG+Z,IAAI,CAAClT,CANV;QAOTse,MAAM,EAAE7F,CAAC,GAAGvF,IAAI,CAACnU;MAPR,CAAX;IASD;;IACD,OAAO5D,KAAP;EACD;;EACD,SAASk7E,oBAAT,CAA8Bz8D,KAA9B,EAAqC;IACnC,IAAIA,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,GAA7B,EAAkC;MAChC,OAAO,QAAP;IACD,CAFD,MAEO,IAAIA,KAAK,GAAG,GAAZ,EAAiB;MACtB,OAAO,MAAP;IACD;;IACD,OAAO,OAAP;EACD;;EACD,SAAS08D,gBAAT,CAA0Bp1E,CAA1B,EAA6BlB,CAA7B,EAAgClH,KAAhC,EAAuC;IACrC,IAAIA,KAAK,KAAK,OAAd,EAAuB;MACrBoI,CAAC,IAAIlB,CAAL;IACD,CAFD,MAEO,IAAIlH,KAAK,KAAK,QAAd,EAAwB;MAC7BoI,CAAC,IAAKlB,CAAC,GAAG,CAAV;IACD;;IACD,OAAOkB,CAAP;EACD;;EACD,SAASk1E,SAAT,CAAmB39D,CAAnB,EAAsB1Z,CAAtB,EAAyB6a,KAAzB,EAAgC;IAC9B,IAAIA,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,GAA9B,EAAmC;MACjCnB,CAAC,IAAK1Z,CAAC,GAAG,CAAV;IACD,CAFD,MAEO,IAAI6a,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,EAA3B,EAA+B;MACpCnB,CAAC,IAAI1Z,CAAL;IACD;;IACD,OAAO0Z,CAAP;EACD;;EACD,SAAS89D,eAAT,CAAyB7gE,KAAzB,EAAgC47D,UAAhC,EAA4C;IAC1C,MAAM;MAACz8D,GAAD;MAAMrD,OAAO,EAAE;QAACimD;MAAD;IAAf,IAAgC/hD,KAAtC;;IACA,KAAK,IAAIra,CAAC,GAAGi2E,UAAU,GAAG,CAA1B,EAA6Bj2E,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;MACxC,MAAMsiD,WAAW,GAAG8Z,WAAW,CAACjlC,UAAZ,CAAuB9c,KAAK,CAAC6/D,oBAAN,CAA2Bl6E,CAA3B,CAAvB,CAApB;MACA,MAAMq6E,MAAM,GAAG7qD,MAAM,CAAC8yB,WAAW,CAACppC,IAAb,CAArB;MACA,MAAM;QAACrT,CAAD;QAAIuX,CAAJ;QAAO0H,SAAP;QAAkBhnB,IAAlB;QAAwBklB,GAAxB;QAA6BjlB,KAA7B;QAAoCklB;MAApC,IAA8C5I,KAAK,CAACqgE,gBAAN,CAAuB16E,CAAvB,CAApD;MACA,MAAM;QAAC43C;MAAD,IAAkB0K,WAAxB;;MACA,IAAI,CAACruC,aAAa,CAAC2jC,aAAD,CAAlB,EAAmC;QACjC,MAAMxjB,OAAO,GAAG7E,SAAS,CAAC+yB,WAAW,CAACzK,eAAb,CAAzB;QACAr+B,GAAG,CAACqL,SAAJ,GAAgB+yB,aAAhB;QACAp+B,GAAG,CAAC8pC,QAAJ,CAAaxlD,IAAI,GAAGs2B,OAAO,CAACt2B,IAA5B,EAAkCklB,GAAG,GAAGoR,OAAO,CAACpR,GAAhD,EAAqDjlB,KAAK,GAAGD,IAAR,GAAes2B,OAAO,CAACpU,KAA5E,EAAmFiD,MAAM,GAAGD,GAAT,GAAeoR,OAAO,CAAC/S,MAA1G;MACD;;MACDyC,UAAU,CACRtK,GADQ,EAERa,KAAK,CAACy/D,YAAN,CAAmB95E,CAAnB,CAFQ,EAGR6F,CAHQ,EAIRuX,CAAC,GAAIi9D,MAAM,CAAChhE,UAAP,GAAoB,CAJjB,EAKRghE,MALQ,EAMR;QACEhoE,KAAK,EAAEiwC,WAAW,CAACjwC,KADrB;QAEEyS,SAAS,EAAEA,SAFb;QAGEC,YAAY,EAAE;MAHhB,CANQ,CAAV;IAYD;EACF;;EACD,SAASo2D,cAAT,CAAwB9gE,KAAxB,EAA+BuH,MAA/B,EAAuCu6C,QAAvC,EAAiD8Z,UAAjD,EAA6D;IAC3D,MAAM;MAACz8D;IAAD,IAAQa,KAAd;;IACA,IAAI8hD,QAAJ,EAAc;MACZ3iD,GAAG,CAACyI,GAAJ,CAAQ5H,KAAK,CAACqhD,OAAd,EAAuBrhD,KAAK,CAACshD,OAA7B,EAAsC/5C,MAAtC,EAA8C,CAA9C,EAAiDhG,GAAjD;IACD,CAFD,MAEO;MACL,IAAI2gD,aAAa,GAAGliD,KAAK,CAAC8/D,gBAAN,CAAuB,CAAvB,EAA0Bv4D,MAA1B,CAApB;MACApI,GAAG,CAAC2I,MAAJ,CAAWo6C,aAAa,CAAC12D,CAAzB,EAA4B02D,aAAa,CAACn/C,CAA1C;;MACA,KAAK,IAAIpd,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGi2E,UAApB,EAAgCj2E,CAAC,EAAjC,EAAqC;QACnCu8D,aAAa,GAAGliD,KAAK,CAAC8/D,gBAAN,CAAuBn6E,CAAvB,EAA0B4hB,MAA1B,CAAhB;QACApI,GAAG,CAAC8I,MAAJ,CAAWi6C,aAAa,CAAC12D,CAAzB,EAA4B02D,aAAa,CAACn/C,CAA1C;MACD;IACF;EACF;;EACD,SAASg+D,cAAT,CAAwB/gE,KAAxB,EAA+BghE,YAA/B,EAA6Cz5D,MAA7C,EAAqDq0D,UAArD,EAAiE;IAC/D,MAAMz8D,GAAG,GAAGa,KAAK,CAACb,GAAlB;IACA,MAAM2iD,QAAQ,GAAGkf,YAAY,CAAClf,QAA9B;IACA,MAAM;MAAC9pD,KAAD;MAAQkS;IAAR,IAAqB82D,YAA3B;;IACA,IAAK,CAAClf,QAAD,IAAa,CAAC8Z,UAAf,IAA8B,CAAC5jE,KAA/B,IAAwC,CAACkS,SAAzC,IAAsD3C,MAAM,GAAG,CAAnE,EAAsE;MACpE;IACD;;IACDpI,GAAG,CAAC6G,IAAJ;IACA7G,GAAG,CAAC8K,WAAJ,GAAkBjS,KAAlB;IACAmH,GAAG,CAAC+K,SAAJ,GAAgBA,SAAhB;IACA/K,GAAG,CAACmqC,WAAJ,CAAgB03B,YAAY,CAACt4C,UAA7B;IACAvpB,GAAG,CAACoqC,cAAJ,GAAqBy3B,YAAY,CAACr4C,gBAAlC;IACAxpB,GAAG,CAACwI,SAAJ;IACAm5D,cAAc,CAAC9gE,KAAD,EAAQuH,MAAR,EAAgBu6C,QAAhB,EAA0B8Z,UAA1B,CAAd;IACAz8D,GAAG,CAAC0I,SAAJ;IACA1I,GAAG,CAACmJ,MAAJ;IACAnJ,GAAG,CAACiH,OAAJ;EACD;;EACD,SAAS66D,uBAAT,CAAiC5zD,MAAjC,EAAyChS,KAAzC,EAAgDg9B,KAAhD,EAAuD;IACrD,OAAOtiB,aAAa,CAAC1I,MAAD,EAAS;MAC3BgrB,KAD2B;MAE3Bh9B,KAF2B;MAG3B5W,IAAI,EAAE;IAHqB,CAAT,CAApB;EAKD;;EACD,MAAMy8E,iBAAN,SAAgCvD,eAAhC,CAAgD;IAC9C75E,WAAW,CAAC6pC,GAAD,EAAM;MACf,MAAMA,GAAN;MACA,KAAK0zB,OAAL,GAAej9D,SAAf;MACA,KAAKk9D,OAAL,GAAel9D,SAAf;MACA,KAAK27E,WAAL,GAAmB37E,SAAnB;MACA,KAAKq7E,YAAL,GAAoB,EAApB;MACA,KAAKY,gBAAL,GAAwB,EAAxB;IACD;;IACD59B,aAAa,GAAG;MACd,MAAM1oB,OAAO,GAAG,KAAKq5C,QAAL,GAAgBl+C,SAAS,CAACiqD,qBAAqB,CAAC,KAAKrjE,OAAN,CAArB,GAAsC,CAAvC,CAAzC;MACA,MAAMxR,CAAC,GAAG,KAAKqb,KAAL,GAAa,KAAKyE,QAAL,GAAgB2P,OAAO,CAACpU,KAA/C;MACA,MAAMtc,CAAC,GAAG,KAAK2d,MAAL,GAAc,KAAKuI,SAAL,GAAiBwK,OAAO,CAAC/S,MAAjD;MACA,KAAKq6C,OAAL,GAAep8D,IAAI,CAACqd,KAAL,CAAW,KAAK7e,IAAL,GAAY6G,CAAC,GAAG,CAAhB,GAAoByvB,OAAO,CAACt2B,IAAvC,CAAf;MACA,KAAK69D,OAAL,GAAer8D,IAAI,CAACqd,KAAL,CAAW,KAAKqG,GAAL,GAAWtf,CAAC,GAAG,CAAf,GAAmB0wB,OAAO,CAACpR,GAAtC,CAAf;MACA,KAAKo3D,WAAL,GAAmB96E,IAAI,CAACqd,KAAL,CAAWrd,IAAI,CAACC,GAAL,CAASoF,CAAT,EAAYjB,CAAZ,IAAiB,CAA5B,CAAnB;IACD;;IACDu5C,mBAAmB,GAAG;MACpB,MAAM;QAAC19C,GAAD;QAAM+B;MAAN,IAAa,KAAK4wC,SAAL,CAAe,KAAf,CAAnB;MACA,KAAK3yC,GAAL,GAAW8U,cAAc,CAAC9U,GAAD,CAAd,IAAuB,CAAC4d,KAAK,CAAC5d,GAAD,CAA7B,GAAqCA,GAArC,GAA2C,CAAtD;MACA,KAAK+B,GAAL,GAAW+S,cAAc,CAAC/S,GAAD,CAAd,IAAuB,CAAC6b,KAAK,CAAC7b,GAAD,CAA7B,GAAqCA,GAArC,GAA2C,CAAtD;MACA,KAAK42E,sBAAL;IACD;;IACDS,gBAAgB,GAAG;MACjB,OAAOr5E,IAAI,CAAC85C,IAAL,CAAU,KAAKghC,WAAL,GAAmBZ,qBAAqB,CAAC,KAAKrjE,OAAN,CAAlD,CAAP;IACD;;IACDooC,kBAAkB,CAAC1I,KAAD,EAAQ;MACxBmiC,eAAe,CAACn7E,SAAhB,CAA0B0hD,kBAA1B,CAA6CxhD,IAA7C,CAAkD,IAAlD,EAAwD84C,KAAxD;MACA,KAAKikC,YAAL,GAAoB,KAAKroC,SAAL,GACjBxsC,GADiB,CACb,CAACyO,KAAD,EAAQgC,KAAR,KAAkB;QACrB,MAAMg9B,KAAK,GAAGt2C,QAAQ,CAAC,KAAK+Z,OAAL,CAAaimD,WAAb,CAAyBhgE,QAA1B,EAAoC,CAACsX,KAAD,EAAQgC,KAAR,CAApC,EAAoD,IAApD,CAAtB;QACA,OAAOg9B,KAAK,IAAIA,KAAK,KAAK,CAAnB,GAAuBA,KAAvB,GAA+B,EAAtC;MACD,CAJiB,EAKjBliB,MALiB,CAKV,CAACztB,CAAD,EAAI/C,CAAJ,KAAU,KAAKrB,KAAL,CAAW6xD,iBAAX,CAA6BxwD,CAA7B,CALA,CAApB;IAMD;;IACD49C,GAAG,GAAG;MACJ,MAAM55B,IAAI,GAAG,KAAK7N,OAAlB;;MACA,IAAI6N,IAAI,CAACkR,OAAL,IAAgBlR,IAAI,CAACo4C,WAAL,CAAiBlnC,OAArC,EAA8C;QAC5CykD,kBAAkB,CAAC,IAAD,CAAlB;MACD,CAFD,MAEO;QACL,KAAKc,cAAL,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B;MACD;IACF;;IACDA,cAAc,CAACe,YAAD,EAAeC,aAAf,EAA8BC,WAA9B,EAA2CC,cAA3C,EAA2D;MACvE,KAAKjgB,OAAL,IAAgBp8D,IAAI,CAACqd,KAAL,CAAW,CAAC6+D,YAAY,GAAGC,aAAhB,IAAiC,CAA5C,CAAhB;MACA,KAAK9f,OAAL,IAAgBr8D,IAAI,CAACqd,KAAL,CAAW,CAAC++D,WAAW,GAAGC,cAAf,IAAiC,CAA5C,CAAhB;MACA,KAAKvB,WAAL,IAAoB96E,IAAI,CAACC,GAAL,CAAS,KAAK66E,WAAL,GAAmB,CAA5B,EAA+B96E,IAAI,CAACgC,GAAL,CAASk6E,YAAT,EAAuBC,aAAvB,EAAsCC,WAAtC,EAAmDC,cAAnD,CAA/B,CAApB;IACD;;IACD9f,aAAa,CAACnmD,KAAD,EAAQ;MACnB,MAAMkmE,eAAe,GAAGhgE,GAAG,IAAI,KAAKk+D,YAAL,CAAkB/5E,MAAlB,IAA4B,CAAhC,CAA3B;MACA,MAAMytB,UAAU,GAAG,KAAKrX,OAAL,CAAaqX,UAAb,IAA2B,CAA9C;MACA,OAAO1O,eAAe,CAACpJ,KAAK,GAAGkmE,eAAR,GAA0Bh+D,SAAS,CAAC4P,UAAD,CAApC,CAAtB;IACD;;IACDyuC,6BAA6B,CAACvoD,KAAD,EAAQ;MACnC,IAAIO,aAAa,CAACP,KAAD,CAAjB,EAA0B;QACxB,OAAOu+B,GAAP;MACD;;MACD,MAAM4pC,aAAa,GAAG,KAAKzB,WAAL,IAAoB,KAAK94E,GAAL,GAAW,KAAK/B,GAApC,CAAtB;;MACA,IAAI,KAAK4W,OAAL,CAAajB,OAAjB,EAA0B;QACxB,OAAO,CAAC,KAAK5T,GAAL,GAAWoS,KAAZ,IAAqBmoE,aAA5B;MACD;;MACD,OAAO,CAACnoE,KAAK,GAAG,KAAKnU,GAAd,IAAqBs8E,aAA5B;IACD;;IACDC,6BAA6B,CAACr9D,QAAD,EAAW;MACtC,IAAIxK,aAAa,CAACwK,QAAD,CAAjB,EAA6B;QAC3B,OAAOwzB,GAAP;MACD;;MACD,MAAM8pC,cAAc,GAAGt9D,QAAQ,IAAI,KAAK27D,WAAL,IAAoB,KAAK94E,GAAL,GAAW,KAAK/B,GAApC,CAAJ,CAA/B;MACA,OAAO,KAAK4W,OAAL,CAAajB,OAAb,GAAuB,KAAK5T,GAAL,GAAWy6E,cAAlC,GAAmD,KAAKx8E,GAAL,GAAWw8E,cAArE;IACD;;IACD7B,oBAAoB,CAACxkE,KAAD,EAAQ;MAC1B,MAAM0mD,WAAW,GAAG,KAAK0d,YAAL,IAAqB,EAAzC;;MACA,IAAIpkE,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG0mD,WAAW,CAACr8D,MAAtC,EAA8C;QAC5C,MAAMi8E,UAAU,GAAG5f,WAAW,CAAC1mD,KAAD,CAA9B;QACA,OAAO4lE,uBAAuB,CAAC,KAAKp6D,UAAL,EAAD,EAAoBxL,KAApB,EAA2BsmE,UAA3B,CAA9B;MACD;IACF;;IACD7B,gBAAgB,CAACzkE,KAAD,EAAQumE,kBAAR,EAAiD;MAAA,IAArBjC,eAAqB,uEAAH,CAAG;MAC/D,MAAMz7D,KAAK,GAAG,KAAKs9C,aAAL,CAAmBnmD,KAAnB,IAA4BuG,OAA5B,GAAsC+9D,eAApD;MACA,OAAO;QACLn0E,CAAC,EAAEvG,IAAI,CAAC+iB,GAAL,CAAS9D,KAAT,IAAkB09D,kBAAlB,GAAuC,KAAKvgB,OAD1C;QAELt+C,CAAC,EAAE9d,IAAI,CAAC8iB,GAAL,CAAS7D,KAAT,IAAkB09D,kBAAlB,GAAuC,KAAKtgB,OAF1C;QAGLp9C;MAHK,CAAP;IAKD;;IACDi+C,wBAAwB,CAAC9mD,KAAD,EAAQhC,KAAR,EAAe;MACrC,OAAO,KAAKymE,gBAAL,CAAsBzkE,KAAtB,EAA6B,KAAKumD,6BAAL,CAAmCvoD,KAAnC,CAA7B,CAAP;IACD;;IACDwoE,eAAe,CAACxmE,KAAD,EAAQ;MACrB,OAAO,KAAK8mD,wBAAL,CAA8B9mD,KAAK,IAAI,CAAvC,EAA0C,KAAKsrC,YAAL,EAA1C,CAAP;IACD;;IACDm7B,qBAAqB,CAACzmE,KAAD,EAAQ;MAC3B,MAAM;QAAC5X,IAAD;QAAOklB,GAAP;QAAYjlB,KAAZ;QAAmBklB;MAAnB,IAA6B,KAAKy3D,gBAAL,CAAsBhlE,KAAtB,CAAnC;MACA,OAAO;QACL5X,IADK;QAELklB,GAFK;QAGLjlB,KAHK;QAILklB;MAJK,CAAP;IAMD;;IACDogC,cAAc,GAAG;MACf,MAAM;QAAC5qC,eAAD;QAAkB+9B,IAAI,EAAE;UAAC2lB;QAAD;MAAxB,IAAsC,KAAKhmD,OAAjD;;MACA,IAAIsC,eAAJ,EAAqB;QACnB,MAAMe,GAAG,GAAG,KAAKA,GAAjB;QACAA,GAAG,CAAC6G,IAAJ;QACA7G,GAAG,CAACwI,SAAJ;QACAm5D,cAAc,CAAC,IAAD,EAAO,KAAKlf,6BAAL,CAAmC,KAAKgc,SAAxC,CAAP,EAA2D9b,QAA3D,EAAqE,KAAK2d,YAAL,CAAkB/5E,MAAvF,CAAd;QACAyZ,GAAG,CAAC0I,SAAJ;QACA1I,GAAG,CAACqL,SAAJ,GAAgBpM,eAAhB;QACAe,GAAG,CAACiJ,IAAJ;QACAjJ,GAAG,CAACiH,OAAJ;MACD;IACF;;IACDgjC,QAAQ,GAAG;MACT,MAAMjqC,GAAG,GAAG,KAAKA,GAAjB;MACA,MAAMwK,IAAI,GAAG,KAAK7N,OAAlB;MACA,MAAM;QAAC+lD,UAAD;QAAa1lB;MAAb,IAAqBxyB,IAA3B;MACA,MAAMiyD,UAAU,GAAG,KAAK6D,YAAL,CAAkB/5E,MAArC;MACA,IAAIC,CAAJ,EAAOu2C,MAAP,EAAe5pB,QAAf;;MACA,IAAI3I,IAAI,CAACo4C,WAAL,CAAiBlnC,OAArB,EAA8B;QAC5BgmD,eAAe,CAAC,IAAD,EAAOjF,UAAP,CAAf;MACD;;MACD,IAAIz/B,IAAI,CAACthB,OAAT,EAAkB;QAChB,KAAK2gB,KAAL,CAAW12C,OAAX,CAAmB,CAACkB,IAAD,EAAOqV,KAAP,KAAiB;UAClC,IAAIA,KAAK,KAAK,CAAd,EAAiB;YACf6gC,MAAM,GAAG,KAAK0lB,6BAAL,CAAmC57D,IAAI,CAACqT,KAAxC,CAAT;YACA,MAAM4uC,WAAW,GAAG9L,IAAI,CAACrf,UAAL,CAAgB,KAAKjW,UAAL,CAAgBxL,KAAK,GAAG,CAAxB,CAAhB,CAApB;YACA0lE,cAAc,CAAC,IAAD,EAAO94B,WAAP,EAAoB/L,MAApB,EAA4B0/B,UAA5B,CAAd;UACD;QACF,CAND;MAOD;;MACD,IAAI/Z,UAAU,CAAChnC,OAAf,EAAwB;QACtB1b,GAAG,CAAC6G,IAAJ;;QACA,KAAKrgB,CAAC,GAAGi2E,UAAU,GAAG,CAAtB,EAAyBj2E,CAAC,IAAI,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;UACpC,MAAMsiD,WAAW,GAAG4Z,UAAU,CAAC/kC,UAAX,CAAsB,KAAK+iD,oBAAL,CAA0Bl6E,CAA1B,CAAtB,CAApB;UACA,MAAM;YAACqS,KAAD;YAAQkS;UAAR,IAAqB+9B,WAA3B;;UACA,IAAI,CAAC/9B,SAAD,IAAc,CAAClS,KAAnB,EAA0B;YACxB;UACD;;UACDmH,GAAG,CAAC+K,SAAJ,GAAgBA,SAAhB;UACA/K,GAAG,CAAC8K,WAAJ,GAAkBjS,KAAlB;UACAmH,GAAG,CAACmqC,WAAJ,CAAgBrB,WAAW,CAACvf,UAA5B;UACAvpB,GAAG,CAACoqC,cAAJ,GAAqBtB,WAAW,CAACtf,gBAAjC;UACAuT,MAAM,GAAG,KAAK0lB,6BAAL,CAAmCj4C,IAAI,CAAC6xB,KAAL,CAAW3gC,OAAX,GAAqB,KAAK3V,GAA1B,GAAgC,KAAK+B,GAAxE,CAAT;UACAqrB,QAAQ,GAAG,KAAKwtD,gBAAL,CAAsBn6E,CAAtB,EAAyBu2C,MAAzB,CAAX;UACA/8B,GAAG,CAACwI,SAAJ;UACAxI,GAAG,CAAC2I,MAAJ,CAAW,KAAKu5C,OAAhB,EAAyB,KAAKC,OAA9B;UACAniD,GAAG,CAAC8I,MAAJ,CAAWqK,QAAQ,CAAC9mB,CAApB,EAAuB8mB,QAAQ,CAACvP,CAAhC;UACA5D,GAAG,CAACmJ,MAAJ;QACD;;QACDnJ,GAAG,CAACiH,OAAJ;MACD;IACF;;IACDg2B,UAAU,GAAG,CAAE;;IACfqN,UAAU,GAAG;MACX,MAAMtqC,GAAG,GAAG,KAAKA,GAAjB;MACA,MAAMwK,IAAI,GAAG,KAAK7N,OAAlB;MACA,MAAM2hC,QAAQ,GAAG9zB,IAAI,CAAC6xB,KAAtB;;MACA,IAAI,CAACiC,QAAQ,CAAC5iB,OAAd,EAAuB;QACrB;MACD;;MACD,MAAM1H,UAAU,GAAG,KAAKquC,aAAL,CAAmB,CAAnB,CAAnB;MACA,IAAItlB,MAAJ,EAAYv2B,KAAZ;MACAxG,GAAG,CAAC6G,IAAJ;MACA7G,GAAG,CAACsI,SAAJ,CAAc,KAAK45C,OAAnB,EAA4B,KAAKC,OAAjC;MACAniD,GAAG,CAAC/T,MAAJ,CAAW+nB,UAAX;MACAhU,GAAG,CAACsL,SAAJ,GAAgB,QAAhB;MACAtL,GAAG,CAACuL,YAAJ,GAAmB,QAAnB;MACA,KAAK8wB,KAAL,CAAW12C,OAAX,CAAmB,CAACkB,IAAD,EAAOqV,KAAP,KAAiB;QAClC,IAAIA,KAAK,KAAK,CAAV,IAAe,CAACsO,IAAI,CAAC9O,OAAzB,EAAkC;UAChC;QACD;;QACD,MAAMotC,WAAW,GAAGxK,QAAQ,CAAC3gB,UAAT,CAAoB,KAAKjW,UAAL,CAAgBxL,KAAhB,CAApB,CAApB;QACA,MAAM6qC,QAAQ,GAAG/wB,MAAM,CAAC8yB,WAAW,CAACppC,IAAb,CAAvB;QACAq9B,MAAM,GAAG,KAAK0lB,6BAAL,CAAmC,KAAKpmB,KAAL,CAAWngC,KAAX,EAAkBhC,KAArD,CAAT;;QACA,IAAI4uC,WAAW,CAAC3K,iBAAhB,EAAmC;UACjCn+B,GAAG,CAACN,IAAJ,GAAWqnC,QAAQ,CAAC1gC,MAApB;UACAG,KAAK,GAAGxG,GAAG,CAACuG,WAAJ,CAAgB1f,IAAI,CAACqyC,KAArB,EAA4B1yB,KAApC;UACAxG,GAAG,CAACqL,SAAJ,GAAgBy9B,WAAW,CAAC1K,aAA5B;UACA,MAAMxjB,OAAO,GAAG7E,SAAS,CAAC+yB,WAAW,CAACzK,eAAb,CAAzB;UACAr+B,GAAG,CAAC8pC,QAAJ,CACE,CAACtjC,KAAD,GAAS,CAAT,GAAaoU,OAAO,CAACt2B,IADvB,EAEE,CAACy4C,MAAD,GAAUgK,QAAQ,CAAC1oC,IAAT,GAAgB,CAA1B,GAA8Buc,OAAO,CAACpR,GAFxC,EAGEhD,KAAK,GAAGoU,OAAO,CAACpU,KAHlB,EAIEugC,QAAQ,CAAC1oC,IAAT,GAAgBuc,OAAO,CAAC/S,MAJ1B;QAMD;;QACDyC,UAAU,CAACtK,GAAD,EAAMnZ,IAAI,CAACqyC,KAAX,EAAkB,CAAlB,EAAqB,CAAC6D,MAAtB,EAA8BgK,QAA9B,EAAwC;UAChDluC,KAAK,EAAEiwC,WAAW,CAACjwC;QAD6B,CAAxC,CAAV;MAGD,CAtBD;MAuBAmH,GAAG,CAACiH,OAAJ;IACD;;IACDsjC,SAAS,GAAG,CAAE;;EAjMgC;;EAmMhDw3B,iBAAiB,CAACvnE,EAAlB,GAAuB,cAAvB;EACAunE,iBAAiB,CAACjgE,QAAlB,GAA6B;IAC3B4Z,OAAO,EAAE,IADkB;IAE3BknD,OAAO,EAAE,IAFkB;IAG3BzvD,QAAQ,EAAE,WAHiB;IAI3BuvC,UAAU,EAAE;MACVhnC,OAAO,EAAE,IADC;MAEV3Q,SAAS,EAAE,CAFD;MAGVwe,UAAU,EAAE,EAHF;MAIVC,gBAAgB,EAAE;IAJR,CAJe;IAU3BwT,IAAI,EAAE;MACJ2lB,QAAQ,EAAE;IADN,CAVqB;IAa3B3uC,UAAU,EAAE,CAbe;IAc3BqoB,KAAK,EAAE;MACL8B,iBAAiB,EAAE,IADd;MAELv7C,QAAQ,EAAEk6C,KAAK,CAACZ,UAAN,CAAiBC;IAFtB,CAdoB;IAkB3BymB,WAAW,EAAE;MACXxkB,aAAa,EAAEn5C,SADJ;MAEXo5C,eAAe,EAAE,CAFN;MAGX3iB,OAAO,EAAE,IAHE;MAIXhc,IAAI,EAAE;QACJrB,IAAI,EAAE;MADF,CAJK;;MAOXzb,QAAQ,CAACs2C,KAAD,EAAQ;QACd,OAAOA,KAAP;MACD,CATU;;MAUXte,OAAO,EAAE,CAVE;MAWX6lD,iBAAiB,EAAE;IAXR;EAlBc,CAA7B;EAgCAsB,iBAAiB,CAAC9lC,aAAlB,GAAkC;IAChC,oBAAoB,aADY;IAEhC,qBAAqB,OAFW;IAGhC,eAAe;EAHiB,CAAlC;EAKA8lC,iBAAiB,CAACvjE,WAAlB,GAAgC;IAC9BkkD,UAAU,EAAE;MACVxgD,SAAS,EAAE;IADD;EADkB,CAAhC;EAMA,MAAM2gE,SAAS,GAAG;IAChBC,WAAW,EAAE;MAACC,MAAM,EAAE,IAAT;MAAe1kE,IAAI,EAAE,CAArB;MAAwB2kE,KAAK,EAAE;IAA/B,CADG;IAEhBC,MAAM,EAAE;MAACF,MAAM,EAAE,IAAT;MAAe1kE,IAAI,EAAE,IAArB;MAA2B2kE,KAAK,EAAE;IAAlC,CAFQ;IAGhBE,MAAM,EAAE;MAACH,MAAM,EAAE,IAAT;MAAe1kE,IAAI,EAAE,KAArB;MAA4B2kE,KAAK,EAAE;IAAnC,CAHQ;IAIhBG,IAAI,EAAE;MAACJ,MAAM,EAAE,IAAT;MAAe1kE,IAAI,EAAE,OAArB;MAA8B2kE,KAAK,EAAE;IAArC,CAJU;IAKhBI,GAAG,EAAE;MAACL,MAAM,EAAE,IAAT;MAAe1kE,IAAI,EAAE,QAArB;MAA+B2kE,KAAK,EAAE;IAAtC,CALW;IAMhBK,IAAI,EAAE;MAACN,MAAM,EAAE,KAAT;MAAgB1kE,IAAI,EAAE,SAAtB;MAAiC2kE,KAAK,EAAE;IAAxC,CANU;IAOhBM,KAAK,EAAE;MAACP,MAAM,EAAE,IAAT;MAAe1kE,IAAI,EAAE,OAArB;MAA8B2kE,KAAK,EAAE;IAArC,CAPS;IAQhBO,OAAO,EAAE;MAACR,MAAM,EAAE,KAAT;MAAgB1kE,IAAI,EAAE,OAAtB;MAA+B2kE,KAAK,EAAE;IAAtC,CARO;IAShBQ,IAAI,EAAE;MAACT,MAAM,EAAE,IAAT;MAAe1kE,IAAI,EAAE;IAArB;EATU,CAAlB;EAWA,MAAMolE,KAAK,GAAIvsE,MAAM,CAACD,IAAP,CAAY4rE,SAAZ,CAAf;;EACA,SAASa,MAAT,CAAgB96E,CAAhB,EAAmBC,CAAnB,EAAsB;IACpB,OAAOD,CAAC,GAAGC,CAAX;EACD;;EACD,SAAS6uC,KAAT,CAAe72B,KAAf,EAAsBzI,KAAtB,EAA6B;IAC3B,IAAIqC,aAAa,CAACrC,KAAD,CAAjB,EAA0B;MACxB,OAAO,IAAP;IACD;;IACD,MAAMurE,OAAO,GAAG9iE,KAAK,CAAC+iE,QAAtB;IACA,MAAM;MAACC,MAAD;MAAS95E,KAAT;MAAgB+5E;IAAhB,IAA8BjjE,KAAK,CAACkjE,UAA1C;IACA,IAAI7pE,KAAK,GAAG9B,KAAZ;;IACA,IAAI,OAAOyrE,MAAP,KAAkB,UAAtB,EAAkC;MAChC3pE,KAAK,GAAG2pE,MAAM,CAAC3pE,KAAD,CAAd;IACD;;IACD,IAAI,CAACW,cAAc,CAACX,KAAD,CAAnB,EAA4B;MAC1BA,KAAK,GAAG,OAAO2pE,MAAP,KAAkB,QAAlB,GACJF,OAAO,CAACjsC,KAAR,CAAcx9B,KAAd,EAAqB2pE,MAArB,CADI,GAEJF,OAAO,CAACjsC,KAAR,CAAcx9B,KAAd,CAFJ;IAGD;;IACD,IAAIA,KAAK,KAAK,IAAd,EAAoB;MAClB,OAAO,IAAP;IACD;;IACD,IAAInQ,KAAJ,EAAW;MACTmQ,KAAK,GAAGnQ,KAAK,KAAK,MAAV,KAAqB2Z,QAAQ,CAACogE,UAAD,CAAR,IAAwBA,UAAU,KAAK,IAA5D,IACJH,OAAO,CAAC7qB,OAAR,CAAgB5+C,KAAhB,EAAuB,SAAvB,EAAkC4pE,UAAlC,CADI,GAEJH,OAAO,CAAC7qB,OAAR,CAAgB5+C,KAAhB,EAAuBnQ,KAAvB,CAFJ;IAGD;;IACD,OAAO,CAACmQ,KAAR;EACD;;EACD,SAAS8pE,yBAAT,CAAmCC,OAAnC,EAA4Cl+E,GAA5C,EAAiD+B,GAAjD,EAAsDo8E,QAAtD,EAAgE;IAC9D,MAAMpoE,IAAI,GAAG2nE,KAAK,CAACl9E,MAAnB;;IACA,KAAK,IAAIC,CAAC,GAAGi9E,KAAK,CAAChnE,OAAN,CAAcwnE,OAAd,CAAb,EAAqCz9E,CAAC,GAAGsV,IAAI,GAAG,CAAhD,EAAmD,EAAEtV,CAArD,EAAwD;MACtD,MAAM29E,QAAQ,GAAGtB,SAAS,CAACY,KAAK,CAACj9E,CAAD,CAAN,CAA1B;MACA,MAAMgyB,MAAM,GAAG2rD,QAAQ,CAACnB,KAAT,GAAiBmB,QAAQ,CAACnB,KAA1B,GAAkCloE,MAAM,CAACikE,gBAAxD;;MACA,IAAIoF,QAAQ,CAACpB,MAAT,IAAmBj9E,IAAI,CAAC85C,IAAL,CAAU,CAAC93C,GAAG,GAAG/B,GAAP,KAAeyyB,MAAM,GAAG2rD,QAAQ,CAAC9lE,IAAjC,CAAV,KAAqD6lE,QAA5E,EAAsF;QACpF,OAAOT,KAAK,CAACj9E,CAAD,CAAZ;MACD;IACF;;IACD,OAAOi9E,KAAK,CAAC3nE,IAAI,GAAG,CAAR,CAAZ;EACD;;EACD,SAASsoE,0BAAT,CAAoCvjE,KAApC,EAA2CokC,QAA3C,EAAqDg/B,OAArD,EAA8Dl+E,GAA9D,EAAmE+B,GAAnE,EAAwE;IACtE,KAAK,IAAItB,CAAC,GAAGi9E,KAAK,CAACl9E,MAAN,GAAe,CAA5B,EAA+BC,CAAC,IAAIi9E,KAAK,CAAChnE,OAAN,CAAcwnE,OAAd,CAApC,EAA4Dz9E,CAAC,EAA7D,EAAiE;MAC/D,MAAMqyD,IAAI,GAAG4qB,KAAK,CAACj9E,CAAD,CAAlB;;MACA,IAAIq8E,SAAS,CAAChqB,IAAD,CAAT,CAAgBkqB,MAAhB,IAA0BliE,KAAK,CAAC+iE,QAAN,CAAe7jC,IAAf,CAAoBj4C,GAApB,EAAyB/B,GAAzB,EAA8B8yD,IAA9B,KAAuC5T,QAAQ,GAAG,CAAhF,EAAmF;QACjF,OAAO4T,IAAP;MACD;IACF;;IACD,OAAO4qB,KAAK,CAACQ,OAAO,GAAGR,KAAK,CAAChnE,OAAN,CAAcwnE,OAAd,CAAH,GAA4B,CAApC,CAAZ;EACD;;EACD,SAASI,kBAAT,CAA4BxrB,IAA5B,EAAkC;IAChC,KAAK,IAAIryD,CAAC,GAAGi9E,KAAK,CAAChnE,OAAN,CAAco8C,IAAd,IAAsB,CAA9B,EAAiC/8C,IAAI,GAAG2nE,KAAK,CAACl9E,MAAnD,EAA2DC,CAAC,GAAGsV,IAA/D,EAAqE,EAAEtV,CAAvE,EAA0E;MACxE,IAAIq8E,SAAS,CAACY,KAAK,CAACj9E,CAAD,CAAN,CAAT,CAAoBu8E,MAAxB,EAAgC;QAC9B,OAAOU,KAAK,CAACj9E,CAAD,CAAZ;MACD;IACF;EACF;;EACD,SAAS89E,OAAT,CAAiBjoC,KAAjB,EAAwBkoC,IAAxB,EAA8BC,UAA9B,EAA0C;IACxC,IAAI,CAACA,UAAL,EAAiB;MACfnoC,KAAK,CAACkoC,IAAD,CAAL,GAAc,IAAd;IACD,CAFD,MAEO,IAAIC,UAAU,CAACj+E,MAAf,EAAuB;MAC5B,MAAM;QAACmmB,EAAD;QAAKD;MAAL,IAAWH,OAAO,CAACk4D,UAAD,EAAaD,IAAb,CAAxB;;MACA,MAAM5rB,SAAS,GAAG6rB,UAAU,CAAC93D,EAAD,CAAV,IAAkB63D,IAAlB,GAAyBC,UAAU,CAAC93D,EAAD,CAAnC,GAA0C83D,UAAU,CAAC/3D,EAAD,CAAtE;MACA4vB,KAAK,CAACsc,SAAD,CAAL,GAAmB,IAAnB;IACD;EACF;;EACD,SAAS8rB,aAAT,CAAuB5jE,KAAvB,EAA8Bw7B,KAA9B,EAAqC5wC,GAArC,EAA0Ci5E,SAA1C,EAAqD;IACnD,MAAMf,OAAO,GAAG9iE,KAAK,CAAC+iE,QAAtB;IACA,MAAM9kC,KAAK,GAAG,CAAC6kC,OAAO,CAAC7qB,OAAR,CAAgBzc,KAAK,CAAC,CAAD,CAAL,CAASniC,KAAzB,EAAgCwqE,SAAhC,CAAf;IACA,MAAMz8C,IAAI,GAAGoU,KAAK,CAACA,KAAK,CAAC91C,MAAN,GAAe,CAAhB,CAAL,CAAwB2T,KAArC;IACA,IAAI+jC,KAAJ,EAAW/hC,KAAX;;IACA,KAAK+hC,KAAK,GAAGa,KAAb,EAAoBb,KAAK,IAAIhW,IAA7B,EAAmCgW,KAAK,GAAG,CAAC0lC,OAAO,CAACl8E,GAAR,CAAYw2C,KAAZ,EAAmB,CAAnB,EAAsBymC,SAAtB,CAA5C,EAA8E;MAC5ExoE,KAAK,GAAGzQ,GAAG,CAACwyC,KAAD,CAAX;;MACA,IAAI/hC,KAAK,IAAI,CAAb,EAAgB;QACdmgC,KAAK,CAACngC,KAAD,CAAL,CAAa+hC,KAAb,GAAqB,IAArB;MACD;IACF;;IACD,OAAO5B,KAAP;EACD;;EACD,SAASsoC,mBAAT,CAA6B9jE,KAA7B,EAAoChC,MAApC,EAA4C6lE,SAA5C,EAAuD;IACrD,MAAMroC,KAAK,GAAG,EAAd;IACA,MAAM5wC,GAAG,GAAG,EAAZ;IACA,MAAMqQ,IAAI,GAAG+C,MAAM,CAACtY,MAApB;IACA,IAAIC,CAAJ,EAAO0T,KAAP;;IACA,KAAK1T,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsV,IAAhB,EAAsB,EAAEtV,CAAxB,EAA2B;MACzB0T,KAAK,GAAG2E,MAAM,CAACrY,CAAD,CAAd;MACAiF,GAAG,CAACyO,KAAD,CAAH,GAAa1T,CAAb;MACA61C,KAAK,CAAC70C,IAAN,CAAW;QACT0S,KADS;QAET+jC,KAAK,EAAE;MAFE,CAAX;IAID;;IACD,OAAQniC,IAAI,KAAK,CAAT,IAAc,CAAC4oE,SAAhB,GAA6BroC,KAA7B,GAAqCooC,aAAa,CAAC5jE,KAAD,EAAQw7B,KAAR,EAAe5wC,GAAf,EAAoBi5E,SAApB,CAAzD;EACD;;EACD,MAAME,SAAN,SAAwBpjC,KAAxB,CAA8B;IAC5B78C,WAAW,CAAC8wB,KAAD,EAAQ;MACjB,MAAMA,KAAN;MACA,KAAKitB,MAAL,GAAc;QACZx8B,IAAI,EAAE,EADM;QAEZ8xB,MAAM,EAAE,EAFI;QAGZ/G,GAAG,EAAE;MAHO,CAAd;MAKA,KAAK4zC,KAAL,GAAa,KAAb;MACA,KAAKC,UAAL,GAAkB7/E,SAAlB;MACA,KAAK8/E,QAAL,GAAgB,EAAhB;MACA,KAAKC,WAAL,GAAmB,KAAnB;MACA,KAAKjB,UAAL,GAAkB9+E,SAAlB;IACD;;IACD29C,IAAI,CAACuR,SAAD,EAAY3pC,IAAZ,EAAkB;MACpB,MAAM+5D,IAAI,GAAGpwB,SAAS,CAACowB,IAAV,KAAmBpwB,SAAS,CAACowB,IAAV,GAAiB,EAApC,CAAb;MACA,MAAMZ,OAAO,GAAG,KAAKC,QAAL,GAAgB,IAAI1qB,SAAS,CAACC,KAAd,CAAoBhF,SAAS,CAAC8wB,QAAV,CAAmB5/E,IAAvC,CAAhC;MACA4X,OAAO,CAACsnE,IAAI,CAACW,cAAN,EAAsBvB,OAAO,CAACjrB,OAAR,EAAtB,CAAP;MACA,KAAKqrB,UAAL,GAAkB;QAChBF,MAAM,EAAEU,IAAI,CAACV,MADG;QAEhB95E,KAAK,EAAEw6E,IAAI,CAACx6E,KAFI;QAGhB+5E,UAAU,EAAES,IAAI,CAACT;MAHD,CAAlB;MAKA,MAAMlhC,IAAN,CAAWuR,SAAX;MACA,KAAK6wB,WAAL,GAAmBx6D,IAAI,CAAC26D,UAAxB;IACD;;IACDztC,KAAK,CAAC1D,GAAD,EAAM93B,KAAN,EAAa;MAChB,IAAI83B,GAAG,KAAK/uC,SAAZ,EAAuB;QACrB,OAAO,IAAP;MACD;;MACD,OAAOyyC,KAAK,CAAC,IAAD,EAAO1D,GAAP,CAAZ;IACD;;IACDzY,YAAY,GAAG;MACb,MAAMA,YAAN;MACA,KAAKmnB,MAAL,GAAc;QACZx8B,IAAI,EAAE,EADM;QAEZ8xB,MAAM,EAAE,EAFI;QAGZ/G,GAAG,EAAE;MAHO,CAAd;IAKD;;IACDwS,mBAAmB,GAAG;MACpB,MAAM9mC,OAAO,GAAG,KAAKA,OAArB;MACA,MAAMgnE,OAAO,GAAG,KAAKC,QAArB;MACA,MAAM/qB,IAAI,GAAGl8C,OAAO,CAAC4nE,IAAR,CAAa1rB,IAAb,IAAqB,KAAlC;MACA,IAAI;QAAC9yD,GAAD;QAAM+B,GAAN;QAAW0qC,UAAX;QAAuBC;MAAvB,IAAqC,KAAKF,aAAL,EAAzC;;MACA,SAAS6yC,YAAT,CAAsBn+C,MAAtB,EAA8B;QAC5B,IAAI,CAACuL,UAAD,IAAe,CAAC7uB,KAAK,CAACsjB,MAAM,CAAClhC,GAAR,CAAzB,EAAuC;UACrCA,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAckhC,MAAM,CAAClhC,GAArB,CAAN;QACD;;QACD,IAAI,CAAC0sC,UAAD,IAAe,CAAC9uB,KAAK,CAACsjB,MAAM,CAACn/B,GAAR,CAAzB,EAAuC;UACrCA,GAAG,GAAGhC,IAAI,CAACgC,GAAL,CAASA,GAAT,EAAcm/B,MAAM,CAACn/B,GAArB,CAAN;QACD;MACF;;MACD,IAAI,CAAC0qC,UAAD,IAAe,CAACC,UAApB,EAAgC;QAC9B2yC,YAAY,CAAC,KAAKC,eAAL,EAAD,CAAZ;;QACA,IAAI1oE,OAAO,CAACsqB,MAAR,KAAmB,OAAnB,IAA8BtqB,OAAO,CAAC0/B,KAAR,CAAclgC,MAAd,KAAyB,QAA3D,EAAqE;UACnEipE,YAAY,CAAC,KAAK1sC,SAAL,CAAe,KAAf,CAAD,CAAZ;QACD;MACF;;MACD3yC,GAAG,GAAG8U,cAAc,CAAC9U,GAAD,CAAd,IAAuB,CAAC4d,KAAK,CAAC5d,GAAD,CAA7B,GAAqCA,GAArC,GAA2C,CAAC49E,OAAO,CAAC7qB,OAAR,CAAgB5yD,IAAI,CAACC,GAAL,EAAhB,EAA4B0yD,IAA5B,CAAlD;MACA/wD,GAAG,GAAG+S,cAAc,CAAC/S,GAAD,CAAd,IAAuB,CAAC6b,KAAK,CAAC7b,GAAD,CAA7B,GAAqCA,GAArC,GAA2C,CAAC67E,OAAO,CAAC3qB,KAAR,CAAc9yD,IAAI,CAACC,GAAL,EAAd,EAA0B0yD,IAA1B,CAAD,GAAmC,CAApF;MACA,KAAK9yD,GAAL,GAAWD,IAAI,CAACC,GAAL,CAASA,GAAT,EAAc+B,GAAG,GAAG,CAApB,CAAX;MACA,KAAKA,GAAL,GAAWhC,IAAI,CAACgC,GAAL,CAAS/B,GAAG,GAAG,CAAf,EAAkB+B,GAAlB,CAAX;IACD;;IACDu9E,eAAe,GAAG;MAChB,MAAMzmD,GAAG,GAAG,KAAK0mD,kBAAL,EAAZ;MACA,IAAIv/E,GAAG,GAAG+U,MAAM,CAACyH,iBAAjB;MACA,IAAIza,GAAG,GAAGgT,MAAM,CAAC43B,iBAAjB;;MACA,IAAI9T,GAAG,CAACr4B,MAAR,EAAgB;QACdR,GAAG,GAAG64B,GAAG,CAAC,CAAD,CAAT;QACA92B,GAAG,GAAG82B,GAAG,CAACA,GAAG,CAACr4B,MAAJ,GAAa,CAAd,CAAT;MACD;;MACD,OAAO;QAACR,GAAD;QAAM+B;MAAN,CAAP;IACD;;IACD87C,UAAU,GAAG;MACX,MAAMjnC,OAAO,GAAG,KAAKA,OAArB;MACA,MAAM4oE,QAAQ,GAAG5oE,OAAO,CAAC4nE,IAAzB;MACA,MAAMjmC,QAAQ,GAAG3hC,OAAO,CAAC0/B,KAAzB;MACA,MAAMmoC,UAAU,GAAGlmC,QAAQ,CAACniC,MAAT,KAAoB,QAApB,GAA+B,KAAKmpE,kBAAL,EAA/B,GAA2D,KAAKE,SAAL,EAA9E;;MACA,IAAI7oE,OAAO,CAACsqB,MAAR,KAAmB,OAAnB,IAA8Bu9C,UAAU,CAACj+E,MAA7C,EAAqD;QACnD,KAAKR,GAAL,GAAW,KAAKs8C,QAAL,IAAiBmiC,UAAU,CAAC,CAAD,CAAtC;QACA,KAAK18E,GAAL,GAAW,KAAKs6C,QAAL,IAAiBoiC,UAAU,CAACA,UAAU,CAACj+E,MAAX,GAAoB,CAArB,CAAtC;MACD;;MACD,MAAMR,GAAG,GAAG,KAAKA,GAAjB;MACA,MAAM+B,GAAG,GAAG,KAAKA,GAAjB;;MACA,MAAMu0C,KAAK,GAAGvvB,cAAc,CAAC03D,UAAD,EAAaz+E,GAAb,EAAkB+B,GAAlB,CAA5B;;MACA,KAAK+8E,KAAL,GAAaU,QAAQ,CAAC1sB,IAAT,KAAkBva,QAAQ,CAACT,QAAT,GAC3BmmC,yBAAyB,CAACuB,QAAQ,CAACtB,OAAV,EAAmB,KAAKl+E,GAAxB,EAA6B,KAAK+B,GAAlC,EAAuC,KAAK29E,iBAAL,CAAuB1/E,GAAvB,CAAvC,CADE,GAE3Bq+E,0BAA0B,CAAC,IAAD,EAAO/nC,KAAK,CAAC91C,MAAb,EAAqBg/E,QAAQ,CAACtB,OAA9B,EAAuC,KAAKl+E,GAA5C,EAAiD,KAAK+B,GAAtD,CAFjB,CAAb;MAGA,KAAKg9E,UAAL,GAAkB,CAACxmC,QAAQ,CAACL,KAAT,CAAeU,OAAhB,IAA2B,KAAKkmC,KAAL,KAAe,MAA1C,GAAmD5/E,SAAnD,GACdo/E,kBAAkB,CAAC,KAAKQ,KAAN,CADtB;MAEA,KAAKa,WAAL,CAAiBlB,UAAjB;;MACA,IAAI7nE,OAAO,CAACjB,OAAZ,EAAqB;QACnB2gC,KAAK,CAAC3gC,OAAN;MACD;;MACD,OAAOipE,mBAAmB,CAAC,IAAD,EAAOtoC,KAAP,EAAc,KAAKyoC,UAAnB,CAA1B;IACD;;IACDY,WAAW,CAAClB,UAAD,EAAa;MACtB,IAAIrgF,KAAK,GAAG,CAAZ;MACA,IAAIC,GAAG,GAAG,CAAV;MACA,IAAI06C,KAAJ,EAAW7W,IAAX;;MACA,IAAI,KAAKtrB,OAAL,CAAaogC,MAAb,IAAuBynC,UAAU,CAACj+E,MAAtC,EAA8C;QAC5Cu4C,KAAK,GAAG,KAAK6mC,kBAAL,CAAwBnB,UAAU,CAAC,CAAD,CAAlC,CAAR;;QACA,IAAIA,UAAU,CAACj+E,MAAX,KAAsB,CAA1B,EAA6B;UAC3BpC,KAAK,GAAG,IAAI26C,KAAZ;QACD,CAFD,MAEO;UACL36C,KAAK,GAAG,CAAC,KAAKwhF,kBAAL,CAAwBnB,UAAU,CAAC,CAAD,CAAlC,IAAyC1lC,KAA1C,IAAmD,CAA3D;QACD;;QACD7W,IAAI,GAAG,KAAK09C,kBAAL,CAAwBnB,UAAU,CAACA,UAAU,CAACj+E,MAAX,GAAoB,CAArB,CAAlC,CAAP;;QACA,IAAIi+E,UAAU,CAACj+E,MAAX,KAAsB,CAA1B,EAA6B;UAC3BnC,GAAG,GAAG6jC,IAAN;QACD,CAFD,MAEO;UACL7jC,GAAG,GAAG,CAAC6jC,IAAI,GAAG,KAAK09C,kBAAL,CAAwBnB,UAAU,CAACA,UAAU,CAACj+E,MAAX,GAAoB,CAArB,CAAlC,CAAR,IAAsE,CAA5E;QACD;MACF;;MACD,MAAMqiD,KAAK,GAAG47B,UAAU,CAACj+E,MAAX,GAAoB,CAApB,GAAwB,GAAxB,GAA8B,IAA5C;MACApC,KAAK,GAAG0hB,WAAW,CAAC1hB,KAAD,EAAQ,CAAR,EAAWykD,KAAX,CAAnB;MACAxkD,GAAG,GAAGyhB,WAAW,CAACzhB,GAAD,EAAM,CAAN,EAASwkD,KAAT,CAAjB;MACA,KAAKm8B,QAAL,GAAgB;QAAC5gF,KAAD;QAAQC,GAAR;QAAao0B,MAAM,EAAE,KAAKr0B,KAAK,GAAG,CAAR,GAAYC,GAAjB;MAArB,CAAhB;IACD;;IACDohF,SAAS,GAAG;MACV,MAAM7B,OAAO,GAAG,KAAKC,QAArB;MACA,MAAM79E,GAAG,GAAG,KAAKA,GAAjB;MACA,MAAM+B,GAAG,GAAG,KAAKA,GAAjB;MACA,MAAM6U,OAAO,GAAG,KAAKA,OAArB;MACA,MAAM4oE,QAAQ,GAAG5oE,OAAO,CAAC4nE,IAAzB;MACA,MAAMvmC,KAAK,GAAGunC,QAAQ,CAAC1sB,IAAT,IAAiBmrB,yBAAyB,CAACuB,QAAQ,CAACtB,OAAV,EAAmBl+E,GAAnB,EAAwB+B,GAAxB,EAA6B,KAAK29E,iBAAL,CAAuB1/E,GAAvB,CAA7B,CAAxD;MACA,MAAMm5E,QAAQ,GAAGhkE,cAAc,CAACqqE,QAAQ,CAACrG,QAAV,EAAoB,CAApB,CAA/B;MACA,MAAMnmB,OAAO,GAAG/a,KAAK,KAAK,MAAV,GAAmBunC,QAAQ,CAACzB,UAA5B,GAAyC,KAAzD;MACA,MAAM8B,UAAU,GAAGliE,QAAQ,CAACq1C,OAAD,CAAR,IAAqBA,OAAO,KAAK,IAApD;MACA,MAAM1c,KAAK,GAAG,EAAd;MACA,IAAIyC,KAAK,GAAG/4C,GAAZ;MACA,IAAIw+E,IAAJ,EAAUvsD,KAAV;;MACA,IAAI4tD,UAAJ,EAAgB;QACd9mC,KAAK,GAAG,CAAC6kC,OAAO,CAAC7qB,OAAR,CAAgBha,KAAhB,EAAuB,SAAvB,EAAkCia,OAAlC,CAAT;MACD;;MACDja,KAAK,GAAG,CAAC6kC,OAAO,CAAC7qB,OAAR,CAAgBha,KAAhB,EAAuB8mC,UAAU,GAAG,KAAH,GAAW5nC,KAA5C,CAAT;;MACA,IAAI2lC,OAAO,CAAC5jC,IAAR,CAAaj4C,GAAb,EAAkB/B,GAAlB,EAAuBi4C,KAAvB,IAAgC,SAASkhC,QAA7C,EAAuD;QACrD,MAAM,IAAIzgD,KAAJ,CAAU14B,GAAG,GAAG,OAAN,GAAgB+B,GAAhB,GAAsB,sCAAtB,GAA+Do3E,QAA/D,GAA0E,GAA1E,GAAgFlhC,KAA1F,CAAN;MACD;;MACD,MAAMwmC,UAAU,GAAG7nE,OAAO,CAAC0/B,KAAR,CAAclgC,MAAd,KAAyB,MAAzB,IAAmC,KAAK0pE,iBAAL,EAAtD;;MACA,KAAKtB,IAAI,GAAGzlC,KAAP,EAAc9mB,KAAK,GAAG,CAA3B,EAA8BusD,IAAI,GAAGz8E,GAArC,EAA0Cy8E,IAAI,GAAG,CAACZ,OAAO,CAACl8E,GAAR,CAAY88E,IAAZ,EAAkBrF,QAAlB,EAA4BlhC,KAA5B,CAAR,EAA4ChmB,KAAK,EAA3F,EAA+F;QAC7FssD,OAAO,CAACjoC,KAAD,EAAQkoC,IAAR,EAAcC,UAAd,CAAP;MACD;;MACD,IAAID,IAAI,KAAKz8E,GAAT,IAAgB6U,OAAO,CAACsqB,MAAR,KAAmB,OAAnC,IAA8CjP,KAAK,KAAK,CAA5D,EAA+D;QAC7DssD,OAAO,CAACjoC,KAAD,EAAQkoC,IAAR,EAAcC,UAAd,CAAP;MACD;;MACD,OAAOttE,MAAM,CAACD,IAAP,CAAYolC,KAAZ,EAAmB54B,IAAnB,CAAwB,CAAC7a,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAtC,EAAyC4C,GAAzC,CAA6CY,CAAC,IAAI,CAACA,CAAnD,CAAP;IACD;;IACD8sC,gBAAgB,CAACj/B,KAAD,EAAQ;MACtB,MAAMypE,OAAO,GAAG,KAAKC,QAArB;MACA,MAAM2B,QAAQ,GAAG,KAAK5oE,OAAL,CAAa4nE,IAA9B;;MACA,IAAIgB,QAAQ,CAACO,aAAb,EAA4B;QAC1B,OAAOnC,OAAO,CAACl+C,MAAR,CAAevrB,KAAf,EAAsBqrE,QAAQ,CAACO,aAA/B,CAAP;MACD;;MACD,OAAOnC,OAAO,CAACl+C,MAAR,CAAevrB,KAAf,EAAsBqrE,QAAQ,CAACL,cAAT,CAAwBa,QAA9C,CAAP;IACD;;IACDC,mBAAmB,CAACzB,IAAD,EAAOroE,KAAP,EAAcmgC,KAAd,EAAqB5W,MAArB,EAA6B;MAC9C,MAAM9oB,OAAO,GAAG,KAAKA,OAArB;MACA,MAAM+7C,OAAO,GAAG/7C,OAAO,CAAC4nE,IAAR,CAAaW,cAA7B;MACA,MAAMrsB,IAAI,GAAG,KAAKgsB,KAAlB;MACA,MAAMH,SAAS,GAAG,KAAKI,UAAvB;MACA,MAAMmB,WAAW,GAAGptB,IAAI,IAAIH,OAAO,CAACG,IAAD,CAAnC;MACA,MAAMqtB,WAAW,GAAGxB,SAAS,IAAIhsB,OAAO,CAACgsB,SAAD,CAAxC;MACA,MAAM79E,IAAI,GAAGw1C,KAAK,CAACngC,KAAD,CAAlB;MACA,MAAM+hC,KAAK,GAAGymC,SAAS,IAAIwB,WAAb,IAA4Br/E,IAA5B,IAAoCA,IAAI,CAACo3C,KAAvD;;MACA,MAAM/E,KAAK,GAAG,KAAK0qC,QAAL,CAAcn+C,MAAd,CAAqB8+C,IAArB,EAA2B9+C,MAAM,KAAKwY,KAAK,GAAGioC,WAAH,GAAiBD,WAA3B,CAAjC,CAAd;;MACA,MAAM7gD,SAAS,GAAGzoB,OAAO,CAAC0/B,KAAR,CAAcz5C,QAAhC;MACA,OAAOwiC,SAAS,GAAGxiC,QAAQ,CAACwiC,SAAD,EAAY,CAAC8T,KAAD,EAAQh9B,KAAR,EAAemgC,KAAf,CAAZ,EAAmC,IAAnC,CAAX,GAAsDnD,KAAtE;IACD;;IACD6L,kBAAkB,CAAC1I,KAAD,EAAQ;MACxB,IAAI71C,CAAJ,EAAOsV,IAAP,EAAajV,IAAb;;MACA,KAAKL,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGugC,KAAK,CAAC91C,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2C,EAAEtV,CAA7C,EAAgD;QAC9CK,IAAI,GAAGw1C,KAAK,CAAC71C,CAAD,CAAZ;QACAK,IAAI,CAACqyC,KAAL,GAAa,KAAK8sC,mBAAL,CAAyBn/E,IAAI,CAACqT,KAA9B,EAAqC1T,CAArC,EAAwC61C,KAAxC,CAAb;MACD;IACF;;IACDspC,kBAAkB,CAACzrE,KAAD,EAAQ;MACxB,OAAOA,KAAK,KAAK,IAAV,GAAiBu+B,GAAjB,GAAuB,CAACv+B,KAAK,GAAG,KAAKnU,GAAd,KAAsB,KAAK+B,GAAL,GAAW,KAAK/B,GAAtC,CAA9B;IACD;;IACDw7C,gBAAgB,CAACrnC,KAAD,EAAQ;MACtB,MAAMisE,OAAO,GAAG,KAAKpB,QAArB;MACA,MAAMhnE,GAAG,GAAG,KAAK4nE,kBAAL,CAAwBzrE,KAAxB,CAAZ;MACA,OAAO,KAAKktC,kBAAL,CAAwB,CAAC++B,OAAO,CAAChiF,KAAR,GAAgB4Z,GAAjB,IAAwBooE,OAAO,CAAC3tD,MAAxD,CAAP;IACD;;IACD2uB,gBAAgB,CAAC9/B,KAAD,EAAQ;MACtB,MAAM8+D,OAAO,GAAG,KAAKpB,QAArB;MACA,MAAMhnE,GAAG,GAAG,KAAKupC,kBAAL,CAAwBjgC,KAAxB,IAAiC8+D,OAAO,CAAC3tD,MAAzC,GAAkD2tD,OAAO,CAAC/hF,GAAtE;MACA,OAAO,KAAK2B,GAAL,GAAWgY,GAAG,IAAI,KAAKjW,GAAL,GAAW,KAAK/B,GAApB,CAArB;IACD;;IACDqgF,aAAa,CAACltC,KAAD,EAAQ;MACnB,MAAMmtC,SAAS,GAAG,KAAK1pE,OAAL,CAAa0/B,KAA/B;MACA,MAAMiqC,cAAc,GAAG,KAAKtmE,GAAL,CAASuG,WAAT,CAAqB2yB,KAArB,EAA4B1yB,KAAnD;MACA,MAAMzB,KAAK,GAAGX,SAAS,CAAC,KAAKqT,YAAL,KAAsB4uD,SAAS,CAAC5oC,WAAhC,GAA8C4oC,SAAS,CAAC7oC,WAAzD,CAAvB;MACA,MAAM+oC,WAAW,GAAGzgF,IAAI,CAAC+iB,GAAL,CAAS9D,KAAT,CAApB;MACA,MAAMyhE,WAAW,GAAG1gF,IAAI,CAAC8iB,GAAL,CAAS7D,KAAT,CAApB;;MACA,MAAM0hE,YAAY,GAAG,KAAKx/B,uBAAL,CAA6B,CAA7B,EAAgC5oC,IAArD;;MACA,OAAO;QACLlT,CAAC,EAAGm7E,cAAc,GAAGC,WAAlB,GAAkCE,YAAY,GAAGD,WAD/C;QAELt8E,CAAC,EAAGo8E,cAAc,GAAGE,WAAlB,GAAkCC,YAAY,GAAGF;MAF/C,CAAP;IAID;;IACDd,iBAAiB,CAACiB,WAAD,EAAc;MAC7B,MAAMnB,QAAQ,GAAG,KAAK5oE,OAAL,CAAa4nE,IAA9B;MACA,MAAMW,cAAc,GAAGK,QAAQ,CAACL,cAAhC;MACA,MAAMz/C,MAAM,GAAGy/C,cAAc,CAACK,QAAQ,CAAC1sB,IAAV,CAAd,IAAiCqsB,cAAc,CAACpC,WAA/D;;MACA,MAAM6D,YAAY,GAAG,KAAKX,mBAAL,CAAyBU,WAAzB,EAAsC,CAAtC,EAAyC/B,mBAAmB,CAAC,IAAD,EAAO,CAAC+B,WAAD,CAAP,EAAsB,KAAK5B,UAA3B,CAA5D,EAAoGr/C,MAApG,CAArB;;MACA,MAAMpnB,IAAI,GAAG,KAAK+nE,aAAL,CAAmBO,YAAnB,CAAb;;MACA,MAAMzC,QAAQ,GAAGp+E,IAAI,CAACqd,KAAL,CAAW,KAAKsU,YAAL,KAAsB,KAAKjR,KAAL,GAAanI,IAAI,CAAClT,CAAxC,GAA4C,KAAK0c,MAAL,GAAcxJ,IAAI,CAACnU,CAA1E,IAA+E,CAAhG;MACA,OAAOg6E,QAAQ,GAAG,CAAX,GAAeA,QAAf,GAA0B,CAAjC;IACD;;IACD2B,iBAAiB,GAAG;MAClB,IAAIrB,UAAU,GAAG,KAAK9hC,MAAL,CAAYx8B,IAAZ,IAAoB,EAArC;MACA,IAAI1f,CAAJ,EAAOsV,IAAP;;MACA,IAAI0oE,UAAU,CAACj+E,MAAf,EAAuB;QACrB,OAAOi+E,UAAP;MACD;;MACD,MAAMzhC,KAAK,GAAG,KAAK7P,uBAAL,EAAd;;MACA,IAAI,KAAK8xC,WAAL,IAAoBjiC,KAAK,CAACx8C,MAA9B,EAAsC;QACpC,OAAQ,KAAKm8C,MAAL,CAAYx8B,IAAZ,GAAmB68B,KAAK,CAAC,CAAD,CAAL,CAASrwB,UAAT,CAAoBqmB,kBAApB,CAAuC,IAAvC,CAA3B;MACD;;MACD,KAAKvyC,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGinC,KAAK,CAACx8C,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2C,EAAEtV,CAA7C,EAAgD;QAC9Cg+E,UAAU,GAAGA,UAAU,CAACzrD,MAAX,CAAkBgqB,KAAK,CAACv8C,CAAD,CAAL,CAASksB,UAAT,CAAoBqmB,kBAApB,CAAuC,IAAvC,CAAlB,CAAb;MACD;;MACD,OAAQ,KAAK2J,MAAL,CAAYx8B,IAAZ,GAAmB,KAAK2gB,SAAL,CAAe29C,UAAf,CAA3B;IACD;;IACDc,kBAAkB,GAAG;MACnB,MAAMd,UAAU,GAAG,KAAK9hC,MAAL,CAAY1K,MAAZ,IAAsB,EAAzC;MACA,IAAIxxC,CAAJ,EAAOsV,IAAP;;MACA,IAAI0oE,UAAU,CAACj+E,MAAf,EAAuB;QACrB,OAAOi+E,UAAP;MACD;;MACD,MAAMxsC,MAAM,GAAG,KAAKC,SAAL,EAAf;;MACA,KAAKzxC,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGk8B,MAAM,CAACzxC,MAA1B,EAAkCC,CAAC,GAAGsV,IAAtC,EAA4C,EAAEtV,CAA9C,EAAiD;QAC/Cg+E,UAAU,CAACh9E,IAAX,CAAgBkwC,KAAK,CAAC,IAAD,EAAOM,MAAM,CAACxxC,CAAD,CAAb,CAArB;MACD;;MACD,OAAQ,KAAKk8C,MAAL,CAAY1K,MAAZ,GAAqB,KAAKgtC,WAAL,GAAmBR,UAAnB,GAAgC,KAAK39C,SAAL,CAAe29C,UAAf,CAA7D;IACD;;IACD39C,SAAS,CAAChoB,MAAD,EAAS;MAChB,OAAO8O,YAAY,CAAC9O,MAAM,CAAC4E,IAAP,CAAYigE,MAAZ,CAAD,CAAnB;IACD;;EAhP2B;;EAkP9BkB,SAAS,CAACpqE,EAAV,GAAe,MAAf;EACAoqE,SAAS,CAAC9iE,QAAV,GAAqB;IACnBmlB,MAAM,EAAE,MADW;IAEnBg+C,QAAQ,EAAE,EAFS;IAGnBV,IAAI,EAAE;MACJV,MAAM,EAAE,KADJ;MAEJhrB,IAAI,EAAE,KAFF;MAGJ9uD,KAAK,EAAE,KAHH;MAIJ+5E,UAAU,EAAE,KAJR;MAKJG,OAAO,EAAE,aALL;MAMJiB,cAAc,EAAE;IANZ,CAHa;IAWnB7oC,KAAK,EAAE;MACLlgC,MAAM,EAAE,MADH;MAEL8hC,KAAK,EAAE;QACLU,OAAO,EAAE;MADJ;IAFF;EAXY,CAArB;;EAmBA,SAAS6pB,WAAT,CAAqBj8C,KAArB,EAA4B9S,GAA5B,EAAiCiC,OAAjC,EAA0C;IACxC,IAAIgR,EAAE,GAAG,CAAT;IACA,IAAID,EAAE,GAAGF,KAAK,CAAChmB,MAAN,GAAe,CAAxB;IACA,IAAIqgF,UAAJ,EAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,UAAxC;;IACA,IAAIrrE,OAAJ,EAAa;MACX,IAAIjC,GAAG,IAAI8S,KAAK,CAACG,EAAD,CAAL,CAAU3O,GAAjB,IAAwBtE,GAAG,IAAI8S,KAAK,CAACE,EAAD,CAAL,CAAU1O,GAA7C,EAAkD;QAChD,CAAC;UAAC2O,EAAD;UAAKD;QAAL,IAAWG,YAAY,CAACL,KAAD,EAAQ,KAAR,EAAe9S,GAAf,CAAxB;MACD;;MACD,CAAC;QAACsE,GAAG,EAAE6oE,UAAN;QAAkBrC,IAAI,EAAEuC;MAAxB,IAAsCv6D,KAAK,CAACG,EAAD,CAA5C;MACA,CAAC;QAAC3O,GAAG,EAAE8oE,UAAN;QAAkBtC,IAAI,EAAEwC;MAAxB,IAAsCx6D,KAAK,CAACE,EAAD,CAA5C;IACD,CAND,MAMO;MACL,IAAIhT,GAAG,IAAI8S,KAAK,CAACG,EAAD,CAAL,CAAU63D,IAAjB,IAAyB9qE,GAAG,IAAI8S,KAAK,CAACE,EAAD,CAAL,CAAU83D,IAA9C,EAAoD;QAClD,CAAC;UAAC73D,EAAD;UAAKD;QAAL,IAAWG,YAAY,CAACL,KAAD,EAAQ,MAAR,EAAgB9S,GAAhB,CAAxB;MACD;;MACD,CAAC;QAAC8qE,IAAI,EAAEqC,UAAP;QAAmB7oE,GAAG,EAAE+oE;MAAxB,IAAsCv6D,KAAK,CAACG,EAAD,CAA5C;MACA,CAAC;QAAC63D,IAAI,EAAEsC,UAAP;QAAmB9oE,GAAG,EAAEgpE;MAAxB,IAAsCx6D,KAAK,CAACE,EAAD,CAA5C;IACD;;IACD,MAAMu6D,IAAI,GAAGH,UAAU,GAAGD,UAA1B;IACA,OAAOI,IAAI,GAAGF,UAAU,GAAG,CAACC,UAAU,GAAGD,UAAd,KAA6BrtE,GAAG,GAAGmtE,UAAnC,IAAiDI,IAAjE,GAAwEF,UAAnF;EACD;;EACD,MAAMG,eAAN,SAA8BrC,SAA9B,CAAwC;IACtCjgF,WAAW,CAAC8wB,KAAD,EAAQ;MACjB,MAAMA,KAAN;MACA,KAAKyxD,MAAL,GAAc,EAAd;MACA,KAAKC,OAAL,GAAeliF,SAAf;MACA,KAAKmiF,WAAL,GAAmBniF,SAAnB;IACD;;IACDygF,WAAW,GAAG;MACZ,MAAMlB,UAAU,GAAG,KAAK6C,sBAAL,EAAnB;;MACA,MAAM96D,KAAK,GAAG,KAAK26D,MAAL,GAAc,KAAKI,gBAAL,CAAsB9C,UAAtB,CAA5B;MACA,KAAK2C,OAAL,GAAe3e,WAAW,CAACj8C,KAAD,EAAQ,KAAKxmB,GAAb,CAA1B;MACA,KAAKqhF,WAAL,GAAmB5e,WAAW,CAACj8C,KAAD,EAAQ,KAAKzkB,GAAb,CAAX,GAA+B,KAAKq/E,OAAvD;MACA,MAAMzB,WAAN,CAAkBlB,UAAlB;IACD;;IACD8C,gBAAgB,CAAC9C,UAAD,EAAa;MAC3B,MAAM;QAACz+E,GAAD;QAAM+B;MAAN,IAAa,IAAnB;MACA,MAAMxB,KAAK,GAAG,EAAd;MACA,MAAMimB,KAAK,GAAG,EAAd;MACA,IAAI/lB,CAAJ,EAAOsV,IAAP,EAAasmB,IAAb,EAAmBo3B,IAAnB,EAAyBx5B,IAAzB;;MACA,KAAKx5B,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAG0oE,UAAU,CAACj+E,MAA9B,EAAsCC,CAAC,GAAGsV,IAA1C,EAAgD,EAAEtV,CAAlD,EAAqD;QACnDgzD,IAAI,GAAGgrB,UAAU,CAACh+E,CAAD,CAAjB;;QACA,IAAIgzD,IAAI,IAAIzzD,GAAR,IAAeyzD,IAAI,IAAI1xD,GAA3B,EAAgC;UAC9BxB,KAAK,CAACkB,IAAN,CAAWgyD,IAAX;QACD;MACF;;MACD,IAAIlzD,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;QACpB,OAAO,CACL;UAACg+E,IAAI,EAAEx+E,GAAP;UAAYgY,GAAG,EAAE;QAAjB,CADK,EAEL;UAACwmE,IAAI,EAAEz8E,GAAP;UAAYiW,GAAG,EAAE;QAAjB,CAFK,CAAP;MAID;;MACD,KAAKvX,CAAC,GAAG,CAAJ,EAAOsV,IAAI,GAAGxV,KAAK,CAACC,MAAzB,EAAiCC,CAAC,GAAGsV,IAArC,EAA2C,EAAEtV,CAA7C,EAAgD;QAC9Cw5B,IAAI,GAAG15B,KAAK,CAACE,CAAC,GAAG,CAAL,CAAZ;QACA47B,IAAI,GAAG97B,KAAK,CAACE,CAAC,GAAG,CAAL,CAAZ;QACAgzD,IAAI,GAAGlzD,KAAK,CAACE,CAAD,CAAZ;;QACA,IAAIV,IAAI,CAACiE,KAAL,CAAW,CAACi2B,IAAI,GAAGoC,IAAR,IAAgB,CAA3B,MAAkCo3B,IAAtC,EAA4C;UAC1CjtC,KAAK,CAAC/kB,IAAN,CAAW;YAAC+8E,IAAI,EAAE/qB,IAAP;YAAaz7C,GAAG,EAAEvX,CAAC,IAAIsV,IAAI,GAAG,CAAX;UAAnB,CAAX;QACD;MACF;;MACD,OAAOyQ,KAAP;IACD;;IACD86D,sBAAsB,GAAG;MACvB,IAAI7C,UAAU,GAAG,KAAK9hC,MAAL,CAAYzR,GAAZ,IAAmB,EAApC;;MACA,IAAIuzC,UAAU,CAACj+E,MAAf,EAAuB;QACrB,OAAOi+E,UAAP;MACD;;MACD,MAAMt+D,IAAI,GAAG,KAAK2/D,iBAAL,EAAb;MACA,MAAM3sC,KAAK,GAAG,KAAKosC,kBAAL,EAAd;;MACA,IAAIp/D,IAAI,CAAC3f,MAAL,IAAe2yC,KAAK,CAAC3yC,MAAzB,EAAiC;QAC/Bi+E,UAAU,GAAG,KAAK39C,SAAL,CAAe3gB,IAAI,CAAC6S,MAAL,CAAYmgB,KAAZ,CAAf,CAAb;MACD,CAFD,MAEO;QACLsrC,UAAU,GAAGt+D,IAAI,CAAC3f,MAAL,GAAc2f,IAAd,GAAqBgzB,KAAlC;MACD;;MACDsrC,UAAU,GAAG,KAAK9hC,MAAL,CAAYzR,GAAZ,GAAkBuzC,UAA/B;MACA,OAAOA,UAAP;IACD;;IACDmB,kBAAkB,CAACzrE,KAAD,EAAQ;MACxB,OAAO,CAACsuD,WAAW,CAAC,KAAK0e,MAAN,EAAchtE,KAAd,CAAX,GAAkC,KAAKitE,OAAxC,IAAmD,KAAKC,WAA/D;IACD;;IACDjgC,gBAAgB,CAAC9/B,KAAD,EAAQ;MACtB,MAAM8+D,OAAO,GAAG,KAAKpB,QAArB;MACA,MAAM19B,OAAO,GAAG,KAAKC,kBAAL,CAAwBjgC,KAAxB,IAAiC8+D,OAAO,CAAC3tD,MAAzC,GAAkD2tD,OAAO,CAAC/hF,GAA1E;MACA,OAAOokE,WAAW,CAAC,KAAK0e,MAAN,EAAc7/B,OAAO,GAAG,KAAK+/B,WAAf,GAA6B,KAAKD,OAAhD,EAAyD,IAAzD,CAAlB;IACD;;EA/DqC;;EAiExCF,eAAe,CAACzsE,EAAhB,GAAqB,YAArB;EACAysE,eAAe,CAACnlE,QAAhB,GAA2B8iE,SAAS,CAAC9iE,QAArC;EAEA,IAAIhB,MAAM,GAAG,aAAa5J,MAAM,CAACykB,MAAP,CAAc;IACxCgO,SAAS,EAAE,IAD6B;IAExCszC,aAAa,EAAEA,aAFyB;IAGxCoC,WAAW,EAAEA,WAH2B;IAIxCS,gBAAgB,EAAEA,gBAJsB;IAKxCiC,iBAAiB,EAAEA,iBALqB;IAMxC6C,SAAS,EAAEA,SAN6B;IAOxCqC,eAAe,EAAEA;EAPuB,CAAd,CAA1B;EAUA5kF,KAAK,CAAC2oD,QAAN,CAAea,WAAf,EAA4B/qC,MAA5B,EAAoCtB,QAApC,EAA8CmB,OAA9C;EACAte,KAAK,CAACqnC,OAAN,GAAgB,EAAC,GAAGA;EAAJ,CAAhB;EACArnC,KAAK,CAAC62D,SAAN,GAAkBA,SAAlB;EACA72D,KAAK,CAACksC,SAAN,GAAkBA,SAAlB;EACAlsC,KAAK,CAAC8tC,UAAN,GAAmBA,UAAnB;EACA9tC,KAAK,CAAC+F,QAAN,GAAiBA,QAAjB;EACA/F,KAAK,CAACwpD,WAAN,GAAoBqB,QAAQ,CAACrB,WAAT,CAAqBvlD,KAAzC;EACAjE,KAAK,CAACsyC,iBAAN,GAA0BA,iBAA1B;EACAtyC,KAAK,CAACw5C,OAAN,GAAgBA,OAAhB;EACAx5C,KAAK,CAACmd,QAAN,GAAiBA,QAAjB;EACAnd,KAAK,CAACwyB,WAAN,GAAoBA,WAApB;EACAxyB,KAAK,CAACs1B,OAAN,GAAgBA,OAAhB;EACAt1B,KAAK,CAAC4rC,SAAN,GAAkBA,SAAlB;EACA5rC,KAAK,CAACm/C,KAAN,GAAcA,KAAd;EACAn/C,KAAK,CAACy6C,KAAN,GAAcA,KAAd;EACA5lC,MAAM,CAACgB,MAAP,CAAc7V,KAAd,EAAqBwpD,WAArB,EAAkC/qC,MAAlC,EAA0CtB,QAA1C,EAAoDmB,OAApD,EAA6DstB,SAA7D;EACA5rC,KAAK,CAACA,KAAN,GAAcA,KAAd;;EACA,IAAI,OAAOM,MAAP,KAAkB,WAAtB,EAAmC;IACjCA,MAAM,CAACN,KAAP,GAAeA,KAAf;EACD;;EAED,OAAOA,KAAP;AAEC,CA98ZD"},"metadata":{},"sourceType":"script"}