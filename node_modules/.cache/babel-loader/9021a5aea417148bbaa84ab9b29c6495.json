{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\cameraProject_frontend-main\\\\src\\\\components\\\\ImgDropAndCrop.js\";\nimport React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport \"./custom-image-crop.css\";\nimport Form from \"react-bootstrap/Form\";\nimport { FormControl } from \"react-bootstrap\";\nimport { base64StringtoFile, downloadBase64File, extractImageFileExtensionFromBase64, image64toCanvasRef } from \"./ResuableUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageMaxSize = 1000000000; // bytes\n\nconst acceptedFileTypes = \"image/x-png, image/png, image/jpg, image/jpeg, image/gif\";\nconst acceptedFileTypesArray = acceptedFileTypes.split(\",\").map(item => {\n  return item.trim();\n});\n\nclass ImgDropAndCrop extends Component {\n  constructor(props) {\n    super(props);\n\n    this.verifyFile = files => {\n      if (files && files.length > 0) {\n        const currentFile = files[0];\n        const currentFileType = currentFile.type;\n        const currentFileSize = currentFile.size;\n\n        if (currentFileSize > imageMaxSize) {\n          alert(\"This file is not allowed. \" + currentFileSize + \" bytes is too large\");\n          return false;\n        }\n\n        if (!acceptedFileTypesArray.includes(currentFileType)) {\n          alert(\"This file is not allowed. Only images are allowed.\");\n          return false;\n        }\n\n        return true;\n      }\n    };\n\n    this.handleOnDrop = (files, rejectedFiles) => {\n      console.log(\"files\");\n\n      if (rejectedFiles && rejectedFiles.length > 0) {\n        this.verifyFile(rejectedFiles);\n      }\n\n      if (files && files.length > 0) {\n        const isVerified = this.verifyFile(files);\n\n        if (isVerified) {\n          // imageBase64Data\n          const currentFile = files[0];\n          const myFileItemReader = new FileReader();\n          myFileItemReader.addEventListener(\"load\", () => {\n            // console.log(myFileItemReader.result)\n            const myResult = myFileItemReader.result;\n            this.setState({\n              imgSrc: myResult,\n              imgSrcExt: extractImageFileExtensionFromBase64(myResult)\n            });\n          }, false);\n          myFileItemReader.readAsDataURL(currentFile);\n        }\n      }\n    };\n\n    this.handleImageLoaded = image => {\n      this.setState({\n        crop: {\n          width: image.width,\n          height: image.height\n        }\n      });\n      console.log(\"zebi\");\n    };\n\n    this.handleDragOver = image => {\n      image.preventDefault();\n    };\n\n    this.handleOnCropChange = crop => {\n      this.setState({\n        crop: crop\n      });\n    };\n\n    this.handleOnCropComplete = (crop, pixelCrop) => {\n      console.log(\"crop\", crop, \"px crop:\", pixelCrop);\n      this.setState({\n        showLabel: true\n      });\n      const canvasRef = this.imagePreviewCanvasRef.current;\n      const {\n        imgSrc\n      } = this.state;\n      image64toCanvasRef(canvasRef, imgSrc, crop);\n    };\n\n    this.handleDownloadClick = event => {\n      const {\n        imgSrc\n      } = this.state;\n\n      if (imgSrc) {\n        const canvasRef = this.imagePreviewCanvasRef.current;\n        const {\n          imgSrcExt\n        } = this.state;\n        const imageData64 = canvasRef.toDataURL(\"image/\" + imgSrcExt);\n        const myFilename = \"previewFile.\" + imgSrcExt; // file to be uploaded\n\n        const myNewCroppedFile = base64StringtoFile(imageData64, myFilename);\n        console.log(myNewCroppedFile); // download file\n\n        downloadBase64File(imageData64, myFilename);\n        this.handleClearToDefault();\n      }\n    };\n\n    this.handleClearToDefault = event => {\n      if (event) event.preventDefault();\n      const canvas = this.imagePreviewCanvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      this.setState({\n        imgSrc: null,\n        imgSrcExt: null,\n        crop: {\n          aspect: 1 / 1\n        }\n      });\n      this.fileInputRef.current.value = null;\n    };\n\n    this.handleFileSelect = event => {\n      const [file] = event.target.files;\n      this.setState({\n        imgSrc: URL.createObjectURL(file),\n        imgSrcExt: extractImageFileExtensionFromBase64(URL.createObjectURL(file))\n      });\n      const files = event.target.files;\n\n      if (files && files.length > 0) {\n        const isVerified = this.verifyFile(files);\n\n        if (isVerified) {\n          // imageBase64Data\n          const currentFile = files[0];\n          const myFileItemReader = new FileReader();\n          myFileItemReader.addEventListener(\"load\", () => {\n            // console.log(myFileItemReader.result)\n            this.setState({\n              imgSrc: URL.createObjectURL(file),\n              imgSrcExt: extractImageFileExtensionFromBase64(URL.createObjectURL(file))\n            });\n          }, false);\n          myFileItemReader.readAsDataURL(currentFile);\n        }\n      }\n    };\n\n    this.state = {};\n    this.imagePreviewCanvasRef = /*#__PURE__*/React.createRef();\n    this.fileInputRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      label: \"\",\n      error: \"\",\n      showLabel: false,\n      imgSrc: null,\n      imgSrcExt: null,\n      crop: {\n        aspect: 2 / 3\n      }\n    };\n  }\n\n  render() {\n    const {\n      imgSrc\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Video Zoning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.fileInputRef,\n        type: \"file\",\n        accept: acceptedFileTypes,\n        multiple: false,\n        onChange: this.handleFileSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), imgSrc !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n          height: \"360px\",\n          width: \"720px\",\n          src: imgSrc,\n          crop: this.state.crop,\n          onImageLoaded: this.handleImageLoaded,\n          onComplete: this.handleOnCropComplete,\n          onChange: this.handleOnCropChange,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgSrc,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Preview Canvas Crop \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.imagePreviewCanvasRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Dropzone, {\n        onDragOver: this.handleDragOver,\n        onDrop: this.handleOnDrop,\n        accept: acceptedFileTypes,\n        multiple: false,\n        maxSize: imageMaxSize,\n        children: dropzoneProps => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drop some files here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), this.state.showLabel === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            width: \"4px\",\n            type: \"text\",\n            name: \"label\",\n            onChange: () => {\n              if (typeof document.getElementsByName(\"label\")[0] != \"undefined\" && document.getElementsByName(\"label\")[0].value >= 1) {\n                this.setState({\n                  label: this.value\n                });\n                this.setState({\n                  error: \"\"\n                });\n              } else {\n                this.setState({\n                  label: this.value\n                });\n              }\n\n              this.setState({\n                error: \"Please select a video file (.mp4 or .avi)\"\n              });\n            },\n            value: this.state.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleDownloadClick,\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleClearToDefault,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ImgDropAndCrop;","map":{"version":3,"names":["React","Component","Dropzone","ReactCrop","Form","FormControl","base64StringtoFile","downloadBase64File","extractImageFileExtensionFromBase64","image64toCanvasRef","imageMaxSize","acceptedFileTypes","acceptedFileTypesArray","split","map","item","trim","ImgDropAndCrop","constructor","props","verifyFile","files","length","currentFile","currentFileType","type","currentFileSize","size","alert","includes","handleOnDrop","rejectedFiles","console","log","isVerified","myFileItemReader","FileReader","addEventListener","myResult","result","setState","imgSrc","imgSrcExt","readAsDataURL","handleImageLoaded","image","crop","width","height","handleDragOver","preventDefault","handleOnCropChange","handleOnCropComplete","pixelCrop","showLabel","canvasRef","imagePreviewCanvasRef","current","state","handleDownloadClick","event","imageData64","toDataURL","myFilename","myNewCroppedFile","handleClearToDefault","canvas","ctx","getContext","clearRect","aspect","fileInputRef","value","handleFileSelect","file","target","URL","createObjectURL","createRef","label","error","render","dropzoneProps","document","getElementsByName"],"sources":["C:/Users/user/Documents/cameraProject_frontend-main/src/components/ImgDropAndCrop.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nimport Dropzone from \"react-dropzone\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport \"./custom-image-crop.css\";\nimport Form from \"react-bootstrap/Form\";\nimport { FormControl } from \"react-bootstrap\";\n\nimport {\n  base64StringtoFile,\n  downloadBase64File,\n  extractImageFileExtensionFromBase64,\n  image64toCanvasRef,\n} from \"./ResuableUtils\";\n\nconst imageMaxSize = 1000000000; // bytes\nconst acceptedFileTypes =\n  \"image/x-png, image/png, image/jpg, image/jpeg, image/gif\";\nconst acceptedFileTypesArray = acceptedFileTypes.split(\",\").map((item) => {\n  return item.trim();\n});\nclass ImgDropAndCrop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.imagePreviewCanvasRef = React.createRef();\n    this.fileInputRef = React.createRef();\n    this.state = {\n      label: \"\",\n      error: \"\",\n      showLabel: false,\n      imgSrc: null,\n      imgSrcExt: null,\n      crop: {\n        aspect: 2 / 3,\n      },\n    };\n  }\n\n  verifyFile = (files) => {\n    if (files && files.length > 0) {\n      const currentFile = files[0];\n      const currentFileType = currentFile.type;\n      const currentFileSize = currentFile.size;\n      if (currentFileSize > imageMaxSize) {\n        alert(\n          \"This file is not allowed. \" + currentFileSize + \" bytes is too large\"\n        );\n        return false;\n      }\n      if (!acceptedFileTypesArray.includes(currentFileType)) {\n        alert(\"This file is not allowed. Only images are allowed.\");\n        return false;\n      }\n      return true;\n    }\n  };\n\n  handleOnDrop = (files, rejectedFiles) => {\n    console.log(\"files\");\n    if (rejectedFiles && rejectedFiles.length > 0) {\n      this.verifyFile(rejectedFiles);\n    }\n\n    if (files && files.length > 0) {\n      const isVerified = this.verifyFile(files);\n      if (isVerified) {\n        // imageBase64Data\n        const currentFile = files[0];\n        const myFileItemReader = new FileReader();\n        myFileItemReader.addEventListener(\n          \"load\",\n          () => {\n            // console.log(myFileItemReader.result)\n            const myResult = myFileItemReader.result;\n            this.setState({\n              imgSrc: myResult,\n              imgSrcExt: extractImageFileExtensionFromBase64(myResult),\n            });\n          },\n          false\n        );\n\n        myFileItemReader.readAsDataURL(currentFile);\n      }\n    }\n  };\n\n  handleImageLoaded = (image) => {\n    this.setState({ crop: { width: image.width, height: image.height } });\n    console.log(\"zebi\");\n  };\n\n  handleDragOver = (image) => {\n    image.preventDefault();\n  };\n\n  handleOnCropChange = (crop) => {\n    this.setState({ crop: crop });\n  };\n  handleOnCropComplete = (crop, pixelCrop) => {\n    console.log(\"crop\", crop, \"px crop:\", pixelCrop);\n    this.setState({ showLabel: true });\n    const canvasRef = this.imagePreviewCanvasRef.current;\n    const { imgSrc } = this.state;\n    image64toCanvasRef(canvasRef, imgSrc, crop);\n  };\n  handleDownloadClick = (event) => {\n    const { imgSrc } = this.state;\n    if (imgSrc) {\n      const canvasRef = this.imagePreviewCanvasRef.current;\n\n      const { imgSrcExt } = this.state;\n      const imageData64 = canvasRef.toDataURL(\"image/\" + imgSrcExt);\n\n      const myFilename = \"previewFile.\" + imgSrcExt;\n\n      // file to be uploaded\n      const myNewCroppedFile = base64StringtoFile(imageData64, myFilename);\n      console.log(myNewCroppedFile);\n      // download file\n      downloadBase64File(imageData64, myFilename);\n      this.handleClearToDefault();\n    }\n  };\n\n  handleClearToDefault = (event) => {\n    if (event) event.preventDefault();\n    const canvas = this.imagePreviewCanvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    this.setState({\n      imgSrc: null,\n      imgSrcExt: null,\n      crop: {\n        aspect: 1 / 1,\n      },\n    });\n    this.fileInputRef.current.value = null;\n  };\n\n  handleFileSelect = (event) => {\n    const [file] = event.target.files;\n    this.setState({\n      imgSrc: URL.createObjectURL(file),\n      imgSrcExt: extractImageFileExtensionFromBase64(URL.createObjectURL(file)),\n    });\n\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      const isVerified = this.verifyFile(files);\n      if (isVerified) {\n        // imageBase64Data\n        const currentFile = files[0];\n        const myFileItemReader = new FileReader();\n        myFileItemReader.addEventListener(\n          \"load\",\n          () => {\n            // console.log(myFileItemReader.result)\n            this.setState({\n              imgSrc: URL.createObjectURL(file),\n              imgSrcExt: extractImageFileExtensionFromBase64(\n                URL.createObjectURL(file)\n              ),\n            });\n          },\n          false\n        );\n\n        myFileItemReader.readAsDataURL(currentFile);\n      }\n    }\n  };\n  render() {\n    const { imgSrc } = this.state;\n    return (\n      <div>\n        <h1>Video Zoning</h1>\n        <input\n          ref={this.fileInputRef}\n          type=\"file\"\n          accept={acceptedFileTypes}\n          multiple={false}\n          onChange={this.handleFileSelect}\n        />\n\n        {imgSrc !== null ? (\n          <div>\n            <ReactCrop\n              height=\"360px\"\n              width=\"720px\"\n              src={imgSrc}\n              crop={this.state.crop}\n              onImageLoaded={this.handleImageLoaded}\n              onComplete={this.handleOnCropComplete}\n              onChange={this.handleOnCropChange}\n            >\n              <img src={imgSrc} alt=\"\" />\n            </ReactCrop>\n\n            <br/>\n            <p>Preview Canvas Crop </p>\n            <canvas\n              \n              ref={this.imagePreviewCanvasRef}\n            ></canvas>\n          </div>\n        ) : (\n          <Dropzone\n            onDragOver={this.handleDragOver}\n            onDrop={this.handleOnDrop}\n            accept={acceptedFileTypes}\n            multiple={false}\n            maxSize={imageMaxSize}\n          >\n            {(dropzoneProps) => {\n              return (\n                <div>\n                  <p>Drop some files here</p>\n                </div>\n              );\n            }}\n          </Dropzone>\n        )}\n        {this.state.showLabel === true && (\n          <div>\n            <div class=\"container\">\n              <Form.Label>Label</Form.Label>\n              <FormControl\n                width=\"4px\"\n                type=\"text\"\n                name=\"label\"\n                onChange={() => {\n                  if (\n                    typeof document.getElementsByName(\"label\")[0] !=\n                      \"undefined\" &&\n                    document.getElementsByName(\"label\")[0].value >= 1\n                  ) {\n                    this.setState({ label: this.value });\n                    this.setState({ error: \"\" });\n                  } else {\n                    this.setState({ label: this.value });\n                  }\n                  this.setState({\n                    error: \"Please select a video file (.mp4 or .avi)\",\n                  });\n                }}\n                value={this.state.label}\n              />\n              <button onClick={this.handleDownloadClick}>Download</button>\n              <button onClick={this.handleClearToDefault}>Clear</button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ImgDropAndCrop;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}