{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: 0,\n  imageSrc: \"\",\n  imgName: \"\"\n};\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    uploadImage: (state, action) => {\n      state.imageSrc = action.payload;\n    },\n    setImgName: (state, action) => {\n      state.imgName = action.payload;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  increment,\n  decrement,\n  incrementByAmount,\n  uploadImage,\n  setImgName\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","imageSrc","imgName","counterSlice","name","reducers","increment","state","decrement","uploadImage","action","payload","setImgName","incrementByAmount","actions","reducer"],"sources":["C:/Users/user/Documents/cameraProject_frontend-main/src/features/counter/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  value: 0,\r\n  imageSrc:\"\",\r\n  imgName:\"\"\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1\r\n    },\r\n    uploadImage: (state,action) => {\r\n      state.imageSrc = action.payload\r\n    },\r\n    setImgName: (state,action) => {\r\n      state.imgName= action.payload\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload\r\n    },\r\n\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount ,uploadImage,setImgName} = counterSlice.actions\r\n\r\nexport default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CADY;EAEnBC,QAAQ,EAAC,EAFU;EAGnBC,OAAO,EAAC;AAHW,CAArB;AAMA,OAAO,MAAMC,YAAY,GAAGL,WAAW,CAAC;EACtCM,IAAI,EAAE,SADgC;EAEtCL,YAFsC;EAGtCM,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAD,IAAW;MACpB;MACA;MACA;MACA;MACAA,KAAK,CAACP,KAAN,IAAe,CAAf;IACD,CAPO;IAQRQ,SAAS,EAAGD,KAAD,IAAW;MACpBA,KAAK,CAACP,KAAN,IAAe,CAAf;IACD,CAVO;IAWRS,WAAW,EAAE,CAACF,KAAD,EAAOG,MAAP,KAAkB;MAC7BH,KAAK,CAACN,QAAN,GAAiBS,MAAM,CAACC,OAAxB;IACD,CAbO;IAcRC,UAAU,EAAE,CAACL,KAAD,EAAOG,MAAP,KAAkB;MAC5BH,KAAK,CAACL,OAAN,GAAeQ,MAAM,CAACC,OAAtB;IACD,CAhBO;IAiBRE,iBAAiB,EAAE,CAACN,KAAD,EAAQG,MAAR,KAAmB;MACpCH,KAAK,CAACP,KAAN,IAAeU,MAAM,CAACC,OAAtB;IACD;EAnBO;AAH4B,CAAD,CAAhC,C,CA2BP;;AACA,OAAO,MAAM;EAAEL,SAAF;EAAaE,SAAb;EAAwBK,iBAAxB;EAA2CJ,WAA3C;EAAuDG;AAAvD,IAAqET,YAAY,CAACW,OAAxF;AAEP,eAAeX,YAAY,CAACY,OAA5B"},"metadata":{},"sourceType":"module"}